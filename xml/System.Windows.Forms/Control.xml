<Type Name="Control" FullName="System.Windows.Forms.Control">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e678300a5c4a1667f0941aff825a9dd166976a88" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86984554" /></Metadata><TypeSignature Language="C#" Value="public class Control : System.ComponentModel.Component, IDisposable, System.ComponentModel.ISynchronizeInvoke, System.Windows.Forms.IBindableComponent, System.Windows.Forms.IDropTarget, System.Windows.Forms.IWin32Window" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Control extends System.ComponentModel.Component implements class System.ComponentModel.IComponent, class System.ComponentModel.ISynchronizeInvoke, class System.IDisposable, class System.Windows.Forms.IBindableComponent, class System.Windows.Forms.IDropTarget, class System.Windows.Forms.IWin32Window" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Control" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Inherits Component&#xA;Implements IBindableComponent, IDisposable, IDropTarget, ISynchronizeInvoke, IWin32Window" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : System::ComponentModel::Component, IDisposable, System::ComponentModel::ISynchronizeInvoke, System::Windows::Forms::IBindableComponent, System::Windows::Forms::IDropTarget, System::Windows::Forms::IWin32Window" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit Component&#xA;    interface Interop.Ole32.IOleControl&#xA;    interface Interop.Ole32.IOleObject&#xA;    interface Interop.Ole32.IOleInPlaceObject&#xA;    interface Interop.Ole32.IOleInPlaceActiveObject&#xA;    interface Interop.Ole32.IOleWindow&#xA;    interface Interop.Ole32.IViewObject&#xA;    interface Interop.Ole32.IViewObject2&#xA;    interface Interop.Ole32.IPersist&#xA;    interface Interop.Ole32.IPersistStreamInit&#xA;    interface Interop.Oleaut32.IPersistPropertyBag&#xA;    interface Interop.Ole32.IPersistStorage&#xA;    interface Interop.Ole32.IQuickActivate&#xA;    interface IDropTarget&#xA;    interface ISynchronizeInvoke&#xA;    interface IWin32Window&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IBindableComponent" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit Component&#xA;    interface UnsafeNativeMethods.IOleControl&#xA;    interface UnsafeNativeMethods.IOleObject&#xA;    interface UnsafeNativeMethods.IOleInPlaceObject&#xA;    interface UnsafeNativeMethods.IOleInPlaceActiveObject&#xA;    interface UnsafeNativeMethods.IOleWindow&#xA;    interface UnsafeNativeMethods.IViewObject&#xA;    interface UnsafeNativeMethods.IViewObject2&#xA;    interface UnsafeNativeMethods.IPersist&#xA;    interface Interop.Ole32.IPersistStreamInit&#xA;    interface UnsafeNativeMethods.IPersistPropertyBag&#xA;    interface Interop.Ole32.IPersistStorage&#xA;    interface UnsafeNativeMethods.IQuickActivate&#xA;    interface IDropTarget&#xA;    interface ISynchronizeInvoke&#xA;    interface IWin32Window&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IBindableComponent" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C#" Value="public class Control : System.ComponentModel.Component, System.ComponentModel.ISynchronizeInvoke, System.Windows.Forms.IWin32Window" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Control extends System.ComponentModel.Component implements class System.ComponentModel.ISynchronizeInvoke, class System.Windows.Forms.IWin32Window" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Inherits Component&#xA;Implements ISynchronizeInvoke, IWin32Window" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : System::ComponentModel::Component, System::ComponentModel::ISynchronizeInvoke, System::Windows::Forms::IWin32Window" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit Component&#xA;    interface UnsafeNativeMethods.IOleControl&#xA;    interface UnsafeNativeMethods.IOleObject&#xA;    interface UnsafeNativeMethods.IOleInPlaceObject&#xA;    interface UnsafeNativeMethods.IOleInPlaceActiveObject&#xA;    interface UnsafeNativeMethods.IOleWindow&#xA;    interface UnsafeNativeMethods.IViewObject&#xA;    interface UnsafeNativeMethods.IViewObject2&#xA;    interface UnsafeNativeMethods.IPersist&#xA;    interface UnsafeNativeMethods.IPersistStreamInit&#xA;    interface UnsafeNativeMethods.IPersistPropertyBag&#xA;    interface UnsafeNativeMethods.IPersistStorage&#xA;    interface UnsafeNativeMethods.IQuickActivate&#xA;    interface ISynchronizeInvoke&#xA;    interface IWin32Window" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Control extends System.ComponentModel.Component implements class System.ComponentModel.IComponent, class System.ComponentModel.ISynchronizeInvoke, class System.IDisposable, class System.Windows.Forms.IBindableComponent, class System.Windows.Forms.IDropTarget, class System.Windows.Forms.IWin32Window" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit Component&#xA;    interface UnsafeNativeMethods.IOleControl&#xA;    interface UnsafeNativeMethods.IOleObject&#xA;    interface UnsafeNativeMethods.IOleInPlaceObject&#xA;    interface UnsafeNativeMethods.IOleInPlaceActiveObject&#xA;    interface UnsafeNativeMethods.IOleWindow&#xA;    interface UnsafeNativeMethods.IViewObject&#xA;    interface UnsafeNativeMethods.IViewObject2&#xA;    interface UnsafeNativeMethods.IPersist&#xA;    interface UnsafeNativeMethods.IPersistStreamInit&#xA;    interface UnsafeNativeMethods.IPersistPropertyBag&#xA;    interface UnsafeNativeMethods.IPersistStorage&#xA;    interface UnsafeNativeMethods.IQuickActivate&#xA;    interface IDropTarget&#xA;    interface ISynchronizeInvoke&#xA;    interface IWin32Window&#xA;    interface IBindableComponent&#xA;    interface IComponent&#xA;    interface IDisposable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit Component&#xA;    interface IDropTarget&#xA;    interface ISynchronizeInvoke&#xA;    interface IWin32Window&#xA;    interface IBindableComponent&#xA;    interface IComponent&#xA;    interface IDisposable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit Component&#xA;    interface IDropTarget&#xA;    interface ISynchronizeInvoke&#xA;    interface IWin32Window&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IBindableComponent" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISynchronizeInvoke</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Windows.Forms.IDropTarget</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("Click")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("Click")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Text")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Text")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8426f-101">Definiert die Basisklasse für Steuerelemente. Steuerelemente sind Komponenten mit visueller Darstellung.</span><span class="sxs-lookup"><span data-stu-id="8426f-101">Defines the base class for controls, which are components with visual representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-102">Um eine eigene Steuerelement Klasse zu erstellen, erben Sie von der-Klasse <xref:System.Windows.Forms.UserControl> <xref:System.Windows.Forms.Control> oder der-Klasse oder von den anderen Windows Forms bereitgestellten Steuerelementen.</span><span class="sxs-lookup"><span data-stu-id="8426f-102">To create your own control class, inherit from the <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> classes, or from the other Windows Forms provided controls.</span></span> <span data-ttu-id="8426f-103">Weitere Informationen zum Erstellen benutzerdefinierter Steuerelemente finden Sie unter [entwickeln von benutzerdefinierten Windows Forms-Steuerelementen mit dem .NET Framework](/dotnet/framework/winforms/controls/developing-custom-windows-forms-controls).</span><span class="sxs-lookup"><span data-stu-id="8426f-103">For more information about authoring custom controls, see [Developing Custom Windows Forms Controls with the .NET Framework](/dotnet/framework/winforms/controls/developing-custom-windows-forms-controls).</span></span>  
  
 <span data-ttu-id="8426f-104">Die- <xref:System.Windows.Forms.Control> Klasse implementiert eine sehr grundlegende Funktionalität, die von Klassen benötigt wird, die dem Benutzerinformationen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="8426f-104">The <xref:System.Windows.Forms.Control> class implements very basic functionality required by classes that display information to the user.</span></span> <span data-ttu-id="8426f-105">Benutzereingaben werden über die Tastatur und die Zeigegeräte verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="8426f-105">It handles user input through the keyboard and pointing devices.</span></span> <span data-ttu-id="8426f-106">Er verarbeitet das Nachrichten Routing und die Sicherheit.</span><span class="sxs-lookup"><span data-stu-id="8426f-106">It handles message routing and security.</span></span> <span data-ttu-id="8426f-107">Sie definiert die Begrenzungen eines-Steuer Elements (seine Position und Größe), obwohl es kein zeichnen implementiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-107">It defines the bounds of a control (its position and size), although it does not implement painting.</span></span> <span data-ttu-id="8426f-108">Sie stellt ein Fenster Handle ( `hWnd` ) bereit.</span><span class="sxs-lookup"><span data-stu-id="8426f-108">It provides a window handle (`hWnd`).</span></span>  
  
 <span data-ttu-id="8426f-109">Windows Forms Steuerelemente verwenden Ambient-Eigenschaften, damit untergeordnete Steuerelemente wie Ihre umgebende Umgebung aussehen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-109">Windows Forms controls use ambient properties so child controls can appear like their surrounding environment.</span></span> <span data-ttu-id="8426f-110">Eine *Ambient-Eigenschaft* ist eine Steuerelement Eigenschaft, die, wenn Sie nicht festgelegt ist, vom übergeordneten Steuerelement abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-110">An *ambient property* is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="8426f-111">Wenn das Steuerelement nicht über ein verfügt <xref:System.Windows.Forms.Control.Parent%2A> und die-Eigenschaft nicht festgelegt ist, versucht das-Steuerelement, den Wert der Ambient-Eigenschaft über die-Eigenschaft zu bestimmen <xref:System.Windows.Forms.Control.Site%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-111">If the control does not have a <xref:System.Windows.Forms.Control.Parent%2A>, and the property is not set, the control attempts to determine the value of the ambient property through the <xref:System.Windows.Forms.Control.Site%2A> property.</span></span> <span data-ttu-id="8426f-112">Wenn das Steuerelement nicht positioniert ist, die Site keine Umgebungs Eigenschaften unterstützt oder wenn die-Eigenschaft nicht auf festgelegt ist <xref:System.Windows.Forms.AmbientProperties> , verwendet das Steuerelement seine eigenen Standardwerte.</span><span class="sxs-lookup"><span data-stu-id="8426f-112">If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <xref:System.Windows.Forms.AmbientProperties>, the control uses its own default values.</span></span> <span data-ttu-id="8426f-113">In der Regel stellt eine Ambient-Eigenschaft ein Merkmal eines Steuer Elements dar, z <xref:System.Windows.Forms.Control.BackColor%2A> . b., das an ein untergeordnetes Steuerelement übermittelt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-113">Typically, an ambient property represents a characteristic of a control, such as <xref:System.Windows.Forms.Control.BackColor%2A>, that is communicated to a child control.</span></span> <span data-ttu-id="8426f-114">Beispielsweise hat ein <xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Control.BackColor%2A> standardmäßig dasselbe wie das übergeordnete Element <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-114">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="8426f-115">Die Umgebungs Eigenschaften, die von der-Klasse bereitgestellt werden <xref:System.Windows.Forms.Control> , umfassen: <xref:System.Windows.Forms.Control.Cursor%2A> , <xref:System.Windows.Forms.Control.Font%2A> , <xref:System.Windows.Forms.Control.BackColor%2A> , <xref:System.Windows.Forms.Control.ForeColor%2A> und <xref:System.Windows.Forms.Control.RightToLeft%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-115">Ambient properties provided by the <xref:System.Windows.Forms.Control> class include: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, and <xref:System.Windows.Forms.Control.RightToLeft%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-116">Stellen Sie sicher, dass die <xref:System.Windows.Forms.FlatStyle> -Eigenschaft auf festgelegt ist `System` und ein Manifest mit der ausführbaren Datei enthält, damit Ihre Windows Forms-Anwendung visuelle Stile unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8426f-116">To make your Windows Forms application support visual styles, be sure to set the <xref:System.Windows.Forms.FlatStyle> property to `System` and include a manifest with your executable.</span></span> <span data-ttu-id="8426f-117">Ein Manifest ist eine XML-Datei, die entweder als Ressource in der ausführbaren Datei der Anwendung oder als separate Datei enthalten ist, die sich im selben Verzeichnis wie die ausführbare Datei befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-117">A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file.</span></span> <span data-ttu-id="8426f-118">Ein Beispiel für ein Manifest finden Sie im Beispiel Abschnitt der- <xref:System.Windows.Forms.FlatStyle> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-118">For an example of a manifest, see the Example section of the <xref:System.Windows.Forms.FlatStyle> enumeration.</span></span> <span data-ttu-id="8426f-119">Weitere Informationen zur Verwendung von visuellen Stilen finden Sie unter [visuelle Stile](/windows/win32/controls/themes-overview).</span><span class="sxs-lookup"><span data-stu-id="8426f-119">For more information about using visual styles, see [Visual Styles](/windows/win32/controls/themes-overview).</span></span>  
  
 <span data-ttu-id="8426f-120">Windows Forms verfügt über Barrierefreiheits Unterstützung und bietet Informationen zu Ihrer Anwendung, die es Ihnen ermöglicht, mit Client Anwendungen für die Barrierefreiheit zu arbeiten, wie z. b. die Hilfsprogramme für Bildschirme und Reviewer, Spracheingabe-Hilfsprogramme, auf dem Bildschirm verfügbare Tastaturen, Alternative Eingabegeräte und Hilfsprogramme für die Tastatur Erweiterung.</span><span class="sxs-lookup"><span data-stu-id="8426f-120">Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities.</span></span> <span data-ttu-id="8426f-121">In manchen Fällen möchten Sie den Client Anwendungen für Barrierefreiheit zusätzliche Informationen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-121">Sometimes you will want to provide additional information to accessibility client applications.</span></span> <span data-ttu-id="8426f-122">Es gibt zwei Möglichkeiten, diese zusätzlichen Informationen bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-122">There are two ways of providing this additional information.</span></span> <span data-ttu-id="8426f-123">Sie können die <xref:System.Windows.Forms.Control.AccessibleName%2A> <xref:System.Windows.Forms.Control.AccessibleDescription%2A> <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> Eigenschaftswerte,, und festlegen <xref:System.Windows.Forms.Control.AccessibleRole%2A> , die an Client Anwendungen für die Barrierefreiheit gemeldet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-123">You can set the <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications.</span></span> <span data-ttu-id="8426f-124">Diese Methode wird normalerweise verwendet, um eingeschränkte Barrierefreiheits Informationen für vorhandene Steuerelemente bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-124">This method is typically used to provide limited accessibility information for existing controls.</span></span> <span data-ttu-id="8426f-125">Alternativ dazu können Sie auch eine eigene Klasse schreiben, die von der-Klasse oder der-Klasse abgeleitet <xref:System.Windows.Forms.AccessibleObject> <xref:System.Windows.Forms.Control.ControlAccessibleObject> wird, und so viele Barrierefreiheits Informationen bereitstellen</span><span class="sxs-lookup"><span data-stu-id="8426f-125">Alternatively, you can write your own class deriving from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, providing as much accessibility information as needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-126">Um eine bessere Leistung zu gewährleisten, legen Sie die Größe eines-Steuer Elements im Konstruktor nicht fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-126">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="8426f-127">Die bevorzugte Methode besteht darin, die-Eigenschaft zu überschreiben <xref:System.Windows.Forms.Control.DefaultSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-127">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-128">Fügen Sie keine Daten Bindungen für einen <xref:System.Windows.Forms.Control> in seinem Konstruktor hinzu.</span><span class="sxs-lookup"><span data-stu-id="8426f-128">Do not add data bindings for a <xref:System.Windows.Forms.Control> in its constructor.</span></span> <span data-ttu-id="8426f-129">Dies führt zu Fehlern bei der Codegenerierung und kann zu unerwünschtem Verhalten führen.</span><span class="sxs-lookup"><span data-stu-id="8426f-129">Doing so will cause errors in code generation and can cause unwanted behavior.</span></span>  
  
 <span data-ttu-id="8426f-130">Die Mehrzahl der Steuerelemente im- <xref:System.Windows.Forms> Namespace verwenden das zugrunde liegende allgemeine Windows-Steuerelement als Basis für die Erstellung auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-130">The majority of the controls in the <xref:System.Windows.Forms> namespace use the underlying Windows common control as a base to build on.</span></span> <span data-ttu-id="8426f-131">Weitere Informationen zu den allgemeinen Windows-Steuerelementen finden Sie unter [Allgemeine Steuerungs Referenz](/windows/win32/controls/common-control-reference).</span><span class="sxs-lookup"><span data-stu-id="8426f-131">For more information about the Windows common controls, see [General Control Reference](/windows/win32/controls/common-control-reference).</span></span>  
  
 <span data-ttu-id="8426f-132">Um Windows Forms Steuerelemente aus einem separaten Prozess zu identifizieren, verwenden Sie einen Standard--Befehl, `SendMessage` um die WM_GETCONTROLNAME Nachricht zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-132">To identify Windows Forms controls from a separate process, use a standard `SendMessage` call to pass the WM_GETCONTROLNAME message.</span></span> <span data-ttu-id="8426f-133">WM_GETCONTROLNAME ist unabhängig von der Sprache und der Windows-Hierarchie.</span><span class="sxs-lookup"><span data-stu-id="8426f-133">WM_GETCONTROLNAME is independent of the language and Windows hierarchy.</span></span> <span data-ttu-id="8426f-134">Weitere Informationen finden Sie im Thema "empfohlene Lösung für Windows Forms" unter [Automating Windows Forms](https://docs.microsoft.com/previous-versions/dotnet/articles/ms996405(v=msdn.10)).</span><span class="sxs-lookup"><span data-stu-id="8426f-134">For more information, see the "Recommended Solution for Windows Forms" topic in [Automating Windows Forms](https://docs.microsoft.com/previous-versions/dotnet/articles/ms996405(v=msdn.10)).</span></span>  
  
 <span data-ttu-id="8426f-135">Verwenden Sie die- <xref:System.Windows.Forms.Control.InvokeRequired%2A> Eigenschaft, um den Zugriff auf das Steuerelement aus mehreren Threads zu synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-135">Use the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property to synchronize access to the control from multiple threads.</span></span> <span data-ttu-id="8426f-136">Weitere Informationen zu multithreadWindows Forms-Steuerelementen finden Sie unter Gewusst [wie: Erstellen von Thread sicheren Aufrufen von Windows Forms Steuerelementen](/dotnet/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls) .</span><span class="sxs-lookup"><span data-stu-id="8426f-136">For more information about multithreaded Windows Forms controls, see [How to: Make Thread-Safe Calls to Windows Forms Controls](/dotnet/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls)</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8426f-137">Nur die folgenden Member sind Thread sicher: <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> , <see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" /> , <see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" /> , <see cref="P:System.Windows.Forms.Control.InvokeRequired" /> und, <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> Wenn das Handle für das Steuerelement bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-137">Only the following members are thread safe: <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />, <see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />, <see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />, <see cref="P:System.Windows.Forms.Control.InvokeRequired" />, and <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> if the handle for the control has already been created.</span></span> <span data-ttu-id="8426f-138">Wenn aufgerufen wird, <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> bevor das Handle des Steuer Elements in einem Hintergrund Thread erstellt wurde, kann dies zu ungültigen Thread übergreifenden aufrufen führen.</span><span class="sxs-lookup"><span data-stu-id="8426f-138">Calling <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span></threadsafe>
    <altmember cref="T:System.Windows.Forms.Form" />
    <altmember cref="T:System.Windows.Forms.ScrollableControl" />
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.ComponentModel.Component" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-139">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Control" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-139">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-140">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Control" />-Klasse mit Standardeinstellungen.</span><span class="sxs-lookup"><span data-stu-id="8426f-140">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with default settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-141">Die- <xref:System.Windows.Forms.Control> Klasse ist die Basisklasse für alle Steuerelemente, die in einer Windows Forms Anwendung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-141">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="8426f-142">Da diese Klasse in der Regel nicht zum Erstellen einer Instanz der-Klasse verwendet wird, wird dieser Konstruktor normalerweise nicht direkt aufgerufen, sondern von einer abgeleiteten Klasse aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-142">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : string -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="8426f-143">Der vom Steuerelement angezeigte Text.</span><span class="sxs-lookup"><span data-stu-id="8426f-143">The text displayed by the control.</span></span></param>
        <summary><span data-ttu-id="8426f-144">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Control" />-Klasse mit bestimmtem Text.</span><span class="sxs-lookup"><span data-stu-id="8426f-144">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-145">Die- <xref:System.Windows.Forms.Control> Klasse ist die Basisklasse für alle Steuerelemente, die in einer Windows Forms Anwendung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-145">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="8426f-146">Da diese Klasse in der Regel nicht zum Erstellen einer Instanz der-Klasse verwendet wird, wird dieser Konstruktor normalerweise nicht direkt aufgerufen, sondern von einer abgeleiteten Klasse aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-146">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="8426f-147">Diese Version des <xref:System.Windows.Forms.Control.%23ctor%2A> Konstruktors legt den Wert der anfänglichen <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft auf den `text` Parameterwert fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-147">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (System.Windows.Forms.Control parent, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control parent, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Control, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::Windows::Forms::Control ^ parent, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : System.Windows.Forms.Control * string -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (parent, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Forms.Control" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="8426f-148">Das <see cref="T:System.Windows.Forms.Control" />, das das übergeordnete Element des Steuerelements sein soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-148">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control.</span></span></param>
        <param name="text"><span data-ttu-id="8426f-149">Der vom Steuerelement angezeigte Text.</span><span class="sxs-lookup"><span data-stu-id="8426f-149">The text displayed by the control.</span></span></param>
        <summary><span data-ttu-id="8426f-150">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Control" />-Klasse als untergeordnetes Steuerelement mit bestimmtem Text.</span><span class="sxs-lookup"><span data-stu-id="8426f-150">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-151">Die- <xref:System.Windows.Forms.Control> Klasse ist die Basisklasse für alle Steuerelemente, die in einer Windows Forms Anwendung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-151">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="8426f-152">Da diese Klasse in der Regel nicht zum Erstellen einer Instanz der-Klasse verwendet wird, wird dieser Konstruktor normalerweise nicht direkt aufgerufen, sondern von einer abgeleiteten Klasse aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-152">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="8426f-153">Diese Version des <xref:System.Windows.Forms.Control.%23ctor%2A> Konstruktors legt den Wert der anfänglichen <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft auf den `text` Parameterwert fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-153">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="8426f-154">Der Konstruktor fügt das Steuerelement auch dem des übergeordneten Steuer Elements hinzu <xref:System.Windows.Forms.Control.ControlCollection> .</span><span class="sxs-lookup"><span data-stu-id="8426f-154">The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (string text, int left, int top, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 left, int32 top, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, left As Integer, top As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::String ^ text, int left, int top, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : string * int * int * int * int -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (text, left, top, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="8426f-155">Der vom Steuerelement angezeigte Text.</span><span class="sxs-lookup"><span data-stu-id="8426f-155">The text displayed by the control.</span></span></param>
        <param name="left"><span data-ttu-id="8426f-156">Die <see cref="P:System.Drawing.Point.X" />-Position des Steuerelements in Pixel vom linken Rand des Containers des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-156">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container.</span></span> <span data-ttu-id="8426f-157">Der Wert wird der <see cref="P:System.Windows.Forms.Control.Left" />-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="8426f-157">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property.</span></span></param>
        <param name="top"><span data-ttu-id="8426f-158">Die <see cref="P:System.Drawing.Point.Y" />-Position des Steuerelements in Pixel vom oberen Rand des Containers des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-158">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container.</span></span> <span data-ttu-id="8426f-159">Der Wert wird der <see cref="P:System.Windows.Forms.Control.Top" />-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="8426f-159">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property.</span></span></param>
        <param name="width"><span data-ttu-id="8426f-160">Die Breite des Steuerelements in Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-160">The width of the control, in pixels.</span></span> <span data-ttu-id="8426f-161">Der Wert wird der <see cref="P:System.Windows.Forms.Control.Width" />-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="8426f-161">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property.</span></span></param>
        <param name="height"><span data-ttu-id="8426f-162">Die Höhe des Steuerelements in Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-162">The height of the control, in pixels.</span></span> <span data-ttu-id="8426f-163">Der Wert wird der <see cref="P:System.Windows.Forms.Control.Height" />-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="8426f-163">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property.</span></span></param>
        <summary><span data-ttu-id="8426f-164">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Control" />-Klasse mit bestimmtem Text, bestimmter Größe und Position.</span><span class="sxs-lookup"><span data-stu-id="8426f-164">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text, size, and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-165">Die- <xref:System.Windows.Forms.Control> Klasse ist die Basisklasse für alle Steuerelemente, die in einer Windows Forms Anwendung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-165">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="8426f-166">Da diese Klasse in der Regel nicht zum Erstellen einer Instanz der-Klasse verwendet wird, wird dieser Konstruktor normalerweise nicht direkt aufgerufen, sondern von einer abgeleiteten Klasse aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-166">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="8426f-167">Diese Version des <xref:System.Windows.Forms.Control.%23ctor%2A> Konstruktors legt den Wert der anfänglichen <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft auf den `text` Parameterwert fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-167">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="8426f-168">Die ursprüngliche <xref:System.Windows.Forms.Control.Size%2A> und <xref:System.Windows.Forms.Control.Location%2A> des-Steuer Elements werden durch die `left` `top` `width` Parameterwerte, und bestimmt `height` .</span><span class="sxs-lookup"><span data-stu-id="8426f-168">The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-169">Um eine bessere Leistung zu gewährleisten, legen Sie die Größe eines-Steuer Elements im Konstruktor nicht fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-169">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="8426f-170">Die bevorzugte Methode besteht darin, die-Eigenschaft zu überschreiben <xref:System.Windows.Forms.Control.DefaultSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-170">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (System.Windows.Forms.Control parent, string text, int left, int top, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control parent, string text, int32 left, int32 top, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Control, text As String, left As Integer, top As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::Windows::Forms::Control ^ parent, System::String ^ text, int left, int top, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : System.Windows.Forms.Control * string * int * int * int * int -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (parent, text, left, top, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Forms.Control" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="8426f-171">Das <see cref="T:System.Windows.Forms.Control" />, das das übergeordnete Element des Steuerelements sein soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-171">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control.</span></span></param>
        <param name="text"><span data-ttu-id="8426f-172">Der vom Steuerelement angezeigte Text.</span><span class="sxs-lookup"><span data-stu-id="8426f-172">The text displayed by the control.</span></span></param>
        <param name="left"><span data-ttu-id="8426f-173">Die <see cref="P:System.Drawing.Point.X" />-Position des Steuerelements in Pixel vom linken Rand des Containers des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-173">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container.</span></span> <span data-ttu-id="8426f-174">Der Wert wird der <see cref="P:System.Windows.Forms.Control.Left" />-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="8426f-174">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property.</span></span></param>
        <param name="top"><span data-ttu-id="8426f-175">Die <see cref="P:System.Drawing.Point.Y" />-Position des Steuerelements in Pixel vom oberen Rand des Containers des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-175">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container.</span></span> <span data-ttu-id="8426f-176">Der Wert wird der <see cref="P:System.Windows.Forms.Control.Top" />-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="8426f-176">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property.</span></span></param>
        <param name="width"><span data-ttu-id="8426f-177">Die Breite des Steuerelements in Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-177">The width of the control, in pixels.</span></span> <span data-ttu-id="8426f-178">Der Wert wird der <see cref="P:System.Windows.Forms.Control.Width" />-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="8426f-178">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property.</span></span></param>
        <param name="height"><span data-ttu-id="8426f-179">Die Höhe des Steuerelements in Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-179">The height of the control, in pixels.</span></span> <span data-ttu-id="8426f-180">Der Wert wird der <see cref="P:System.Windows.Forms.Control.Height" />-Eigenschaft zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="8426f-180">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property.</span></span></param>
        <summary><span data-ttu-id="8426f-181">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Control" />-Klasse als untergeordnetes Steuerelement mit bestimmtem Text, bestimmter Größe und Position.</span><span class="sxs-lookup"><span data-stu-id="8426f-181">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text, size, and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-182">Die- <xref:System.Windows.Forms.Control> Klasse ist die Basisklasse für alle Steuerelemente, die in einer Windows Forms Anwendung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-182">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="8426f-183">Da diese Klasse in der Regel nicht zum Erstellen einer Instanz der-Klasse verwendet wird, wird dieser Konstruktor normalerweise nicht direkt aufgerufen, sondern von einer abgeleiteten Klasse aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-183">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="8426f-184">Diese Version des <xref:System.Windows.Forms.Control.%23ctor%2A> Konstruktors legt den Wert der anfänglichen <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft auf den `text` Parameterwert fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-184">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="8426f-185">Der Konstruktor fügt das Steuerelement auch dem des übergeordneten Steuer Elements hinzu <xref:System.Windows.Forms.Control.ControlCollection> .</span><span class="sxs-lookup"><span data-stu-id="8426f-185">The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span> <span data-ttu-id="8426f-186">Die ursprüngliche <xref:System.Windows.Forms.Control.Size%2A> und <xref:System.Windows.Forms.Control.Location%2A> des-Steuer Elements werden durch die `left` `top` `width` Parameterwerte, und bestimmt `height` .</span><span class="sxs-lookup"><span data-stu-id="8426f-186">The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-187">Um eine bessere Leistung zu gewährleisten, legen Sie die Größe eines-Steuer Elements im Konstruktor nicht fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-187">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="8426f-188">Die bevorzugte Methode besteht darin, die-Eigenschaft zu überschreiben <xref:System.Windows.Forms.Control.DefaultSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-188">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AccessibilityNotifyClients">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-189">Benachrichtigt Clientanwendungen für die Barrierefreiheit über <see cref="T:System.Windows.Forms.AccessibleEvents" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-189">Notifies the accessibility client applications of <see cref="T:System.Windows.Forms.AccessibleEvents" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AccessibilityNotifyClients">
      <MemberSignature Language="C#" Value="protected internal void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int childID);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AccessibilityNotifyClients(valuetype System.Windows.Forms.AccessibleEvents accEvent, int32 childID) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AccessibilityNotifyClients (accEvent As AccessibleEvents, childID As Integer)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AccessibilityNotifyClients(System::Windows::Forms::AccessibleEvents accEvent, int childID);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AccessibilityNotifyClients : System.Windows.Forms.AccessibleEvents * int -&gt; unit" Usage="control.AccessibilityNotifyClients (accEvent, childID)" />
      <MemberSignature Language="C#" Value="protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int childID);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AccessibilityNotifyClients(valuetype System.Windows.Forms.AccessibleEvents accEvent, int32 childID) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AccessibilityNotifyClients (accEvent As AccessibleEvents, childID As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AccessibilityNotifyClients(System::Windows::Forms::AccessibleEvents accEvent, int childID);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accEvent" Type="System.Windows.Forms.AccessibleEvents" />
        <Parameter Name="childID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="accEvent"><span data-ttu-id="8426f-190">Die <see cref="T:System.Windows.Forms.AccessibleEvents" />-Enumeration, über die die Clientanwendungen für die Barrierefreiheit benachrichtigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-190">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</span></span></param>
        <param name="childID"><span data-ttu-id="8426f-191">Das untergeordnete <see cref="T:System.Windows.Forms.Control" />, das über das barrierefreie Ereignis benachrichtigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-191">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</span></span></param>
        <summary><span data-ttu-id="8426f-192">Benachrichtigt die Clientanwendungen für die Barrierefreiheit über die angegebenen <see cref="T:System.Windows.Forms.AccessibleEvents" /> für das angegebene untergeordnete Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-192">Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-193">Sie müssen die- <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType> Methode für jede <xref:System.Windows.Forms.AccessibleEvents> Client Anwendung für die Barrierefreiheit abrufen, über die Sie benachrichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-193">You must call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType> method for each <xref:System.Windows.Forms.AccessibleEvents> the accessibility client applications are to be notified of.</span></span> <span data-ttu-id="8426f-194">Die- <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> Methode wird in der Regel aufgerufen, wenn eine Eigenschaft festgelegt wird oder innerhalb eines Ereignis Handlers.</span><span class="sxs-lookup"><span data-stu-id="8426f-194">The <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method is typically called when a property is set or from within an event handler.</span></span> <span data-ttu-id="8426f-195">Beispielsweise können Sie die <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> -Methode aufzurufen und den <xref:System.Windows.Forms.AccessibleEvents> Wert `Hide` aus innerhalb des Ereignis Handlers für das- <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType> Ereignis übergeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-195">For example, you might call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method and pass in an <xref:System.Windows.Forms.AccessibleEvents> value of `Hide` from within the event handler for the <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-196">Das folgende Codebeispiel veranschaulicht die Erstellung eines Barrierefreiheits fähigen Diagramm Steuer Elements mithilfe der <xref:System.Windows.Forms.AccessibleObject> -Klasse und der- <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klasse, um Barrierefreie Informationen verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="8426f-196">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="8426f-197">Das-Steuerelement zeichnet zwei Kurven zusammen mit einer Legende.</span><span class="sxs-lookup"><span data-stu-id="8426f-197">The control plots two curves along with a legend.</span></span> <span data-ttu-id="8426f-198">Die- `ChartControlAccessibleObject` Klasse, die von abgeleitet wird `ControlAccessibleObject` , wird in der-Methode verwendet, <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> um benutzerdefinierte Informationen für das Diagramm Steuerelement bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-198">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="8426f-199">Da die Diagramm Legende kein tatsächliches Steuerelement ist <xref:System.Windows.Forms.Control> , sondern durch das Diagramm Steuerelement gezeichnet wird, sind keine integrierten zugänglichen Informationen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="8426f-199">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="8426f-200">Aus diesem Grund `ChartControlAccessibleObject` überschreibt die-Klasse die- <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> Methode, um das-Element zurückzugeben `CurveLegendAccessibleObject` , das barrierefreie Informationen für jeden Teil der Legende darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-200">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="8426f-201">Wenn eine barrierefreie Anwendung dieses Steuerelement verwendet, kann das Steuerelement die erforderlichen zugänglichen Informationen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-201">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="8426f-202">In diesem Code Ausschnitt wird das Aufrufen der- <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A> Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-202">This code excerpt demonstrates calling the <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A> method.</span></span> <span data-ttu-id="8426f-203"><xref:System.Windows.Forms.AccessibleObject>Das gesamte Codebeispiel finden Sie in der Übersicht über die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-203">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#5)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#5)]
 [!code-vb[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleEvents" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNotifyClients">
      <MemberSignature Language="C#" Value="protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int objectID, int childID);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AccessibilityNotifyClients(valuetype System.Windows.Forms.AccessibleEvents accEvent, int32 objectID, int32 childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AccessibilityNotifyClients (accEvent As AccessibleEvents, objectID As Integer, childID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AccessibilityNotifyClients(System::Windows::Forms::AccessibleEvents accEvent, int objectID, int childID);" />
      <MemberSignature Language="F#" Value="member this.AccessibilityNotifyClients : System.Windows.Forms.AccessibleEvents * int * int -&gt; unit" Usage="control.AccessibilityNotifyClients (accEvent, objectID, childID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accEvent" Type="System.Windows.Forms.AccessibleEvents" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="objectID" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="childID" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="accEvent"><span data-ttu-id="8426f-204">Die <see cref="T:System.Windows.Forms.AccessibleEvents" />-Enumeration, über die die Clientanwendungen für die Barrierefreiheit benachrichtigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-204">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</span></span></param>
        <param name="objectID"><span data-ttu-id="8426f-205">Der Bezeichner des <see cref="T:System.Windows.Forms.AccessibleObject" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-205">The identifier of the <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></param>
        <param name="childID"><span data-ttu-id="8426f-206">Das untergeordnete <see cref="T:System.Windows.Forms.Control" />, das über das barrierefreie Ereignis benachrichtigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-206">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</span></span></param>
        <summary><span data-ttu-id="8426f-207">Benachrichtigt die Clientanwendungen für die Barrierefreiheit über die angegebenen <see cref="T:System.Windows.Forms.AccessibleEvents" /> für das angegebene untergeordnete Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-207">Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control .</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Control.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-208">Ruft das dem Steuerelement zugewiesene <see cref="T:System.Windows.Forms.AccessibleObject" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-208">Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></summary>
        <value><span data-ttu-id="8426f-209">Das dem Steuerelement zugewiesene <see cref="T:System.Windows.Forms.AccessibleObject" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-209">The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-210">Überschreiben Sie die-Methode, um die von dieser Methode zurückgegebene Instanz zu steuern <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-210">To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.</span></span>  
  
 <span data-ttu-id="8426f-211">Wenn dem Steuerelement gerade kein <xref:System.Windows.Forms.AccessibleObject> zugewiesen ist, wird eine neue Instanz davon erstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-211">If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-212">Um die-Eigenschaft zu erhalten oder festzulegen <xref:System.Windows.Forms.Control.AccessibilityObject%2A> , müssen Sie einen Verweis auf die Assembly hinzufügen, `Accessibility` die mit dem installiert wurde [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="8426f-212">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="8426f-213">Weitere Informationen zu zugänglichen Objekten finden Sie unter [Active Accessibility](/windows/win32/winauto/microsoft-active-accessibility).</span><span class="sxs-lookup"><span data-stu-id="8426f-213">For more information about accessible objects, see [Active Accessibility](/windows/win32/winauto/microsoft-active-accessibility).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <altmember cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDefaultActionDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDefaultActionDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDefaultActionDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDefaultActionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDefaultActionDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDefaultActionDescription : string with get, set" Usage="System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-214">Ruft die Standardbeschreibung der Aktion des Steuerelements ab, das von Clientanwendungen für Barrierefreiheit verwendet wird, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-214">Gets or sets the default action description of the control for use by accessibility client applications.</span></span></summary>
        <value><span data-ttu-id="8426f-215">Die Beschreibung der Standardaktion des Steuerelements für die Verwendung durch Clientanwendungen für die Barrierefreiheit.</span><span class="sxs-lookup"><span data-stu-id="8426f-215">The default action description of the control for use by accessibility client applications.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-216">Die-Eigenschaft eines Objekts <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> beschreibt die primäre Bearbeitungsmethode des Objekts aus der Sicht des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="8426f-216">An object's <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> property describes the object's primary method of manipulation from the user's viewpoint.</span></span> <span data-ttu-id="8426f-217">Diese Eigenschaft sollte ein Verb oder ein kurzes Verb-Ausdruck sein.</span><span class="sxs-lookup"><span data-stu-id="8426f-217">This property should be a verb or a short verb phrase.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-218">Nicht alle Objekte haben Standard Aktionen, und einige Objekte verfügen möglicherweise über eine Standardaktion, die sich auf Ihre-Eigenschaft bezieht, z. b. <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType> in den folgenden Beispielen:</span><span class="sxs-lookup"><span data-stu-id="8426f-218">Not all objects have default actions, and some objects might have a default action that is related to its <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType> property, such as in the following examples:</span></span>  
  
-   <span data-ttu-id="8426f-219">Ein ausgewähltes Kontrollkästchen hat die Standardaktion "uncheck" und den Wert "aktiviert".</span><span class="sxs-lookup"><span data-stu-id="8426f-219">A selected check box has a default action of "Uncheck" and a value of "Checked."</span></span>  
  
-   <span data-ttu-id="8426f-220">Ein gelöschtes Kontrollkästchen hat die Standardaktion "Check" und den Wert "deaktiviert".</span><span class="sxs-lookup"><span data-stu-id="8426f-220">A cleared check box has a default action of "Check" and a value of "Unchecked."</span></span>  
  
-   <span data-ttu-id="8426f-221">Eine Schaltfläche mit der Bezeichnung "Print" hat die Standardaktion "Press" ohne Wert.</span><span class="sxs-lookup"><span data-stu-id="8426f-221">A button labeled "Print" has a default action of "Press," with no value.</span></span>  
  
-   <span data-ttu-id="8426f-222">Eine Bezeichnung oder ein Textfeld-Steuerelement, das "Printer" anzeigt, hat keine Standardaktion, würde jedoch den Wert "Printer" aufweisen.</span><span class="sxs-lookup"><span data-stu-id="8426f-222">A label or a text box control that shows "Printer" has no default action, but would have a value of "Printer."</span></span>  
  
 <span data-ttu-id="8426f-223">Weitere Informationen zu Eigenschaften von zugänglichen Objekten finden Sie unter [Inhalt von beschreibenden Eigenschaften](/windows/win32/winauto/content-of-descriptive-properties).</span><span class="sxs-lookup"><span data-stu-id="8426f-223">For more information about properties of accessible objects, see [Content of Descriptive Properties](/windows/win32/winauto/content-of-descriptive-properties).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDescription : string with get, set" Usage="System.Windows.Forms.Control.AccessibleDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-224">Ruft die Beschreibung des von Clientanwendungen für die Barrierefreiheit verwendeten Steuerelements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-224">Gets or sets the description of the control used by accessibility client applications.</span></span></summary>
        <value><span data-ttu-id="8426f-225">Die Beschreibung des von Clientanwendungen für die Barrierefreiheit verwendeten Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-225">The description of the control used by accessibility client applications.</span></span> <span data-ttu-id="8426f-226">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-226">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-227">Die-Eigenschaft eines Objekts <xref:System.Windows.Forms.Control.AccessibleDescription%2A> stellt eine Textbeschreibung zur visuellen Darstellung eines Objekts bereit.</span><span class="sxs-lookup"><span data-stu-id="8426f-227">An object's <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property provides a textual description about an object's visual appearance.</span></span> <span data-ttu-id="8426f-228">Die Beschreibung wird hauptsächlich verwendet, um einen größeren Kontext für Seh-oder Blind Benutzer bereitzustellen. Sie kann jedoch auch für die Kontextsuche oder andere Anwendungen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-228">The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.</span></span>  
  
 <span data-ttu-id="8426f-229">Die- <xref:System.Windows.Forms.Control.AccessibleDescription%2A> Eigenschaft ist erforderlich, wenn die Beschreibung nicht offensichtlich ist, oder wenn Sie auf der Grundlage der <xref:System.Windows.Forms.Control.AccessibleName%2A> <xref:System.Windows.Forms.Control.AccessibleRole%2A> Eigenschaften,, und des-Objekts redundant ist <xref:System.Windows.Forms.AccessibleObject.State%2A> <xref:System.Windows.Forms.AccessibleObject.Value%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-229">The <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property is needed if the description is not obvious, or if it is redundant based on the object's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, and <xref:System.Windows.Forms.AccessibleObject.Value%2A> properties.</span></span> <span data-ttu-id="8426f-230">Eine Schaltfläche mit "OK" benötigt z. b. keine zusätzlichen Informationen, aber eine Schaltfläche, die ein Bild eines Kakteen anzeigt, wäre.</span><span class="sxs-lookup"><span data-stu-id="8426f-230">For example, a button with "OK" would not need additional information, but a button that shows a picture of a cactus would.</span></span> <span data-ttu-id="8426f-231">Die <xref:System.Windows.Forms.Control.AccessibleName%2A> Eigenschaften, und <xref:System.Windows.Forms.Control.AccessibleRole%2A> (und möglicherweise <xref:System.Windows.Forms.AccessibleObject.Help%2A> ) für die Schaltfläche "Kaktus" beschreiben den Zweck, aber die- <xref:System.Windows.Forms.Control.AccessibleDescription%2A> Eigenschaft würde weniger spürbare Informationen vermitteln, wie z. b. "eine Schaltfläche, die ein Bild eines Kaktus anzeigt."</span><span class="sxs-lookup"><span data-stu-id="8426f-231">The <xref:System.Windows.Forms.Control.AccessibleName%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> (and perhaps <xref:System.Windows.Forms.AccessibleObject.Help%2A>) properties for the cactus button would describe its purpose, but the <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property would convey information that is less tangible, such as "A button that shows a picture of a cactus."</span></span>  
  
 <span data-ttu-id="8426f-232">Weitere Informationen zu Eigenschaften von zugänglichen Objekten finden Sie unter [Inhalt von beschreibenden Eigenschaften](/windows/win32/winauto/content-of-descriptive-properties).</span><span class="sxs-lookup"><span data-stu-id="8426f-232">For more information about properties of accessible objects, see [Content of Descriptive Properties](/windows/win32/winauto/content-of-descriptive-properties).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-233">Im folgenden Codebeispiel wird eine Instanz einer <xref:System.Windows.Forms.CheckBox> abgeleiteten Klasse erstellt,, ihr wird eine der- `MyCheckBox` <xref:System.Drawing.Image> Eigenschaft zugewiesen <xref:System.Windows.Forms.ButtonBase.Image%2A> und die <xref:System.Windows.Forms.Control.AccessibleName%2A> -Eigenschaft und die-Eigenschaft festgelegt <xref:System.Windows.Forms.Control.AccessibleDescription%2A> , da die- <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft ist `null` .</span><span class="sxs-lookup"><span data-stu-id="8426f-233">The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties, because the <xref:System.Windows.Forms.Control.Text%2A> property is `null`.</span></span> <span data-ttu-id="8426f-234">Für dieses Beispiel muss ein mit dem <xref:System.Windows.Forms.Form> Namen vorhanden sein `MyForm` .</span><span class="sxs-lookup"><span data-stu-id="8426f-234">This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]
 [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]
 [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleName">
      <MemberSignature Language="C#" Value="public string AccessibleName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleName" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleName : string with get, set" Usage="System.Windows.Forms.Control.AccessibleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-235">Ruft den Namen des von Clientanwendungen für die Barrierefreiheit verwendeten Steuerelements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-235">Gets or sets the name of the control used by accessibility client applications.</span></span></summary>
        <value><span data-ttu-id="8426f-236">Der Name des von Clientanwendungen für die Barrierefreiheit verwendeten Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-236">The name of the control used by accessibility client applications.</span></span> <span data-ttu-id="8426f-237">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-237">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-238">Die- <xref:System.Windows.Forms.Control.AccessibleName%2A> Eigenschaft ist eine Bezeichnung, die das-Objekt in seinem Container kurz beschreibt und identifiziert, z. b. den Text in einem <xref:System.Windows.Forms.Button> , den Namen eines <xref:System.Windows.Forms.MenuItem> oder eine Bezeichnung neben einem- <xref:System.Windows.Forms.TextBox> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-238">The <xref:System.Windows.Forms.Control.AccessibleName%2A> property is a label that briefly describes and identifies the object within its container, such as the text in a <xref:System.Windows.Forms.Button>, the name of a <xref:System.Windows.Forms.MenuItem>, or a label displayed next to a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 <span data-ttu-id="8426f-239">Weitere Informationen zu Eigenschaften von zugänglichen Objekten finden Sie unter "[Inhalt von beschreibenden Eigenschaften](/windows/win32/winauto/content-of-descriptive-properties).</span><span class="sxs-lookup"><span data-stu-id="8426f-239">For more information about properties of accessible objects, see the "[Content of Descriptive Properties](/windows/win32/winauto/content-of-descriptive-properties).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-240">Im folgenden Codebeispiel wird eine Instanz einer <xref:System.Windows.Forms.CheckBox> abgeleiteten Klasse erstellt `MyCheckBox` ,, der-Eigenschaft wird ein zugewiesen <xref:System.Drawing.Image> <xref:System.Windows.Forms.ButtonBase.Image%2A> und die <xref:System.Windows.Forms.Control.AccessibleName%2A> -Eigenschaft und die-Eigenschaft festgelegt, <xref:System.Windows.Forms.Control.AccessibleDescription%2A> da die-Eigenschaft den Wert aufweist <xref:System.Windows.Forms.Control.Text%2A> `null` .</span><span class="sxs-lookup"><span data-stu-id="8426f-240">The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties since the <xref:System.Windows.Forms.Control.Text%2A> property is `null`.</span></span> <span data-ttu-id="8426f-241">Für dieses Beispiel muss ein mit dem <xref:System.Windows.Forms.Form> Namen vorhanden sein `MyForm` .</span><span class="sxs-lookup"><span data-stu-id="8426f-241">This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]
 [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]
 [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleRole">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole AccessibleRole" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleRole" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleRole As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleRole AccessibleRole { System::Windows::Forms::AccessibleRole get(); void set(System::Windows::Forms::AccessibleRole value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleRole : System.Windows.Forms.AccessibleRole with get, set" Usage="System.Windows.Forms.Control.AccessibleRole" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-242">Ruft die barrierefreie Rolle des Steuerelements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-242">Gets or sets the accessible role of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-243">Einer der Werte von <see cref="T:System.Windows.Forms.AccessibleRole" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-243">One of the values of <see cref="T:System.Windows.Forms.AccessibleRole" />.</span></span> <span data-ttu-id="8426f-244">Der Standardwert ist <see langword="Default" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-244">The default is <see langword="Default" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-245">Die <xref:System.Windows.Forms.Control.AccessibleRole%2A>-Eigenschaft beschreibt, zu welcher Art von Benutzeroberflächenelement ein Objekt gehört.</span><span class="sxs-lookup"><span data-stu-id="8426f-245">The <xref:System.Windows.Forms.Control.AccessibleRole%2A> property describes what kind of user interface element an object is.</span></span> <span data-ttu-id="8426f-246">Wenn die Rolle des Steuerelements nicht bestimmt werden kann, wird die <xref:System.Windows.Forms.Control.AccessibleRole%2A>-Eigenschaft auf `Default` festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-246">If the control's role cannot be determined, the <xref:System.Windows.Forms.Control.AccessibleRole%2A> property is set to `Default`.</span></span>  
  
 <span data-ttu-id="8426f-247">Weitere Informationen zu Eigenschaften von zugänglichen Objekten finden Sie unter [Inhalt von beschreibenden Eigenschaften](/windows/win32/winauto/content-of-descriptive-properties).</span><span class="sxs-lookup"><span data-stu-id="8426f-247">For more information about properties of accessible objects, see [Content of Descriptive Properties](/windows/win32/winauto/content-of-descriptive-properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8426f-248">Der zugewiesene Wert ist keiner der <see cref="T:System.Windows.Forms.AccessibleRole" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-248">The value assigned is not one of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public virtual bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.Control.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-249">Ruft einen Wert ab, der angibt, ob das Steuerelement Daten annehmen kann, die vom Benutzer darauf gezogen wurden, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-249">Gets or sets a value indicating whether the control can accept data that the user drags onto it.</span></span></summary>
        <value><span data-ttu-id="8426f-250"><see langword="true" />, wenn Drag &amp; Drop-Vorgänge für das Steuerelement zulässig sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-250"><see langword="true" /> if drag-and-drop operations are allowed in the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8426f-251">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-251">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8426f-252">Im folgenden Codebeispiel kann der Benutzer ein Bild oder eine Bilddatei auf das Formular ziehen und ihn an dem Punkt, an dem er abgelegt wird, anzeigen lassen.</span><span class="sxs-lookup"><span data-stu-id="8426f-252">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="8426f-253">Die- <xref:System.Windows.Forms.Control.OnPaint%2A> Methode wird überschrieben, um jedes Mal, wenn das Formular gezeichnet wird, das Bild neu zu zeichnen. andernfalls wird das Bild nur bis zum nächsten Neuzeichnen beibehalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-253">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="8426f-254">Die <xref:System.Windows.Forms.Control.DragEnter> Ereignis Behandlungsmethode bestimmt den Typ der Daten, die in das Formular gezogen werden, und stellt das entsprechende Feedback bereit.</span><span class="sxs-lookup"><span data-stu-id="8426f-254">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="8426f-255">Die <xref:System.Windows.Forms.Control.DragDrop> Ereignis Behandlungsmethode zeigt das Bild auf dem Formular an, wenn eine <xref:System.Drawing.Image> aus den Daten erstellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-255">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="8426f-256">Da der <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> -Wert und der- <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> Wert Bildschirm Koordinaten sind, wird im Beispiel die-Methode verwendet, <xref:System.Windows.Forms.Control.PointToClient%2A> um Sie in Client Koordinaten zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-256">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-257">Wenn Sie die <see cref="P:System.Windows.Forms.Control.AllowDrop" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.AllowDrop" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-257">When overriding the <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-258">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-258">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-259">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.AllowDrop" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-259">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DragEventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AnchorStyles Anchor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AnchorStyles Anchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Anchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Anchor As AnchorStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AnchorStyles Anchor { System::Windows::Forms::AnchorStyles get(); void set(System::Windows::Forms::AnchorStyles value); };" />
      <MemberSignature Language="F#" Value="member this.Anchor : System.Windows.Forms.AnchorStyles with get, set" Usage="System.Windows.Forms.Control.Anchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AnchorStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-260">Ruft die Ränder des Containers ab, an die ein Steuerelement gebunden ist, oder legt diese fest und bestimmt, wie die Größe des Steuerelements mit dessen übergeordnetem Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-260">Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.</span></span></summary>
        <value><span data-ttu-id="8426f-261">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.AnchorStyles" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-261">A bitwise combination of the <see cref="T:System.Windows.Forms.AnchorStyles" /> values.</span></span> <span data-ttu-id="8426f-262">Der Standardwert ist <see langword="Top" /> und <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-262">The default is <see langword="Top" /> and <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-263">Verwenden Sie die- <xref:System.Windows.Forms.Control.Anchor%2A> Eigenschaft, um zu definieren, wie die Größe eines Steuer Elements automatisch geändert wird, wenn dessen übergeordnetes Steuerelement geändert wird</span><span class="sxs-lookup"><span data-stu-id="8426f-263">Use the <xref:System.Windows.Forms.Control.Anchor%2A> property to define how a control is automatically resized as its parent control is resized.</span></span> <span data-ttu-id="8426f-264">Durch das Verankern eines Steuer Elements auf das übergeordnete Steuerelement wird sichergestellt, dass die verankerten Ränder in Bezug auf die Ränder des übergeordneten Steuer Elements beibehalten werden, wenn die Größe des übergeordneten Steuer Elements geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-264">Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.</span></span>  
  
 <span data-ttu-id="8426f-265">Sie können ein Steuerelement an einem oder mehreren Rändern seines Containers verankern.</span><span class="sxs-lookup"><span data-stu-id="8426f-265">You can anchor a control to one or more edges of its container.</span></span> <span data-ttu-id="8426f-266">Wenn Sie z. b. einen <xref:System.Windows.Forms.Form> mit einem haben, <xref:System.Windows.Forms.Button> dessen <xref:System.Windows.Forms.Control.Anchor%2A> -Eigenschafts Wert auf und festgelegt ist `Top` `Bottom` , <xref:System.Windows.Forms.Button> wird der gestreckt, um die verankerte Entfernung zum oberen und unteren Rand des beizubehalten, <xref:System.Windows.Forms.Form> während der <xref:System.Windows.Forms.Control.Height%2A> von der <xref:System.Windows.Forms.Form> erweitert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-266">For example, if you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> whose <xref:System.Windows.Forms.Control.Anchor%2A> property value is set to `Top` and `Bottom`, the <xref:System.Windows.Forms.Button> is stretched to maintain the anchored distance to the top and bottom edges of the <xref:System.Windows.Forms.Form> as the <xref:System.Windows.Forms.Control.Height%2A> of the <xref:System.Windows.Forms.Form> is increased.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-267">Die <xref:System.Windows.Forms.Control.Anchor%2A> <xref:System.Windows.Forms.Control.Dock%2A> Eigenschaften und schließen sich gegenseitig aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-267">The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive.</span></span> <span data-ttu-id="8426f-268">Es kann jeweils nur eine festgelegt werden, und der letzte Satz hat Vorrang.</span><span class="sxs-lookup"><span data-stu-id="8426f-268">Only one can be set at a time, and the last one set takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-269">Im folgenden Codebeispiel wird ein einem Formular hinzugefügt <xref:System.Windows.Forms.Button> , und einige der allgemeinen Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-269">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="8426f-270">Im Beispiel wird die Schaltfläche in der unteren rechten Ecke des Formulars verankert, sodass die relative Position bei der Größenänderung des Formulars beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-270">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="8426f-271">Anschließend wird der festgelegt <xref:System.Windows.Forms.Control.BackgroundImage%2A> , und die Größe der Schaltfläche wird auf die gleiche Größe wie die angepasst <xref:System.Drawing.Image> .</span><span class="sxs-lookup"><span data-stu-id="8426f-271">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="8426f-272">Im Beispiel wird dann auf festgelegt <xref:System.Windows.Forms.Control.TabStop%2A> , `true` und die-Eigenschaft wird festgelegt <xref:System.Windows.Forms.Control.TabIndex%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-272">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="8426f-273">Schließlich fügt Sie einen Ereignishandler hinzu, der das- <xref:System.Windows.Forms.Control.Click> Ereignis der Schaltfläche behandelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-273">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="8426f-274">Für dieses Beispiel muss ein mit dem <xref:System.Windows.Forms.ImageList> Namen vorhanden sein `imageList1` .</span><span class="sxs-lookup"><span data-stu-id="8426f-274">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-275">Wenn Sie die <see cref="P:System.Windows.Forms.Control.Anchor" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.Anchor" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-275">When overriding the <see cref="P:System.Windows.Forms.Control.Anchor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Anchor" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-276">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-276">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-277">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.Anchor" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-277">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Anchor" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.AnchorStyles" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="AutoScrollOffset">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point AutoScrollOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point AutoScrollOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AutoScrollOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScrollOffset As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point AutoScrollOffset { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScrollOffset : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Control.AutoScrollOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(typeof(System.Drawing.Point), "0, 0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(typeof(System.Drawing.Point), "0, 0")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-278">Ruft in <see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" /> ab oder legt anhand dessen fest, in welcher Richtung der Bildlauf dieses Steuerelements durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-278">Gets or sets where this control is scrolled to in <see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />.</span></span></summary>
        <value><span data-ttu-id="8426f-279">Ein <see cref="T:System.Drawing.Point" />, der die Bildlaufposition angibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-279">A <see cref="T:System.Drawing.Point" /> specifying the scroll location.</span></span> <span data-ttu-id="8426f-280">Der Standardwert ist die linke obere Ecke des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-280">The default is the upper-left corner of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public virtual bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.Control.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-281">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-281">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="8426f-282">Im aktivierten Zustand <see langword="true" />, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-282"><see langword="true" /> if enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-283">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-283">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-284">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-284">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-285">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-285">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Control.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-501)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-501)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-286">Ruft die Hintergrundfarbe für das Steuerelement ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-286">Gets or sets the background color for the control.</span></span></summary>
        <value><span data-ttu-id="8426f-287">Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-287">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span></span> <span data-ttu-id="8426f-288">Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-288">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-289">Die- <xref:System.Windows.Forms.Control.BackColor%2A> Eigenschaft unterstützt keine transparenten Farben, es sei denn `SupportsTransparentBackColor` , der Wert von <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> ist auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-289">The <xref:System.Windows.Forms.Control.BackColor%2A> property does not support transparent colors unless the `SupportsTransparentBackColor` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> is set to `true`.</span></span>  
  
 <span data-ttu-id="8426f-290">Die- <xref:System.Windows.Forms.Control.BackColor%2A> Eigenschaft ist eine Ambient-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-290">The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property.</span></span> <span data-ttu-id="8426f-291">Eine Ambient-Eigenschaft ist eine Steuerelement Eigenschaft, die, wenn Sie nicht festgelegt ist, vom übergeordneten Steuerelement abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-291">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="8426f-292">Beispielsweise hat ein <xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Control.BackColor%2A> standardmäßig dasselbe wie das übergeordnete Element <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-292">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="8426f-293">Weitere Informationen zu Ambient-Eigenschaften finden Sie unter der- <xref:System.Windows.Forms.AmbientProperties> Klasse oder der- <xref:System.Windows.Forms.Control> Klassen Übersicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-293">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-294">Im folgenden Codebeispiel werden die <xref:System.Windows.Forms.Control.BackColor%2A> und <xref:System.Windows.Forms.Control.ForeColor%2A> der-Steuerelemente auf die Standardsystem Farben festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-294">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="8426f-295">Der Code ruft rekursiv selbst auf, wenn das Steuerelement über untergeordnete Steuerelemente verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-295">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="8426f-296">Für dieses Codebeispiel ist es erforderlich, dass Sie über ein-Element mit mindestens einem untergeordneten Steuerelement verfügen <xref:System.Windows.Forms.Form> . ein untergeordnetes Container Steuerelement, wie z. b. <xref:System.Windows.Forms.Panel> oder, mit einem untergeordneten Steuerelement <xref:System.Windows.Forms.GroupBox> (en) würde die Rekursion besser veranschaulichen.</span><span class="sxs-lookup"><span data-stu-id="8426f-296">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-297">Wenn Sie die <see cref="P:System.Windows.Forms.Control.BackColor" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.BackColor" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-297">When overriding the <see cref="P:System.Windows.Forms.Control.BackColor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BackColor" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-298">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-298">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-299">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.BackColor" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-299">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.AmbientProperties" />
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-300">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.Control.BackColor" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-300">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-301">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.BackColor%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-301">This event is raised if the <xref:System.Windows.Forms.Control.BackColor%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-302">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-302">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-303">Das folgende Codebeispiel ist ein Ereignishandler, der ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-303">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-304">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster *propertyName* `Changed` , die ausgelöst werden, wenn der entsprechende *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-304">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-305">Im folgenden Codebeispiel wird der von einem-Wert geändert, der <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> Währungs Daten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-305">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="8426f-306">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-306">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-307">Für dieses Beispiel ist es erforderlich, dass über ein <xref:System.Windows.Forms.Form> verfügt, das eine enthält <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-307">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.Control.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-308">Ruft das im Steuerelement angezeigte Hintergrundbild ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-308">Gets or sets the background image displayed in the control.</span></span></summary>
        <value><span data-ttu-id="8426f-309">Ein <see cref="T:System.Drawing.Image" />, das das im Hintergrund des Steuerelements anzuzeigende Bild darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-309">An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="8426f-310">Verwenden Sie die- <xref:System.Windows.Forms.Control.BackgroundImage%2A> Eigenschaft, um ein Grafik Bild auf einem Steuerelement zu platzieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-310">Use the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property to place a graphic image onto a control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-311">Bilder mit durchlässigen oder transparenten Farben werden von Windows Forms Steuerelementen nicht als Hintergrundbilder unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8426f-311">Images with translucent or transparent colors are not supported by Windows Forms controls as background images.</span></span>  
>   
>  <span data-ttu-id="8426f-312">Diese Eigenschaft wird für untergeordnete Steuerelemente, deren-Eigenschaft ist, nicht unterstützt <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-312">This property is not supported on child controls whose <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-313">Im folgenden Codebeispiel wird ein einem Formular hinzugefügt <xref:System.Windows.Forms.Button> , und einige der allgemeinen Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-313">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="8426f-314">Im Beispiel wird die Schaltfläche in der unteren rechten Ecke des Formulars verankert, sodass die relative Position bei der Größenänderung des Formulars beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-314">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="8426f-315">Anschließend wird der festgelegt <xref:System.Windows.Forms.Control.BackgroundImage%2A> , und die Größe der Schaltfläche wird auf die gleiche Größe wie die angepasst <xref:System.Drawing.Image> .</span><span class="sxs-lookup"><span data-stu-id="8426f-315">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="8426f-316">Im Beispiel wird dann auf festgelegt <xref:System.Windows.Forms.Control.TabStop%2A> , `true` und die-Eigenschaft wird festgelegt <xref:System.Windows.Forms.Control.TabIndex%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-316">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="8426f-317">Schließlich fügt Sie einen Ereignishandler hinzu, der das- <xref:System.Windows.Forms.Control.Click> Ereignis der Schaltfläche behandelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-317">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="8426f-318">Für dieses Beispiel muss ein mit dem <xref:System.Windows.Forms.ImageList> Namen vorhanden sein `imageList1` .</span><span class="sxs-lookup"><span data-stu-id="8426f-318">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-319">Wenn Sie die <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-319">When overriding the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-320">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-320">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-321">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-321">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-322">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.Control.BackgroundImage" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-322">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-323">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.BackgroundImage%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-323">This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-324">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-324">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-325">Das folgende Codebeispiel ist ein Ereignishandler, der ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-325">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-326">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster *propertyName* `Changed` , die ausgelöst werden, wenn der entsprechende *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-326">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-327">Im folgenden Codebeispiel wird der von einem-Wert geändert, der <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> Währungs Daten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-327">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="8426f-328">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-328">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-329">Für dieses Beispiel ist es erforderlich, dass über ein <xref:System.Windows.Forms.Form> verfügt, das eine enthält <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-329">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.Control.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-330">Ruft ab oder legt fest, welches Hintergrundbildlayout gemäß der Definition in der <see cref="T:System.Windows.Forms.ImageLayout" />-Enumeration verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-330">Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="8426f-331">Einer der Werte von <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" />, <see cref="F:System.Windows.Forms.ImageLayout.None" />, <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" /> oder <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />).</span><span class="sxs-lookup"><span data-stu-id="8426f-331">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" /> , <see cref="F:System.Windows.Forms.ImageLayout.None" />, <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" />, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />).</span></span> <span data-ttu-id="8426f-332">Der Standardwert lautet <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-332"><see cref="F:System.Windows.Forms.ImageLayout.Tile" /> is the default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-333">Verwenden Sie die- <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> Eigenschaft, um die Position und das Verhalten eines Bilds anzugeben, das Sie auf einem Steuerelement abgelegt haben.</span><span class="sxs-lookup"><span data-stu-id="8426f-333">Use the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property to specify the position and behavior of an image you have placed onto a control.</span></span> <span data-ttu-id="8426f-334"><xref:System.Windows.Forms.Control.BackgroundImageLayout%2A>wird nur wirksam, wenn die- <xref:System.Windows.Forms.Control.BackgroundImage%2A> Eigenschaft festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-334"><xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> takes effect only if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is set.</span></span>  
  
 <span data-ttu-id="8426f-335">Sie können die Leistung für große Images erhöhen, wenn Sie <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> auf etwas anderes als festlegen <xref:System.Windows.Forms.ImageLayout.Tile> .</span><span class="sxs-lookup"><span data-stu-id="8426f-335">You can increase performance for large images if you set <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> to something other than <xref:System.Windows.Forms.ImageLayout.Tile>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8426f-336">Der angegebene Enumerationswert ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="8426f-336">The specified enumeration value does not exist.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-337">Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-337">Occurs when the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-338">Dieses Ereignis wird ausgelöst, wenn die- <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> Eigenschaft entweder Programm gesteuert oder durch Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-338">This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property changes either programmatically or by user interaction.</span></span>  
  
 <span data-ttu-id="8426f-339">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-339">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-340">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-340">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-341">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-341">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event.</span></span> <span data-ttu-id="8426f-342">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-342">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-343">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-343">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-344">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-344">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-345">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-345">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#9)]
 [!code-vb[System.Windows.Forms.EventExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-346">Führt einen Delegaten asynchron für den Thread aus, in dem das dem Steuerelement zugrunde liegende Handle erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-346">Executes a delegate asynchronously on the thread that the control's underlying handle was created on.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginInvoke(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate -&gt; IAsyncResult" Usage="control.BeginInvoke method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="8426f-347">Ein Delegat für eine Methode, die keine Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-347">A delegate to a method that takes no parameters.</span></span></param>
        <summary><span data-ttu-id="8426f-348">Führt den angegebenen Delegaten asynchron für den Thread aus, in dem das dem Steuerelement zugrunde liegende Handle erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-348">Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.</span></span></summary>
        <returns><span data-ttu-id="8426f-349">Ein <see cref="T:System.IAsyncResult" />-Objekt, das das Ergebnis der <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />-Operation darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-349">An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-350">Der Delegat wird asynchron aufgerufen, und diese Methode wird sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-350">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="8426f-351">Sie können diese Methode von einem beliebigen Thread aus, auch dem Thread, der das Handle des Steuer Elements besitzt, abrufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-351">You can call this method from any thread, even the thread that owns the control's handle.</span></span> <span data-ttu-id="8426f-352">Wenn das Handle des Steuer Elements noch nicht vorhanden ist, durchsucht diese Methode die übergeordnete Kette des Steuer Elements, bis ein Steuerelement oder ein Formular gefunden wird, das über ein Fenster Handle verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-352">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="8426f-353">Wenn kein entsprechendes Handle gefunden werden kann, <xref:System.Windows.Forms.Control.BeginInvoke%2A> wird von eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-353">If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception.</span></span> <span data-ttu-id="8426f-354">Ausnahmen innerhalb der Delegatmethode gelten als nicht erfasst und werden an den nicht in die Anwendung eingelösten Ausnahmehandler der Anwendung gesendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-354">Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</span></span>  
  
 <span data-ttu-id="8426f-355">Sie können aufrufen, <xref:System.Windows.Forms.Control.EndInvoke%2A> um den Rückgabewert aus dem Delegaten abzurufen, wenn dies nicht erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-355">You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required.</span></span> <span data-ttu-id="8426f-356"><xref:System.Windows.Forms.Control.EndInvoke%2A>wird blockiert, bis der Rückgabewert abgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-356"><xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-357">Die meisten Methoden für ein Steuerelement können nur von dem Thread aufgerufen werden, in dem das Steuerelement erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-357">Most methods on a control can only be called from the thread where the control was created.</span></span> <span data-ttu-id="8426f-358">Zusätzlich zur- <xref:System.Windows.Forms.Control.InvokeRequired%2A> Eigenschaft gibt es vier Methoden auf einem-Steuerelement, die Thread sicher sind: <xref:System.Windows.Forms.Control.Invoke%2A> , <xref:System.Windows.Forms.Control.BeginInvoke%2A> , und, <xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.CreateGraphics%2A> Wenn das Handle für das Steuerelement bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-358">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="8426f-359">Wenn aufgerufen wird, <xref:System.Windows.Forms.Control.CreateGraphics%2A> bevor das Handle des Steuer Elements in einem Hintergrund Thread erstellt wurde, kann dies zu ungültigen Thread übergreifenden aufrufen führen.</span><span class="sxs-lookup"><span data-stu-id="8426f-359">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="8426f-360">Für alle anderen Methodenaufrufe sollten Sie eine der Aufruf Methoden verwenden, um den Aufruf an den Thread des Steuer Elements zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="8426f-360">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span> <span data-ttu-id="8426f-361">Die Aufruf Methoden rufen immer Ihre Rückrufe im Thread des Steuer Elements auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-361">The invoke methods always invoke their callbacks on the control's thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-362">Eine Ausnahme kann ausgelöst werden, wenn der Thread, der die Nachricht verarbeiten soll, nicht mehr aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-362">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-363">Im folgenden Codebeispiel wird die Verwendung der- <xref:System.Windows.Forms.Control.BeginInvoke%2A> Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-363">The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.</span></span>  
  
 [!code-cpp[Control_BeginInvoke#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#2)]
 [!code-csharp[Control_BeginInvoke#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#2)]
 [!code-vb[Control_BeginInvoke#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8426f-364">Kein entsprechendes Fensterhandle wird gefunden.</span><span class="sxs-lookup"><span data-stu-id="8426f-364">No appropriate window handle can be found.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.CreateGraphics" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, params object[] args);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As IAsyncResult" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult&#xA;override this.BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="control.BeginInvoke (method, args)" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="8426f-365">Ein Delegat einer Methode, der Parameter derselben Anzahl und desselben Typs der im <paramref name="args" />-Parameter enthaltenen Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-365">A delegate to a method that takes parameters of the same number and type that are contained in the <paramref name="args" /> parameter.</span></span></param>
        <param name="args"><span data-ttu-id="8426f-366">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-366">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="8426f-367">Dies kann <see langword="null" /> sein, wenn keine Argumente benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-367">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="8426f-368">Führt den angegebenen Delegaten asynchron mit den angegebenen Argumenten für den Thread aus, in dem das diesem Steuerelement zugrunde liegende Handle erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-368">Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.</span></span></summary>
        <returns><span data-ttu-id="8426f-369">Ein <see cref="T:System.IAsyncResult" />-Objekt, das das Ergebnis der <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />-Operation darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-369">An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-370">Der Delegat wird asynchron aufgerufen, und diese Methode wird sofort zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-370">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="8426f-371">Sie können diese Methode von einem beliebigen Thread aus, auch dem Thread, der das Handle des Steuer Elements besitzt, abrufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-371">You can call this method from any thread, even the thread that owns the control's handle.</span></span> <span data-ttu-id="8426f-372">Wenn das Handle des Steuer Elements noch nicht vorhanden ist, durchsucht diese Methode die übergeordnete Kette des Steuer Elements, bis ein Steuerelement oder ein Formular gefunden wird, das über ein Fenster Handle verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-372">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="8426f-373">Wenn kein entsprechendes Handle gefunden werden kann, <xref:System.Windows.Forms.Control.BeginInvoke%2A> wird von eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-373">If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception.</span></span> <span data-ttu-id="8426f-374">Ausnahmen innerhalb der Delegatmethode gelten als nicht erfasst und werden an den nicht in die Anwendung eingelösten Ausnahmehandler der Anwendung gesendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-374">Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</span></span>  
  
 <span data-ttu-id="8426f-375">Sie können aufrufen, <xref:System.Windows.Forms.Control.EndInvoke%2A> um den Rückgabewert aus dem Delegaten abzurufen, wenn dies nicht erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-375">You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required.</span></span> <span data-ttu-id="8426f-376"><xref:System.Windows.Forms.Control.EndInvoke%2A>wird blockiert, bis der Rückgabewert abgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-376"><xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-377">Die meisten Methoden für ein Steuerelement können nur von dem Thread aufgerufen werden, in dem das Steuerelement erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-377">Most methods on a control can only be called from the thread where the control was created.</span></span> <span data-ttu-id="8426f-378">Zusätzlich zur- <xref:System.Windows.Forms.Control.InvokeRequired%2A> Eigenschaft gibt es vier Methoden auf einem-Steuerelement, die Thread sicher sind: <xref:System.Windows.Forms.Control.Invoke%2A> , <xref:System.Windows.Forms.Control.BeginInvoke%2A> , und, <xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.CreateGraphics%2A> Wenn das Handle für das Steuerelement bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-378">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="8426f-379">Wenn aufgerufen wird, <xref:System.Windows.Forms.Control.CreateGraphics%2A> bevor das Handle des Steuer Elements in einem Hintergrund Thread erstellt wurde, kann dies zu ungültigen Thread übergreifenden aufrufen führen.</span><span class="sxs-lookup"><span data-stu-id="8426f-379">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="8426f-380">Für alle anderen Methodenaufrufe sollten Sie eine der Aufruf Methoden verwenden, um den Aufruf an den Thread des Steuer Elements zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="8426f-380">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span> <span data-ttu-id="8426f-381">Die Aufruf Methoden rufen immer Ihre Rückrufe im Thread des Steuer Elements auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-381">The invoke methods always invoke their callbacks on the control's thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-382">Eine Ausnahme kann ausgelöst werden, wenn der Thread, der die Nachricht verarbeiten soll, nicht mehr aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-382">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-383">Im folgenden Codebeispiel wird die Verwendung der- <xref:System.Windows.Forms.Control.BeginInvoke%2A> Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-383">The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.</span></span>  
  
 [!code-cpp[Control_BeginInvoke#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#1)]
 [!code-csharp[Control_BeginInvoke#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#1)]
 [!code-vb[Control_BeginInvoke#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8426f-384">Kein entsprechendes Fensterhandle wird gefunden.</span><span class="sxs-lookup"><span data-stu-id="8426f-384">No appropriate window handle can be found.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.CreateGraphics" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="BindingContext">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.BindingContext BindingContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingContext BindingContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BindingContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BindingContext As BindingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::BindingContext ^ BindingContext { System::Windows::Forms::BindingContext ^ get(); void set(System::Windows::Forms::BindingContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingContext : System.Windows.Forms.BindingContext with get, set" Usage="System.Windows.Forms.Control.BindingContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">P:System.Windows.Forms.IBindableComponent.BindingContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-385">Ruft die <see cref="T:System.Windows.Forms.BindingContext" /> für das Steuerelement ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-385">Gets or sets the <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</span></span></summary>
        <value><span data-ttu-id="8426f-386">Ein <see cref="T:System.Windows.Forms.BindingContext" /> für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-386">A <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-387">Der <xref:System.Windows.Forms.BindingContext> eines-Elements <xref:System.Windows.Forms.Control> wird verwendet, um ein einzelnes-Element <xref:System.Windows.Forms.BindingManagerBase> für alle Daten gebundenen Steuerelemente zurückzugeben, die in enthalten sind <xref:System.Windows.Forms.Control> .</span><span class="sxs-lookup"><span data-stu-id="8426f-387">The <xref:System.Windows.Forms.BindingContext> of a <xref:System.Windows.Forms.Control> is used to return a single <xref:System.Windows.Forms.BindingManagerBase> for all data-bound controls contained by the <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="8426f-388">Der <xref:System.Windows.Forms.BindingManagerBase> behält alle Steuerelemente bei, die an dieselbe Datenquelle synchronisiert sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-388">The <xref:System.Windows.Forms.BindingManagerBase> keeps all controls that are bound to the same data source synchronized.</span></span> <span data-ttu-id="8426f-389">Wenn Sie z. b. die-Eigenschaft des-Objekts festlegen, wird <xref:System.Windows.Forms.BindingManagerBase.Position%2A> <xref:System.Windows.Forms.BindingManagerBase> das Element in der zugrunde liegenden Liste angegeben, auf das alle Daten gebundenen Steuerelemente zeigen.</span><span class="sxs-lookup"><span data-stu-id="8426f-389">For example, setting the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property of the <xref:System.Windows.Forms.BindingManagerBase> specifies the item in the underlying list that all data-bound controls point to.</span></span>  
  
 <span data-ttu-id="8426f-390">Weitere Informationen zum Erstellen einer neuen <xref:System.Windows.Forms.BindingContext> und zum Zuweisen zur- <xref:System.Windows.Forms.Control.BindingContext%2A> Eigenschaft finden Sie unter <xref:System.Windows.Forms.BindingContext.%23ctor%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-390">For more information about creating a new <xref:System.Windows.Forms.BindingContext> and assigning it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-391">Im folgenden Codebeispiel werden vier <xref:System.Windows.Forms.Binding> -Objekte erstellt, um fünf Steuerelemente, a <xref:System.Windows.Forms.DateTimePicker> und vier-Steuer <xref:System.Windows.Forms.TextBox> Elemente, an mehrere Datenquellen zu binden.</span><span class="sxs-lookup"><span data-stu-id="8426f-391">The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls, a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls, to several data sources.</span></span> <span data-ttu-id="8426f-392">Der <xref:System.Windows.Forms.BindingContext> wird dann verwendet, um die <xref:System.Windows.Forms.BindingManagerBase> für jede Datenquelle zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-392">The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.</span></span>  
  
 [!code-cpp[Classic BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-393">Wenn Sie die <see cref="P:System.Windows.Forms.Control.BindingContext" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.BindingContext" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-393">When overriding the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BindingContext" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-394">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-394">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-395">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.BindingContext" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-395">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BindingContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingContextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BindingContextChanged;" />
      <MemberSignature Language="F#" Value="member this.BindingContextChanged : EventHandler " Usage="member this.BindingContextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-396">Tritt auf, wenn sich der Wert der <see cref="T:System.Windows.Forms.BindingContext" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-396">Occurs when the value of the <see cref="T:System.Windows.Forms.BindingContext" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-397">Wenn Sie der über die-Eigenschaft eine neue hinzufügen möchten <xref:System.Windows.Forms.BindingContext> <xref:System.Windows.Forms.Control> <xref:System.Windows.Forms.Control.BindingContext%2A> , lesen Sie den- <xref:System.Windows.Forms.BindingContext.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="8426f-397">To add a new <xref:System.Windows.Forms.BindingContext> to the <xref:System.Windows.Forms.Control> through the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="8426f-398">Dieses Ereignis wird ausgelöst, wenn die- <xref:System.Windows.Forms.Control.BindingContext%2A> Eigenschaft geändert wird, entweder durch eine programmgesteuerte Änderung oder durch eine Benutzerinteraktion.</span><span class="sxs-lookup"><span data-stu-id="8426f-398">This event is raised if the <xref:System.Windows.Forms.Control.BindingContext%2A> property is changed is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-399">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-399">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-400">Im folgenden Codebeispiel wird ein-Delegat zum-Ereignis eines-Steuer Elements hinzugefügt <xref:System.EventHandler> <xref:System.Windows.Forms.Control.BindingContextChanged> <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-400">The following code example adds an <xref:System.EventHandler> delegate to the <xref:System.Windows.Forms.Control.BindingContextChanged> event of a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CS/source.cs#1)]
 [!code-vb[Classic Control.BindingContextChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
        <altmember cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public int Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Bottom { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : int" Usage="System.Windows.Forms.Control.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-401">Ruft den Abstand zwischen dem unteren Rand des Steuerelements und dem oberen Rand des Clientbereichs des zugehörigen Containers in Pixel ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-401">Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="8426f-402">Ein <see cref="T:System.Int32" />-Wert, der den Abstand zwischen dem unteren Rand des Steuerelements und dem oberen Rand des Clientbereichs des zugehörigen Containers in Pixel darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-402">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-403">Der Wert dieser Eigenschaft entspricht der Summe des <xref:System.Windows.Forms.Control.Top%2A> Eigenschafts Werts und dem <xref:System.Windows.Forms.Control.Height%2A> Eigenschafts Wert.</span><span class="sxs-lookup"><span data-stu-id="8426f-403">The value of this property is equal to the sum of the <xref:System.Windows.Forms.Control.Top%2A> property value, and the <xref:System.Windows.Forms.Control.Height%2A> property value.</span></span>  
  
 <span data-ttu-id="8426f-404">Die <xref:System.Windows.Forms.Control.Bottom%2A> -Eigenschaft ist eine schreibgeschützte Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-404">The <xref:System.Windows.Forms.Control.Bottom%2A> property is a read-only property.</span></span> <span data-ttu-id="8426f-405">Sie können diesen Eigenschafts Wert ändern, indem Sie den Wert der-Eigenschaft oder der-Eigenschaft ändern <xref:System.Windows.Forms.Control.Top%2A> <xref:System.Windows.Forms.Control.Height%2A> oder die <xref:System.Windows.Forms.Control.SetBounds%2A> <xref:System.Windows.Forms.Control.SetBoundsCore%2A> Methoden,, <xref:System.Windows.Forms.Control.UpdateBounds%2A> oder aufrufen <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-405">You can manipulate this property value by changing the value of the <xref:System.Windows.Forms.Control.Top%2A> or <xref:System.Windows.Forms.Control.Height%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-406">Im folgenden Codebeispiel wird die- <xref:System.Windows.Forms.Control.Bottom%2A> Eigenschaft verwendet, um die untere Grenze eines <xref:System.Windows.Forms.TextBox> Steuer Elements relativ zum Client Bereich des Containers zu definieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-406">The following code example uses the <xref:System.Windows.Forms.Control.Bottom%2A> property to define the lower limit of a <xref:System.Windows.Forms.TextBox> control relative to the client area of the container.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Top" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Control.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-407">Ruft die Größe und die Position des Steuerelements, einschließlich seiner Nicht-Clientelemente, in Pixel relativ zum übergeordneten Steuerelement ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-407">Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.</span></span></summary>
        <value><span data-ttu-id="8426f-408">Ein <see cref="T:System.Drawing.Rectangle" /> in Pixel relativ to zum übergeordneten Steuerelement, das die Größe und Position des Steuerelements darstellt, einschließlich seiner Nicht-Clientelemente.</span><span class="sxs-lookup"><span data-stu-id="8426f-408">A <see cref="T:System.Drawing.Rectangle" /> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-409">Die Begrenzungen des Steuer Elements umfassen die nicht-Client Elemente wie Scrollleisten, Rahmen, Titelleisten und Menüs.</span><span class="sxs-lookup"><span data-stu-id="8426f-409">The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span> <span data-ttu-id="8426f-410">Die- <xref:System.Windows.Forms.Control.SetBoundsCore%2A> Methode wird aufgerufen, um die-Eigenschaft festzulegen <xref:System.Windows.Forms.Control.Bounds%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-410">The <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method is called to set the <xref:System.Windows.Forms.Control.Bounds%2A> property.</span></span> <span data-ttu-id="8426f-411">Die- <xref:System.Windows.Forms.Control.Bounds%2A> Eigenschaft wird nicht immer durch ihre- `set` Methode geändert, daher sollten Sie die-Methode überschreiben <xref:System.Windows.Forms.Control.SetBoundsCore%2A> , um sicherzustellen, dass der Code beim Festlegen der-Eigenschaft ausgeführt wird <xref:System.Windows.Forms.Control.Bounds%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-411">The <xref:System.Windows.Forms.Control.Bounds%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.Bounds%2A> property is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-412">Im folgenden Codebeispiel werden drei Steuer <xref:System.Windows.Forms.Button> Elemente auf einem Formular erstellt, und die Größe und die Position werden mithilfe der verschiedenen Größen bezogenen und standortbezogenen Eigenschaften festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-412">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="8426f-413">Für dieses Beispiel ist es erforderlich, dass Sie über eine <xref:System.Windows.Forms.Form> mit einer Breite und Höhe von mindestens 300 Pixel verfügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-413">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Top" />
        <altmember cref="P:System.Windows.Forms.Control.Left" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public void BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringToFront() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BringToFront" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringToFront ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringToFront();" />
      <MemberSignature Language="F#" Value="member this.BringToFront : unit -&gt; unit" Usage="control.BringToFront " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-414">Zeigt dieses Steuerelement am Anfang der z-Reihenfolge an.</span><span class="sxs-lookup"><span data-stu-id="8426f-414">Brings the control to the front of the z-order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-415">Das Steuerelement wird an den Anfang der z-Reihenfolge verschoben.</span><span class="sxs-lookup"><span data-stu-id="8426f-415">The control is moved to the front of the z-order.</span></span> <span data-ttu-id="8426f-416">Wenn das Steuerelement ein untergeordnetes Element eines anderen Steuer Elements ist, wird das untergeordnete Steuerelement an den Anfang der z-Reihenfolge verschoben.</span><span class="sxs-lookup"><span data-stu-id="8426f-416">If the control is a child of another control, the child control is moved to the front of the z-order.</span></span> <span data-ttu-id="8426f-417"><xref:System.Windows.Forms.Control.BringToFront%2A>macht ein Steuerelement nicht zu einem Steuerelement der obersten Ebene, und es wird nicht das- <xref:System.Windows.Forms.Control.Paint> Ereignis erhoben.</span><span class="sxs-lookup"><span data-stu-id="8426f-417"><xref:System.Windows.Forms.Control.BringToFront%2A> does not make a control a top-level control, and it does not raise the <xref:System.Windows.Forms.Control.Paint> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-418">Im folgenden Codebeispiel wird sichergestellt, dass ein <xref:System.Windows.Forms.Label> sichtbar ist, indem seine-Methode aufgerufen wird <xref:System.Windows.Forms.Control.BringToFront%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-418">The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method.</span></span> <span data-ttu-id="8426f-419">Für dieses Beispiel ist es erforderlich, dass ein <xref:System.Windows.Forms.Form> mit dem <xref:System.Windows.Forms.Panel> Namen `panel1` und ein mit dem Namen vorhanden ist <xref:System.Windows.Forms.Label> `label1` .</span><span class="sxs-lookup"><span data-stu-id="8426f-419">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]
 [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SendToBack" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected virtual bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.Control.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-420">Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Windows.Forms.Control.ImeMode" />-Eigenschaft auf einen aktiven Wert festgelegt werden kann, um IME-Unterstützung zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-420">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span></span></summary>
        <value><span data-ttu-id="8426f-421"><see langword="true" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="8426f-421"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-422">Abgeleitete Klassen können diese Eigenschaft überschreiben, um zurückzugeben, `false` Wenn IME nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-422">Derived classes can override this property to return `false` if IME is not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFocus">
      <MemberSignature Language="C#" Value="public bool CanFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFocus : bool" Usage="System.Windows.Forms.Control.CanFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-423">Ruft einen Wert ab, der angibt, ob das Steuerelement den Fokus erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-423">Gets a value indicating whether the control can receive focus.</span></span></summary>
        <value><span data-ttu-id="8426f-424"><see langword="true" />, wenn das Steuerelement den Fokus erhalten kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-424"><see langword="true" /> if the control can receive focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-425">Damit ein Steuerelement den Eingabefokus erhalten kann, muss dem Steuerelement ein Handle zugewiesen sein, und die-Eigenschaft und die-Eigenschaft <xref:System.Windows.Forms.Control.Visible%2A> <xref:System.Windows.Forms.Control.Enabled%2A> müssen sowohl `true` für das-Steuerelement als auch für alle übergeordneten Steuerelemente auf festgelegt werden, und das Steuerelement muss ein Formular sein, oder das äußerste übergeordnete Steuerelement muss ein Formular sein.</span><span class="sxs-lookup"><span data-stu-id="8426f-425">In order for a control to receive input focus, the control must have a handle assigned to it, and the <xref:System.Windows.Forms.Control.Visible%2A> and <xref:System.Windows.Forms.Control.Enabled%2A> properties must both be set to `true` for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-426">Im folgenden Codebeispiel wird der Fokus auf das angegebene festgelegt <xref:System.Windows.Forms.Control> , wenn es den Fokus erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-426">The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]
 [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]
 [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
      </Docs>
    </Member>
    <Member MemberName="CanRaiseEvents">
      <MemberSignature Language="C#" Value="protected override bool CanRaiseEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRaiseEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanRaiseEvents" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanRaiseEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanRaiseEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRaiseEvents : bool" Usage="System.Windows.Forms.Control.CanRaiseEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-427">Stellt fest, ob Ereignisse für das Steuerelement ausgelöst werden können.</span><span class="sxs-lookup"><span data-stu-id="8426f-427">Determines if events can be raised on the control.</span></span></summary>
        <value><span data-ttu-id="8426f-428"><see langword="true" />, wenn das Steuerelement als ActiveX-Steuerelement gehostet wird, dessen Ereignisse nicht eingefroren sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-428"><see langword="true" /> if the control is hosted as an ActiveX control whose events are not frozen; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-429">Wenn dieses Steuerelement als ActiveX-Steuerelement gehostet wird, gibt diese Eigenschaft zurück, `false` Wenn das ActiveX-Steuerelement seine Ereignisse eingefroren hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-429">If this control is being hosted as an ActiveX control, this property will return `false` if the ActiveX control has its events frozen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSelect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelect : bool" Usage="System.Windows.Forms.Control.CanSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-430">Ruft einen Wert ab, der angibt, ob das Steuerelement ausgewählt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-430">Gets a value indicating whether the control can be selected.</span></span></summary>
        <value><span data-ttu-id="8426f-431"><see langword="true" />, wenn das Steuerelement ausgewählt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-431"><see langword="true" /> if the control can be selected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-432">Diese Eigenschaft gibt zurück, `true` Wenn der `Selectable` Wert von <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> auf festgelegt ist `true` , in einem anderen Steuerelement enthalten ist, das Steuerelement selbst sichtbar und aktiviert ist und alle übergeordneten Steuerelemente sichtbar und aktiviert sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-432">This property returns `true` if the `Selectable` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> is set to `true`, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.</span></span>  
  
 <span data-ttu-id="8426f-433">Die Windows Forms-Steuerelemente in der folgenden Liste sind nicht auswählbar und geben den Wert `false` für die- <xref:System.Windows.Forms.Control.CanSelect%2A> Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-433">The Windows Forms controls in the following list are not selectable and will return a value of `false` for the <xref:System.Windows.Forms.Control.CanSelect%2A> property.</span></span> <span data-ttu-id="8426f-434">Von diesen Steuerelementen abgeleitete Steuerelemente sind ebenfalls nicht auswählbar.</span><span class="sxs-lookup"><span data-stu-id="8426f-434">Controls derived from these controls are also not selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <span data-ttu-id="8426f-435"><xref:System.Windows.Forms.LinkLabel>(wenn im-Steuerelement kein Link vorhanden ist)</span><span class="sxs-lookup"><span data-stu-id="8426f-435"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-436">Im folgenden Codebeispiel wird der angegebene ausgewählt <xref:System.Windows.Forms.Control> , wenn er auswählbar ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-436">The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]
 [!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]
 [!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Capture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Property Capture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Capture { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Capture : bool with get, set" Usage="System.Windows.Forms.Control.Capture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-437">Ruft einen Wert ab, der angibt, ob die Maus vom Steuerelement erfasst wurde, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-437">Gets or sets a value indicating whether the control has captured the mouse.</span></span></summary>
        <value><span data-ttu-id="8426f-438"><see langword="true" />, wenn die Maus vom Steuerelement erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-438"><see langword="true" /> if the control has captured the mouse; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-439">Wenn ein Steuerelement die Maus erfasst hat, empfängt es Maus Eingaben, unabhängig davon, ob sich der Cursor innerhalb seines Rahmens befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-439">When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="8426f-440">Die Maus wird in der Regel nur bei Zieh Vorgängen aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="8426f-440">The mouse is typically only captured during drag operations.</span></span>  
  
 <span data-ttu-id="8426f-441">Nur im Vordergrund Fenster kann die Maus erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-441">Only the foreground window can capture the mouse.</span></span> <span data-ttu-id="8426f-442">Wenn ein Hintergrund Fenster versucht, empfängt das Fenster nur Meldungen für Mausereignisse, die auftreten, wenn sich der Mauszeiger innerhalb des sichtbaren Teils des Fensters befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-442">When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window.</span></span> <span data-ttu-id="8426f-443">Auch wenn das Vordergrund Fenster die Maus erfasst hat, kann der Benutzer weiterhin auf ein anderes Fenster klicken, um ihn in den Vordergrund zu bringen.</span><span class="sxs-lookup"><span data-stu-id="8426f-443">Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.</span></span>  
  
 <span data-ttu-id="8426f-444">Wenn die Maus aufgezeichnet wird, sollten die Tastenkombinationen nicht funktionieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-444">When the mouse is captured, shortcut keys should not work.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-445">Im folgenden Codebeispiel wird die- <xref:System.Windows.Forms.Control.Capture%2A> Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-445">The following code example demonstrates the <xref:System.Windows.Forms.Control.Capture%2A> property.</span></span> <span data-ttu-id="8426f-446">Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.Label> benanntes Label1 und zwei Steuerelemente mit den <xref:System.Windows.Forms.ListBox> Namen ListBox1 und listbox2 enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-446">To run this example paste the following code in a form containing a <xref:System.Windows.Forms.Label> named label1 and two <xref:System.Windows.Forms.ListBox> controls named listbox1 and listbox2.</span></span> <span data-ttu-id="8426f-447">Stellen Sie sicher, dass das Formular und das Steuerelement <xref:System.Windows.Forms.Control.MouseDown> Ereignis mit der-Methode in diesem Beispiel verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-447">Ensure the form and controls' <xref:System.Windows.Forms.Control.MouseDown> event is associated with the method in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlCapture#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Windows.Forms.Control.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-448">Ruft einen Wert ab, der angibt, ob das Steuerelement bei Erhalt des Fokus eine Validierung für alle eine Validierung erfordernden Steuerelemente veranlasst, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-448">Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</span></span></summary>
        <value><span data-ttu-id="8426f-449"><see langword="true" />, wenn das Steuerelement eine Validierung für alle eine Validierung erfordernden Steuerelemente veranlasst, wenn es den Fokus erhält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-449"><see langword="true" /> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8426f-450">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-450">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-451">Wenn die <xref:System.Windows.Forms.Control.CausesValidation%2A> -Eigenschaft auf festgelegt ist `false` , <xref:System.Windows.Forms.Control.Validating> werden die Ereignisse und unter <xref:System.Windows.Forms.Control.Validated> drückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-451">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="8426f-452">Der- <xref:System.Windows.Forms.Control.CausesValidation%2A> Eigenschafts Wert wird in der Regel `false` für Steuerelemente wie z. b. eine Hilfe Schaltfläche</span><span class="sxs-lookup"><span data-stu-id="8426f-452">The <xref:System.Windows.Forms.Control.CausesValidation%2A> property value is typically set to `false` for controls such as a Help button.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-453">Im folgenden Codebeispiel wird die abgeleitete Klasse verwendet <xref:System.Windows.Forms.TextBox> und eine e-Mail-Adresse überprüft, die der Benutzer eingibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-453">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="8426f-454">Wenn die e-Mail-Adresse nicht im Standardformat vorliegt (" @" and " ."), schlägt die Validierung fehl, ein <xref:System.Windows.Forms.ErrorProvider> Symbol wird angezeigt, und das Ereignis wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="8426f-454">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="8426f-455">Für eine der Schaltflächen im Formular ist die- <xref:System.Windows.Forms.Control.CausesValidation%2A> Eigenschaft auf festgelegt `false` .</span><span class="sxs-lookup"><span data-stu-id="8426f-455">One of the buttons on the form has its <xref:System.Windows.Forms.Control.CausesValidation%2A> property set to `false`.</span></span> <span data-ttu-id="8426f-456">Durch Klicken oder Festlegen des Fokus auf diese Schaltfläche wird keine Validierung auslöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-456">Clicking or setting focus to this button does not trigger validation.</span></span> <span data-ttu-id="8426f-457">Für dieses Beispiel ist es erforderlich, dass <xref:System.Windows.Forms.TextBox> , ein <xref:System.Windows.Forms.ErrorProvider> -Steuerelement und ein-Element <xref:System.Windows.Forms.Button> in einem Formular erstellt wurden.</span><span class="sxs-lookup"><span data-stu-id="8426f-457">This example requires that a <xref:System.Windows.Forms.TextBox>, an <xref:System.Windows.Forms.ErrorProvider> control, and a <xref:System.Windows.Forms.Button> have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#2)]
 [!code-csharp[Control.Validating#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#2)]
 [!code-vb[Control.Validating#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CausesValidationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CausesValidationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.CausesValidationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CausesValidationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CausesValidationChanged;" />
      <MemberSignature Language="F#" Value="member this.CausesValidationChanged : EventHandler " Usage="member this.CausesValidationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-458">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.Control.CausesValidation" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-458">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-459">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.CausesValidation%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-459">This event is raised if the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-460">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-460">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="ChangeUICues">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.UICuesEventHandler ChangeUICues;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.UICuesEventHandler ChangeUICues" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ChangeUICues" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ChangeUICues As UICuesEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::UICuesEventHandler ^ ChangeUICues;" />
      <MemberSignature Language="F#" Value="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " Usage="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UICuesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-461">Tritt ein, wenn sich die Hinweise auf den Fokus oder die Tastatur-Benutzeroberfläche ändern.</span><span class="sxs-lookup"><span data-stu-id="8426f-461">Occurs when the focus or keyboard user interface (UI) cues change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-462">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-462">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-463">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-463">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-464">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.ChangeUICues> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-464">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ChangeUICues> event.</span></span> <span data-ttu-id="8426f-465">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-465">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-466">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-466">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-467">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-467">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-468">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.ChangeUICues> .</span><span class="sxs-lookup"><span data-stu-id="8426f-468">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ChangeUICues> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CheckForIllegalCrossThreadCalls">
      <MemberSignature Language="C#" Value="public static bool CheckForIllegalCrossThreadCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CheckForIllegalCrossThreadCalls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CheckForIllegalCrossThreadCalls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CheckForIllegalCrossThreadCalls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckForIllegalCrossThreadCalls : bool with get, set" Usage="System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-469">Ruft einen Wert ab, mit dem angegeben wird, ob Aufrufe an den falschen Thread, der auf die <see cref="P:System.Windows.Forms.Control.Handle" />-Eigenschaft eines Steuerelements zugreift, abgefangen werden sollen, wenn eine Anwendung gedebuggt wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-469">Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <see cref="P:System.Windows.Forms.Control.Handle" /> property when an application is being debugged.</span></span></summary>
        <value><span data-ttu-id="8426f-470"><see langword="true" />, wenn Aufrufe an den falschen Thread abgefangen werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-470"><see langword="true" /> if calls on the wrong thread are caught; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-471">Wenn ein anderer Thread als der erstellenden Thread eines Steuer Elements versucht, auf eine der Methoden oder Eigenschaften dieses Steuer Elements zuzugreifen, führt dies häufig zu unvorhersehbaren Ergebnissen.</span><span class="sxs-lookup"><span data-stu-id="8426f-471">When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results.</span></span> <span data-ttu-id="8426f-472">Eine häufige Ungültige Thread Aktivität ist ein-Rückruf für den falschen Thread, der auf die-Eigenschaft des Steuer Elements zugreift <xref:System.Windows.Forms.Control.Handle%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-472">A common invalid thread activity is a call on the wrong thread that accesses the control's <xref:System.Windows.Forms.Control.Handle%2A> property.</span></span> <span data-ttu-id="8426f-473">Legen <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> Sie auf fest `true` , um diese Thread Aktivität beim Debuggen leichter zu finden und zu diagnostizieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-473">Set <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> to `true` to find and diagnose this thread activity more easily while debugging.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-474">Tritt beim Klicken auf das Steuerelement ein.</span><span class="sxs-lookup"><span data-stu-id="8426f-474">Occurs when the control is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-475">Das- <xref:System.Windows.Forms.Control.Click> Ereignis übergibt an <xref:System.EventArgs> seinen-Ereignishandler, sodass nur angegeben wird, dass ein Klick aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-475">The <xref:System.Windows.Forms.Control.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred.</span></span> <span data-ttu-id="8426f-476">Wenn Sie spezifischere Maus Informationen benötigen (Schaltfläche, Anzahl der Klicks, Rad Drehung oder Position), verwenden Sie das- <xref:System.Windows.Forms.Control.MouseClick> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-476">If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span> <span data-ttu-id="8426f-477">Das <xref:System.Windows.Forms.Control.MouseClick> Ereignis wird jedoch nicht ausgelöst, wenn der Klick durch eine andere Aktion als die der Maus verursacht wird, z. b. durch Drücken der EINGABETASTE.</span><span class="sxs-lookup"><span data-stu-id="8426f-477">However, the <xref:System.Windows.Forms.Control.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="8426f-478">Ein Doppelklick wird durch die Mauseinstellungen des Betriebssystems des Benutzers bestimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-478">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="8426f-479">Der Benutzer kann den Zeitraum festlegen, innerhalb dessen der zweite Mausklick erfolgen muss, damit zwei aufeinander folgende Mausklicks als Doppelklick erkannt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-479">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span> <span data-ttu-id="8426f-480">Das- <xref:System.Windows.Forms.Control.Click> Ereignis wird jedes Mal ausgelöst, wenn auf ein Steuerelement Doppel geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-480">The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked.</span></span> <span data-ttu-id="8426f-481">Wenn Sie z. b. über Ereignishandler für das <xref:System.Windows.Forms.Control.Click> -Ereignis und das-Ereignis <xref:System.Windows.Forms.Control.DoubleClick> eines verfügen <xref:System.Windows.Forms.Form> , <xref:System.Windows.Forms.Control.Click> werden die-und <xref:System.Windows.Forms.Control.DoubleClick> -Ereignisse ausgelöst, wenn auf das Formular Doppel geklickt wird und beide Methoden aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-481">For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called.</span></span> <span data-ttu-id="8426f-482">Wenn auf ein Steuerelement Doppel geklickt wird und dieses Steuerelement das-Ereignis nicht unterstützt <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.Click> wird das Ereignis möglicherweise zweimal ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-482">If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.</span></span>  
  
 <span data-ttu-id="8426f-483">Sie müssen den `StandardClick` Wert von <xref:System.Windows.Forms.ControlStyles> auf festlegen, damit `true` Dieses Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-483">You must set the `StandardClick` value of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-484">Die folgenden Ereignisse werden für die- <xref:System.Windows.Forms.TabControl> Klasse nur ausgelöst, wenn mindestens eine in der Auflistung vorhanden ist <xref:System.Windows.Forms.TabPage> <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> : <xref:System.Windows.Forms.Control.Click> , <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.MouseDown> , <xref:System.Windows.Forms.Control.MouseUp> , <xref:System.Windows.Forms.Control.MouseHover> , <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave> und <xref:System.Windows.Forms.Control.MouseMove> .</span><span class="sxs-lookup"><span data-stu-id="8426f-484">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="8426f-485">Wenn in der Auflistung mindestens eine vorhanden ist <xref:System.Windows.Forms.TabPage> und der Benutzer mit dem Header des Registerkarten-Steuer Elements interagiert (wo die <xref:System.Windows.Forms.TabPage> Namen angezeigt werden), löst das <xref:System.Windows.Forms.TabControl> entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-485">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="8426f-486">Wenn sich die Benutzerinteraktion jedoch im Client Bereich der Registerkarte befindet, löst die <xref:System.Windows.Forms.TabPage> das entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-486">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="8426f-487">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-487">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="8426f-488">Hinweise für Vererber</span><span class="sxs-lookup"><span data-stu-id="8426f-488">Notes to inheritors</span></span>

<span data-ttu-id="8426f-489">Das Erben von einem Standard Windows Forms-Steuerelement und das Ändern der- `StandardClick` oder- `StandardDoubleClick` Werte von <xref:System.Windows.Forms.ControlStyles> in `true` können zu unerwartetem Verhalten führen oder keinerlei Auswirkung haben, wenn das Steuerelement das-Ereignis oder das-Ereignis nicht unterstützt <xref:System.Windows.Forms.Control.Click> <xref:System.Windows.Forms.Control.DoubleClick> .</span><span class="sxs-lookup"><span data-stu-id="8426f-489">Inheriting from a standard Windows Forms control and changing the `StandardClick` or `StandardDoubleClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` can cause unexpected behavior or have no effect at all if the control does not support the <xref:System.Windows.Forms.Control.Click> or <xref:System.Windows.Forms.Control.DoubleClick> events.</span></span>
  
<span data-ttu-id="8426f-490">In der folgenden Tabelle sind Windows Forms Steuerelemente und das Ereignis (oder) aufgeführt, das <xref:System.Windows.Forms.Control.Click> <xref:System.Windows.Forms.Control.DoubleClick> als Reaktion auf die angegebene Maus Aktion ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-490">The following table lists Windows Forms controls and which event (<xref:System.Windows.Forms.Control.Click> or <xref:System.Windows.Forms.Control.DoubleClick>) is raised in response to the mouse action specified.</span></span>

| <span data-ttu-id="8426f-491">Control</span><span class="sxs-lookup"><span data-stu-id="8426f-491">Control</span></span> | <span data-ttu-id="8426f-492">Linker Mausklick</span><span class="sxs-lookup"><span data-stu-id="8426f-492">Left Mouse Click</span></span> | <span data-ttu-id="8426f-493">Doppelklick mit der linken Maustaste</span><span class="sxs-lookup"><span data-stu-id="8426f-493">Left Mouse Double Click</span></span> | <span data-ttu-id="8426f-494">Mit der rechten Maustaste</span><span class="sxs-lookup"><span data-stu-id="8426f-494">Right Mouse Click</span></span> | <span data-ttu-id="8426f-495">Doppelklick mit der rechten Maustaste</span><span class="sxs-lookup"><span data-stu-id="8426f-495">Right Mouse Double Click</span></span> | <span data-ttu-id="8426f-496">Mittlere Maustaste</span><span class="sxs-lookup"><span data-stu-id="8426f-496">Middle Mouse Click</span></span> | <span data-ttu-id="8426f-497">Mittlere Maustaste Doppelklick</span><span class="sxs-lookup"><span data-stu-id="8426f-497">Middle Mouse Double Click</span></span> | <span data-ttu-id="8426f-498">XButton1 mit Mausklick</span><span class="sxs-lookup"><span data-stu-id="8426f-498">XButton1 Mouse Click</span></span> | <span data-ttu-id="8426f-499">XButton1 Maustaste doppelklicken</span><span class="sxs-lookup"><span data-stu-id="8426f-499">XButton1 Mouse Double-Click</span></span> | <span data-ttu-id="8426f-500">XButton2 mit Mausklick</span><span class="sxs-lookup"><span data-stu-id="8426f-500">XButton2 Mouse Click</span></span> | <span data-ttu-id="8426f-501">XButton2 Maustaste doppelklicken</span><span class="sxs-lookup"><span data-stu-id="8426f-501">XButton2 Mouse Double-Click</span></span> | 
| ------- | ---------------- | ----------------------- | ----------------- | ------------------------ | ------------------ | ------------------------- | -------------------- | --------------------------- | -------------------- | --------------------------- |
| <span data-ttu-id="8426f-502"><xref:System.Windows.Forms.MonthCalendar>, <xref:System.Windows.Forms.DateTimePicker>, <xref:System.Windows.Forms.HScrollBar>, <xref:System.Windows.Forms.VScrollBar></span><span class="sxs-lookup"><span data-stu-id="8426f-502"><xref:System.Windows.Forms.MonthCalendar>, <xref:System.Windows.Forms.DateTimePicker>, <xref:System.Windows.Forms.HScrollBar>, <xref:System.Windows.Forms.VScrollBar></span></span> | <span data-ttu-id="8426f-503">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-503">none</span></span> | <span data-ttu-id="8426f-504">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-504">none</span></span> | <span data-ttu-id="8426f-505">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-505">none</span></span> | <span data-ttu-id="8426f-506">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-506">none</span></span> | <span data-ttu-id="8426f-507">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-507">none</span></span> | <span data-ttu-id="8426f-508">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-508">none</span></span> | <span data-ttu-id="8426f-509">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-509">none</span></span> | <span data-ttu-id="8426f-510">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-510">none</span></span> | <span data-ttu-id="8426f-511">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-511">none</span></span> | <span data-ttu-id="8426f-512">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-512">none</span></span> |
| <span data-ttu-id="8426f-513"><xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.RichTextBox>, <xref:System.Windows.Forms.RadioButton></span><span class="sxs-lookup"><span data-stu-id="8426f-513"><xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.RichTextBox>, <xref:System.Windows.Forms.RadioButton></span></span> | <span data-ttu-id="8426f-514">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-514">Click</span></span> | <span data-ttu-id="8426f-515">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-515">Click, Click</span></span> | <span data-ttu-id="8426f-516">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-516">none</span></span> | <span data-ttu-id="8426f-517">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-517">none</span></span> | <span data-ttu-id="8426f-518">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-518">none</span></span> | <span data-ttu-id="8426f-519">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-519">none</span></span> | <span data-ttu-id="8426f-520">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-520">none</span></span> | <span data-ttu-id="8426f-521">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-521">none</span></span> | <span data-ttu-id="8426f-522">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-522">none</span></span> | <span data-ttu-id="8426f-523">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-523">none</span></span> |
| <span data-ttu-id="8426f-524"><xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.CheckedListBox>, <xref:System.Windows.Forms.ComboBox></span><span class="sxs-lookup"><span data-stu-id="8426f-524"><xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.CheckedListBox>, <xref:System.Windows.Forms.ComboBox></span></span> | <span data-ttu-id="8426f-525">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-525">Click</span></span> | <span data-ttu-id="8426f-526">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-526">Click, DoubleClick</span></span> | <span data-ttu-id="8426f-527">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-527">none</span></span> | <span data-ttu-id="8426f-528">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-528">none</span></span> | <span data-ttu-id="8426f-529">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-529">none</span></span> | <span data-ttu-id="8426f-530">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-530">none</span></span> | <span data-ttu-id="8426f-531">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-531">none</span></span> | <span data-ttu-id="8426f-532">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-532">none</span></span> | <span data-ttu-id="8426f-533">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-533">none</span></span> | <span data-ttu-id="8426f-534">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-534">none</span></span> |
| <span data-ttu-id="8426f-535"><xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.DomainUpDown>, <xref:System.Windows.Forms.NumericUpDown></span><span class="sxs-lookup"><span data-stu-id="8426f-535"><xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.DomainUpDown>, <xref:System.Windows.Forms.NumericUpDown></span></span> | <span data-ttu-id="8426f-536">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-536">Click</span></span> | <span data-ttu-id="8426f-537">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-537">Click, DoubleClick</span></span> | <span data-ttu-id="8426f-538">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-538">none</span></span> | <span data-ttu-id="8426f-539">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-539">none</span></span> | <span data-ttu-id="8426f-540">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-540">none</span></span> | <span data-ttu-id="8426f-541">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-541">none</span></span> | <span data-ttu-id="8426f-542">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-542">none</span></span> | <span data-ttu-id="8426f-543">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-543">none</span></span> | <span data-ttu-id="8426f-544">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-544">none</span></span> | <span data-ttu-id="8426f-545">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-545">none</span></span> |
| <span data-ttu-id="8426f-546">\* <xref:System.Windows.Forms.TreeView>, \* <xref:System.Windows.Forms.ListView></span><span class="sxs-lookup"><span data-stu-id="8426f-546">\* <xref:System.Windows.Forms.TreeView>, \* <xref:System.Windows.Forms.ListView></span></span> | <span data-ttu-id="8426f-547">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-547">Click</span></span> | <span data-ttu-id="8426f-548">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-548">Click, DoubleClick</span></span> | <span data-ttu-id="8426f-549">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-549">Click</span></span> | <span data-ttu-id="8426f-550">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-550">Click, DoubleClick</span></span> | <span data-ttu-id="8426f-551">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-551">none</span></span> | <span data-ttu-id="8426f-552">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-552">none</span></span> | <span data-ttu-id="8426f-553">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-553">none</span></span> | <span data-ttu-id="8426f-554">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-554">none</span></span> | <span data-ttu-id="8426f-555">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-555">none</span></span> | <span data-ttu-id="8426f-556">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-556">none</span></span> |
| <span data-ttu-id="8426f-557"><xref:System.Windows.Forms.ProgressBar>, <xref:System.Windows.Forms.TrackBar></span><span class="sxs-lookup"><span data-stu-id="8426f-557"><xref:System.Windows.Forms.ProgressBar>, <xref:System.Windows.Forms.TrackBar></span></span> | <span data-ttu-id="8426f-558">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-558">Click</span></span> | <span data-ttu-id="8426f-559">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-559">Click, Click</span></span> | <span data-ttu-id="8426f-560">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-560">Click</span></span> | <span data-ttu-id="8426f-561">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-561">Click, Click</span></span> | <span data-ttu-id="8426f-562">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-562">Click</span></span> | <span data-ttu-id="8426f-563">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-563">Click, Click</span></span> | <span data-ttu-id="8426f-564">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-564">Click</span></span> | <span data-ttu-id="8426f-565">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-565">Click, Click</span></span> | <span data-ttu-id="8426f-566">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-566">Click</span></span> | <span data-ttu-id="8426f-567">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-567">Click, Click</span></span> |
| <span data-ttu-id="8426f-568"><xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.DataGrid>, <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.LinkLabel>, <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.PictureBox>, <xref:System.Windows.Forms.Splitter>, <xref:System.Windows.Forms.StatusBar>, <xref:System.Windows.Forms.ToolBar>, <xref:System.Windows.Forms.TabPage>, \*\* <xref:System.Windows.Forms.TabControl></span><span class="sxs-lookup"><span data-stu-id="8426f-568"><xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.DataGrid>, <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.LinkLabel>, <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.PictureBox>, <xref:System.Windows.Forms.Splitter>, <xref:System.Windows.Forms.StatusBar>, <xref:System.Windows.Forms.ToolBar>, <xref:System.Windows.Forms.TabPage>, \*\* <xref:System.Windows.Forms.TabControl></span></span> | <span data-ttu-id="8426f-569">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-569">Click</span></span> | <span data-ttu-id="8426f-570">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-570">Click, DoubleClick</span></span> | <span data-ttu-id="8426f-571">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-571">Click</span></span> | <span data-ttu-id="8426f-572">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-572">Click, DoubleClick</span></span> | <span data-ttu-id="8426f-573">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-573">Click</span></span> | <span data-ttu-id="8426f-574">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-574">Click, DoubleClick</span></span> | <span data-ttu-id="8426f-575">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-575">Click</span></span> | <span data-ttu-id="8426f-576">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-576">Click, DoubleClick</span></span> | <span data-ttu-id="8426f-577">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-577">Click</span></span> | <span data-ttu-id="8426f-578">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-578">Click, DoubleClick</span></span> |

<span data-ttu-id="8426f-579">\*Der Mauszeiger muss sich über einem untergeordneten Objekt befinden ( <xref:System.Windows.Forms.TreeNode> oder <xref:System.Windows.Forms.ListViewItem> ).</span><span class="sxs-lookup"><span data-stu-id="8426f-579">\* The mouse pointer must be over a child object (<xref:System.Windows.Forms.TreeNode> or <xref:System.Windows.Forms.ListViewItem>).</span></span>  
  
 <span data-ttu-id="8426f-580">\* \* Muss mindestens eine in der Auflistung enthalten <xref:System.Windows.Forms.TabControl> <xref:System.Windows.Forms.TabPage> <xref:System.Windows.Forms.TabControl.TabPages> .</span><span class="sxs-lookup"><span data-stu-id="8426f-580">\*\* The <xref:System.Windows.Forms.TabControl> must have at least one <xref:System.Windows.Forms.TabPage> in its <xref:System.Windows.Forms.TabControl.TabPages> collection.</span></span>

## Examples  
 <span data-ttu-id="8426f-581">Das folgende Codebeispiel zeigt das- <xref:System.Windows.Forms.Control.Click> Ereignis in einem Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="8426f-581">The following code example shows the <xref:System.Windows.Forms.Control.Click> event in an event handler.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="ClientRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClientRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ClientRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ClientRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ClientRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.Control.ClientRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-582">Ruft das Rechteck ab, das den Clientbereich des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-582">Gets the rectangle that represents the client area of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-583">Ein <see cref="T:System.Drawing.Rectangle" />, das den Clientbereich des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-583">A <see cref="T:System.Drawing.Rectangle" /> that represents the client area of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-584">Der Client Bereich eines Steuer Elements ist die Begrenzungen des Steuer Elements, abzüglich der nicht-Client Elemente wie Scrollleisten, Rahmen, Titelleisten und Menüs.</span><span class="sxs-lookup"><span data-stu-id="8426f-584">The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span>  
  
 <span data-ttu-id="8426f-585">Da Client Koordinaten relativ zur oberen linken Ecke des Client Bereichs des Steuer Elements sind, sind die Koordinaten der oberen linken Ecke des Rechtecks, das von dieser Eigenschaft zurückgegeben wird, (0,0).</span><span class="sxs-lookup"><span data-stu-id="8426f-585">Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0).</span></span> <span data-ttu-id="8426f-586">Sie können diese Eigenschaft verwenden, um die Größe und die Koordinaten des Client Bereichs des Steuer Elements für Aufgaben wie z. b. das Zeichnen auf der Oberfläche des Steuer Elements abzurufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-586">You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.</span></span>  
  
 <span data-ttu-id="8426f-587">Weitere Informationen zum Zeichnen von Steuerelementen finden Sie unter [Rendering eines Windows Forms-Steuer](/dotnet/framework/winforms/controls/rendering-a-windows-forms-control)Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-587">For more information about drawing on controls, see [Rendering a Windows Forms Control](/dotnet/framework/winforms/controls/rendering-a-windows-forms-control).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-588">Im folgenden Codebeispiel wird der automatische Bildlauf für ein Formular aktiviert, die Größe des Formulars geändert und sichergestellt, dass eine Schaltfläche sichtbar bleibt, nachdem die Größe des Formulars geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-588">The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized.</span></span> <span data-ttu-id="8426f-589">Für dieses Beispiel ist es erforderlich, dass <xref:System.Windows.Forms.Form> über ein mit dem <xref:System.Windows.Forms.Button> Namen verfügt `button2` .</span><span class="sxs-lookup"><span data-stu-id="8426f-589">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `button2` on it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#2)]
 [!code-csharp[Windows.Forms.Control Member5#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#2)]
 [!code-vb[Windows.Forms.Control Member5#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
        <altmember cref="T:System.Windows.Forms.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.ClientSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.ClientSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-590">Ruft die Höhe und Breite des Clientbereichs des Steuerelements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-590">Gets or sets the height and width of the client area of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-591">Ein <see cref="T:System.Drawing.Size" />, das die Abmessungen des Clientbereichs des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-591">A <see cref="T:System.Drawing.Size" /> that represents the dimensions of the client area of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-592">Der Client Bereich eines Steuer Elements ist die Begrenzungen des Steuer Elements, abzüglich der nicht-Client Elemente wie Scrollleisten, Rahmen, Titelleisten und Menüs.</span><span class="sxs-lookup"><span data-stu-id="8426f-592">The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span> <span data-ttu-id="8426f-593">Die- <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> Methode wird aufgerufen, um die-Eigenschaft festzulegen <xref:System.Windows.Forms.Control.ClientSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-593">The <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method is called to set the <xref:System.Windows.Forms.Control.ClientSize%2A> property.</span></span> <span data-ttu-id="8426f-594">Die- <xref:System.Windows.Forms.Control.ClientSize%2A> Eigenschaft wird nicht immer durch ihre- `set` Methode geändert, daher sollten Sie die-Methode überschreiben <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> , um sicherzustellen, dass der Code beim Festlegen der-Eigenschaft ausgeführt wird <xref:System.Windows.Forms.Control.ClientSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-594">The <xref:System.Windows.Forms.Control.ClientSize%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.ClientSize%2A> property is set.</span></span>  
  
 <span data-ttu-id="8426f-595">Die <xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType> -Eigenschaft und die-Eigenschaft <xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType> stellen die Breite und Höhe des Client Bereichs des Steuer Elements dar.</span><span class="sxs-lookup"><span data-stu-id="8426f-595">The <xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType> and <xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType> properties represent the width and height of the client area of the control.</span></span> <span data-ttu-id="8426f-596">Mit dieser Eigenschaft können Sie die Größe des Client Bereichs des Steuer Elements für Aufgaben wie z. b. das Zeichnen auf der Oberfläche des Steuer Elements abrufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-596">You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.</span></span>  
  
 <span data-ttu-id="8426f-597">Weitere Informationen zum Zeichnen von Steuerelementen finden Sie unter [Rendering eines Windows Forms-Steuer](/dotnet/framework/winforms/controls/rendering-a-windows-forms-control)Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-597">For more information about drawing on controls, see [Rendering a Windows Forms Control](/dotnet/framework/winforms/controls/rendering-a-windows-forms-control).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-598">Die Anwendungseinstellungen können nicht an diese Eigenschaft gebunden werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-598">You cannot bind application settings to this property.</span></span> <span data-ttu-id="8426f-599">Weitere Informationen zu Anwendungseinstellungen finden Sie unter [Übersicht über Anwendungseinstellungen](/dotnet/framework/winforms/advanced/application-settings-overview).</span><span class="sxs-lookup"><span data-stu-id="8426f-599">For more information on application settings, see [Application Settings Overview](/dotnet/framework/winforms/advanced/application-settings-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-600">Im folgenden Codebeispiel wird die Größe des angegebenen Steuer Elements geändert, sodass das Steuerelement seinen formatierten Text aufnehmen kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-600">The following code example resizes the specified control so the control will accommodate its formatted text.</span></span> <span data-ttu-id="8426f-601">Der formatierte Text ist die <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft, der das Steuerelement zugewiesen ist <xref:System.Windows.Forms.Control.Font%2A> , das auf den Text angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-601">The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text.</span></span> <span data-ttu-id="8426f-602">Die- `AutoSizeControl` Methode in diesem Beispiel verfügt auch über einen- `textPadding` Parameter, der die Auffüll Zeichen darstellt, die auf alle Ränder des Steuer Elements angewendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-602">The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control.</span></span> <span data-ttu-id="8426f-603">Damit die Auffüll Zeichen gleich sind, richten Sie den Text mit dem <xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType> Wert ein, wenn das Steuerelement ihn unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8426f-603">To make the padding appear equal, align the text with the <xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType> value, if your control supports it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]
 [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]
 [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="T:System.Windows.Forms.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ClientSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ClientSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ClientSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ClientSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ClientSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.ClientSizeChanged : EventHandler " Usage="member this.ClientSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-604">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.Control.ClientSize" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-604">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-605">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-605">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-606">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-606">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-607">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.ClientSizeChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-607">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ClientSizeChanged> event.</span></span> <span data-ttu-id="8426f-608">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-608">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-609">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-609">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-610">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-610">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-611">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.ClientSizeChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-611">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ClientSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#12)]
 [!code-vb[System.Windows.Forms.EventExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="System.Windows.Forms.Control.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Description("ControlCompanyNameDescr")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Description("ControlCompanyNameDescr")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-612">Ruft den Namen des Unternehmens oder des Entwicklers der Anwendung ab, die das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-612">Gets the name of the company or creator of the application containing the control.</span></span></summary>
        <value><span data-ttu-id="8426f-613">Der Name des Unternehmens oder des Entwicklers der Anwendung, die das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-613">The company name or creator of the application containing the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-614">Die <xref:System.Windows.Forms.Control.CompanyName%2A> -Eigenschaft ist eine schreibgeschützte Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-614">The <xref:System.Windows.Forms.Control.CompanyName%2A> property is a read-only property.</span></span> <span data-ttu-id="8426f-615">Um den Wert dieser Eigenschaft zu ändern, legen Sie den- <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> Eigenschafts Wert von fest <xref:System.Reflection.AssemblyCompanyAttribute> .</span><span class="sxs-lookup"><span data-stu-id="8426f-615">To change the value of this property, set the <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> property value of the <xref:System.Reflection.AssemblyCompanyAttribute>.</span></span> <span data-ttu-id="8426f-616">In der folgenden Zeile des c#-Codes wird die-Eigenschaft festgelegt <xref:System.Windows.Forms.Control.CompanyName%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-616">The following line of C# code sets the <xref:System.Windows.Forms.Control.CompanyName%2A> property.</span></span>  
  
```csharp  
[assembly: AssemblyCompany("Microsoft")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="8426f-617">Es wird dringend empfohlen, dass Sie den Namen des Unternehmens, den Produktnamen und die Produktversion für Ihre APP angeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-617">It is strongly recommended that you provide the company name, product name, and product version for your app.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-618">Im folgenden Codebeispiel werden Informationen über die Anwendung in einer-Datei angezeigt, die in <xref:System.Windows.Forms.Label> enthalten ist <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-618">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8426f-619">Für dieses Beispiel ist es erforderlich, dass <xref:System.Windows.Forms.Control.CompanyName%2A> <xref:System.Windows.Forms.Control.ProductName%2A> und <xref:System.Windows.Forms.Control.ProductVersion%2A> festgelegt wurden.</span><span class="sxs-lookup"><span data-stu-id="8426f-619">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyCompanyAttribute.Company" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.CompanyName" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.Control ctl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.Control ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (ctl As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::Control ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.Control -&gt; bool" Usage="control.Contains ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="8426f-620">Der auszuwertende <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-620">The <see cref="T:System.Windows.Forms.Control" /> to evaluate.</span></span></param>
        <summary><span data-ttu-id="8426f-621">Ruft einen Wert ab, der angibt, ob das angegebene Steuerelement dem Steuerelement untergeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-621">Retrieves a value indicating whether the specified control is a child of the control.</span></span></summary>
        <returns><span data-ttu-id="8426f-622"><see langword="true" />, wenn das angegebene Steuerelement dem Steuerelement untergeordnet ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-622"><see langword="true" /> if the specified control is a child of the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8426f-623">Im folgenden Codebeispiel wird sichergestellt, dass ein <xref:System.Windows.Forms.Label> sichtbar ist, indem seine-Methode aufgerufen wird <xref:System.Windows.Forms.Control.BringToFront%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-623">The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method.</span></span> <span data-ttu-id="8426f-624">Für dieses Beispiel ist es erforderlich, dass ein <xref:System.Windows.Forms.Form> mit dem <xref:System.Windows.Forms.Panel> Namen `panel1` und ein mit dem Namen vorhanden ist <xref:System.Windows.Forms.Label> `label1` .</span><span class="sxs-lookup"><span data-stu-id="8426f-624">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]
 [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFocus">
      <MemberSignature Language="C#" Value="public bool ContainsFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContainsFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContainsFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainsFocus : bool" Usage="System.Windows.Forms.Control.ContainsFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-625">Ruft einen Wert ab, der angibt, ob das Steuerelement oder eines der untergeordneten Steuerelemente den Eingabefokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-625">Gets a value indicating whether the control, or one of its child controls, currently has the input focus.</span></span></summary>
        <value><span data-ttu-id="8426f-626"><see langword="true" />, wenn das Steuerelement oder eines der untergeordneten Steuerelemente den Eingabefokus besitzt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-626"><see langword="true" /> if the control or one of its child controls currently has the input focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-627">Sie können diese Eigenschaft verwenden, um zu bestimmen, ob ein Steuerelement oder eines der darin enthaltenen Steuerelemente den Eingabefokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-627">You can use this property to determine whether a control or any of the controls contained within it has the input focus.</span></span> <span data-ttu-id="8426f-628">Verwenden Sie die-Eigenschaft, um zu bestimmen, ob das Steuerelement den Fokus besitzt, unabhängig davon, ob eines der untergeordneten Steuerelemente den Fokus besitzt <xref:System.Windows.Forms.Control.Focused%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-628">To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <xref:System.Windows.Forms.Control.Focused%2A> property.</span></span> <span data-ttu-id="8426f-629">Verwenden Sie die-Methode oder die-Methode, um dem Eingabefokus ein Steuerelement zuzuweisen <xref:System.Windows.Forms.Control.Focus%2A> <xref:System.Windows.Forms.Control.Select%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-629">To give a control the input focus, use the <xref:System.Windows.Forms.Control.Focus%2A> or <xref:System.Windows.Forms.Control.Select%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.Control.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-630">Ruft das dem Steuerelement zugeordnete Kontextmenü ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-630">Gets or sets the shortcut menu associated with the control.</span></span></summary>
        <value><span data-ttu-id="8426f-631">Ein <see cref="T:System.Windows.Forms.ContextMenu" />, das das diesem Steuerelement zugeordnete Kontextmenü darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-631">A <see cref="T:System.Windows.Forms.ContextMenu" /> that represents the shortcut menu associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-632">Verwenden Sie ein Kontextmenü, um Benutzern kontextspezifische Menü Optionen zur Verfügung zu stellen, wenn Sie mit der rechten Maustaste auf das Steuerelement klicken.</span><span class="sxs-lookup"><span data-stu-id="8426f-632">Use a shortcut menus to give context-specific menu options to users when they right-click on the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-633">Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.ContextMenu> zugewiesen, die einem zugewiesen <xref:System.Windows.Forms.TreeView> wird, wenn mit der rechten Maustaste geklickt und die Maustaste losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-633">The following code example displays the <xref:System.Windows.Forms.ContextMenu> assigned to a <xref:System.Windows.Forms.TreeView> when the right mouse button is clicked and released.</span></span> <span data-ttu-id="8426f-634">Für diesen Code ist es erforderlich, dass <xref:System.Windows.Forms.Form> über ein mit einem verfügt <xref:System.Windows.Forms.TreeView> .</span><span class="sxs-lookup"><span data-stu-id="8426f-634">This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> on it.</span></span> <span data-ttu-id="8426f-635">Außerdem ist es erforderlich, dass der die- <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.ContextMenu> Eigenschaft zugewiesen ist <xref:System.Windows.Forms.Control.ContextMenu%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-635">It is also required that the <xref:System.Windows.Forms.TreeView> has a <xref:System.Windows.Forms.ContextMenu> assigned to its <xref:System.Windows.Forms.Control.ContextMenu%2A> property.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#5)]
 [!code-csharp[Windows.Forms.Control Properties2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#5)]
 [!code-vb[Windows.Forms.Control Properties2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-636">Wenn Sie die <see cref="P:System.Windows.Forms.Control.ContextMenu" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.ContextMenu" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-636">When overriding the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-637">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-637">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-638">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.ContextMenu" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-638">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ContextMenuChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuChanged : EventHandler " Usage="member this.ContextMenuChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-639">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.Control.ContextMenu" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-639">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-640">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.ContextMenu%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-640">This event is raised if the <xref:System.Windows.Forms.Control.ContextMenu%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-641">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-641">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-642">Im folgenden Codebeispiel wird eine Meldung angezeigt, wenn eine Änderung im Kontextmenü auftritt.</span><span class="sxs-lookup"><span data-stu-id="8426f-642">The following code example displays a message when a change occurs to the shortcut menu.</span></span>  
  
 [!code-cpp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CPP/control_contextmenu_creategraphics.cpp#2)]
 [!code-csharp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CS/control_contextmenu_creategraphics.cs#2)]
 [!code-vb[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/VB/control_contextmenu_creategraphics.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenu" />
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.Control.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-643">Ruft die diesem Steuerelement zugeordnete <see cref="T:System.Windows.Forms.ContextMenuStrip" />-Klasse ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-643">Gets or sets the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with this control.</span></span></summary>
        <value><span data-ttu-id="8426f-644">Die <see cref="T:System.Windows.Forms.ContextMenuStrip" /> für dieses Steuerelement, oder <see langword="null" />, wenn keine <see cref="T:System.Windows.Forms.ContextMenuStrip" /> vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-644">The <see cref="T:System.Windows.Forms.ContextMenuStrip" /> for this control, or <see langword="null" /> if there is no <see cref="T:System.Windows.Forms.ContextMenuStrip" />.</span></span> <span data-ttu-id="8426f-645">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-645">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-646">Wenn ein <xref:System.Windows.Forms.ContextMenu> dem Steuerelement ebenfalls zugewiesen wurde, hat das <xref:System.Windows.Forms.ContextMenu> Vorrang vor dem <xref:System.Windows.Forms.ContextMenuStrip> .</span><span class="sxs-lookup"><span data-stu-id="8426f-646">If a <xref:System.Windows.Forms.ContextMenu> has also been assigned to the control, the <xref:System.Windows.Forms.ContextMenu> takes precedence over the <xref:System.Windows.Forms.ContextMenuStrip>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-647">Im folgenden Codebeispiel wird veranschaulicht, wie einer ein drei-Objekte hinzugefügt werden <xref:System.Windows.Forms.ToolStripMenuItem> <xref:System.Windows.Forms.ContextMenuStrip> .</span><span class="sxs-lookup"><span data-stu-id="8426f-647">The following code example demonstrates how to add three <xref:System.Windows.Forms.ToolStripMenuItem> objects to a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="8426f-648">Außerdem wird das Festlegen der- <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> Eigenschaft des Formulars veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-648">In addition it demonstrates setting the <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> property of the form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuStripChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStripChanged : EventHandler " Usage="member this.ContextMenuStripChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-649">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-649">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-650">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-650">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-651">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-651">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-652">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.ContextMenuStripChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-652">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event.</span></span> <span data-ttu-id="8426f-653">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-653">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-654">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-654">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-655">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-655">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-656">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.ContextMenuStripChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-656">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#14)]
 [!code-vb[System.Windows.Forms.EventExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ControlAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlAdded As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlAdded;" />
      <MemberSignature Language="F#" Value="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-657">Tritt ein, wenn der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> ein neues Steuerelement hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-657">Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-658">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-658">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-659">Im folgenden Codebeispiel wird verwendet <xref:System.Windows.Forms.Control.ControlAdded> , um ein-Steuerelement zu einem Formular hinzuzufügen und den Namen des hinzugefügten Steuer Elements in einem-Element angezeigt <xref:System.Windows.Forms.MessageBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-659">The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ControlRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ControlRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlRemoved As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlRemoved;" />
      <MemberSignature Language="F#" Value="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-660">Tritt beim Entfernen des Steuerelements aus der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> ein.</span><span class="sxs-lookup"><span data-stu-id="8426f-660">Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-661">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-661">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-662">Im folgenden Codebeispiel wird verwendet <xref:System.Windows.Forms.Control.ControlRemoved> , um ein-Steuerelement aus einem Formular zu entfernen und den Namen des entfernten Steuer Elements in einem-Element angezeigt <xref:System.Windows.Forms.MessageBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-662">The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control/ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control::ControlCollection ^ Controls { System::Windows::Forms::Control::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Windows.Forms.Control.ControlCollection" Usage="System.Windows.Forms.Control.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-663">Ruft die im Steuerelement enthaltene Auflistung von Steuerelementen ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-663">Gets the collection of controls contained within the control.</span></span></summary>
        <value><span data-ttu-id="8426f-664">Eine <see cref="T:System.Windows.Forms.Control.ControlCollection" />, die die Auflistung der im Steuerelement enthaltenen Steuerelemente darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-664">A <see cref="T:System.Windows.Forms.Control.ControlCollection" /> representing the collection of controls contained within the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-665">Ein-Objekt <xref:System.Windows.Forms.Control> kann als übergeordnetes Element einer Auflistung von-Steuerelementen fungieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-665">A <xref:System.Windows.Forms.Control> can act as a parent to a collection of controls.</span></span> <span data-ttu-id="8426f-666">Wenn z. b. mehrere Steuerelemente zu einem hinzugefügt werden <xref:System.Windows.Forms.Form> , ist jedes der Steuerelemente ein Member von, der <xref:System.Windows.Forms.Control.ControlCollection> der- <xref:System.Windows.Forms.Control.Controls%2A> Eigenschaft des Formulars zugewiesen ist, das von der-Klasse abgeleitet wird <xref:System.Windows.Forms.Control> .</span><span class="sxs-lookup"><span data-stu-id="8426f-666">For example, when several controls are added to a <xref:System.Windows.Forms.Form>, each of the controls is a member of the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property of the form, which is derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 <span data-ttu-id="8426f-667"><xref:System.Windows.Forms.Control.ControlCollection> <xref:System.Windows.Forms.Control.Controls%2A> Mithilfe der in der-Klasse verfügbaren Methoden können Sie die Steuerelemente in der, die der-Eigenschaft zugewiesen ist, bearbeiten <xref:System.Windows.Forms.Control.ControlCollection> .</span><span class="sxs-lookup"><span data-stu-id="8426f-667">You can manipulate the controls in the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property by using the methods available in the <xref:System.Windows.Forms.Control.ControlCollection> class.</span></span>  
  
 <span data-ttu-id="8426f-668">Wenn Sie einem übergeordneten Steuerelement mehrere Steuerelemente hinzufügen, empfiehlt es sich, <xref:System.Windows.Forms.Control.SuspendLayout%2A> vor dem Initialisieren der hinzu zufügenden Steuerelemente die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-668">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="8426f-669">Nachdem Sie dem übergeordneten Steuerelement die Steuerelemente hinzugefügt haben, müssen Sie die- <xref:System.Windows.Forms.Control.ResumeLayout%2A> Methode</span><span class="sxs-lookup"><span data-stu-id="8426f-669">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="8426f-670">Dadurch wird die Leistung von Anwendungen mit vielen Steuerelementen erhöht.</span><span class="sxs-lookup"><span data-stu-id="8426f-670">Doing so will increase the performance of applications with many controls.</span></span>  
  
 <span data-ttu-id="8426f-671">Verwenden Sie die- <xref:System.Windows.Forms.Control.Controls%2A> Eigenschaft, um alle Steuerelemente eines Formulars zu durchlaufen, einschließlich der eingefügten Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="8426f-671">Use the <xref:System.Windows.Forms.Control.Controls%2A> property to iterate through all controls of a form, including nested controls.</span></span> <span data-ttu-id="8426f-672">Verwenden Sie die- <xref:System.Windows.Forms.Control.GetNextControl%2A> Methode zum Abrufen des vorherigen oder nächsten untergeordneten Steuer Elements in der Aktivier Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="8426f-672">Use the <xref:System.Windows.Forms.Control.GetNextControl%2A> method to retrieve the previous or next child control in the tab order.</span></span> <span data-ttu-id="8426f-673">Verwenden Sie die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> Eigenschaft, um das aktive Steuerelement eines Container Steuer Elements zu erhalten oder festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-673">Use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to get or set the active control of a container control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-674">Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.Control> aus der <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse entfernt, <xref:System.Windows.Forms.Panel> Wenn Sie ein Member der Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-674">The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection.</span></span> <span data-ttu-id="8426f-675">Das Beispiel erfordert, dass Sie ein <xref:System.Windows.Forms.Panel> -, ein <xref:System.Windows.Forms.Button> -und mindestens ein- <xref:System.Windows.Forms.RadioButton> Steuerelement auf einem erstellt haben <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-675">The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one <xref:System.Windows.Forms.RadioButton> control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8426f-676">Das Steuerelement <xref:System.Windows.Forms.RadioButton> (e) wird dem-Steuerelement hinzugefügt <xref:System.Windows.Forms.Panel> , und das-Steuerelement, das <xref:System.Windows.Forms.Panel> hinzugefügt wurde <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-676">The <xref:System.Windows.Forms.RadioButton> control(s) are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8426f-677">Wenn auf die Schaltfläche geklickt wird, wird das Optionsfeld mit dem Namen `removeButton` aus der entfernt <xref:System.Windows.Forms.Control.ControlCollection> .</span><span class="sxs-lookup"><span data-stu-id="8426f-677">When the button is clicked, the radio button named `removeButton` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="control.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-678">Erstellt ein neues Objekt für die Barrierefreiheit für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-678">Creates a new accessibility object for the control.</span></span></summary>
        <returns><span data-ttu-id="8426f-679">Ein neues <see cref="T:System.Windows.Forms.AccessibleObject" /> für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-679">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-680">Wenn Sie die <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>-Methode nicht explizit aufrufen, wird sie beim Verweis auf die <xref:System.Windows.Forms.Control.AccessibilityObject%2A>-Eigenschaft aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-680">If you do not explicitly call the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-681">Um die-Eigenschaft zu erhalten oder festzulegen <xref:System.Windows.Forms.Control.AccessibilityObject%2A> , müssen Sie einen Verweis auf die Assembly hinzufügen, `Accessibility` die mit dem installiert wurde [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] .</span><span class="sxs-lookup"><span data-stu-id="8426f-681">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-682">Das folgende Codebeispiel veranschaulicht die Erstellung eines Barrierefreiheits fähigen Diagramm Steuer Elements mithilfe der <xref:System.Windows.Forms.AccessibleObject> -Klasse und der- <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klasse, um Barrierefreie Informationen verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="8426f-682">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="8426f-683">Das-Steuerelement zeichnet zwei Kurven zusammen mit einer Legende.</span><span class="sxs-lookup"><span data-stu-id="8426f-683">The control plots two curves along with a legend.</span></span> <span data-ttu-id="8426f-684">Die- `ChartControlAccessibleObject` Klasse, die von abgeleitet wird `ControlAccessibleObject` , wird in der-Methode verwendet, <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> um benutzerdefinierte Informationen für das Diagramm Steuerelement bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-684">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="8426f-685">Da die Diagramm Legende kein tatsächliches Steuerelement ist <xref:System.Windows.Forms.Control> , sondern durch das Diagramm Steuerelement gezeichnet wird, sind keine integrierten zugänglichen Informationen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="8426f-685">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="8426f-686">Aus diesem Grund `ChartControlAccessibleObject` überschreibt die-Klasse die- <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> Methode, um das-Element zurückzugeben `CurveLegendAccessibleObject` , das barrierefreie Informationen für jeden Teil der Legende darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-686">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="8426f-687">Wenn eine barrierefreie Anwendung dieses Steuerelement verwendet, kann das Steuerelement die erforderlichen zugänglichen Informationen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-687">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="8426f-688">Dieser Code Ausschnitt veranschaulicht das Überschreiben der- <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8426f-688">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.</span></span> <span data-ttu-id="8426f-689"><xref:System.Windows.Forms.AccessibleObject>Das gesamte Codebeispiel finden Sie in der Übersicht über die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-689">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#2)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#2)]
 [!code-vb[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-690">Wenn <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> Sie in einer abgeleiteten Klasse überschreiben, sollten Sie die-Methode der Basisklasse nicht aufzurufen <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> .</span><span class="sxs-lookup"><span data-stu-id="8426f-690">When overriding <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> in a derived class, do not call the base class's <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="CreateControl">
      <MemberSignature Language="C#" Value="public void CreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateControl" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateControl();" />
      <MemberSignature Language="F#" Value="member this.CreateControl : unit -&gt; unit" Usage="control.CreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-691">Erzwingt das Erstellen des sichtbaren Steuerelements, einschließlich des Handles und aller sichtbaren untergeordneten Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="8426f-691">Forces the creation of the visible control, including the creation of the handle and any visible child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-692">Die <xref:System.Windows.Forms.Control.CreateControl%2A> -Methode erzwingt, dass ein Handle für das Steuerelement und dessen untergeordnete Steuerelemente erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-692">The <xref:System.Windows.Forms.Control.CreateControl%2A> method forces a handle to be created for the control and its child controls.</span></span> <span data-ttu-id="8426f-693">Diese Methode wird verwendet, wenn Sie ein Handle direkt für die Bearbeitung des Steuer Elements oder seiner untergeordneten Elemente benötigen. durch einfaches Aufrufen des Konstruktors eines Steuer Elements wird das nicht erstellt <xref:System.Windows.Forms.Control.Handle%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-693">This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <xref:System.Windows.Forms.Control.Handle%2A>.</span></span>  
  
 <span data-ttu-id="8426f-694"><xref:System.Windows.Forms.Control.CreateControl%2A>erstellt kein Steuerelement handle, wenn die-Eigenschaft des-Steuer Elements <xref:System.Windows.Forms.Control.Visible%2A> ist `false` .</span><span class="sxs-lookup"><span data-stu-id="8426f-694"><xref:System.Windows.Forms.Control.CreateControl%2A> does not create a control handle if the control's <xref:System.Windows.Forms.Control.Visible%2A> property is `false`.</span></span> <span data-ttu-id="8426f-695">Sie können entweder die- <xref:System.Windows.Forms.Control.CreateHandle%2A> Methode aufrufen oder auf die- <xref:System.Windows.Forms.Control.Handle%2A> Eigenschaft zugreifen, um das Handle des Steuer Elements unabhängig von der Sichtbarkeit des Steuer Elements zu erstellen. in diesem Fall werden jedoch keine Fenster Handles für die untergeordneten Elemente des Steuer Elements erstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-695">You can either call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method or access the <xref:System.Windows.Forms.Control.Handle%2A> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection&#xA;override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="control.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-696">Erstellt eine neue Instanz der Steuerelementauflistung für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-696">Creates a new instance of the control collection for the control.</span></span></summary>
        <returns><span data-ttu-id="8426f-697">Eine neue Instanz der dem Steuerelement zugewiesenen <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-697">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-698">Die Basisklassen Version dieser Methode sollte nicht von einer abgeleiteten Klasse aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-698">The base class version of this method should not be called by a derived class.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public bool Created { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Created" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Created" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Created As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Created { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Created : bool" Usage="System.Windows.Forms.Control.Created" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-699">Ruft einen Wert ab, der angibt, ob das Steuerelement erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-699">Gets a value indicating whether the control has been created.</span></span></summary>
        <value><span data-ttu-id="8426f-700"><see langword="true" />, wenn das Steuerelement erstellt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-700"><see langword="true" /> if the control has been created; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-701">Die- <xref:System.Windows.Forms.Control.Created%2A> Eigenschaft gibt zurück, `true` Wenn der <xref:System.Windows.Forms.Control> erfolgreich erstellt wurde, obwohl das Handle des Steuer Elements möglicherweise noch nicht erstellt oder neu erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-701">The <xref:System.Windows.Forms.Control.Created%2A> property returns `true` if the <xref:System.Windows.Forms.Control> was successfully created even though the control's handle might not have been created or recreated yet.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.OnCreateControl" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="CreateGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateGraphics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateGraphics () As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateGraphics();" />
      <MemberSignature Language="F#" Value="member this.CreateGraphics : unit -&gt; System.Drawing.Graphics" Usage="control.CreateGraphics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-702">Erstellt die <see cref="T:System.Drawing.Graphics" /> für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-702">Creates the <see cref="T:System.Drawing.Graphics" /> for the control.</span></span></summary>
        <returns><span data-ttu-id="8426f-703">Das <see cref="T:System.Drawing.Graphics" /> für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-703">The <see cref="T:System.Drawing.Graphics" /> for the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-704">Das <xref:System.Drawing.Graphics> Objekt, das Sie über die- <xref:System.Windows.Forms.Control.CreateGraphics%2A> Methode abrufen, sollte normalerweise nicht beibehalten werden, nachdem die aktuelle Windows-Nachricht verarbeitet wurde, da alles, was mit diesem Objekt gezeichnet wird, mit der nächsten WM_PAINT Meldung gelöscht wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-704">The <xref:System.Drawing.Graphics> object that you retrieve through the <xref:System.Windows.Forms.Control.CreateGraphics%2A> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message.</span></span> <span data-ttu-id="8426f-705">Daher ist es nicht möglich <xref:System.Drawing.Graphics> , das Objekt für die Wiederverwendung zwischenzuspeichern, außer um nicht visuelle Methoden wie zu verwenden <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8426f-705">Therefore you cannot cache the <xref:System.Drawing.Graphics> object for reuse, except to use non-visual methods like <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8426f-706">Stattdessen müssen Sie <xref:System.Windows.Forms.Control.CreateGraphics%2A> jedes Mal aufgerufen werden <xref:System.Drawing.Graphics> , wenn Sie das-Objekt verwenden möchten, und dann nach der Verwendung des-Objekts aufzurufen <xref:System.Drawing.Graphics.Dispose%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-706">Instead, you must call <xref:System.Windows.Forms.Control.CreateGraphics%2A> every time that you want to use the <xref:System.Drawing.Graphics> object, and then call <xref:System.Drawing.Graphics.Dispose%2A> when you are finished using it.</span></span> <span data-ttu-id="8426f-707">Weitere Informationen zu Windows-Meldungen finden Sie unter <xref:System.Windows.Forms.Control.WndProc%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-707">For more information about Windows messages, see <xref:System.Windows.Forms.Control.WndProc%2A>.</span></span>  
  
 <span data-ttu-id="8426f-708"><xref:System.Windows.Forms.Control.CreateGraphics%2A>Legt den Besitz auf den aufrufenden Thread fest und schlägt fehl, wenn er für andere Threads aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-708">By design, <xref:System.Windows.Forms.Control.CreateGraphics%2A> sets ownership to the calling thread, and fails if it is called on other threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-709">Zusätzlich zur- <xref:System.Windows.Forms.Control.InvokeRequired%2A> Eigenschaft gibt es vier Methoden auf einem-Steuerelement, die Thread sicher sind: <xref:System.Windows.Forms.Control.Invoke%2A> , <xref:System.Windows.Forms.Control.BeginInvoke%2A> , und, <xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.CreateGraphics%2A> Wenn das Handle für das Steuerelement bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-709">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="8426f-710">Wenn aufgerufen wird, <xref:System.Windows.Forms.Control.CreateGraphics%2A> bevor das Handle des Steuer Elements in einem Hintergrund Thread erstellt wurde, kann dies zu ungültigen Thread übergreifenden aufrufen führen.</span><span class="sxs-lookup"><span data-stu-id="8426f-710">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="8426f-711">Für alle anderen Methodenaufrufe sollten Sie eine der Aufruf Methoden verwenden, um den Aufruf an den Thread des Steuer Elements zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="8426f-711">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-712">Im folgenden Codebeispiel wird die Größe des angegebenen Steuer Elements geändert, sodass das Steuerelement seinen formatierten Text aufnehmen kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-712">The following code example resizes the specified control so the control will accommodate its formatted text.</span></span> <span data-ttu-id="8426f-713">Der formatierte Text ist die <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft, der das Steuerelement zugewiesen ist <xref:System.Windows.Forms.Control.Font%2A> , das auf den Text angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-713">The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text.</span></span> <span data-ttu-id="8426f-714">Die- `AutoSizeControl` Methode in diesem Beispiel verfügt auch über einen- `textPadding` Parameter, der die Auffüll Zeichen darstellt, die auf alle Ränder des Steuer Elements angewendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-714">The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control.</span></span> <span data-ttu-id="8426f-715">Damit die Auffüll Zeichen gleich sind, richten Sie den Text mit dem `MiddleCenter` Wert von aus, <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType> Wenn das Steuerelement ihn unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8426f-715">To make the padding appear equal, align the text with the `MiddleCenter` value of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType> if your control supports it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]
 [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]
 [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected virtual void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateHandle : unit -&gt; unit&#xA;override this.CreateHandle : unit -&gt; unit" Usage="control.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-716">Erstellt ein Handle für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-716">Creates a handle for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-717">Sie sollten die-Methode in der Regel nicht direkt aufzurufen <xref:System.Windows.Forms.Control.CreateHandle%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-717">You typically should not call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method directly.</span></span> <span data-ttu-id="8426f-718">Die bevorzugte Methode besteht darin, die-Methode aufzurufen <xref:System.Windows.Forms.Control.CreateControl%2A> , die erzwingt, dass ein Handle für das Steuerelement und dessen untergeordnete Steuerelemente erstellt wird, wenn das Steuerelement erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-718">The preferred method is to call the <xref:System.Windows.Forms.Control.CreateControl%2A> method, which forces a handle to be created for the control and its child controls when the control is created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8426f-719">Das Objekt befindet sich in freigegebenem Zustand.</span><span class="sxs-lookup"><span data-stu-id="8426f-719">The object is in a disposed state.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-720">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.CreateHandle" /> in einer abgeleiteten Klasse sicher, dass die-Methode der Basisklasse aufgerufen wird, <see cref="M:System.Windows.Forms.Control.CreateHandle" /> um sicherzustellen, dass das Handle erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-720">When overriding <see cref="M:System.Windows.Forms.Control.CreateHandle" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.CreateHandle" /> method to ensure that the handle is created.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Control.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-721">Ruft die benötigten Erstellungsparameter ab, wenn das Steuerelementhandle erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-721">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="8426f-722">Eine <see cref="T:System.Windows.Forms.CreateParams" />-Eigenschaft, die die erforderlichen Erstellungsparameter enthält, wenn das Handle für das Steuerelement erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-722">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-723">Die <xref:System.Windows.Forms.Control.CreateParams%2A> -Eigenschaft sollte nicht überschrieben und verwendet werden, um die Eigenschaften des abgeleiteten Steuer Elements anzupassen.</span><span class="sxs-lookup"><span data-stu-id="8426f-723">The <xref:System.Windows.Forms.Control.CreateParams%2A> property should not be overridden and used to adjust the properties of your derived control.</span></span> <span data-ttu-id="8426f-724">Eigenschaften wie, <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType> sollten durch die entsprechenden Eigenschaften im Steuerelement festgelegt werden, z. b <xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType> . und <xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8426f-724">Properties such as the <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType> should be set by the corresponding properties in your control such as <xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8426f-725"><xref:System.Windows.Forms.CreateParams>Sollte nur erweitert werden, wenn Sie eine standardmäßige Windows-Steuerelement Klasse umwickeln oder Stile festlegen, die nicht vom Windows Forms-Namespace bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-725">The <xref:System.Windows.Forms.CreateParams> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace.</span></span> <span data-ttu-id="8426f-726">Weitere Informationen zum Erstellen von Steuerelement Parametern finden Sie in den `CreateWindow` `CreateWindowEx` Funktionen und und in der Dokumentation [zur](/windows/win32/api/winuser/ns-winuser-createstructa) Struktur der Struktur.</span><span class="sxs-lookup"><span data-stu-id="8426f-726">For more information about creating control parameters, see the `CreateWindow` and `CreateWindowEx` functions and the [CREATESTRUCT](/windows/win32/api/winuser/ns-winuser-createstructa) structure documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-727">Im folgenden Codebeispiel wird die- <xref:System.Windows.Forms.Control.CreateParams%2A> Eigenschaft einer <xref:System.Windows.Forms.Button> abgeleiteten Klasse erweitert.</span><span class="sxs-lookup"><span data-stu-id="8426f-727">The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class.</span></span> <span data-ttu-id="8426f-728">Die- <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> Eigenschaft wird geändert, was bewirkt, dass die Schaltfläche <xref:System.Drawing.Icon> anstelle eines anzeigt <xref:System.Drawing.Image> .</span><span class="sxs-lookup"><span data-stu-id="8426f-728">The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="8426f-729">Für dieses Beispiel ist es erforderlich, dass Sie über eine Klasse verfügen, die von der-Klasse erbt <xref:System.Windows.Forms.Button> .</span><span class="sxs-lookup"><span data-stu-id="8426f-729">This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.</span></span>  
  
 [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-730">Wenn Sie die <see cref="P:System.Windows.Forms.Control.CreateParams" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.CreateParams" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-730">When overriding the <see cref="P:System.Windows.Forms.Control.CreateParams" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.CreateParams" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-731">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-731">Otherwise, you must provide all the implementation.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.Control.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.AmbientValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.AmbientValue(null)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-732">Ruft den Cursor ab, der angezeigt wird, wenn sich der Mauszeiger über dem Steuerelement befindet, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-732">Gets or sets the cursor that is displayed when the mouse pointer is over the control.</span></span></summary>
        <value><span data-ttu-id="8426f-733">Ein <see cref="T:System.Windows.Forms.Cursor" />, der den Cursor darstellt, der angezeigt wird, wenn sich der Mauszeiger über dem Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-733">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor to display when the mouse pointer is over the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-734">Weisen <xref:System.Windows.Forms.Cursor> Sie der- <xref:System.Windows.Forms.Control.Cursor%2A> Eigenschaft des Steuer Elements einen zu, um den Cursor zu ändern, der angezeigt wird, wenn sich der Mauszeiger über dem Steuerelement</span><span class="sxs-lookup"><span data-stu-id="8426f-734">Assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control to change the cursor displayed when the mouse pointer is over the control.</span></span> <span data-ttu-id="8426f-735">Legen Sie die-Eigenschaft fest, um den Mauszeiger für alle Steuerelemente in der Anwendung vorübergehend zu ändern <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8426f-735">To temporarily change the mouse cursor for all controls on your application set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8426f-736">Normalerweise würden Sie die- <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> Eigenschaft auf einen Warte Cursor festlegen, wenn Sie ein Auffüllen <xref:System.Windows.Forms.ComboBox> oder eine Datei speichern oder laden.</span><span class="sxs-lookup"><span data-stu-id="8426f-736">Typically you would set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> property to a wait cursor when populating a <xref:System.Windows.Forms.ComboBox> or saving or loading a file.</span></span>  
  
 <span data-ttu-id="8426f-737">Die- <xref:System.Windows.Forms.Control.Cursor%2A> Eigenschaft ist eine Ambient-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-737">The <xref:System.Windows.Forms.Control.Cursor%2A> property is an ambient property.</span></span> <span data-ttu-id="8426f-738">Eine Ambient-Eigenschaft ist eine Steuerelement Eigenschaft, die, wenn Sie nicht festgelegt ist, vom übergeordneten Steuerelement abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-738">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="8426f-739">Beispielsweise hat ein <xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Control.BackColor%2A> standardmäßig dasselbe wie das übergeordnete Element <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-739">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="8426f-740">Weitere Informationen zu Ambient-Eigenschaften finden Sie unter der- <xref:System.Windows.Forms.AmbientProperties> Klasse oder der- <xref:System.Windows.Forms.Control> Klassen Übersicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-740">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-741">Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.ComboBox> mit den verfügbaren logischen Laufwerken des Benutzers gefüllt.</span><span class="sxs-lookup"><span data-stu-id="8426f-741">The following code example fills a <xref:System.Windows.Forms.ComboBox> with the user's available logical drives.</span></span> <span data-ttu-id="8426f-742">Im Beispiel wird auch die-Eigenschaft des Kombinations Felds festgelegt, <xref:System.Windows.Forms.Cursor> sodass der <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType> Cursor angezeigt wird, wenn sich der Mauszeiger über der Dropdown Schaltfläche befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-742">The example also sets the combo box's <xref:System.Windows.Forms.Cursor> property so the <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType> cursor is displayed when the mouse pointer is over the drop-down button.</span></span> <span data-ttu-id="8426f-743">Für diesen Code ist es erforderlich, dass <xref:System.Windows.Forms.Form> über ein mit einem verfügt <xref:System.Windows.Forms.ComboBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-743">This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ComboBox> on it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-744">Wenn Sie die <see cref="P:System.Windows.Forms.Control.Cursor" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.Cursor" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-744">When overriding the <see cref="P:System.Windows.Forms.Control.Cursor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Cursor" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-745">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-745">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-746">Sie müssen nicht sowohl die <see langword="get" /> -Methode als auch die- <see langword="set" /> Methode der-Eigenschaft überschreiben <see cref="P:System.Windows.Forms.Control.Cursor" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-746">You are not required to override both the <see langword="get" /> and <see langword="set" /> methods of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursors" />
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.CursorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CursorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CursorChanged;" />
      <MemberSignature Language="F#" Value="member this.CursorChanged : EventHandler " Usage="member this.CursorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-747">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.Control.Cursor" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-747">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-748">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.Cursor%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-748">This event is raised if the <xref:System.Windows.Forms.Control.Cursor%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-749">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-749">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-750">Das folgende Codebeispiel veranschaulicht das Ändern des Mauszeigers mithilfe der <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> -Eigenschaft, der <xref:System.Windows.Forms.Cursor> -Klasse und der- <xref:System.Windows.Forms.Cursors> Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-750">The following code example demonstrates changing the mouse cursor using the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Forms.Cursor> class, and the <xref:System.Windows.Forms.Cursors> class.</span></span> <span data-ttu-id="8426f-751">Im Beispiel wird ein Formular erstellt, das ein <xref:System.Windows.Forms.ComboBox> -Steuerelement, ein <xref:System.Windows.Forms.Panel> -Steuerelement und ein-Steuerelement enthält <xref:System.Windows.Forms.ListView> .</span><span class="sxs-lookup"><span data-stu-id="8426f-751">The example creates a form that contains a <xref:System.Windows.Forms.ComboBox> control, a <xref:System.Windows.Forms.Panel> control, and a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="8426f-752">Der <xref:System.Windows.Forms.ComboBox> enthält alle von der-Klasse bereitgestellten Cursor <xref:System.Windows.Forms.Cursors> .</span><span class="sxs-lookup"><span data-stu-id="8426f-752">The <xref:System.Windows.Forms.ComboBox> contains all cursors provided by the <xref:System.Windows.Forms.Cursors> class.</span></span> <span data-ttu-id="8426f-753">Wenn der Benutzer einen Mauszeiger in der <xref:System.Windows.Forms.ComboBox> <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> auswählt, wird die-Eigenschaft auf den ausgewählten Cursor festgelegt, der den Cursor für den aktualisiert <xref:System.Windows.Forms.Panel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-753">When the user selects a mouse cursor in the <xref:System.Windows.Forms.ComboBox>, the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> property is set to the selected cursor, which updates the cursor for the <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="8426f-754"><xref:System.Windows.Forms.ListView>Wird jedes Mal aktualisiert, wenn das <xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType> Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="8426f-754">The <xref:System.Windows.Forms.ListView> is updated every time the <xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType> event occurs.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursors#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CPP/cursorexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CS/cursorexample.cs#1)]
 [!code-vb[System.Windows.Forms.Cursors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursors/VB/cursorexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ControlBindingsCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As ControlBindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ControlBindingsCollection ^ DataBindings { System::Windows::Forms::ControlBindingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Windows.Forms.ControlBindingsCollection" Usage="System.Windows.Forms.Control.DataBindings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">P:System.Windows.Forms.IBindableComponent.DataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.ParenthesizePropertyName(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.ParenthesizePropertyName(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlBindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-755">Ruft die Datenbindungen für das Steuerelement ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-755">Gets the data bindings for the control.</span></span></summary>
        <value><span data-ttu-id="8426f-756">Eine <see cref="T:System.Windows.Forms.ControlBindingsCollection" />, die die <see cref="T:System.Windows.Forms.Binding" />-Objekte für das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-756">A <see cref="T:System.Windows.Forms.ControlBindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects for the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-757">Verwenden Sie die- <xref:System.Windows.Forms.Control.DataBindings%2A> Eigenschaft, um auf zuzugreifen <xref:System.Windows.Forms.ControlBindingsCollection> .</span><span class="sxs-lookup"><span data-stu-id="8426f-757">Use the <xref:System.Windows.Forms.Control.DataBindings%2A> property to access the <xref:System.Windows.Forms.ControlBindingsCollection>.</span></span> <span data-ttu-id="8426f-758">Indem <xref:System.Windows.Forms.Binding> Sie der Auflistung Objekte hinzufügen, können Sie jede Eigenschaft eines-Steuer Elements an die-Eigenschaft eines-Objekts binden.</span><span class="sxs-lookup"><span data-stu-id="8426f-758">By adding <xref:System.Windows.Forms.Binding> objects to the collection, you can bind any property of a control to the property of an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-759">Im folgenden Codebeispiel werden <xref:System.Windows.Forms.Binding> -Objekte der <xref:System.Windows.Forms.ControlBindingsCollection> von fünf Steuerelementen hinzugefügt: vier <xref:System.Windows.Forms.TextBox> -Steuerelemente und ein- <xref:System.Windows.Forms.DateTimePicker> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-759">The following code example adds <xref:System.Windows.Forms.Binding> objects to the <xref:System.Windows.Forms.ControlBindingsCollection> of five controls: four <xref:System.Windows.Forms.TextBox> controls and a <xref:System.Windows.Forms.DateTimePicker> control.</span></span> <span data-ttu-id="8426f-760">Der Zugriff auf die <xref:System.Windows.Forms.ControlBindingsCollection> erfolgt über die <xref:System.Windows.Forms.Control.DataBindings%2A>-Eigenschaft der <xref:System.Windows.Forms.Control>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-760">The <xref:System.Windows.Forms.ControlBindingsCollection> is accessed through the <xref:System.Windows.Forms.Control.DataBindings%2A> property of the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Classic Control.DataBindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.DataBindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CS/source.cs#1)]
 [!code-vb[Classic Control.DataBindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.DataBindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="DefaultBackColor">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DefaultBackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color DefaultBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color DefaultBackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBackColor : System.Drawing.Color" Usage="System.Windows.Forms.Control.DefaultBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-761">Ruft die Standardhintergrundfarbe des Steuerelements ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-761">Gets the default background color of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-762">Die Standardhintergrund-<see cref="T:System.Drawing.Color" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-762">The default background <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="8426f-763">Der Standardwert ist <see cref="P:System.Drawing.SystemColors.Control" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-763">The default is <see cref="P:System.Drawing.SystemColors.Control" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-764">Dies ist der Standard <xref:System.Windows.Forms.Control.BackColor%2A> Eigenschafts Wert eines generischen Steuer Elements auf oberster Ebene.</span><span class="sxs-lookup"><span data-stu-id="8426f-764">This is the default <xref:System.Windows.Forms.Control.BackColor%2A> property value of a generic top-level control.</span></span> <span data-ttu-id="8426f-765">Abgeleitete Klassen können unterschiedliche Standardwerte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="8426f-765">Derived classes can have different defaults.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-766">Im folgenden Codebeispiel wird veranschaulicht, wie die Member <xref:System.Windows.Forms.Control.DefaultBackColor%2A> , und verwendet werden <xref:System.Windows.Forms.Control.DefaultFont%2A> <xref:System.Windows.Forms.Control.DefaultForeColor%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-766">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="8426f-767">Fügen Sie den folgenden Code in ein Formular mit dem Namen ListBox1 ein, um das Beispiel auszuführen <xref:System.Windows.Forms.ListBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-767">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="8426f-768">Ruft die `Populate_ListBox` -Methode im Konstruktor des Formulars oder der <xref:System.Windows.Forms.Form.Load> Ereignis Behandlungsmethode auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-768">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.Control.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-769">Ruft den Standardcursor für das Steuerelement ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-769">Gets or sets the default cursor for the control.</span></span></summary>
        <value><span data-ttu-id="8426f-770">Ein Objekt vom Typ <see cref="T:System.Windows.Forms.Cursor" />, das den aktuellen Standardcursor darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-770">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-771"><xref:System.Windows.Forms.Control.DefaultCursor%2A>Überschreiben Sie, um einen Standard Cursor für das Steuerelement zu konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-771">Override <xref:System.Windows.Forms.Control.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="8426f-772">Dies ist effizienter als das Festlegen des Cursors im Konstruktor des Steuer Elements und ermöglicht die automatische Unterstützung bestimmter Cursor bezogener Designer Funktionen.</span><span class="sxs-lookup"><span data-stu-id="8426f-772">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font DefaultFont { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Font DefaultFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultFont" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Font ^ DefaultFont { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFont : System.Drawing.Font" Usage="System.Windows.Forms.Control.DefaultFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-773">Ruft die Standardschriftart des Steuerelements ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-773">Gets the default font of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-774">Die Standard-<see cref="T:System.Drawing.Font" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-774">The default <see cref="T:System.Drawing.Font" /> of the control.</span></span> <span data-ttu-id="8426f-775">Der zurückgegebene Wert variiert je nach Betriebssystem des Benutzers und lokaler Kultureinstellung des Systems.</span><span class="sxs-lookup"><span data-stu-id="8426f-775">The value returned will vary depending on the user's operating system the local culture setting of their system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-776">In der folgenden Tabelle wird der von zurückgegebene Wert <xref:System.Windows.Forms.Control.DefaultFont%2A> abhängig vom Betriebssystem und der lokalen Kultur beschrieben.</span><span class="sxs-lookup"><span data-stu-id="8426f-776">The following table describes the value returned by <xref:System.Windows.Forms.Control.DefaultFont%2A> depending on the operating system and local culture.</span></span>  
  
|<span data-ttu-id="8426f-777">System/und oder Kultur</span><span class="sxs-lookup"><span data-stu-id="8426f-777">System/and or Culture</span></span>|<span data-ttu-id="8426f-778">Schriftart</span><span class="sxs-lookup"><span data-stu-id="8426f-778">Font</span></span>|  
|----------------------------|----------|  
|<span data-ttu-id="8426f-779">Windows NT 4X, japanische Version</span><span class="sxs-lookup"><span data-stu-id="8426f-779">Windows NT 4x, Japanese version</span></span>|<span data-ttu-id="8426f-780">MS UI Gothic, 9 Point.</span><span class="sxs-lookup"><span data-stu-id="8426f-780">MS UI Gothic, 9 point.</span></span>|  
|<span data-ttu-id="8426f-781">Arabische Fenster</span><span class="sxs-lookup"><span data-stu-id="8426f-781">Arabic Windows</span></span>|<span data-ttu-id="8426f-782">Tahoma, 8 Punkt.</span><span class="sxs-lookup"><span data-stu-id="8426f-782">Tahoma, 8 point.</span></span>|  
|<span data-ttu-id="8426f-783">Anderes Betriebssystem/Kultur</span><span class="sxs-lookup"><span data-stu-id="8426f-783">Other operating system/culture</span></span>|<span data-ttu-id="8426f-784">Logische Schriftart der MS Shell Dlg, normalerweise Microsoft San Serif 8 Point.</span><span class="sxs-lookup"><span data-stu-id="8426f-784">MS Shell Dlg logical font, typically Microsoft San Serif 8 point.</span></span>|  
  
 <span data-ttu-id="8426f-785">MS Shell Dlg ist einem Schriftart Satz in der Systemregistrierung zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="8426f-785">MS Shell Dlg maps to a font set in the system registry.</span></span>  
  
 <span data-ttu-id="8426f-786">Wenn die vorherigen Schriftarten nicht installiert sind, ist die Standard Schriftart Tahoma, 8 Point.</span><span class="sxs-lookup"><span data-stu-id="8426f-786">If the previous fonts are not installed, the default font is Tahoma, 8 point.</span></span> <span data-ttu-id="8426f-787">Wenn Tahoma, 8 Point, nicht installiert ist, wird <xref:System.Windows.Forms.Control.DefaultFont%2A> der Wert der Eigenschaft zurückgegeben. <xref:System.Drawing.FontFamily.GenericSansSerif%2A></span><span class="sxs-lookup"><span data-stu-id="8426f-787">If Tahoma, 8 point, is not installed, <xref:System.Windows.Forms.Control.DefaultFont%2A> returns the value of the <xref:System.Drawing.FontFamily.GenericSansSerif%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-788">Im folgenden Codebeispiel wird veranschaulicht, wie die Member <xref:System.Windows.Forms.Control.DefaultBackColor%2A> , und verwendet werden <xref:System.Windows.Forms.Control.DefaultFont%2A> <xref:System.Windows.Forms.Control.DefaultForeColor%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-788">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="8426f-789">Fügen Sie den folgenden Code in ein Formular mit dem Namen ListBox1 ein, um das Beispiel auszuführen <xref:System.Windows.Forms.ListBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-789">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="8426f-790">Ruft die `Populate_ListBox` -Methode im Konstruktor des Formulars oder der <xref:System.Windows.Forms.Form.Load> Ereignis Behandlungsmethode auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-790">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8426f-791">Die Standardschriftart oder alternative regionale Schriftarten sind nicht auf dem Clientcomputer installiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-791">The default font or the regional alternative fonts are not installed on the client computer.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="DefaultForeColor">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DefaultForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color DefaultForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color DefaultForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultForeColor : System.Drawing.Color" Usage="System.Windows.Forms.Control.DefaultForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-792">Ruft die Standardvordergrundfarbe des Steuerelements ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-792">Gets the default foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-793">Die standardmäßige Vordergrund-<see cref="T:System.Drawing.Color" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-793">The default foreground <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="8426f-794">Der Standardwert ist <see cref="P:System.Drawing.SystemColors.ControlText" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-794">The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-795">Dies ist der Standard <xref:System.Windows.Forms.Control.ForeColor%2A> Eigenschafts Wert eines nicht übergeordneten Steuer Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-795">This is the default <xref:System.Windows.Forms.Control.ForeColor%2A> property value of a nonparented control.</span></span> <span data-ttu-id="8426f-796">Abgeleitete Klassen können unterschiedliche Standardwerte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="8426f-796">Derived classes can have different defaults.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-797">Im folgenden Codebeispiel wird veranschaulicht, wie die Member <xref:System.Windows.Forms.Control.DefaultBackColor%2A> , und verwendet werden <xref:System.Windows.Forms.Control.DefaultFont%2A> <xref:System.Windows.Forms.Control.DefaultForeColor%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-797">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="8426f-798">Fügen Sie den folgenden Code in ein Formular mit dem Namen ListBox1 ein, um das Beispiel auszuführen <xref:System.Windows.Forms.ListBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-798">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="8426f-799">Ruft die `Populate_ListBox` -Methode im Konstruktor des Formulars oder der <xref:System.Windows.Forms.Form.Load> Ereignis Behandlungsmethode auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-799">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Control.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-800">Ruft den von dem Steuerelement unterstützten Standard-IME-Modus (Eingabemethoden-Editor) ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-800">Gets the default Input Method Editor (IME) mode supported by the control.</span></span></summary>
        <value><span data-ttu-id="8426f-801">Einer der <see cref="T:System.Windows.Forms.ImeMode" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-801">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-802">Ein Eingabemethoden-Editor (Input Method Editor, IME) ist ein Programm, mit dem Benutzer komplexe Zeichen und Symbole, wie z. b. japanische Kanji-Zeichen, mithilfe einer Standardtastatur eingeben können.</span><span class="sxs-lookup"><span data-stu-id="8426f-802">An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="8426f-803">Wie in der- <xref:System.Windows.Forms.Control> Klasse implementiert, gibt diese Eigenschaft immer den- <xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType> Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-803">As implemented in the <xref:System.Windows.Forms.Control> class, this property always returns the <xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="8426f-804">Der <xref:System.Windows.Forms.ImeMode.Inherit> Wert gibt an, dass der IME-Modus vom übergeordneten Steuerelement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-804">The <xref:System.Windows.Forms.ImeMode.Inherit> value specifies that the IME mode is inherited from the parent control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-805">Im folgenden Codebeispiel wird die- <xref:System.Windows.Forms.Control.DefaultImeMode%2A> Eigenschaft überschrieben, um den Eingabemethoden-Editor zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-805">The following code example overrides the <xref:System.Windows.Forms.Control.DefaultImeMode%2A> property to turn off the Input Method Editor.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#4)]
 [!code-csharp[Windows.Forms.Control Properties2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#4)]
 [!code-vb[Windows.Forms.Control Properties2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-806">Wenn Sie die <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-806">When overriding the <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-807">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-807">Otherwise, you must provide all the implementation.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.Control.DefaultMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-808">Ruft den als Standardwert angegebenen Leerraum zwischen Steuerelementen in Pixel ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-808">Gets the space, in pixels, that is specified by default between controls.</span></span></summary>
        <value><span data-ttu-id="8426f-809">Ein <see cref="T:System.Windows.Forms.Padding" />, das den Standardzwischenraum zwischen Steuerelementen darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-809">A <see cref="T:System.Windows.Forms.Padding" /> that represents the default space between controls.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultMaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultMaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMaximumSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultMaximumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaximumSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultMaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-810">Ruft die Länge und die Höhe in Pixel ab, die als die maximale Standardgröße eines Steuerelements angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-810">Gets the length and height, in pixels, that is specified as the default maximum size of a control.</span></span></summary>
        <value><span data-ttu-id="8426f-811">Eine <see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" />-Struktur, die die Größe des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-811">A <see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> representing the size of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMinimumSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultMinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultMinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMinimumSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultMinimumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMinimumSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultMinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-812">Ruft die Länge und die Höhe in Pixel ab, die als die minimale Standardgröße eines Steuerelements angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-812">Gets the length and height, in pixels, that is specified as the default minimum size of a control.</span></span></summary>
        <value><span data-ttu-id="8426f-813">Eine <see cref="T:System.Drawing.Size" />-Struktur, die die Größe des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-813">A <see cref="T:System.Drawing.Size" /> representing the size of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultPadding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultPadding As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultPadding { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPadding : System.Windows.Forms.Padding" Usage="System.Windows.Forms.Control.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-814">Ruft den internen Abstand des Inhalts eines Steuerelements in Pixel ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-814">Gets the internal spacing, in pixels, of the contents of a control.</span></span></summary>
        <value><span data-ttu-id="8426f-815">Ein <see cref="T:System.Windows.Forms.Padding" />-Objekt, das den internen Abstand des Inhalts eines Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-815">A <see cref="T:System.Windows.Forms.Padding" /> that represents the internal spacing of the contents of a control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-816">Ruft die Standardgröße des Steuerelements ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-816">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-817">Die Standard-<see cref="T:System.Drawing.Size" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-817">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-818">Die- <xref:System.Windows.Forms.Control.DefaultSize%2A> Eigenschaft stellt den des-Steuer Elements dar, <xref:System.Drawing.Size> Wenn es erstmalig erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-818">The <xref:System.Windows.Forms.Control.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created.</span></span> <span data-ttu-id="8426f-819">Sie können die Größe des Steuer Elements anpassen, indem Sie dessen <xref:System.Windows.Forms.Control.Size%2A> Eigenschafts Wert festlegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-819">You can adjust the size of the control by setting its <xref:System.Windows.Forms.Control.Size%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-820">Um eine bessere Leistung zu gewährleisten, legen Sie die <xref:System.Drawing.Size> eines-Steuer Elements im Konstruktor nicht fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-820">To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="8426f-821">Die bevorzugte Methode besteht darin, die-Eigenschaft zu überschreiben <xref:System.Windows.Forms.Control.DefaultSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-821">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-822">Auf Windows Server 2003-Systemen wird die Größe eines <xref:System.Windows.Forms.Form> durch die maximale Pixel Breite und Höhe des Monitors eingeschränkt.</span><span class="sxs-lookup"><span data-stu-id="8426f-822">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-823">Im folgenden Codebeispiel <xref:System.Windows.Forms.Control.DefaultSize%2A> wird die-Eigenschaft überschrieben, und die Standardgröße des Formulars ist 500 Pixel quadratisch.</span><span class="sxs-lookup"><span data-stu-id="8426f-823">The following code example overrides the <xref:System.Windows.Forms.Control.DefaultSize%2A> property, and makes the default size of the form 500 pixels square.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-824">Wenn Sie die <see cref="P:System.Windows.Forms.Control.DefaultSize" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, empfiehlt es sich, ein <see cref="T:System.Drawing.Size" /> mit den gewünschten Dimensionen zurückzugeben, statt die gesamte Implementierung zu überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-824">When overriding the <see cref="P:System.Windows.Forms.Control.DefaultSize" /> property in a derived class, it is preferable to return a <see cref="T:System.Drawing.Size" /> with the desired dimensions rather than to override all the implementation.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="T:System.Drawing.Size" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected virtual void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member DefWndProc : Message -&gt; unit&#xA;override this.DefWndProc : Message -&gt; unit" Usage="control.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="8426f-825">Die zu verarbeitende Windows-<see cref="T:System.Windows.Forms.Message" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-825">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="8426f-826">Sendet die angegebene Meldung an die Standardfensterprozedur.</span><span class="sxs-lookup"><span data-stu-id="8426f-826">Sends the specified message to the default window procedure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-827">Weitere Informationen zum Verarbeiten von Windows-Meldungen finden Sie unter der [WindowProc-Funktion](https://go.microsoft.com/fwlink/?LinkId=181565).</span><span class="sxs-lookup"><span data-stu-id="8426f-827">For more information about processing Windows messages, see the [WindowProc function](https://go.microsoft.com/fwlink/?LinkId=181565).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="protected virtual void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DestroyHandle();" />
      <MemberSignature Language="F#" Value="abstract member DestroyHandle : unit -&gt; unit&#xA;override this.DestroyHandle : unit -&gt; unit" Usage="control.DestroyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-828">Zerstört das mit dem Steuerelement verknüpfte Handle.</span><span class="sxs-lookup"><span data-stu-id="8426f-828">Destroys the handle associated with the control.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-829">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> in einer abgeleiteten Klasse sicher, dass die-Methode der Basisklasse aufgerufen wird, <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> um sicherzustellen, dass das Handle zerstört wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-829">When overriding <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> method to ensure that the handle is destroyed.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="DeviceDpi">
      <MemberSignature Language="C#" Value="public int DeviceDpi { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DeviceDpi" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DeviceDpi" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeviceDpi As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DeviceDpi { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceDpi : int" Usage="System.Windows.Forms.Control.DeviceDpi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-830">Ruft den DPI-Wert für das Anzeigegerät ab, auf dem das Steuerelement aktuell angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-830">Gets the DPI value for the display device where the control is currently being displayed.</span></span></summary>
        <value><span data-ttu-id="8426f-831">Der DPI-Wert des Anzeigegeräts.</span><span class="sxs-lookup"><span data-stu-id="8426f-831">The DPI value of the display device.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRectangle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle DisplayRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DisplayRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DisplayRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle DisplayRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.Control.DisplayRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-832">Ruft das Rechteck ab, das den Anzeigebereich des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-832">Gets the rectangle that represents the display area of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-833">Ein <see cref="T:System.Drawing.Rectangle" />, das den Anzeigebereich des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-833">A <see cref="T:System.Drawing.Rectangle" /> that represents the display area of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-834">Die- <xref:System.Windows.Forms.Control.DisplayRectangle%2A> Eigenschaft gibt das Client Rechteck des Anzeige Bereichs des-Steuer Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-834">The <xref:System.Windows.Forms.Control.DisplayRectangle%2A> property returns the client rectangle of the display area of the control.</span></span> <span data-ttu-id="8426f-835">Bei der Basis Steuerelement Klasse ist dies gleich dem Client Rechteck.</span><span class="sxs-lookup"><span data-stu-id="8426f-835">For the base control class, this is equal to the client rectangle.</span></span> <span data-ttu-id="8426f-836">Erbende Steuerelemente können diese jedoch ändern, wenn sich Ihr Client Bereich von Ihrem Anzeigebereich unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="8426f-836">However, inheriting controls might want to change this if their client area differs from their display area.</span></span> <span data-ttu-id="8426f-837">Das Anzeige Rechteck ist das kleinste <xref:System.Drawing.Rectangle> , das ein-Steuerelement einschließt und zum Anordnen von Steuerelementen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-837">The display rectangle is the smallest <xref:System.Drawing.Rectangle> that encloses a control and is used to lay out controls.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-838">Wenn Sie die <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-838">When overriding the <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-839">Alternativ müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-839">Alternatively, you must provide all the implementation.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="control.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8426f-840"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-840"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8426f-841">Gibt die vom <see cref="T:System.Windows.Forms.Control" /> und den untergeordneten Steuerelementen verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="8426f-841">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-842">Diese Methode wird von der öffentlichen `Dispose()` -Methode und der- <xref:System.Object.Finalize%2A> Methode aufgerufen.`Dispose()`</span><span class="sxs-lookup"><span data-stu-id="8426f-842">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.`Dispose()`</span></span> <span data-ttu-id="8426f-843">Ruft die geschützte `Dispose(Boolean)` Methode auf, wobei der- `disposing` Parameter auf festgelegt ist `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-843">invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8426f-844"><xref:System.Object.Finalize%2A>Ruft `Dispose` `disposing` auf, wobei auf gesetzt ist `false` .</span><span class="sxs-lookup"><span data-stu-id="8426f-844"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8426f-845">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Windows.Forms.Control> verweist.</span><span class="sxs-lookup"><span data-stu-id="8426f-845">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Control> references.</span></span> <span data-ttu-id="8426f-846">Diese Methode ruft die `Dispose()`-Methode jedes referenzierten Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-846">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-847">
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-847">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8426f-848">Wenn Sie überschreiben, sollten <see langword="Dispose(Boolean)" /> Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in einem früheren-Aufrufpunkt verworfen wurden <see langword="Dispose" /> .</span><span class="sxs-lookup"><span data-stu-id="8426f-848">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="8426f-849">Weitere Informationen zum Implementieren von finden Sie <see langword="Dispose(Boolean)" /> unter [Implementieren einer](/dotnet/standard/garbage-collection/implementing-dispose)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="8426f-849">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
<span data-ttu-id="8426f-850">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" /> finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged) und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8426f-850">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Disposing">
      <MemberSignature Language="C#" Value="public bool Disposing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Disposing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Disposing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Disposing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Disposing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Disposing : bool" Usage="System.Windows.Forms.Control.Disposing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-851">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Forms.Control" />-Basisklasse gerade freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-851">Gets a value indicating whether the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing.</span></span></summary>
        <value><span data-ttu-id="8426f-852"><see langword="true" />, wenn die <see cref="T:System.Windows.Forms.Control" />-Basisklasse gerade freigegeben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-852"><see langword="true" /> if the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-853">Wenn diese Eigenschaft zurückgegeben wird `true` , <xref:System.Windows.Forms.Control> wird die Basisklasse gerade freigegeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-853">When this property returns `true`, the base <xref:System.Windows.Forms.Control> class is in the process of disposing.</span></span> <span data-ttu-id="8426f-854">Nachdem das Steuerelement verworfen wurde, kann es nicht mehr als gültiges Windows-Steuerelement referenziert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-854">After the control is disposed of, it can no longer be referenced as a valid Windows control.</span></span> <span data-ttu-id="8426f-855">Obwohl die Instanz eines Steuer Elements verworfen wird, wird Sie weiterhin im Arbeitsspeicher beibehalten, bis Sie über Garbage Collection aus dem Arbeitsspeicher entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-855">Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</span></span> <span data-ttu-id="8426f-856">Wenn ein Steuerelement verworfen wird, können Sie die zugehörige-Methode nicht aufzurufen <xref:System.Windows.Forms.Control.RecreateHandle%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-856">When a control is disposed of, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <altmember cref="T:System.GC" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="Dock">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DockStyle Dock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DockStyle Dock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Dock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Dock As DockStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DockStyle Dock { System::Windows::Forms::DockStyle get(); void set(System::Windows::Forms::DockStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Dock : System.Windows.Forms.DockStyle with get, set" Usage="System.Windows.Forms.Control.Dock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DockStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-857">Ruft ab oder legt fest, welche Steuerelementrahmen am übergeordneten Steuerelement angedockt sind, und bestimmt, wie die Größe eines Steuerelements mit dem übergeordneten Steuerelement geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-857">Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</span></span></summary>
        <value><span data-ttu-id="8426f-858">Einer der <see cref="T:System.Windows.Forms.DockStyle" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-858">One of the <see cref="T:System.Windows.Forms.DockStyle" /> values.</span></span> <span data-ttu-id="8426f-859">Der Standardwert ist <see cref="F:System.Windows.Forms.DockStyle.None" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-859">The default is <see cref="F:System.Windows.Forms.DockStyle.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-860">Verwenden Sie die- <xref:System.Windows.Forms.Control.Dock%2A> Eigenschaft, um zu definieren, wie die Größe eines Steuer Elements automatisch geändert wird, wenn dessen übergeordnetes Steuerelement geändert wird</span><span class="sxs-lookup"><span data-stu-id="8426f-860">Use the <xref:System.Windows.Forms.Control.Dock%2A> property to define how a control is automatically resized as its parent control is resized.</span></span> <span data-ttu-id="8426f-861">Wenn Sie z. b <xref:System.Windows.Forms.Control.Dock%2A> . auf festlegen, <xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType> wird das-Steuerelement an den linken Rändern seines übergeordneten Steuer Elements ausgerichtet und die Größe bei der Größenänderung des übergeordneten Steuer Elements geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-861">For example, setting <xref:System.Windows.Forms.Control.Dock%2A> to <xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized.</span></span> <span data-ttu-id="8426f-862">Steuerelemente werden in ihrer z-Reihenfolge angedockt, d. h. das visuelle Schichten von Steuerelementen in einem Formular entlang der z-Achse (Tiefe) des Formulars.</span><span class="sxs-lookup"><span data-stu-id="8426f-862">Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).</span></span>  
  
 <span data-ttu-id="8426f-863">Ein Steuerelement kann an einen Rand seines übergeordneten Containers angedockt werden oder an alle Ränder angedockt werden und den übergeordneten Container ausfüllen.</span><span class="sxs-lookup"><span data-stu-id="8426f-863">A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.</span></span>  
  
 <span data-ttu-id="8426f-864">Das Festlegen der- <xref:System.Windows.Forms.Control.Margin%2A> Eigenschaft für ein angedocktes Steuerelement wirkt sich nicht auf den Abstand des Steuer Elements von den Rändern seines Containers aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-864">Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the edges of its container.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-865">Die <xref:System.Windows.Forms.Control.Anchor%2A> <xref:System.Windows.Forms.Control.Dock%2A> Eigenschaften und schließen sich gegenseitig aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-865">The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive.</span></span> <span data-ttu-id="8426f-866">Es kann jeweils nur eine festgelegt werden, und der letzte Satz hat Vorrang.</span><span class="sxs-lookup"><span data-stu-id="8426f-866">Only one can be set at a time, and the last one set takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-867">Im folgenden Codebeispiel wird ein erstellt, <xref:System.Windows.Forms.GroupBox> und einige der allgemeinen Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-867">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="8426f-868">Im Beispiel wird ein erstellt <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.Control.Location%2A> innerhalb des Gruppen Felds festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-868">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="8426f-869">Anschließend wird die <xref:System.Windows.Forms.Control.Text%2A> -Eigenschaft des Gruppen Felds festgelegt, und das Gruppenfeld wird an den oberen Rand des Formulars angedockt.</span><span class="sxs-lookup"><span data-stu-id="8426f-869">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="8426f-870">Schließlich wird das Gruppenfeld deaktiviert, indem die- <xref:System.Windows.Forms.Control.Enabled%2A> Eigenschaft auf festgelegt `false` wird. Dies bewirkt, dass alle im Gruppenfeld enthaltenen Steuerelemente deaktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-870">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8426f-871">Der zugewiesene Wert ist keiner der <see cref="T:System.Windows.Forms.DockStyle" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-871">The value assigned is not one of the <see cref="T:System.Windows.Forms.DockStyle" /> values.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-872">Wenn Sie die <see cref="P:System.Windows.Forms.Control.Dock" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.Dock" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-872">When overriding the <see cref="P:System.Windows.Forms.Control.Dock" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Dock" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-873">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-873">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-874">Sie müssen nicht sowohl die <see langword="get" /> -Methode als auch die- <see langword="set" /> Methode der-Eigenschaft überschreiben <see cref="P:System.Windows.Forms.Control.Dock" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-874">You are not required to override both the <see langword="get" /> and <see langword="set" /> methods of the <see cref="P:System.Windows.Forms.Control.Dock" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DockStyle" />
        <altmember cref="P:System.Windows.Forms.Control.Anchor" />
        <altmember cref="T:System.Windows.Forms.ScrollableControl.DockPaddingEdges" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="DockChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DockChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DockChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DockChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DockChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DockChanged;" />
      <MemberSignature Language="F#" Value="member this.DockChanged : EventHandler " Usage="member this.DockChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-875">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.Control.Dock" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-875">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-876">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.Dock%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-876">This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-877">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-877">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-878">Das folgende Codebeispiel ist ein Ereignishandler, der ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-878">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-879">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster *propertyName* `Changed` , die ausgelöst werden, wenn der entsprechende *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-879">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes(*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-880">Im folgenden Codebeispiel wird der von einem-Wert geändert, der <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> Währungs Daten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-880">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="8426f-881">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-881">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-882">Für dieses Beispiel ist es erforderlich, dass über ein <xref:System.Windows.Forms.Form> verfügt, das eine enthält <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-882">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="T:System.Windows.Forms.DockStyle" />
      </Docs>
    </Member>
    <Member MemberName="DoDragDrop">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DragDropEffects DoDragDrop(object data, valuetype System.Windows.Forms.DragDropEffects allowedEffects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoDragDrop (data As Object, allowedEffects As DragDropEffects) As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DragDropEffects DoDragDrop(System::Object ^ data, System::Windows::Forms::DragDropEffects allowedEffects);" />
      <MemberSignature Language="F#" Value="member this.DoDragDrop : obj * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragDropEffects" Usage="control.DoDragDrop (data, allowedEffects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="allowedEffects" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="8426f-883">Die zu ziehenden Daten.</span><span class="sxs-lookup"><span data-stu-id="8426f-883">The data to drag.</span></span></param>
        <param name="allowedEffects"><span data-ttu-id="8426f-884">Einer der <see cref="T:System.Windows.Forms.DragDropEffects" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-884">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-885">Beginnt einen Drag &amp; Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8426f-885">Begins a drag-and-drop operation.</span></span></summary>
        <returns><span data-ttu-id="8426f-886">Ein Wert aus der <see cref="T:System.Windows.Forms.DragDropEffects" />-Enumeration, der den abschließenden Effekt darstellt, der während des Drag &amp;amp; Drop-Vorgangs ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-886">A value from the <see cref="T:System.Windows.Forms.DragDropEffects" /> enumeration that represents the final effect that was performed during the drag-and-drop operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-887">Der- `allowedEffects` Parameter bestimmt, welche Zieh Vorgänge ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="8426f-887">The `allowedEffects` parameter determines which drag operations can occur.</span></span> <span data-ttu-id="8426f-888">Wenn der Zieh Vorgang mit Anwendungen in einem anderen Prozess interagieren muss, sollten die Daten entweder eine verwaltete Basisklasse ( <xref:System.String> , <xref:System.Drawing.Bitmap> oder <xref:System.Drawing.Imaging.Metafile> ) oder ein Objekt sein, das oder implementiert <xref:System.Runtime.Serialization.ISerializable> <xref:System.Windows.Forms.IDataObject> .</span><span class="sxs-lookup"><span data-stu-id="8426f-888">If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<xref:System.String>, <xref:System.Drawing.Bitmap>, or <xref:System.Drawing.Imaging.Metafile>), or an object that implements <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Windows.Forms.IDataObject>.</span></span>  
  
 <span data-ttu-id="8426f-889">Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag &amp; Drop-Vorgänge ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-889">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="8426f-890">Die- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode bestimmt das Steuerelement unter der aktuellen Cursorposition.</span><span class="sxs-lookup"><span data-stu-id="8426f-890">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="8426f-891">Anschließend wird überprüft, ob das Steuerelement ein gültiges Ablage Ziel ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-891">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="8426f-892">Wenn das Steuerelement ein gültiges Ablage Ziel ist, wird das-Ereignis ausgelöst, wenn der <xref:System.Windows.Forms.Control.GiveFeedback> Drag & Drop-Effekt angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-892">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="8426f-893">Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-893">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="8426f-894">Änderungen der Mauszeigerposition, des Tastaturzustands und des Zustands der Maustasten werden verfolgt.</span><span class="sxs-lookup"><span data-stu-id="8426f-894">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="8426f-895">Wenn die Benutzeraktion das Fenster verlässt, wird das <xref:System.Windows.Forms.Control.DragLeave>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-895">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="8426f-896">Wenn der Mauszeiger in ein anderes Steuerelement bewegt wird, wird das <xref:System.Windows.Forms.Control.DragEnter>-Ereignis für dieses Steuerelement ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-896">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="8426f-897">Wenn die Maus bewegt wird, ohne das Steuerelement zu verlassen, wird das <xref:System.Windows.Forms.Control.DragOver>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-897">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-898">Wenn sich der Tastatur-oder Maustasten Zustand ändert, <xref:System.Windows.Forms.Control.QueryContinueDrag> wird das-Ereignis ausgelöst, und es wird bestimmt, ob der Zieh Vorgang fortgesetzt, die Daten abgelegt oder der Vorgang basierend auf dem Wert der <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> -Eigenschaft des Ereignisses abgebrochen <xref:System.Windows.Forms.QueryContinueDragEventArgs> werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-898">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="8426f-899">Wenn der Wert von <xref:System.Windows.Forms.DragAction> `Continue` <xref:System.Windows.Forms.Control.DragOver> auf festgelegt ist, wird das-Ereignis ausgelöst, um den Vorgang fortzusetzen, und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis wird mit dem neuen Effekt ausgelöst, sodass entsprechendes visuelles Feedback festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-899">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="8426f-900">Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-900">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8426f-901">Das <xref:System.Windows.Forms.Control.DragOver> -Ereignis und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis werden gekoppelt, damit dem Benutzer beim Bewegen der Maus über das Ablage Ziel das aktuellste Feedback an der Position der Maus gegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-901">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="8426f-902">Wenn der Wert von auf festgelegt ist <xref:System.Windows.Forms.DragAction> `Drop` , wird der Wert des Ablage Effekts an die Quelle zurückgegeben. die Quell Anwendung kann somit den entsprechenden Vorgang für die Quelldaten ausführen, z. b. die Daten Ausschneiden, wenn es sich um einen Verschiebe Vorgang handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-902">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="8426f-903">Wenn der Wert von <xref:System.Windows.Forms.DragAction> ist `Cancel` , wird das- <xref:System.Windows.Forms.Control.DragLeave> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-903">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-904">Die <xref:System.Windows.Forms.Control.DoDragDrop%2A> -Methode fängt alle Ausnahmen ab und löst nur die folgenden Sicherheits-oder kritischen Ausnahmen erneut aus:</span><span class="sxs-lookup"><span data-stu-id="8426f-904">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method catches all exceptions and rethrows only the following security or critical exceptions:</span></span>  
  
-   <span data-ttu-id="8426f-905">SecurityException</span><span class="sxs-lookup"><span data-stu-id="8426f-905">SecurityException</span></span>  
  
-   <span data-ttu-id="8426f-906">NullReferenceException</span><span class="sxs-lookup"><span data-stu-id="8426f-906">NullReferenceException</span></span>  
  
-   <span data-ttu-id="8426f-907">StackOverflowException</span><span class="sxs-lookup"><span data-stu-id="8426f-907">StackOverflowException</span></span>  
  
-   <span data-ttu-id="8426f-908">OutOfMemoryException</span><span class="sxs-lookup"><span data-stu-id="8426f-908">OutOfMemoryException</span></span>  
  
-   <span data-ttu-id="8426f-909">ThreadAbortException</span><span class="sxs-lookup"><span data-stu-id="8426f-909">ThreadAbortException</span></span>  
  
-   <span data-ttu-id="8426f-910">ExecutionEngineException</span><span class="sxs-lookup"><span data-stu-id="8426f-910">ExecutionEngineException</span></span>  
  
-   <span data-ttu-id="8426f-911">IndexOutOfRangeException</span><span class="sxs-lookup"><span data-stu-id="8426f-911">IndexOutOfRangeException</span></span>  
  
-   <span data-ttu-id="8426f-912">AccessViolationException</span><span class="sxs-lookup"><span data-stu-id="8426f-912">AccessViolationException</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-913">Im folgenden Codebeispiel wird ein Drag & Drop-Vorgang zwischen zwei-Steuer <xref:System.Windows.Forms.ListBox> Elementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-913">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="8426f-914">Im Beispiel wird die-Methode aufgerufen, <xref:System.Windows.Forms.Control.DoDragDrop%2A> Wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-914">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="8426f-915">Die Zieh Aktion wird gestartet, wenn die Maus <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> während des Ereignisses mehr als die Mausposition bewegt hat <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-915">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="8426f-916">Die- <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Methode wird verwendet, um den Index des Elements zu bestimmen, das während des-Ereignisses gezogen werden soll `MouseDown` .</span><span class="sxs-lookup"><span data-stu-id="8426f-916">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="8426f-917">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8426f-917">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="8426f-918">Für das Beispiel ist es erforderlich, dass zwei Cursor Dateien, `3dwarro.cur` und, `3dwno.cur` im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="8426f-918">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="8426f-919">Die benutzerdefinierten Cursor werden verwendet, wenn das `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-919">The custom cursors will be used if the `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="8426f-920">Die benutzerdefinierten Cursor werden im- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-920">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="8426f-921">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht ausgewertet `ListBox` , um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der Tasten UMSCHALTTASTE, STRG, alt oder STRG + ALT basiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-921">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="8426f-922">Der Speicherort in der, an dem der Ablage Vorgang `ListBox` stattfindet, wird auch während des Ereignisses festgelegt `DragOver` .</span><span class="sxs-lookup"><span data-stu-id="8426f-922">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="8426f-923">Wenn es sich bei den zu Lösch Endes Daten nicht um handelt `String` , <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wird der auf in festgelegt `None` <xref:System.Windows.Forms.DragDropEffects> .</span><span class="sxs-lookup"><span data-stu-id="8426f-923">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="8426f-924">Schließlich wird der Status der Ablage in der angezeigt `DropLocationLabel` <xref:System.Windows.Forms.Label> .</span><span class="sxs-lookup"><span data-stu-id="8426f-924">Finally, the status of the drop is displayed in the `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="8426f-925">Die Daten, die auf der rechten Seite abgelegt werden, werden `ListBox` im <xref:System.Windows.Forms.Control.DragDrop> -Ereignishandler bestimmt, und der- `String` Wert wird an der entsprechenden Stelle in der hinzugefügt `ListBox` .</span><span class="sxs-lookup"><span data-stu-id="8426f-925">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="8426f-926">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im- <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="8426f-926">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#1)]  
  
 <span data-ttu-id="8426f-927">Im folgenden Codebeispiel wird gezeigt, wie die- <xref:System.Windows.Forms.DragDropEffects> Enumeration verwendet wird, um anzugeben, wie Daten zwischen den an einem Drag & Drop-Vorgang beteiligten Steuerelementen übertragen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-927">The following code example shows how to use the <xref:System.Windows.Forms.DragDropEffects> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation.</span></span> <span data-ttu-id="8426f-928">Für dieses Beispiel muss das Formular ein <xref:System.Windows.Forms.RichTextBox> Steuerelement und ein <xref:System.Windows.Forms.ListBox> -Steuerelement enthalten, und das- <xref:System.Windows.Forms.ListBox> Steuerelement wird mit einer Liste gültiger Dateinamen aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="8426f-928">This example requires that your form includes a <xref:System.Windows.Forms.RichTextBox> control and a <xref:System.Windows.Forms.ListBox> control and that the <xref:System.Windows.Forms.ListBox> control is populated with a list of valid file names.</span></span> <span data-ttu-id="8426f-929">Wenn der Benutzer einen Dateinamen auf das <xref:System.Windows.Forms.RichTextBox> -Steuerelement zieht, wird das-Ereignis des-Steuer Elements <xref:System.Windows.Forms.Control.DragEnter> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-929">When the user drags a file name onto the <xref:System.Windows.Forms.RichTextBox> control, the control's <xref:System.Windows.Forms.Control.DragEnter> event is raised.</span></span> <span data-ttu-id="8426f-930">Innerhalb des-Ereignis Handlers <xref:System.Windows.Forms.DragEventArgs.Effect%2A> wird die-Eigenschaft von <xref:System.Windows.Forms.DragEventArgs> auf initialisiert, <xref:System.Windows.Forms.DragDropEffects> um anzugeben, dass die Daten, auf die vom Dateipfad verwiesen wird, in das-Steuerelement kopiert werden sollen <xref:System.Windows.Forms.RichTextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-930">Within the event handler, the <xref:System.Windows.Forms.DragEventArgs.Effect%2A> property of the <xref:System.Windows.Forms.DragEventArgs> is initialized to <xref:System.Windows.Forms.DragDropEffects> to indicate that the data referenced by the file path should be copied to the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AllowDrop" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected virtual bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.Control.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-931">Ruft einen Wert ab, der angibt, ob das Steuerelement seine Oberfläche unter Verwendung eines sekundären Puffers neu zeichnen soll, um Flackern zu verringern oder zu vermeiden, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-931">Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</span></span></summary>
        <value><span data-ttu-id="8426f-932"><see langword="true" />, wenn die Oberfläche des Steuerelements mit Doppelpufferung gezeichnet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-932"><see langword="true" /> if the surface of the control should be drawn using double buffering; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-933">Gepufferte Grafiken können das Flimmern reduzieren oder eliminieren, das durch progressives Neuzeichnen von Teilen einer angezeigten Oberfläche verursacht wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-933">Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface.</span></span> <span data-ttu-id="8426f-934">Für gepufferte Grafiken ist es erforderlich, dass die aktualisierten Grafikdaten zuerst in einen Puffer geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-934">Buffered graphics require that the updated graphics data is first written to a buffer.</span></span> <span data-ttu-id="8426f-935">Die Daten im Grafik Puffer werden dann schnell in den angezeigten Oberflächen Speicher geschrieben.</span><span class="sxs-lookup"><span data-stu-id="8426f-935">The data in the graphics buffer is then quickly written to displayed surface memory.</span></span> <span data-ttu-id="8426f-936">Der relativ schnelle Switch des angezeigten Grafik Speichers verringert in der Regel das Flimmern, das andernfalls auftreten kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-936">The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-937"><xref:System.Windows.Forms.Control.DoubleBuffered%2A>ist keine bindbare Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-937"><xref:System.Windows.Forms.Control.DoubleBuffered%2A> is not a bindable property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.BufferedGraphicsContext" />
        <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-938">Tritt beim Doppelklicken auf das Steuerelement ein.</span><span class="sxs-lookup"><span data-stu-id="8426f-938">Occurs when the control is double-clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-939">Ein Doppelklick wird durch die Mauseinstellungen des Betriebssystems des Benutzers bestimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-939">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="8426f-940">Der Benutzer kann den Zeitraum festlegen, innerhalb dessen der zweite Mausklick erfolgen muss, damit zwei aufeinander folgende Mausklicks als Doppelklick erkannt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-940">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span> <span data-ttu-id="8426f-941">Das- <xref:System.Windows.Forms.Control.Click> Ereignis wird jedes Mal ausgelöst, wenn auf ein Steuerelement Doppel geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-941">The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked.</span></span> <span data-ttu-id="8426f-942">Wenn Sie z. b. über Ereignishandler für das <xref:System.Windows.Forms.Control.Click> -Ereignis und das-Ereignis <xref:System.Windows.Forms.Control.DoubleClick> eines verfügen <xref:System.Windows.Forms.Form> , <xref:System.Windows.Forms.Control.Click> werden die-und <xref:System.Windows.Forms.Control.DoubleClick> -Ereignisse ausgelöst, wenn auf das Formular Doppel geklickt wird und beide Methoden aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-942">For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called.</span></span> <span data-ttu-id="8426f-943">Wenn auf ein Steuerelement Doppel geklickt wird und dieses Steuerelement das-Ereignis nicht unterstützt <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.Click> wird das Ereignis möglicherweise zweimal ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-943">If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.</span></span>  
  
 <span data-ttu-id="8426f-944">Sie müssen den `StandardDoubleClick` -Wert und den- `StandardClick` Wert von <xref:System.Windows.Forms.ControlStyles> auf festlegen, damit `true` Dieses Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-944">You must set the `StandardDoubleClick` and `StandardClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.</span></span> <span data-ttu-id="8426f-945">Diese Werte werden möglicherweise bereits auf festgelegt, `true` Wenn Sie von vorhandenen Windows Forms-Steuerelementen erben.</span><span class="sxs-lookup"><span data-stu-id="8426f-945">These values might already be set to `true` if you are inheriting from existing Windows Forms controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-946">Die folgenden Ereignisse werden für die- <xref:System.Windows.Forms.TabControl> Klasse nur ausgelöst, wenn mindestens eine in der Auflistung vorhanden ist <xref:System.Windows.Forms.TabPage> <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> : <xref:System.Windows.Forms.Control.Click> , <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.MouseDown> , <xref:System.Windows.Forms.Control.MouseUp> , <xref:System.Windows.Forms.Control.MouseHover> , <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave> und <xref:System.Windows.Forms.Control.MouseMove> .</span><span class="sxs-lookup"><span data-stu-id="8426f-946">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="8426f-947">Wenn in der Auflistung mindestens eine vorhanden ist <xref:System.Windows.Forms.TabPage> und der Benutzer mit dem Header des Registerkarten-Steuer Elements interagiert (wo die <xref:System.Windows.Forms.TabPage> Namen angezeigt werden), löst das <xref:System.Windows.Forms.TabControl> entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-947">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="8426f-948">Wenn sich die Benutzerinteraktion jedoch im Client Bereich der Registerkarte befindet, löst die <xref:System.Windows.Forms.TabPage> das entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-948">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="8426f-949">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-949">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-950">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.DoubleClick> Ereignis eines verwendet <xref:System.Windows.Forms.ListBox> , um die in der aufgelisteten Textdateien in ein-Steuerelement zu laden <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-950">The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]
 [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]
 [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-951">Das Erben von einem Standard Windows Forms-Steuerelement und das Ändern der- <see langword="StandardClick" /> oder- <see langword="StandardDoubleClick" /> Werte von <see cref="T:System.Windows.Forms.ControlStyles" /> in <see langword="true" /> können zu unerwartetem Verhalten führen oder keinerlei Auswirkung haben, wenn das Steuerelement das-Ereignis oder das-Ereignis nicht unterstützt <see cref="E:System.Windows.Forms.Control.Click" /> <see cref="E:System.Windows.Forms.Control.DoubleClick" /> .</span><span class="sxs-lookup"><span data-stu-id="8426f-951">Inheriting from a standard Windows Forms control and changing the <see langword="StandardClick" /> or <see langword="StandardDoubleClick" /> values of <see cref="T:System.Windows.Forms.ControlStyles" /> to <see langword="true" /> can cause unexpected behavior or have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span></span>  
  
<span data-ttu-id="8426f-952">In der folgenden Tabelle sind Windows Forms Steuerelemente und das Ereignis (oder) aufgeführt, das <see cref="E:System.Windows.Forms.Control.Click" /> <see cref="E:System.Windows.Forms.Control.DoubleClick" /> als Reaktion auf die angegebene Maus Aktion ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-952">The following table lists Windows Forms controls and which event (<see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" />) is raised in response to the mouse action specified.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8426f-953">Control</span><span class="sxs-lookup"><span data-stu-id="8426f-953">Control</span></span> 
 </term><description> <span data-ttu-id="8426f-954">Linker Mausklick</span><span class="sxs-lookup"><span data-stu-id="8426f-954">Left Mouse Click</span></span> 
 </description><description> <span data-ttu-id="8426f-955">Doppelklick mit der linken Maustaste</span><span class="sxs-lookup"><span data-stu-id="8426f-955">Left Mouse Double Click</span></span> 
 </description><description> <span data-ttu-id="8426f-956">Mit der rechten Maustaste</span><span class="sxs-lookup"><span data-stu-id="8426f-956">Right Mouse Click</span></span> 
 </description><description> <span data-ttu-id="8426f-957">Doppelklick mit der rechten Maustaste</span><span class="sxs-lookup"><span data-stu-id="8426f-957">Right Mouse Double Click</span></span> 
 </description><description> <span data-ttu-id="8426f-958">Mittlere Maustaste</span><span class="sxs-lookup"><span data-stu-id="8426f-958">Middle Mouse Click</span></span> 
 </description><description> <span data-ttu-id="8426f-959">Mittlere Maustaste Doppelklick</span><span class="sxs-lookup"><span data-stu-id="8426f-959">Middle Mouse Double Click</span></span> 
 </description><description> <span data-ttu-id="8426f-960">XButton1 mit Mausklick</span><span class="sxs-lookup"><span data-stu-id="8426f-960">XButton1 Mouse Click</span></span> 
 </description><description> <span data-ttu-id="8426f-961">XButton1 Maustaste doppelklicken</span><span class="sxs-lookup"><span data-stu-id="8426f-961">XButton1 Mouse Double-Click</span></span> 
 </description><description> <span data-ttu-id="8426f-962">XButton2 mit Mausklick</span><span class="sxs-lookup"><span data-stu-id="8426f-962">XButton2 Mouse Click</span></span> 
 </description><description> <span data-ttu-id="8426f-963">XButton2 Maustaste doppelklicken</span><span class="sxs-lookup"><span data-stu-id="8426f-963">XButton2 Mouse Double-Click</span></span> 
 </description></listheader><item><term><span data-ttu-id="8426f-964"><see cref="T:System.Windows.Forms.MonthCalendar" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-964"><see cref="T:System.Windows.Forms.MonthCalendar" />,</span></span> 
 <span data-ttu-id="8426f-965"><see cref="T:System.Windows.Forms.DateTimePicker" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-965"><see cref="T:System.Windows.Forms.DateTimePicker" />,</span></span> 
 <span data-ttu-id="8426f-966"><see cref="T:System.Windows.Forms.RichTextBox" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-966"><see cref="T:System.Windows.Forms.RichTextBox" />,</span></span> 
 <span data-ttu-id="8426f-967"><see cref="T:System.Windows.Forms.HScrollBar" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-967"><see cref="T:System.Windows.Forms.HScrollBar" />,</span></span> 
 <see cref="T:System.Windows.Forms.VScrollBar" /></term><description> <span data-ttu-id="8426f-968">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-968">none</span></span> 
 </description><description> <span data-ttu-id="8426f-969">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-969">none</span></span> 
 </description><description> <span data-ttu-id="8426f-970">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-970">none</span></span> 
 </description><description> <span data-ttu-id="8426f-971">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-971">none</span></span> 
 </description><description> <span data-ttu-id="8426f-972">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-972">none</span></span> 
 </description><description> <span data-ttu-id="8426f-973">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-973">none</span></span> 
 </description><description> <span data-ttu-id="8426f-974">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-974">none</span></span> 
 </description><description> <span data-ttu-id="8426f-975">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-975">none</span></span> 
 </description><description> <span data-ttu-id="8426f-976">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-976">none</span></span> 
 </description><description> <span data-ttu-id="8426f-977">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-977">none</span></span> 
 </description></item><item><term><span data-ttu-id="8426f-978"><see cref="T:System.Windows.Forms.Button" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-978"><see cref="T:System.Windows.Forms.Button" />,</span></span> 
 <span data-ttu-id="8426f-979"><see cref="T:System.Windows.Forms.CheckBox" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-979"><see cref="T:System.Windows.Forms.CheckBox" />,</span></span> 
 <see cref="T:System.Windows.Forms.RadioButton" /></term><description> <span data-ttu-id="8426f-980">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-980">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-981">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-981">Click, Click</span></span> 
 </description><description> <span data-ttu-id="8426f-982">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-982">none</span></span> 
 </description><description> <span data-ttu-id="8426f-983">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-983">none</span></span> 
 </description><description> <span data-ttu-id="8426f-984">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-984">none</span></span> 
 </description><description> <span data-ttu-id="8426f-985">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-985">none</span></span> 
 </description><description> <span data-ttu-id="8426f-986">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-986">none</span></span> 
 </description><description> <span data-ttu-id="8426f-987">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-987">none</span></span> 
 </description><description> <span data-ttu-id="8426f-988">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-988">none</span></span> 
 </description><description> <span data-ttu-id="8426f-989">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-989">none</span></span> 
 </description></item><item><term><span data-ttu-id="8426f-990"><see cref="T:System.Windows.Forms.ListBox" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-990"><see cref="T:System.Windows.Forms.ListBox" />,</span></span> 
 <span data-ttu-id="8426f-991"><see cref="T:System.Windows.Forms.CheckedListBox" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-991"><see cref="T:System.Windows.Forms.CheckedListBox" />,</span></span> 
 <see cref="T:System.Windows.Forms.ComboBox" /></term><description> <span data-ttu-id="8426f-992">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-992">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-993">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-993">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="8426f-994">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-994">none</span></span> 
 </description><description> <span data-ttu-id="8426f-995">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-995">none</span></span> 
 </description><description> <span data-ttu-id="8426f-996">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-996">none</span></span> 
 </description><description> <span data-ttu-id="8426f-997">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-997">none</span></span> 
 </description><description> <span data-ttu-id="8426f-998">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-998">none</span></span> 
 </description><description> <span data-ttu-id="8426f-999">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-999">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1000">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1000">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1001">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1001">none</span></span> 
 </description></item><item><term><span data-ttu-id="8426f-1002"><see cref="T:System.Windows.Forms.TextBox" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1002"><see cref="T:System.Windows.Forms.TextBox" />,</span></span> 
 <span data-ttu-id="8426f-1003"><see cref="T:System.Windows.Forms.DomainUpDown" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1003"><see cref="T:System.Windows.Forms.DomainUpDown" />,</span></span> 
 <see cref="T:System.Windows.Forms.NumericUpDown" /></term><description> <span data-ttu-id="8426f-1004">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1004">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1005">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-1005">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="8426f-1006">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1006">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1007">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1007">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1008">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1008">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1009">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1009">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1010">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1010">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1011">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1011">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1012">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1012">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1013">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1013">none</span></span> 
 </description></item><item><term> <span data-ttu-id="8426f-1014">\* <see cref="T:System.Windows.Forms.TreeView" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1014">\* <see cref="T:System.Windows.Forms.TreeView" />,</span></span> 
<span data-ttu-id="8426f-1015">\* <see cref="T:System.Windows.Forms.ListView" /></span><span class="sxs-lookup"><span data-stu-id="8426f-1015">\* <see cref="T:System.Windows.Forms.ListView" /></span></span></term><description> <span data-ttu-id="8426f-1016">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1016">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1017">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-1017">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="8426f-1018">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1018">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1019">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-1019">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="8426f-1020">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1020">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1021">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1021">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1022">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1022">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1023">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1023">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1024">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1024">none</span></span> 
 </description><description> <span data-ttu-id="8426f-1025">Keine</span><span class="sxs-lookup"><span data-stu-id="8426f-1025">none</span></span> 
 </description></item><item><term><span data-ttu-id="8426f-1026"><see cref="T:System.Windows.Forms.ProgressBar" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1026"><see cref="T:System.Windows.Forms.ProgressBar" />,</span></span> 
 <see cref="T:System.Windows.Forms.TrackBar" /></term><description> <span data-ttu-id="8426f-1027">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1027">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1028">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1028">Click, Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1029">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1029">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1030">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1030">Click, Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1031">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1031">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1032">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1032">Click, Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1033">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1033">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1034">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1034">Click, Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1035">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1035">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1036">Klicken Sie auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1036">Click, Click</span></span> 
 </description></item><item><term><span data-ttu-id="8426f-1037"><see cref="T:System.Windows.Forms.Form" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1037"><see cref="T:System.Windows.Forms.Form" />,</span></span> 
 <span data-ttu-id="8426f-1038"><see cref="T:System.Windows.Forms.DataGrid" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1038"><see cref="T:System.Windows.Forms.DataGrid" />,</span></span> 
 <span data-ttu-id="8426f-1039"><see cref="T:System.Windows.Forms.Label" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1039"><see cref="T:System.Windows.Forms.Label" />,</span></span> 
 <span data-ttu-id="8426f-1040"><see cref="T:System.Windows.Forms.LinkLabel" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1040"><see cref="T:System.Windows.Forms.LinkLabel" />,</span></span> 
 <span data-ttu-id="8426f-1041"><see cref="T:System.Windows.Forms.Panel" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1041"><see cref="T:System.Windows.Forms.Panel" />,</span></span> 
 <span data-ttu-id="8426f-1042"><see cref="T:System.Windows.Forms.GroupBox" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1042"><see cref="T:System.Windows.Forms.GroupBox" />,</span></span> 
 <span data-ttu-id="8426f-1043"><see cref="T:System.Windows.Forms.PictureBox" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1043"><see cref="T:System.Windows.Forms.PictureBox" />,</span></span> 
 <span data-ttu-id="8426f-1044"><see cref="T:System.Windows.Forms.Splitter" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1044"><see cref="T:System.Windows.Forms.Splitter" />,</span></span> 
 <span data-ttu-id="8426f-1045"><see cref="T:System.Windows.Forms.StatusBar" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1045"><see cref="T:System.Windows.Forms.StatusBar" />,</span></span> 
 <span data-ttu-id="8426f-1046"><see cref="T:System.Windows.Forms.ToolBar" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1046"><see cref="T:System.Windows.Forms.ToolBar" />,</span></span> 
 <span data-ttu-id="8426f-1047"><see cref="T:System.Windows.Forms.TabPage" />,</span><span class="sxs-lookup"><span data-stu-id="8426f-1047"><see cref="T:System.Windows.Forms.TabPage" />,</span></span> 
 ** <see cref="T:System.Windows.Forms.TabControl" /></term><description> <span data-ttu-id="8426f-1048">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1048">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1049">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-1049">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="8426f-1050">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1050">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1051">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-1051">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="8426f-1052">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1052">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1053">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-1053">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="8426f-1054">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1054">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1055">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-1055">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="8426f-1056">Klicken Sie auf</span><span class="sxs-lookup"><span data-stu-id="8426f-1056">Click</span></span> 
 </description><description> <span data-ttu-id="8426f-1057">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="8426f-1057">Click, DoubleClick</span></span> 
 </description></item></list>  

 <span data-ttu-id="8426f-1058">\*Der Mauszeiger muss sich über einem untergeordneten Objekt befinden ( <see cref="T:System.Windows.Forms.TreeNode" /> oder <see cref="T:System.Windows.Forms.ListViewItem" /> ).</span><span class="sxs-lookup"><span data-stu-id="8426f-1058">\* The mouse pointer must be over a child object (<see cref="T:System.Windows.Forms.TreeNode" /> or <see cref="T:System.Windows.Forms.ListViewItem" />).</span></span>  
  
<span data-ttu-id="8426f-1059">\* \* Muss mindestens eine in der Auflistung enthalten <see cref="T:System.Windows.Forms.TabControl" /> <see cref="T:System.Windows.Forms.TabPage" /> <see cref="P:System.Windows.Forms.TabControl.TabPages" /> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1059">\*\* The <see cref="T:System.Windows.Forms.TabControl" /> must have at least one <see cref="T:System.Windows.Forms.TabPage" /> in its <see cref="P:System.Windows.Forms.TabControl.TabPages" /> collection.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardClick" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="DpiChangedAfterParent">
      <MemberSignature Language="C#" Value="public event EventHandler DpiChangedAfterParent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DpiChangedAfterParent" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChangedAfterParent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DpiChangedAfterParent;" />
      <MemberSignature Language="F#" Value="member this.DpiChangedAfterParent : EventHandler " Usage="member this.DpiChangedAfterParent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1060">Tritt auf, wenn die DPI-Einstellung für ein Steuerelement programmgesteuert geändert wird, nachdem der DPI-Wert des übergeordneten Steuerelements oder Formulars geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1060">Occurs when the DPI setting for a control is changed programmatically after the DPI of its parent control or form has changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedBeforeParent">
      <MemberSignature Language="C#" Value="public event EventHandler DpiChangedBeforeParent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DpiChangedBeforeParent" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChangedBeforeParent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DpiChangedBeforeParent;" />
      <MemberSignature Language="F#" Value="member this.DpiChangedBeforeParent : EventHandler " Usage="member this.DpiChangedBeforeParent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1061">Tritt auf, wenn die DPI-Einstellung für ein Steuerelement programmgesteuert geändert wird, bevor ein DPI-Änderungsereignis für das übergeordnete Steuerelement oder Formular auftritt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1061">Occurs when the DPI setting for a control is changed programmatically before a DPI change event for its parent control or form has occurred.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1062">Tritt ein, wenn ein Drag &amp; Drop-Vorgang abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1062">Occurs when a drag-and-drop operation is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1063">Die <xref:System.Windows.Forms.DragEventArgs.X%2A> -Eigenschaft und die-Eigenschaft <xref:System.Windows.Forms.DragEventArgs.Y%2A> des <xref:System.Windows.Forms.DragEventArgs> befinden sich in Bildschirm Koordinaten, nicht in Client Koordinaten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1063">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="8426f-1064">In der folgenden Zeile von Visual c#-Code werden die Eigenschaften in einen Client konvertiert <xref:System.Drawing.Point> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1064">The following line of Visual C# code converts the properties to a client <xref:System.Drawing.Point>.</span></span>  
  
```  
Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  
```  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1065">Wenn Sie in Versionen vor [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] ein <xref:System.Windows.Forms.UserControl> mit <xref:System.Windows.Forms.Control.DragEnter> -und- <xref:System.Windows.Forms.Control.DragDrop> Ereignissen in einem Windows Form ablegen und etwas zur Entwurfszeit auf das-Objekt ziehen <xref:System.Windows.Forms.UserControl> , `DropDrop` werden das-Ereignis und das- `DropEnter` Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1065">In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised.</span></span> <span data-ttu-id="8426f-1066">Wenn Sie die Projekt Mappe schließen und erneut öffnen, <xref:System.Windows.Forms.Control.DragEnter> werden das-Ereignis und das- <xref:System.Windows.Forms.Control.DragDrop> Ereignis jedoch nicht erneut ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1066">However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.</span></span>  
  
 <span data-ttu-id="8426f-1067">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1067">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1068">In diesem Code Ausschnitt wird die Verwendung des- <xref:System.Windows.Forms.Control.DragDrop> Ereignisses veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1068">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragDrop> event.</span></span> <span data-ttu-id="8426f-1069">Das gesamte Codebeispiel finden Sie unter der- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8426f-1069">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1070">Tritt ein, wenn ein Objekt in die Begrenzungen des Steuerelements gezogen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1070">Occurs when an object is dragged into the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1071">Das- <xref:System.Windows.Forms.Control.DragEnter> Ereignis wird ausgelöst, wenn der Benutzer während eines Drag & Drop-Vorgangs zuerst den Mauszeiger über das-Steuerelement zieht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1071">The <xref:System.Windows.Forms.Control.DragEnter> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1072">Wenn Sie in Versionen vor [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] ein <xref:System.Windows.Forms.UserControl> mit <xref:System.Windows.Forms.Control.DragEnter> -und- <xref:System.Windows.Forms.Control.DragDrop> Ereignissen in einem Windows Form ablegen und etwas zur Entwurfszeit auf das-Objekt ziehen <xref:System.Windows.Forms.UserControl> , `DropDrop` werden das-Ereignis und das- `DropEnter` Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1072">In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised.</span></span> <span data-ttu-id="8426f-1073">Wenn Sie die Projekt Mappe schließen und erneut öffnen, <xref:System.Windows.Forms.Control.DragEnter> werden das-Ereignis und das- <xref:System.Windows.Forms.Control.DragDrop> Ereignis jedoch nicht erneut ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1073">However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.</span></span>  
  
 <span data-ttu-id="8426f-1074">Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag &amp; Drop-Vorgänge ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1074">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="8426f-1075">Die- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode bestimmt das Steuerelement unter der aktuellen Cursorposition.</span><span class="sxs-lookup"><span data-stu-id="8426f-1075">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="8426f-1076">Anschließend wird überprüft, ob das Steuerelement ein gültiges Ablage Ziel ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1076">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="8426f-1077">Wenn das Steuerelement ein gültiges Ablage Ziel ist, wird das-Ereignis ausgelöst, wenn der <xref:System.Windows.Forms.Control.GiveFeedback> Drag & Drop-Effekt angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1077">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="8426f-1078">Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-1078">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="8426f-1079">Änderungen der Mauszeigerposition, des Tastaturzustands und des Zustands der Maustasten werden verfolgt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1079">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="8426f-1080">Wenn die Benutzeraktion das Fenster verlässt, wird das <xref:System.Windows.Forms.Control.DragLeave>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1080">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="8426f-1081">Wenn der Mauszeiger in ein anderes Steuerelement bewegt wird, wird das <xref:System.Windows.Forms.Control.DragEnter>-Ereignis für dieses Steuerelement ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1081">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="8426f-1082">Wenn die Maus bewegt wird, ohne das Steuerelement zu verlassen, wird das <xref:System.Windows.Forms.Control.DragOver>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1082">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-1083">Wenn sich der Tastatur-oder Maustasten Zustand ändert, <xref:System.Windows.Forms.Control.QueryContinueDrag> wird das-Ereignis ausgelöst, und es wird bestimmt, ob der Zieh Vorgang fortgesetzt, die Daten abgelegt oder der Vorgang basierend auf dem Wert der <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> -Eigenschaft des Ereignisses abgebrochen <xref:System.Windows.Forms.QueryContinueDragEventArgs> werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1083">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="8426f-1084">Wenn der Wert von <xref:System.Windows.Forms.DragAction> `Continue` <xref:System.Windows.Forms.Control.DragOver> auf festgelegt ist, wird das-Ereignis ausgelöst, um den Vorgang fortzusetzen, und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis wird mit dem neuen Effekt ausgelöst, sodass entsprechendes visuelles Feedback festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-1084">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="8426f-1085">Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-1085">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8426f-1086">Das <xref:System.Windows.Forms.Control.DragOver> -Ereignis und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis werden gekoppelt, damit dem Benutzer beim Bewegen der Maus über das Ablage Ziel das aktuellste Feedback an der Position der Maus gegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1086">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="8426f-1087">Wenn der Wert von auf festgelegt ist <xref:System.Windows.Forms.DragAction> `Drop` , wird der Wert des Ablage Effekts an die Quelle zurückgegeben. die Quell Anwendung kann somit den entsprechenden Vorgang für die Quelldaten ausführen, z. b. die Daten Ausschneiden, wenn es sich um einen Verschiebe Vorgang handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1087">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="8426f-1088">Wenn der Wert von <xref:System.Windows.Forms.DragAction> ist `Cancel` , wird das- <xref:System.Windows.Forms.Control.DragLeave> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1088">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8426f-1089">Die <xref:System.Windows.Forms.DragEventArgs.X%2A> -Eigenschaft und die-Eigenschaft <xref:System.Windows.Forms.DragEventArgs.Y%2A> des <xref:System.Windows.Forms.DragEventArgs> befinden sich in Bildschirm Koordinaten, nicht in Client Koordinaten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1089">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="8426f-1090">In der folgenden Zeile von Visual c#-Code werden die Eigenschaften in einen Client konvertiert <xref:System.Drawing.Point> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1090">The following line of Visual C# code converts the properties to a client <xref:System.Drawing.Point>.</span></span>  
  
    ```  
    Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  
    ```  
  
 <span data-ttu-id="8426f-1091">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1091">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1092">Im folgenden Codebeispiel wird ein Drag & Drop-Vorgang zwischen zwei-Steuer <xref:System.Windows.Forms.ListBox> Elementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1092">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="8426f-1093">Im Beispiel wird die-Methode aufgerufen, <xref:System.Windows.Forms.Control.DoDragDrop%2A> Wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1093">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="8426f-1094">Die Zieh Aktion wird gestartet, wenn die Maus <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> während des Ereignisses mehr als die Mausposition bewegt hat <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1094">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="8426f-1095">Die- <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Methode wird verwendet, um den Index des Elements zu bestimmen, das während des-Ereignisses gezogen werden soll `MouseDown` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1095">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="8426f-1096">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8426f-1096">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="8426f-1097">Für das Beispiel ist es erforderlich, dass zwei Cursor Dateien, `3dwarro.cur` und, `3dwno.cur` im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="8426f-1097">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="8426f-1098">Die benutzerdefinierten Cursor werden verwendet, wenn das `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1098">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="8426f-1099">Die benutzerdefinierten Cursor werden im- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1099">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="8426f-1100">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht ausgewertet `ListBox` , um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der Tasten UMSCHALTTASTE, STRG, alt oder STRG + ALT basiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1100">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="8426f-1101">Der Speicherort in der, an dem der Ablage Vorgang `ListBox` stattfindet, wird auch während des Ereignisses festgelegt `DragOver` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1101">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="8426f-1102">Wenn es sich bei den zu Lösch Endes Daten nicht um handelt `String` , <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wird der auf in festgelegt `None` <xref:System.Windows.Forms.DragDropEffects> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1102">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="8426f-1103">Schließlich wird der Status der Ablage in der angezeigt `DropLocationLabel` <xref:System.Windows.Forms.Label> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1103">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="8426f-1104">Die Daten, die auf der rechten Seite abgelegt werden, werden `ListBox` im <xref:System.Windows.Forms.Control.DragDrop> -Ereignishandler bestimmt, und der- `String` Wert wird an der entsprechenden Stelle in der hinzugefügt `ListBox` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1104">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="8426f-1105">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im- <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1105">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="8426f-1106">In diesem Code Ausschnitt wird die Verwendung des- <xref:System.Windows.Forms.Control.DragEnter> Ereignisses veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1106">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragEnter> event.</span></span> <span data-ttu-id="8426f-1107">Das gesamte Codebeispiel finden Sie unter der- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8426f-1107">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1108">Tritt ein, wenn ein Objekt aus den Grenzen des Steuerelements gezogen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1108">Occurs when an object is dragged out of the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1109">Das- <xref:System.Windows.Forms.Control.DragLeave> Ereignis wird ausgelöst, wenn der Benutzer den Cursor aus dem-Steuerelement zieht oder der Benutzer den aktuellen Drag & Drop-Vorgang abbricht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1109">The <xref:System.Windows.Forms.Control.DragLeave> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="8426f-1110">Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag &amp; Drop-Vorgänge ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1110">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="8426f-1111">Die- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode bestimmt das Steuerelement unter der aktuellen Cursorposition.</span><span class="sxs-lookup"><span data-stu-id="8426f-1111">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="8426f-1112">Anschließend wird überprüft, ob das Steuerelement ein gültiges Ablage Ziel ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1112">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="8426f-1113">Wenn das Steuerelement ein gültiges Ablage Ziel ist, wird das-Ereignis ausgelöst, wenn der <xref:System.Windows.Forms.Control.GiveFeedback> Drag & Drop-Effekt angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1113">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="8426f-1114">Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-1114">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="8426f-1115">Änderungen der Mauszeigerposition, des Tastaturzustands und des Zustands der Maustasten werden verfolgt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1115">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="8426f-1116">Wenn die Benutzeraktion das Fenster verlässt, wird das <xref:System.Windows.Forms.Control.DragLeave>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1116">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="8426f-1117">Wenn der Mauszeiger in ein anderes Steuerelement bewegt wird, wird das <xref:System.Windows.Forms.Control.DragEnter>-Ereignis für dieses Steuerelement ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1117">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="8426f-1118">Wenn die Maus bewegt wird, ohne das Steuerelement zu verlassen, wird das <xref:System.Windows.Forms.Control.DragOver>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1118">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-1119">Wenn sich der Tastatur-oder Maustasten Zustand ändert, <xref:System.Windows.Forms.Control.QueryContinueDrag> wird das-Ereignis ausgelöst, und es wird bestimmt, ob der Zieh Vorgang fortgesetzt, die Daten abgelegt oder der Vorgang basierend auf dem Wert der <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> -Eigenschaft des Ereignisses abgebrochen <xref:System.Windows.Forms.QueryContinueDragEventArgs> werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1119">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="8426f-1120">Wenn der Wert von <xref:System.Windows.Forms.DragAction> `Continue` <xref:System.Windows.Forms.Control.DragOver> auf festgelegt ist, wird das-Ereignis ausgelöst, um den Vorgang fortzusetzen, und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis wird mit dem neuen Effekt ausgelöst, sodass entsprechendes visuelles Feedback festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-1120">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="8426f-1121">Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-1121">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8426f-1122">Das <xref:System.Windows.Forms.Control.DragOver> -Ereignis und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis werden gekoppelt, damit dem Benutzer beim Bewegen der Maus über das Ablage Ziel das aktuellste Feedback an der Position der Maus gegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1122">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="8426f-1123">Wenn der Wert von auf festgelegt ist <xref:System.Windows.Forms.DragAction> `Drop` , wird der Wert des Ablage Effekts an die Quelle zurückgegeben. die Quell Anwendung kann somit den entsprechenden Vorgang für die Quelldaten ausführen, z. b. die Daten Ausschneiden, wenn es sich um einen Verschiebe Vorgang handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1123">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="8426f-1124">Wenn der Wert von <xref:System.Windows.Forms.DragAction> ist `Cancel` , wird das- <xref:System.Windows.Forms.Control.DragLeave> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1124">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-1125">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1125">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1126">Im folgenden Codebeispiel wird ein Drag & Drop-Vorgang zwischen zwei-Steuer <xref:System.Windows.Forms.ListBox> Elementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1126">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="8426f-1127">Im Beispiel wird die-Methode aufgerufen, <xref:System.Windows.Forms.Control.DoDragDrop%2A> Wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1127">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="8426f-1128">Die Zieh Aktion wird gestartet, wenn die Maus <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> während des Ereignisses mehr als die Mausposition bewegt hat <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1128">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="8426f-1129">Die- <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Methode wird verwendet, um den Index des Elements zu bestimmen, das während des-Ereignisses gezogen werden soll `MouseDown` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1129">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="8426f-1130">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8426f-1130">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="8426f-1131">Für das Beispiel ist es erforderlich, dass zwei Cursor Dateien, `3dwarro.cur` und, `3dwno.cur` im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="8426f-1131">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="8426f-1132">Die benutzerdefinierten Cursor werden verwendet, wenn das `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1132">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="8426f-1133">Die benutzerdefinierten Cursor werden im- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1133">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="8426f-1134">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht ausgewertet `ListBox` , um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der Tasten UMSCHALTTASTE, STRG, alt oder STRG + ALT basiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1134">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="8426f-1135">Der Speicherort in der, an dem der Ablage Vorgang `ListBox` stattfindet, wird auch während des Ereignisses festgelegt `DragOver` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1135">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="8426f-1136">Wenn es sich bei den zu Lösch Endes Daten nicht um handelt `String` , <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wird der auf in festgelegt `None` <xref:System.Windows.Forms.DragDropEffects> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1136">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="8426f-1137">Schließlich wird der Status der Ablage in der angezeigt `DropLocationLabel` <xref:System.Windows.Forms.Label> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1137">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="8426f-1138">Die Daten, die auf der rechten Seite abgelegt werden, werden `ListBox` im <xref:System.Windows.Forms.Control.DragDrop> -Ereignishandler bestimmt, und der- `String` Wert wird an der entsprechenden Stelle in der hinzugefügt `ListBox` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1138">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="8426f-1139">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im- <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1139">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="8426f-1140">In diesem Code Ausschnitt wird die Verwendung des- <xref:System.Windows.Forms.Control.DragLeave> Ereignisses veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1140">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragLeave> event.</span></span> <span data-ttu-id="8426f-1141">Das gesamte Codebeispiel finden Sie unter der- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8426f-1141">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1142">Tritt ein, wenn ein Objekt über die Begrenzungen des Steuerelements gezogen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1142">Occurs when an object is dragged over the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1143">Das- <xref:System.Windows.Forms.Control.DragOver> Ereignis wird ausgelöst, wenn der Mauszeiger während eines Drag & Drop-Vorgangs innerhalb der Begrenzungen des Steuer Elements bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1143">The <xref:System.Windows.Forms.Control.DragOver> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="8426f-1144">Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag &amp; Drop-Vorgänge ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1144">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="8426f-1145">Die- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode bestimmt das Steuerelement unter der aktuellen Cursorposition.</span><span class="sxs-lookup"><span data-stu-id="8426f-1145">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="8426f-1146">Anschließend wird überprüft, ob das Steuerelement ein gültiges Ablage Ziel ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1146">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="8426f-1147">Wenn das Steuerelement ein gültiges Ablage Ziel ist, wird das-Ereignis ausgelöst, wenn der <xref:System.Windows.Forms.Control.GiveFeedback> Drag & Drop-Effekt angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1147">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="8426f-1148">Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-1148">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="8426f-1149">Änderungen der Mauszeigerposition, des Tastaturzustands und des Zustands der Maustasten werden verfolgt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1149">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="8426f-1150">Wenn die Benutzeraktion das Fenster verlässt, wird das <xref:System.Windows.Forms.Control.DragLeave>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1150">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="8426f-1151">Wenn der Mauszeiger in ein anderes Steuerelement bewegt wird, wird das <xref:System.Windows.Forms.Control.DragEnter>-Ereignis für dieses Steuerelement ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1151">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="8426f-1152">Wenn die Maus bewegt wird, ohne das Steuerelement zu verlassen, wird das <xref:System.Windows.Forms.Control.DragOver>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1152">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-1153">Wenn sich der Tastatur-oder Maustasten Zustand ändert, <xref:System.Windows.Forms.Control.QueryContinueDrag> wird das-Ereignis ausgelöst, und es wird bestimmt, ob der Zieh Vorgang fortgesetzt, die Daten abgelegt oder der Vorgang basierend auf dem Wert der <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> -Eigenschaft des Ereignisses abgebrochen <xref:System.Windows.Forms.QueryContinueDragEventArgs> werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1153">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="8426f-1154">Wenn der Wert von <xref:System.Windows.Forms.DragAction> value ist `Continue` , <xref:System.Windows.Forms.Control.DragOver> wird das-Ereignis ausgelöst, um den Vorgang fortzusetzen, und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis wird mit dem neuen Effekt ausgelöst, sodass entsprechendes visuelles Feedback festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-1154">If the value of <xref:System.Windows.Forms.DragAction> value is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="8426f-1155">Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-1155">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8426f-1156">Das <xref:System.Windows.Forms.Control.DragOver> -Ereignis und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis werden gekoppelt, damit dem Benutzer beim Bewegen der Maus über das Ablage Ziel das aktuellste Feedback an der Position der Maus gegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1156">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="8426f-1157">Wenn der Wert von auf festgelegt ist <xref:System.Windows.Forms.DragAction> `Drop` , wird der Wert des Ablage Effekts an die Quelle zurückgegeben. die Quell Anwendung kann somit den entsprechenden Vorgang für die Quelldaten ausführen, z. b. die Daten Ausschneiden, wenn es sich um einen Verschiebe Vorgang handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1157">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="8426f-1158">Wenn der Wert von <xref:System.Windows.Forms.DragAction> ist `Cancel` , wird das- <xref:System.Windows.Forms.Control.DragLeave> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1158">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8426f-1159">Die <xref:System.Windows.Forms.DragEventArgs.X%2A> -Eigenschaft und die-Eigenschaft <xref:System.Windows.Forms.DragEventArgs.Y%2A> des <xref:System.Windows.Forms.DragEventArgs> befinden sich in Bildschirm Koordinaten, nicht in Client Koordinaten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1159">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="8426f-1160">In der folgenden Zeile des c#-Codes werden die Eigenschaften in einen Client konvertiert <xref:System.Drawing.Point> :</span><span class="sxs-lookup"><span data-stu-id="8426f-1160">The following line of C# code converts the properties to a client <xref:System.Drawing.Point>:</span></span>  
    >   
    >  <span data-ttu-id="8426f-1161">Point ClientPoint = TargetControl. pointtoken Client (neuer Punkt (de) X, de. Y));</span><span class="sxs-lookup"><span data-stu-id="8426f-1161">Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));</span></span>  
  
 <span data-ttu-id="8426f-1162">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1162">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1163">Im folgenden Codebeispiel wird ein Drag & Drop-Vorgang zwischen zwei-Steuer <xref:System.Windows.Forms.ListBox> Elementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1163">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="8426f-1164">Im Beispiel wird die-Methode aufgerufen, <xref:System.Windows.Forms.Control.DoDragDrop%2A> Wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1164">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="8426f-1165">Die Zieh Aktion wird gestartet, wenn die Maus <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> während des Ereignisses mehr als die Mausposition bewegt hat <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1165">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="8426f-1166">Die- <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Methode wird verwendet, um den Index des Elements zu bestimmen, das während des-Ereignisses gezogen werden soll `MouseDown` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1166">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="8426f-1167">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8426f-1167">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="8426f-1168">Für das Beispiel ist es erforderlich, dass zwei Cursor Dateien, `3dwarro.cur` und, `3dwno.cur` im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="8426f-1168">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="8426f-1169">Die benutzerdefinierten Cursor werden verwendet, wenn das `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1169">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="8426f-1170">Die benutzerdefinierten Cursor werden im- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1170">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="8426f-1171">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht ausgewertet `ListBox` , um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der Tasten UMSCHALTTASTE, STRG, alt oder STRG + ALT basiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1171">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="8426f-1172">Der Speicherort in der, an dem der Ablage Vorgang `ListBox` stattfindet, wird auch während des Ereignisses festgelegt `DragOver` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1172">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="8426f-1173">Wenn es sich bei den zu Lösch Endes Daten nicht um handelt `String` , <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wird der auf in festgelegt `None` <xref:System.Windows.Forms.DragDropEffects> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1173">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="8426f-1174">Schließlich wird der Status der Ablage in der angezeigt `DropLocationLabel` <xref:System.Windows.Forms.Label> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1174">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="8426f-1175">Die Daten, die auf der rechten Seite abgelegt werden, werden `ListBox` im <xref:System.Windows.Forms.Control.DragDrop> -Ereignishandler bestimmt, und der- `String` Wert wird an der entsprechenden Stelle in der hinzugefügt `ListBox` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1175">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="8426f-1176">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im- <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1176">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="8426f-1177">In diesem Code Ausschnitt wird die Verwendung des- <xref:System.Windows.Forms.Control.DragOver> Ereignisses veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1177">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragOver> event.</span></span> <span data-ttu-id="8426f-1178">Das gesamte Codebeispiel finden Sie unter der- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8426f-1178">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawToBitmap">
      <MemberSignature Language="C#" Value="public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawToBitmap(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Rectangle targetBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawToBitmap (bitmap As Bitmap, targetBounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawToBitmap(System::Drawing::Bitmap ^ bitmap, System::Drawing::Rectangle targetBounds);" />
      <MemberSignature Language="F#" Value="member this.DrawToBitmap : System.Drawing.Bitmap * System.Drawing.Rectangle -&gt; unit" Usage="control.DrawToBitmap (bitmap, targetBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetBounds" Type="System.Drawing.Rectangle" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="bitmap"><span data-ttu-id="8426f-1179">Die Bitmap, in die gezeichnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1179">The bitmap to be drawn to.</span></span></param>
        <param name="targetBounds"><span data-ttu-id="8426f-1180">Die Begrenzungen, innerhalb derer das Steuerelement gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1180">The bounds within which the control is rendered.</span></span></param>
        <summary><span data-ttu-id="8426f-1181">Unterstützt das Rendering für die angegebene Bitmap.</span><span class="sxs-lookup"><span data-stu-id="8426f-1181">Supports rendering to the specified bitmap.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1182">Die- <xref:System.Windows.Forms.Control.DrawToBitmap%2A> Methode wird für ActiveX-Steuerelemente nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1182">The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method is not supported for ActiveX controls.</span></span> <span data-ttu-id="8426f-1183">Sie können das Ereignis überschreiben und ggf <xref:System.Windows.Forms.Control.OnPrint%2A> . eine benutzerdefinierte Druck Logik bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1183">You can override the <xref:System.Windows.Forms.Control.OnPrint%2A> event and provide custom printing logic if required.</span></span>  
  
 <span data-ttu-id="8426f-1184">Die- <xref:System.Windows.Forms.Control.DrawToBitmap%2A> Methode weist die folgenden Einschränkungen auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1184">The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method has the following limitations:</span></span>  
  
-   <span data-ttu-id="8426f-1185">Eine <xref:System.ArgumentException> kann für große Bitmaps ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1185">An <xref:System.ArgumentException> might be thrown for large bitmaps.</span></span> <span data-ttu-id="8426f-1186">Die maximal zulässige Größe variiert je nach Computer.</span><span class="sxs-lookup"><span data-stu-id="8426f-1186">The maximum allowable size varies by machine.</span></span>  
  
-   <span data-ttu-id="8426f-1187"><xref:System.Windows.Forms.Control.DrawToBitmap%2A>die Steuer `Ink` Elemente für das Betriebssystem Windows XP Tablet PC Edition 2005 werden von nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1187"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not support the `Ink` controls for the Windows XP Tablet PC Edition 2005 operating system.</span></span>  
  
-   <span data-ttu-id="8426f-1188"><xref:System.Windows.Forms.Control.DrawToBitmap%2A>zeichnet kein untergeordnetes Element <xref:System.Windows.Forms.TextBox> , wenn die- <xref:System.Windows.Forms.Control.Visible%2A> Eigenschaft von <xref:System.Windows.Forms.TextBox> auf festgelegt ist `false` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1188"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not draw a child <xref:System.Windows.Forms.TextBox> if the <xref:System.Windows.Forms.Control.Visible%2A> property of the <xref:System.Windows.Forms.TextBox> is set to `false`.</span></span>  
  
-   <span data-ttu-id="8426f-1189">Steuerelemente in Containern werden in umgekehrter Reihenfolge gerendert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1189">Controls inside containers are rendered in reverse order.</span></span>  
  
-   <span data-ttu-id="8426f-1190"><xref:System.Windows.Forms.Control.DrawToBitmap%2A>ist für nicht voll funktionsfähig <xref:System.Windows.Forms.RichTextBox> . nur der Rahmen einer Bitmap wird gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1190"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> is not fully functional for the <xref:System.Windows.Forms.RichTextBox>; only the border of a bitmap is drawn.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Control.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-514)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-514)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1191">Ruft einen Wert ab, der angibt, ob das Steuerelement auf Benutzerinteraktionen reagieren kann, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1191">Gets or sets a value indicating whether the control can respond to user interaction.</span></span></summary>
        <value><span data-ttu-id="8426f-1192"><see langword="true" />, wenn das Steuerelement auf Benutzerinteraktionen reagieren kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1192"><see langword="true" /> if the control can respond to user interaction; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8426f-1193">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1193">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1194">Mit der- <xref:System.Windows.Forms.Control.Enabled%2A> Eigenschaft können Sie-Steuerelemente zur Laufzeit aktivieren oder deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-1194">With the <xref:System.Windows.Forms.Control.Enabled%2A> property, you can enable or disable controls at run time.</span></span> <span data-ttu-id="8426f-1195">Beispielsweise können Sie Steuerelemente deaktivieren, die nicht auf den aktuellen Zustand der Anwendung angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1195">For example, you can disable controls that do not apply to the current state of the application.</span></span> <span data-ttu-id="8426f-1196">Sie können ein Steuerelement auch deaktivieren, um dessen Verwendung einzuschränken.</span><span class="sxs-lookup"><span data-stu-id="8426f-1196">You can also disable a control to restrict its use.</span></span> <span data-ttu-id="8426f-1197">Beispielsweise kann eine Schaltfläche deaktiviert werden, um zu verhindern, dass der Benutzer darauf klickt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1197">For example, a button can be disabled to prevent the user from clicking it.</span></span> <span data-ttu-id="8426f-1198">Wenn ein Steuerelement deaktiviert ist, kann es nicht ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1198">If a control is disabled, it cannot be selected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8426f-1199">Wenn <xref:System.Windows.Forms.Control.Enabled%2A> Sie die-Eigenschaft auf festlegen, `false` wird das Kontrollkästchen der Anwendung nicht deaktiviert, oder es wird verhindert, dass das Anwendungsfenster den Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1199">Setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` does not disable the application's control box or prevent the application window from receiving the focus.</span></span>  
  
 <span data-ttu-id="8426f-1200">Wenn die aktivierte-Eigenschaft für ein Container Steuerelement auf festgelegt ist `false` , werden auch alle darin enthaltenen Steuerelemente deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1200">When a container control has its enabled property set to `false`, all its contained controls are disabled, as well.</span></span> <span data-ttu-id="8426f-1201">Wenn der Benutzer z. b. auf ein Steuerelement klickt, das in einem deaktivierten Steuerelement enthalten <xref:System.Windows.Forms.GroupBox> ist, werden keine Ereignisse ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1201">For example, if the user clicks on any of the controls contained in a disabled <xref:System.Windows.Forms.GroupBox> control, no events are raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1202">Wenn ein scrollbares Steuerelement deaktiviert ist, werden die Schiebe leisten ebenfalls deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1202">When a scrollable control is disabled, the scroll bars are also disabled.</span></span> <span data-ttu-id="8426f-1203">So kann z. b. ein deaktiviertes mehrzeilige Textfeld keinen Bildlauf durchführen, um alle Textzeilen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1203">For example, a disabled multiline textbox is unable to scroll to display all the lines of text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1204">Im folgenden Codebeispiel wird ein erstellt, <xref:System.Windows.Forms.GroupBox> und einige der allgemeinen Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1204">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="8426f-1205">Im Beispiel wird ein erstellt <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.Control.Location%2A> innerhalb des Gruppen Felds festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1205">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="8426f-1206">Anschließend wird die <xref:System.Windows.Forms.Control.Text%2A> -Eigenschaft des Gruppen Felds festgelegt, und das Gruppenfeld wird an den oberen Rand des Formulars angedockt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1206">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="8426f-1207">Schließlich wird das Gruppenfeld deaktiviert, indem die- <xref:System.Windows.Forms.Control.Enabled%2A> Eigenschaft auf festgelegt `false` wird. Dies bewirkt, dass alle im Gruppenfeld enthaltenen Steuerelemente deaktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1207">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ScrollableControl" />
      </Docs>
    </Member>
    <Member MemberName="EnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.EnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EnabledChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.EnabledChanged : EventHandler " Usage="member this.EnabledChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1208">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.Enabled" />-Eigenschaftswert geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1208">Occurs when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1209">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.Enabled%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1209">This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-1210">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1210">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1211">Im folgenden Codebeispiel werden zwei-Steuer <xref:System.Windows.Forms.RadioButton> Elemente verwendet, um das-Ereignis zu veranschaulichen <xref:System.Windows.Forms.Control.EnabledChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1211">The following code example uses two <xref:System.Windows.Forms.RadioButton> controls to demonstrate the <xref:System.Windows.Forms.Control.EnabledChanged> event.</span></span> <span data-ttu-id="8426f-1212">Wenn Sie auf eine Schaltfläche klicken, wird der Wert der <xref:System.Windows.Forms.Control.Enabled%2A> -Eigenschaft der anderen Schaltfläche in geändert `false` und eine angezeigt <xref:System.Windows.Forms.MessageBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1212">Clicking one button changes the value of the <xref:System.Windows.Forms.Control.Enabled%2A> property of the other button to `false` and displays a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj&#xA;override this.EndInvoke : IAsyncResult -&gt; obj" Usage="control.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="8426f-1213">Das <see cref="T:System.IAsyncResult" />, das einen bestimmten asynchronen Aufrufvorgang darstellt, der beim Aufrufen von <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1213">The <see cref="T:System.IAsyncResult" /> that represents a specific invoke asynchronous operation, returned when calling <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span></span></param>
        <summary><span data-ttu-id="8426f-1214">Ruft den Rückgabewert des asynchronen Vorgangs ab, der durch das übergebene <see cref="T:System.IAsyncResult" /> dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1214">Retrieves the return value of the asynchronous operation represented by the <see cref="T:System.IAsyncResult" /> passed.</span></span></summary>
        <returns><span data-ttu-id="8426f-1215">Das von dem asynchronen Vorgang generierte <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1215">The <see cref="T:System.Object" /> generated by the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1216">Wenn der asynchrone Vorgang nicht abgeschlossen wurde, wird diese Funktion blockiert, bis das Ergebnis verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1216">If the asynchronous operation has not been completed, this function will block until the result is available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1217">Zusätzlich zur- <xref:System.Windows.Forms.Control.InvokeRequired%2A> Eigenschaft gibt es vier Methoden auf einem-Steuerelement, die Thread sicher sind: <xref:System.Windows.Forms.Control.Invoke%2A> , <xref:System.Windows.Forms.Control.BeginInvoke%2A> , und, <xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.CreateGraphics%2A> Wenn das Handle für das Steuerelement bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1217">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="8426f-1218">Wenn aufgerufen wird, <xref:System.Windows.Forms.Control.CreateGraphics%2A> bevor das Handle des Steuer Elements in einem Hintergrund Thread erstellt wurde, kann dies zu ungültigen Thread übergreifenden aufrufen führen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1218">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="8426f-1219">Für alle anderen Methodenaufrufe sollten Sie eine der Aufruf Methoden verwenden, um den Aufruf an den Thread des Steuer Elements zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1219">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8426f-1220">Der <paramref name="asyncResult" />-Parameterwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1220">The <paramref name="asyncResult" /> parameter value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8426f-1221">Das <paramref name="asyncResult" />-Objekt wurde nicht von einem vorhergehenden Aufruf der <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />-Methode desselben Steuerelements erstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1221">The <paramref name="asyncResult" /> object was not created by a preceding call of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> method from the same control.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Enter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Enter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Enter;" />
      <MemberSignature Language="F#" Value="member this.Enter : EventHandler " Usage="member this.Enter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1222">Tritt beim Eintreten in den Bereich des Steuerelements ein.</span><span class="sxs-lookup"><span data-stu-id="8426f-1222">Occurs when the control is entered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1223">Wenn Sie den Fokus mithilfe der Tastatur (Tab, UMSCHALT + TAB usw.) ändern, indem Sie die- <xref:System.Windows.Forms.Control.Select%2A> Methode oder die- <xref:System.Windows.Forms.Control.SelectNextControl%2A> Methode aufrufen, oder indem Sie die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> Eigenschaft auf das aktuelle Formular festlegen, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1223">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="8426f-1224">Wenn Sie den Fokus mit der Maus oder durch Aufrufen der- <xref:System.Windows.Forms.Control.Focus%2A> Methode ändern, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1224">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="8426f-1225">Wenn die <xref:System.Windows.Forms.Control.CausesValidation%2A> -Eigenschaft auf festgelegt ist `false` , <xref:System.Windows.Forms.Control.Validating> werden die Ereignisse und unter <xref:System.Windows.Forms.Control.Validated> drückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1225">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1226">Die <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.Leave> Ereignisse und werden von der- <xref:System.Windows.Forms.Form> Klasse unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1226">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class.</span></span> <span data-ttu-id="8426f-1227">Die entsprechenden Ereignisse in der <xref:System.Windows.Forms.Form> -Klasse sind das <xref:System.Windows.Forms.Form.Activated> -Ereignis und das- <xref:System.Windows.Forms.Form.Deactivate> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1227">The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="8426f-1228">Das <xref:System.Windows.Forms.Control.Enter> -Ereignis und das- <xref:System.Windows.Forms.Control.Leave> Ereignis sind hierarchisch und kaskadieren die übergeordnete Kette nach oben und unten, bis die entsprechende Steuerung erreicht ist</span><span class="sxs-lookup"><span data-stu-id="8426f-1228">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</span></span> <span data-ttu-id="8426f-1229">Angenommen, Sie verfügen über ein <xref:System.Windows.Forms.Form> -Element mit zwei <xref:System.Windows.Forms.GroupBox> -Steuerelementen, und jedes Steuerelement <xref:System.Windows.Forms.GroupBox> verfügt über ein- <xref:System.Windows.Forms.TextBox> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-1229">For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="8426f-1230">Wenn die Einfügemarke von einer <xref:System.Windows.Forms.TextBox> in die andere verschoben wird, <xref:System.Windows.Forms.Control.Leave> wird das-Ereignis für das und das-Ereignis ausgelöst <xref:System.Windows.Forms.TextBox> <xref:System.Windows.Forms.GroupBox> , und das- <xref:System.Windows.Forms.Control.Enter> Ereignis wird für die andere <xref:System.Windows.Forms.GroupBox> und ausgelöst <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1230">When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8426f-1231">Versuchen Sie nicht, den Fokus in den <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.GotFocus> <xref:System.Windows.Forms.Control.Leave> <xref:System.Windows.Forms.Control.LostFocus> <xref:System.Windows.Forms.Control.Validating> <xref:System.Windows.Forms.Control.Validated> Ereignis Handlern,,,, oder festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1231">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="8426f-1232">Dies kann dazu führen, dass Ihre Anwendung oder das Betriebssystem nicht mehr reagiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1232">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="8426f-1233">Weitere Informationen finden Sie `WM_KILLFOCUS` im Thema im Abschnitt "Tastatureingabe Referenz" und im Abschnitt "Nachrichten Deadlocks" des Themas [about Messages and Message Queues](/windows/win32/winmsg/about-messages-and-message-queues) .</span><span class="sxs-lookup"><span data-stu-id="8426f-1233">For more information, see the `WM_KILLFOCUS` topic in the "Keyboard Input Reference" section and the "Message Deadlocks" section of the [About Messages and Message Queues](/windows/win32/winmsg/about-messages-and-message-queues) topic.</span></span>  
  
 <span data-ttu-id="8426f-1234">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1234">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1235">Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.Control.Enter> -Ereignis verwendet, um die Vordergrund-und Hintergrundfarben eines <xref:System.Windows.Forms.TextBox> unter bestimmten Bedingungen zu ändern.</span><span class="sxs-lookup"><span data-stu-id="8426f-1235">The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FindForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form FindForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Form FindForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FindForm" />
      <MemberSignature Language="VB.NET" Value="Public Function FindForm () As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Form ^ FindForm();" />
      <MemberSignature Language="F#" Value="member this.FindForm : unit -&gt; System.Windows.Forms.Form" Usage="control.FindForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-1236">Ruft das Formular ab, in dem sich das Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1236">Retrieves the form that the control is on.</span></span></summary>
        <returns><span data-ttu-id="8426f-1237">Das <see cref="T:System.Windows.Forms.Form" />, in dem sich das Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1237">The <see cref="T:System.Windows.Forms.Form" /> that the control is on.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1238">Der-Eigenschafts Wert des-Steuer Elements ist <xref:System.Windows.Forms.Control.Parent%2A> möglicherweise nicht mit dem von der- <xref:System.Windows.Forms.Form> Methode zurückgegebenen identisch <xref:System.Windows.Forms.Control.FindForm%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1238">The control's <xref:System.Windows.Forms.Control.Parent%2A> property value might not be the same as the <xref:System.Windows.Forms.Form> returned by <xref:System.Windows.Forms.Control.FindForm%2A> method.</span></span> <span data-ttu-id="8426f-1239">Wenn z. b. ein <xref:System.Windows.Forms.RadioButton> -Steuerelement in einem-Steuerelement enthalten ist <xref:System.Windows.Forms.GroupBox> und <xref:System.Windows.Forms.GroupBox> sich auf einem befindet <xref:System.Windows.Forms.Form> , ist das des-Steuer Elements <xref:System.Windows.Forms.RadioButton> das, <xref:System.Windows.Forms.Control.Parent%2A> <xref:System.Windows.Forms.GroupBox> und das <xref:System.Windows.Forms.GroupBox> -Steuerelement <xref:System.Windows.Forms.Control.Parent%2A> ist der <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1239">For example, if a <xref:System.Windows.Forms.RadioButton> control is contained within a <xref:System.Windows.Forms.GroupBox> control, and the <xref:System.Windows.Forms.GroupBox> is on a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.RadioButton> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.GroupBox> and the <xref:System.Windows.Forms.GroupBox> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1240">Im folgenden Codebeispiel wird das Formular gefunden, das die angegebene Schaltfläche enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1240">The following code example finds the form that contains the specified button.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetTopLevel" />
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Focus();" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; bool" Usage="control.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-1241">Setzt den Eingabefokus auf das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-1241">Sets input focus to the control.</span></span></summary>
        <returns><span data-ttu-id="8426f-1242"><see langword="true" />, wenn die Anforderung des Eingabefokus erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1242"><see langword="true" /> if the input focus request was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1243">Die <xref:System.Windows.Forms.Control.Focus%2A> Methode gibt zurück, `true` Wenn das Steuerelement den Eingabefokus erfolgreich empfangen hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-1243">The <xref:System.Windows.Forms.Control.Focus%2A> method returns `true` if the control successfully received input focus.</span></span> <span data-ttu-id="8426f-1244">Das Steuerelement kann über den Eingabefokus verfügen, während keine visuellen Hinweise angezeigt werden, die den Fokus haben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1244">The control can have the input focus while not displaying any visual cues of having the focus.</span></span> <span data-ttu-id="8426f-1245">Dieses Verhalten wird in erster Linie durch die unten aufgeführten nicht auswählbaren Steuerelemente oder von Ihnen abgeleitete Steuerelemente beobachtet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1245">This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.</span></span>  
  
 <span data-ttu-id="8426f-1246">Ein Steuerelement kann ausgewählt werden und den Eingabefokus erhalten, wenn Folgendes zutrifft: der `Selectable` Wert von <xref:System.Windows.Forms.ControlStyles> wird auf festgelegt `true` , er ist in einem anderen Steuerelement enthalten, und alle übergeordneten Steuerelemente sind sichtbar und aktiviert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1246">A control can be selected and receive input focus if all the following are true: the `Selectable` value of <xref:System.Windows.Forms.ControlStyles> is set to `true`, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="8426f-1247">Die Windows Forms-Steuerelemente in der folgenden Liste können nicht ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1247">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="8426f-1248">Von diesen Steuerelementen abgeleitete Steuerelemente sind ebenfalls nicht auswählbar.</span><span class="sxs-lookup"><span data-stu-id="8426f-1248">Controls derived from these controls are also not selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <span data-ttu-id="8426f-1249"><xref:System.Windows.Forms.LinkLabel>(wenn im-Steuerelement kein Link vorhanden ist)</span><span class="sxs-lookup"><span data-stu-id="8426f-1249"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1250"><xref:System.Windows.Forms.Control.Focus%2A>ist eine Methode auf niedriger Ebene, die in erster Linie für benutzerdefinierter Steuerelemente bestimmt ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1250"><xref:System.Windows.Forms.Control.Focus%2A> is a low-level method intended primarily for custom control authors.</span></span> <span data-ttu-id="8426f-1251">Stattdessen sollten Anwendungsprogrammierer die- <xref:System.Windows.Forms.Control.Select%2A> Methode oder die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> Eigenschaft für untergeordnete Steuerelemente oder die- <xref:System.Windows.Forms.Form.Activate%2A> Methode für Formulare verwenden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1251">Instead, application programmers should use the <xref:System.Windows.Forms.Control.Select%2A> method or the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property for child controls, or the <xref:System.Windows.Forms.Form.Activate%2A> method for forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1252">Im folgenden Codebeispiel wird der Fokus auf das angegebene festgelegt <xref:System.Windows.Forms.Control> , wenn es den Fokus erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-1252">The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]
 [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]
 [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="P:System.Windows.Forms.Control.ContainsFocus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public virtual bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.Control.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1253">Ruft einen Wert ab, der angibt, ob das Steuerelement den Eingabefokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1253">Gets a value indicating whether the control has input focus.</span></span></summary>
        <value><span data-ttu-id="8426f-1254"><see langword="true" />, wenn das Steuerelement den Fokus besitzt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1254"><see langword="true" /> if the control has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8426f-1255">Im folgenden Codebeispiel wird ein-Wert deaktiviert, <xref:System.Windows.Forms.MenuItem> Wenn ein <xref:System.Windows.Forms.TextBox> keinen Fokus hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-1255">The following code example disables a <xref:System.Windows.Forms.MenuItem> if a <xref:System.Windows.Forms.TextBox> does not have focus.</span></span> <span data-ttu-id="8426f-1256">Für dieses Beispiel ist es erforderlich, dass über ein <xref:System.Windows.Forms.Form> mit dem <xref:System.Windows.Forms.TextBox> Namen `textBox1` und zwei-Objekten mit den <xref:System.Windows.Forms.MenuItem> Namen `menuItemEdit` und verfügt `menuItemEditInsertCustomerInfo` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1256">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TextBox> named `textBox1` and two <xref:System.Windows.Forms.MenuItem> objects named `menuItemEdit` and `menuItemEditInsertCustomerInfo`.</span></span>  
  
 [!code-cpp[Windows.FOrms.Control Members2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#4)]
 [!code-csharp[Windows.FOrms.Control Members2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#4)]
 [!code-vb[Windows.FOrms.Control Members2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-1257">Wenn Sie die <see cref="P:System.Windows.Forms.Control.Focused" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.Focused" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-1257">When overriding the <see cref="P:System.Windows.Forms.Control.Focused" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Focused" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-1258">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1258">Otherwise, you must provide all the implementation.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
        <altmember cref="P:System.Windows.Forms.Control.ContainsFocus" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.Control.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.AmbientValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.AmbientValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-512)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-512)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1259">Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1259">Gets or sets the font of the text displayed by the control.</span></span></summary>
        <value><span data-ttu-id="8426f-1260">Der <see cref="T:System.Drawing.Font" />, der auf den Text angewendet werden soll, der im Steuerelement angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1260">The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.</span></span> <span data-ttu-id="8426f-1261">Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultFont" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-1261">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1262">Die- <xref:System.Windows.Forms.Control.Font%2A> Eigenschaft ist eine Ambient-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-1262">The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property.</span></span> <span data-ttu-id="8426f-1263">Eine Ambient-Eigenschaft ist eine Steuerelement Eigenschaft, die, wenn Sie nicht festgelegt ist, vom übergeordneten Steuerelement abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1263">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="8426f-1264">Beispielsweise hat ein <xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Control.BackColor%2A> standardmäßig dasselbe wie das übergeordnete Element <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1264">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="8426f-1265">Weitere Informationen zu Ambient-Eigenschaften finden Sie unter der- <xref:System.Windows.Forms.AmbientProperties> Klasse oder der- <xref:System.Windows.Forms.Control> Klassen Übersicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1265">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
 <span data-ttu-id="8426f-1266">Da der <xref:System.Drawing.Font> unveränderlich ist (d. h., Sie können keine seiner Eigenschaften anpassen), können Sie die <xref:System.Windows.Forms.Control.Font%2A> Eigenschaft nur einem neuen zuweisen <xref:System.Drawing.Font> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1266">Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font>.</span></span> <span data-ttu-id="8426f-1267">Allerdings können Sie die neue Schriftart auf der vorhandenen Schriftart basieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-1267">However, you can base the new font on the existing font.</span></span>  
  
 <span data-ttu-id="8426f-1268">Im folgenden finden Sie ein Beispiel dafür, wie Sie die vorhandene Schriftart anpassen, damit Sie fett formatiert ist:</span><span class="sxs-lookup"><span data-stu-id="8426f-1268">The following is an example of how to adjust the existing font to make it bold:</span></span>  
  
```csharp  
myControl.Font = new Font(myControl.Font,   
    myControl.Font.Style | FontStyle.Bold);  
```  
  
```vb  
MyControl.Font = New Font(MyControl.Font, _   
    MyControl.Font.Style Or FontStyle.Bold)  
```  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1269">Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.FontDialog> für den Benutzer angezeigt, und der eines-Steuer Elements wird geändert <xref:System.Drawing.Font> <xref:System.Windows.Forms.DateTimePicker> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1269">The following code example displays a <xref:System.Windows.Forms.FontDialog> to the user and changes the <xref:System.Drawing.Font> of a <xref:System.Windows.Forms.DateTimePicker> control.</span></span> <span data-ttu-id="8426f-1270">Für dieses Beispiel ist es erforderlich, dass ein <xref:System.Windows.Forms.Form> mit <xref:System.Windows.Forms.Button> und ein vorhanden ist <xref:System.Windows.Forms.DateTimePicker> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1270">This example requires that you have a <xref:System.Windows.Forms.Form> with <xref:System.Windows.Forms.Button> and a <xref:System.Windows.Forms.DateTimePicker> on it.</span></span>  
  
 [!code-cpp[Control_Font#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Font/CPP/control_font.cpp#1)]
 [!code-csharp[Control_Font#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Font/CS/control_font.cs#1)]
 [!code-vb[Control_Font#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Font/VB/control_font.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-1271">Wenn Sie die <see cref="P:System.Windows.Forms.Control.Font" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.Font" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-1271">When overriding the <see cref="P:System.Windows.Forms.Control.Font" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Font" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-1272">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1272">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-1273">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.Font" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1273">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Font" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1274">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.Font" />-Eigenschaftswert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1274">Occurs when the <see cref="P:System.Windows.Forms.Control.Font" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1275">Dieses Ereignis wird ausgelöst, wenn die- <xref:System.Windows.Forms.Control.Font%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder durch Interaktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1275">This event is raised if the <xref:System.Windows.Forms.Control.Font%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="8426f-1276">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1276">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1277">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.FontChanged> Ereignis veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1277">The following code example demonstrates the <xref:System.Windows.Forms.Control.FontChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="FontHeight">
      <MemberSignature Language="C#" Value="protected int FontHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.FontHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Property FontHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int FontHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FontHeight : int with get, set" Usage="System.Windows.Forms.Control.FontHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1278">Ruft die Höhe der Schriftart des Steuerelements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1278">Gets or sets the height of the font of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-1279">Die Höhe des <see cref="T:System.Drawing.Font" /> des Steuerelements in Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-1279">The height of the <see cref="T:System.Drawing.Font" /> of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1280">Die <xref:System.Windows.Forms.Control.FontHeight%2A> -Eigenschaft darf nicht auf einen anderen Wert als den Wert des Steuer Elements <xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType> oder-1 festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1280">The <xref:System.Windows.Forms.Control.FontHeight%2A> property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType> value, or -1.</span></span> <span data-ttu-id="8426f-1281">Das Festlegen <xref:System.Windows.Forms.Control.FontHeight%2A> von auf-1 hat den Effekt, dass der zwischengespeicherte Höhen Wert gelöscht wird, und der Wert wird neu berechnet, wenn die Eigenschaft das nächste Mal referenziert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1281">Setting <xref:System.Windows.Forms.Control.FontHeight%2A> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Font.Height" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Control.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-513)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-513)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1282">Ruft die Vordergrundfarbe des Steuerelements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1282">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-1283">Die Vordergrund-<see cref="T:System.Drawing.Color" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1283">The foreground <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="8426f-1284">Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultForeColor" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-1284">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1285">Die- <xref:System.Windows.Forms.Control.ForeColor%2A> Eigenschaft ist eine Ambient-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-1285">The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property.</span></span> <span data-ttu-id="8426f-1286">Eine Ambient-Eigenschaft ist eine Steuerelement Eigenschaft, die, wenn Sie nicht festgelegt ist, vom übergeordneten Steuerelement abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1286">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="8426f-1287">Beispielsweise hat ein <xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Control.BackColor%2A> standardmäßig dasselbe wie das übergeordnete Element <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1287">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="8426f-1288">Weitere Informationen zu Ambient-Eigenschaften finden Sie unter der- <xref:System.Windows.Forms.AmbientProperties> Klasse oder der- <xref:System.Windows.Forms.Control> Klassen Übersicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1288">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1289">Im folgenden Codebeispiel werden die <xref:System.Windows.Forms.Control.BackColor%2A> und <xref:System.Windows.Forms.Control.ForeColor%2A> der-Steuerelemente auf die Standardsystem Farben festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1289">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="8426f-1290">Der Code ruft rekursiv selbst auf, wenn das Steuerelement über untergeordnete Steuerelemente verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1290">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="8426f-1291">Für dieses Codebeispiel ist es erforderlich, dass Sie über ein-Element mit mindestens einem untergeordneten Steuerelement verfügen <xref:System.Windows.Forms.Form> . ein untergeordnetes Container Steuerelement, wie z. b. <xref:System.Windows.Forms.Panel> oder, mit einem untergeordneten Steuerelement <xref:System.Windows.Forms.GroupBox> (en) würde die Rekursion besser veranschaulichen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1291">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-1292">Wenn Sie die <see cref="P:System.Windows.Forms.Control.ForeColor" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.ForeColor" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-1292">When overriding the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-1293">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1293">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-1294">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.ForeColor" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1294">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1295">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.ForeColor" />-Eigenschaftswert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1295">Occurs when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1296">Dieses Ereignis wird ausgelöst, wenn die- <xref:System.Windows.Forms.Control.ForeColor%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder durch Interaktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1296">This event is raised if the <xref:System.Windows.Forms.Control.ForeColor%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="8426f-1297">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1297">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1298">Das folgende Codebeispiel ist ein Ereignishandler, der ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1298">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-1299">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster *propertyName* `Changed` , die ausgelöst werden, wenn der entsprechende *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-1299">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-1300">Im folgenden Codebeispiel wird der von einem-Wert geändert, der <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> Währungs Daten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1300">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="8426f-1301">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1301">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-1302">Für dieses Beispiel ist es erforderlich, dass über ein <xref:System.Windows.Forms.Form> verfügt, das eine enthält <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1302">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="FromChildHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control FromChildHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.Control FromChildHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromChildHandle (handle As IntPtr) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ FromChildHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromChildHandle : nativeint -&gt; System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.FromChildHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="8426f-1303">Das zu suchende Fensterhandle (<see langword="HWND" />).</span><span class="sxs-lookup"><span data-stu-id="8426f-1303">The window handle (<see langword="HWND" />) to search for.</span></span></param>
        <summary><span data-ttu-id="8426f-1304">Ruft das Steuerelement ab, das das angegebene Handle enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1304">Retrieves the control that contains the specified handle.</span></span></summary>
        <returns><span data-ttu-id="8426f-1305">Das <see cref="T:System.Windows.Forms.Control" />, das das dem angegebenen Handle zugeordnete Steuerelement darstellt, gibt <see langword="null" /> zurück, wenn kein Steuerelement mit dem angegebenen Handle gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1305">The <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns <see langword="null" /> if no control with the specified handle is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1306">Diese Methode sucht die übergeordnete Kette des Fenster Handles, bis ein Handle gefunden wird, das einem Steuerelement zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1306">This method searches up the window handle parent chain until it finds a handle that is associated with a control.</span></span> <span data-ttu-id="8426f-1307">Diese Methode ist zuverlässiger als die- <xref:System.Windows.Forms.Control.FromHandle%2A> Methode, da Sie korrekt Steuerelemente zurückgibt, die mehr als ein Handle besitzen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1307">This method is more reliable than the <xref:System.Windows.Forms.Control.FromHandle%2A> method, because it correctly returns controls that own more than one handle.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control FromHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.Control FromHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As IntPtr) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ FromHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="8426f-1308">Das zu suchende Fensterhandle (<see langword="HWND" />).</span><span class="sxs-lookup"><span data-stu-id="8426f-1308">The window handle (<see langword="HWND" />) to search for.</span></span></param>
        <summary><span data-ttu-id="8426f-1309">Gibt das Steuerelement zurück, das gerade dem angegebenen Handle zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1309">Returns the control that is currently associated with the specified handle.</span></span></summary>
        <returns><span data-ttu-id="8426f-1310">Ein <see cref="T:System.Windows.Forms.Control" />, das das dem angegebenen Handle zugeordnete Steuerelement darstellt, gibt <see langword="null" /> zurück, wenn kein Steuerelement mit dem angegebenen Handle gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1310">A <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns <see langword="null" /> if no control with the specified handle is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1311">Verwenden Sie die- <xref:System.Windows.Forms.Control.FromChildHandle%2A> Methode, wenn Sie Steuerelemente zurückgeben müssen, die mehr als ein Handle besitzen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1311">Use the <xref:System.Windows.Forms.Control.FromChildHandle%2A> method if you need to return controls that own more than one handle.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityObjectById">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetAccessibilityObjectById(int32 objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAccessibilityObjectById (objectId As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetAccessibilityObjectById(int objectId);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject" Usage="control.GetAccessibilityObjectById objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="objectId"><span data-ttu-id="8426f-1312">Ein <see cref="T:System.Int32" />, der das abzurufende <see cref="T:System.Windows.Forms.AccessibleObject" /> bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1312">An <see cref="T:System.Int32" /> that identifies the <see cref="T:System.Windows.Forms.AccessibleObject" /> to retrieve.</span></span></param>
        <summary><span data-ttu-id="8426f-1313">Ruft die angegebene <see cref="T:System.Windows.Forms.AccessibleObject" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-1313">Retrieves the specified <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></summary>
        <returns><span data-ttu-id="8426f-1314">Das angegebene <see cref="T:System.Windows.Forms.AccessibleObject" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1314">The specified <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoSizeMode">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.AutoSizeMode GetAutoSizeMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.AutoSizeMode GetAutoSizeMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetAutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAutoSizeMode () As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::AutoSizeMode GetAutoSizeMode();" />
      <MemberSignature Language="F#" Value="member this.GetAutoSizeMode : unit -&gt; System.Windows.Forms.AutoSizeMode" Usage="control.GetAutoSizeMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-1315">Ruft einen Wert ab, der angibt, wie sich ein Steuerelement verhält, wenn seine <see cref="P:System.Windows.Forms.Control.AutoSize" />-Eigenschaft aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1315">Retrieves a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</span></span></summary>
        <returns><span data-ttu-id="8426f-1316">Einer der <see cref="T:System.Windows.Forms.AutoSizeMode" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-1316">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildAtPoint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-1317">Ruft das untergeordnete Steuerelement an einer angegebenen Position ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-1317">Retrieves the child control at a specified location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildAtPoint (pt As Point) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.GetChildAtPoint : System.Drawing.Point -&gt; System.Windows.Forms.Control" Usage="control.GetChildAtPoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="8426f-1318">Ein <see cref="T:System.Drawing.Point" />, mit den Koordinaten der Position, an denen Sie nach einem Steuerelement suchen möchten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1318">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control.</span></span> <span data-ttu-id="8426f-1319">Die Koordinaten werden relativ zur oberen linken Ecke des Clientbereichs des Steuerelements angegeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1319">Coordinates are expressed relative to the upper-left corner of the control's client area.</span></span></param>
        <summary><span data-ttu-id="8426f-1320">Ruft das untergeordnete Steuerelement ab, das sich an den angegebenen Koordinaten befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1320">Retrieves the child control that is located at the specified coordinates.</span></span></summary>
        <returns><span data-ttu-id="8426f-1321">Ein <see cref="T:System.Windows.Forms.Control" />, das das an der angegebenen Position befindliche Steuerelement darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1321">A <see cref="T:System.Windows.Forms.Control" /> that represents the control that is located at the specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1322">Wenn am angegebenen Punkt kein untergeordnetes Steuerelement vorhanden ist, <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> gibt die Methode zurück `null` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1322">If there is no child control at the specified point, the <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt, System.Windows.Forms.GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.GetChildAtPointSkip skipValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildAtPoint (pt As Point, skipValue As GetChildAtPointSkip) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point pt, System::Windows::Forms::GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="F#" Value="member this.GetChildAtPoint : System.Drawing.Point * System.Windows.Forms.GetChildAtPointSkip -&gt; System.Windows.Forms.Control" Usage="control.GetChildAtPoint (pt, skipValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skipValue" Type="System.Windows.Forms.GetChildAtPointSkip" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="8426f-1323">Ein <see cref="T:System.Drawing.Point" />, mit den Koordinaten der Position, an denen Sie nach einem Steuerelement suchen möchten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1323">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control.</span></span> <span data-ttu-id="8426f-1324">Die Koordinaten werden relativ zur oberen linken Ecke des Clientbereichs des Steuerelements angegeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1324">Coordinates are expressed relative to the upper-left corner of the control's client area.</span></span></param>
        <param name="skipValue"><span data-ttu-id="8426f-1325">Einer der Werte von <see cref="T:System.Windows.Forms.GetChildAtPointSkip" />, womit bestimmt wird, ob untergeordnete Steuerelemente eines bestimmten Typs ignoriert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1325">One of the values of <see cref="T:System.Windows.Forms.GetChildAtPointSkip" />, determining whether to ignore child controls of a certain type.</span></span></param>
        <summary><span data-ttu-id="8426f-1326">Ruft das untergeordnete Steuerelement ab, das sich an den angegebenen Koordinaten befindet, und gibt an, ob untergeordnete Steuerelemente eines bestimmten Typs ignoriert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1326">Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</span></span></summary>
        <returns><span data-ttu-id="8426f-1327">Das untergeordnete <see cref="T:System.Windows.Forms.Control" /> an den angegebenen Koordinaten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1327">The child <see cref="T:System.Windows.Forms.Control" /> at the specified coordinates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IContainerControl GetContainerControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.IContainerControl GetContainerControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetContainerControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContainerControl () As IContainerControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::IContainerControl ^ GetContainerControl();" />
      <MemberSignature Language="F#" Value="member this.GetContainerControl : unit -&gt; System.Windows.Forms.IContainerControl" Usage="control.GetContainerControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IContainerControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-1328">Gibt das nächste <see cref="T:System.Windows.Forms.ContainerControl" /> aufwärts in der Kette übergeordneter Steuerelemente des Steuerelements zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-1328">Returns the next <see cref="T:System.Windows.Forms.ContainerControl" /> up the control's chain of parent controls.</span></span></summary>
        <returns><span data-ttu-id="8426f-1329">Ein <see cref="T:System.Windows.Forms.IContainerControl" />, das das übergeordnete Element des <see cref="T:System.Windows.Forms.Control" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1329">An <see cref="T:System.Windows.Forms.IContainerControl" />, that represents the parent of the <see cref="T:System.Windows.Forms.Control" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="T:System.Windows.Forms.IContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="GetNextControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetNextControl (System.Windows.Forms.Control ctl, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetNextControl(class System.Windows.Forms.Control ctl, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextControl (ctl As Control, forward As Boolean) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetNextControl(System::Windows::Forms::Control ^ ctl, bool forward);" />
      <MemberSignature Language="F#" Value="member this.GetNextControl : System.Windows.Forms.Control * bool -&gt; System.Windows.Forms.Control" Usage="control.GetNextControl (ctl, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="8426f-1330">Das <see cref="T:System.Windows.Forms.Control" />, mit dem die Suche begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1330">The <see cref="T:System.Windows.Forms.Control" /> to start the search with.</span></span></param>
        <param name="forward"><span data-ttu-id="8426f-1331"><see langword="true" />, um vorwärts in der Aktivierreihenfolge zu suchen, <see langword="false" />, um rückwärts zu suchen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1331"><see langword="true" /> to search forward in the tab order; <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="8426f-1332">Ruft das nächste oder vorherige Steuerelement in der Aktivierreihenfolge untergeordneter Steuerelemente ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-1332">Retrieves the next control forward or back in the tab order of child controls.</span></span></summary>
        <returns><span data-ttu-id="8426f-1333">Das nächste <see cref="T:System.Windows.Forms.Control" /> in der Aktivierreihenfolge.</span><span class="sxs-lookup"><span data-stu-id="8426f-1333">The next <see cref="T:System.Windows.Forms.Control" /> in the tab order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1334">Die <xref:System.Windows.Forms.Control.GetNextControl%2A> Methode ist abhängig von der Aktivier Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="8426f-1334">The <xref:System.Windows.Forms.Control.GetNextControl%2A> method is dependent on tab order.</span></span> <span data-ttu-id="8426f-1335">Verwenden Sie die-Eigenschaft, um alle Steuerelemente eines Formulars zu durchlaufen, einschließlich der eingefügten Steuerelemente <xref:System.Windows.Forms.Control.Controls%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1335">To iterate through all controls of a form, including nested controls, use the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="8426f-1336">Um das aktive Steuerelement eines Container Steuer Elements zu erhalten oder festzulegen, verwenden Sie die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-1336">To get or set the active control of a container control, use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredSize (proposedSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Size GetPreferredSize(System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.GetPreferredSize proposedSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedSize" Type="System.Drawing.Size" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="proposedSize"><span data-ttu-id="8426f-1337">Der Bereich mit benutzerdefinierter Größe eines Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1337">The custom-sized area for a control.</span></span></param>
        <summary><span data-ttu-id="8426f-1338">Ruft die Größe eines rechteckigen Bereichs ab, in den ein Steuerelement eingefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-1338">Retrieves the size of a rectangular area into which a control can be fitted.</span></span></summary>
        <returns><span data-ttu-id="8426f-1339">Ein geordnetes Paar vom Typ <see cref="T:System.Drawing.Size" />, das die Breite und Höhe eines Rechtecks darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1339">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1340">Das Verhalten von <xref:System.Windows.Forms.Control.GetPreferredSize%2A> unterscheidet sich durch das-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-1340">The behavior of <xref:System.Windows.Forms.Control.GetPreferredSize%2A> differs by control.</span></span> <span data-ttu-id="8426f-1341">Der <xref:System.Windows.Forms.Control.LayoutEngine%2A> kann die zurückgegebene Größe möglicherweise dem Steuerelement nicht zuweisen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1341">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control.</span></span> <span data-ttu-id="8426f-1342">Sie können eine größere Größe als die Einschränkungen zurückgeben, die im- `proposedSize` Parameter angegeben sind, aber `proposedSize` verringern, wenn die Einschränkung abnimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1342">You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases.</span></span> <span data-ttu-id="8426f-1343">Beispielsweise `GetPreferredSize(new Size(100, 0))` sollte nicht breiter sein als `GetPreferredSize(new Size(200, 0))` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1343">For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`.</span></span> <span data-ttu-id="8426f-1344">Bei der Ausnahme handelt es sich um einen `proposedSize` von 0 oder `Size.Empty` , der als nicht eingeschränkt definiert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1344">The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle&#xA;override this.GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle" Usage="control.GetScaledBounds (bounds, factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="bounds"><span data-ttu-id="8426f-1345">Ein <see cref="T:System.Drawing.Rectangle" />, das den Bereich angibt, für den die Anzeigebegrenzungen abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1345">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span></span></param>
        <param name="factor"><span data-ttu-id="8426f-1346">Die Höhe und Breite der Begrenzungen des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1346">The height and width of the control's bounds.</span></span></param>
        <param name="specified"><span data-ttu-id="8426f-1347">Einer der Werte von <see cref="T:System.Windows.Forms.BoundsSpecified" />, die die Grenzen des Steuerelements angeben, die beim Definieren seiner Größe und Position anzugeben sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-1347">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="8426f-1348">Ruft die Begrenzungen ab, innerhalb derer das Steuerelement skaliert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1348">Retrieves the bounds within which the control is scaled.</span></span></summary>
        <returns><span data-ttu-id="8426f-1349">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen darstellt, innerhalb derer das Steuerelement skaliert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1349">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1350">Dies ist eine Hilfsmethode, die von aufgerufen wird, <xref:System.Windows.Forms.Control.ScaleControl%2A> um die Begrenzungen abzurufen, innerhalb derer das Steuerelement skaliert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1350">This is a helper method that is called by <xref:System.Windows.Forms.Control.ScaleControl%2A> to retrieve the bounds within which the control is scaled.</span></span> <span data-ttu-id="8426f-1351">Sie können diese Methode außer Kraft setzen, um die <xref:System.Windows.Forms.Control.ScaleControl%2A> Skalierungs Logik wiederzuverwenden, aber Sie müssen ihre eigenen Begrenzungen angeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1351">You can override this method to reuse the <xref:System.Windows.Forms.Control.ScaleControl%2A> scaling logic, but you must supply your own bounds.</span></span> <span data-ttu-id="8426f-1352">Die Standard Implementierung gibt skalierte Begrenzungen zurück, die die Begrenzungen berücksichtigen, unabhängig davon, `specified` ob es sich um ein Steuerelement der obersten Ebene handelt, ob es sich um eine fest Breite oder eine automatische Größe handelt und ob es sich bei dem Steuerelement um Zusatzelemente</span><span class="sxs-lookup"><span data-stu-id="8426f-1352">The default implementation returns scaled bounds that take into account the `specified` bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <altmember cref="P:System.Windows.Forms.Control.ScaleChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetStyle">
      <MemberSignature Language="C#" Value="protected bool GetStyle (System.Windows.Forms.ControlStyles flag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool GetStyle(valuetype System.Windows.Forms.ControlStyles flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyle (flag As ControlStyles) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool GetStyle(System::Windows::Forms::ControlStyles flag);" />
      <MemberSignature Language="F#" Value="member this.GetStyle : System.Windows.Forms.ControlStyles -&gt; bool" Usage="control.GetStyle flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Windows.Forms.ControlStyles" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="8426f-1353">Das <see cref="T:System.Windows.Forms.ControlStyles" />-Bit, dessen Wert zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1353">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to return the value from.</span></span></param>
        <summary><span data-ttu-id="8426f-1354">Ruft den Wert für das angegebene Steuerelement-Formatbit für das Steuerelement ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-1354">Retrieves the value of the specified control style bit for the control.</span></span></summary>
        <returns><span data-ttu-id="8426f-1355"><see langword="true" />, wenn das angegebene Steuerelement-Formatbit auf <see langword="true" /> festgelegt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1355"><see langword="true" /> if the specified control style bit is set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1356">Steuerelement-Bitflags werden verwendet, um unterstütztes Verhalten zu kategorisieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-1356">Control style bit flags are used to categorize supported behavior.</span></span> <span data-ttu-id="8426f-1357">Ein Steuerelement kann einen Stil aktivieren, indem er die <xref:System.Windows.Forms.Control.SetStyle%2A> -Methode aufrufen und das entsprechende <xref:System.Windows.Forms.ControlStyles> Bit und den booleschen Wert übergibt, um das-Bit auf festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1357">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit and the Boolean value to set the bit to.</span></span> <span data-ttu-id="8426f-1358">Um den Wert zu bestimmen, der einem angegebenen <xref:System.Windows.Forms.ControlStyles> Bit zugewiesen ist, verwenden Sie die <xref:System.Windows.Forms.Control.GetStyle%2A> -Methode, und übergeben Sie den- <xref:System.Windows.Forms.ControlStyles> Member zum Auswerten von.</span><span class="sxs-lookup"><span data-stu-id="8426f-1358">To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1359">Im folgenden Codebeispiel wird der Wert der mit doppelter Pufferung verknüpften stilbits für eine zurückgegeben <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1359">The following code example returns the value of the double-buffering related style bits for a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8426f-1360">Dieses Beispiel gibt `true` nur dann zurück, wenn alle Style-Bits auf festgelegt sind `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1360">This example returns `true` only if all the style bits are set to `true`.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#4)]
 [!code-csharp[Windows.Forms.ControlMembers6#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#4)]
 [!code-vb[Windows.Forms.ControlMembers6#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevel">
      <MemberSignature Language="C#" Value="protected bool GetTopLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool GetTopLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetTopLevel" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTopLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool GetTopLevel();" />
      <MemberSignature Language="F#" Value="member this.GetTopLevel : unit -&gt; bool" Usage="control.GetTopLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-1361">Bestimmt, ob es sich bei dem Steuerelement um ein Steuerelement der obersten Ebene handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1361">Determines if the control is a top-level control.</span></span></summary>
        <returns><span data-ttu-id="8426f-1362"><see langword="true" />, wenn das Steuerelement ein Steuerelement der obersten Ebene ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1362"><see langword="true" /> if the control is a top-level control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1363">Tritt während eines Ziehvorgangs ein.</span><span class="sxs-lookup"><span data-stu-id="8426f-1363">Occurs during a drag operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1364">Das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis wird ausgelöst, wenn ein Drag & Drop-Vorgang gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1364">The <xref:System.Windows.Forms.Control.GiveFeedback> event is raised when a drag-and-drop operation is started.</span></span> <span data-ttu-id="8426f-1365">Mit dem- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis kann die Quelle eines Drag-Ereignisses die Darstellung des Mauszeigers ändern, um dem Benutzer visuelles Feedback während eines Drag & Drop-Vorgangs zu geben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1365">With the <xref:System.Windows.Forms.Control.GiveFeedback> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="8426f-1366">Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag &amp; Drop-Vorgänge ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1366">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="8426f-1367">Die- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode bestimmt das Steuerelement unter der aktuellen Cursorposition.</span><span class="sxs-lookup"><span data-stu-id="8426f-1367">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="8426f-1368">Anschließend wird überprüft, ob das Steuerelement ein gültiges Ablage Ziel ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1368">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="8426f-1369">Wenn das Steuerelement ein gültiges Ablage Ziel ist, wird das-Ereignis ausgelöst, wenn der <xref:System.Windows.Forms.Control.GiveFeedback> Drag & Drop-Effekt angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1369">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="8426f-1370">Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-1370">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="8426f-1371">Änderungen der Mauszeigerposition, des Tastaturzustands und des Zustands der Maustasten werden verfolgt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1371">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="8426f-1372">Wenn die Benutzeraktion das Fenster verlässt, wird das <xref:System.Windows.Forms.Control.DragLeave>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1372">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="8426f-1373">Wenn der Mauszeiger in ein anderes Steuerelement bewegt wird, wird das <xref:System.Windows.Forms.Control.DragEnter>-Ereignis für dieses Steuerelement ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1373">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="8426f-1374">Wenn die Maus bewegt wird, ohne das Steuerelement zu verlassen, wird das <xref:System.Windows.Forms.Control.DragOver>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1374">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-1375">Wenn sich der Tastatur-oder Maustasten Zustand ändert, <xref:System.Windows.Forms.Control.QueryContinueDrag> wird das-Ereignis ausgelöst, und es wird bestimmt, ob der Zieh Vorgang fortgesetzt, die Daten abgelegt oder der Vorgang basierend auf dem Wert der <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> -Eigenschaft des Ereignisses abgebrochen <xref:System.Windows.Forms.QueryContinueDragEventArgs> werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1375">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="8426f-1376">Wenn der Wert von <xref:System.Windows.Forms.DragAction> `Continue` <xref:System.Windows.Forms.Control.DragOver> auf festgelegt ist, wird das-Ereignis ausgelöst, um den Vorgang fortzusetzen, und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis wird mit dem neuen Effekt ausgelöst, sodass entsprechendes visuelles Feedback festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-1376">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="8426f-1377">Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-1377">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8426f-1378">Das <xref:System.Windows.Forms.Control.DragOver> -Ereignis und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis werden gekoppelt, damit dem Benutzer beim Bewegen der Maus über das Ablage Ziel das aktuellste Feedback an der Position der Maus gegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1378">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="8426f-1379">Wenn der Wert von auf festgelegt ist <xref:System.Windows.Forms.DragAction> `Drop` , wird der Wert des Ablage Effekts an die Quelle zurückgegeben. die Quell Anwendung kann somit den entsprechenden Vorgang für die Quelldaten ausführen, z. b. die Daten Ausschneiden, wenn es sich um einen Verschiebe Vorgang handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1379">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="8426f-1380">Wenn der Wert von <xref:System.Windows.Forms.DragAction> ist `Cancel` , wird das- <xref:System.Windows.Forms.Control.DragLeave> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1380">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-1381">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1381">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1382">Im folgenden Codebeispiel wird ein Drag & Drop-Vorgang zwischen zwei-Steuer <xref:System.Windows.Forms.ListBox> Elementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1382">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="8426f-1383">Im Beispiel wird die-Methode aufgerufen, <xref:System.Windows.Forms.Control.DoDragDrop%2A> Wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1383">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="8426f-1384">Die Zieh Aktion wird gestartet, wenn die Maus <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> während des Ereignisses mehr als die Mausposition bewegt hat <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1384">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="8426f-1385">Die- <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Methode wird verwendet, um den Index des Elements zu bestimmen, das während des-Ereignisses gezogen werden soll `MouseDown` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1385">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="8426f-1386">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="8426f-1386">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="8426f-1387">Für das Beispiel ist es erforderlich, dass zwei Cursor Dateien, `3dwarro.cur` und, `3dwno.cur` im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="8426f-1387">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="8426f-1388">Die benutzerdefinierten Cursor werden verwendet, wenn das `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1388">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="8426f-1389">Die benutzerdefinierten Cursor werden im- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1389">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="8426f-1390">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht ausgewertet `ListBox` , um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der Tasten UMSCHALTTASTE, STRG, alt oder STRG + ALT basiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1390">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="8426f-1391">Der Speicherort in der, an dem der Ablage Vorgang `ListBox` stattfindet, wird auch während des Ereignisses festgelegt `DragOver` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1391">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="8426f-1392">Wenn es sich bei den zu Lösch Endes Daten nicht um handelt `String` , <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> wird der auf in festgelegt `None` <xref:System.Windows.Forms.DragDropEffects> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1392">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="8426f-1393">Schließlich wird der Status der Ablage in der angezeigt `DropLocationLabel` <xref:System.Windows.Forms.Label> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1393">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="8426f-1394">Die Daten, die auf der rechten Seite abgelegt werden, werden `ListBox` im <xref:System.Windows.Forms.Control.DragDrop> -Ereignishandler bestimmt, und der- `String` Wert wird an der entsprechenden Stelle in der hinzugefügt `ListBox` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1394">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="8426f-1395">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im- <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1395">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="8426f-1396">In diesem Code Ausschnitt wird die Verwendung des- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignisses veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1396">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.GiveFeedback> event.</span></span> <span data-ttu-id="8426f-1397">Das gesamte Codebeispiel finden Sie unter der- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8426f-1397">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event EventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : EventHandler " Usage="member this.GotFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1398">Tritt ein, wenn das Steuerelement den Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1398">Occurs when the control receives focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1399">Wenn Sie den Fokus mithilfe der Tastatur (Tab, UMSCHALT + TAB usw.) ändern, indem Sie die- <xref:System.Windows.Forms.Control.Select%2A> Methode oder die- <xref:System.Windows.Forms.Control.SelectNextControl%2A> Methode aufrufen, oder indem Sie die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> Eigenschaft auf das aktuelle Formular festlegen, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1399">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="8426f-1400">Wenn Sie den Fokus mit der Maus oder durch Aufrufen der- <xref:System.Windows.Forms.Control.Focus%2A> Methode ändern, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1400">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="8426f-1401">Wenn die <xref:System.Windows.Forms.Control.CausesValidation%2A> -Eigenschaft auf festgelegt ist `false` , <xref:System.Windows.Forms.Control.Validating> werden die Ereignisse und unter <xref:System.Windows.Forms.Control.Validated> drückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1401">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="8426f-1402">**Hinweis** Das <xref:System.Windows.Forms.Control.GotFocus> -Ereignis und das- <xref:System.Windows.Forms.Control.LostFocus> Ereignis sind Low-Level-Fokus Ereignisse, die an die WM_KILLFOCUS und WM_SETFOCUS Windows-Meldungen gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-1402">**Note** The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</span></span> <span data-ttu-id="8426f-1403">Normalerweise <xref:System.Windows.Forms.Control.GotFocus> werden das-Ereignis und das- <xref:System.Windows.Forms.Control.LostFocus> Ereignis nur beim Aktualisieren von <xref:System.Windows.Forms.UICues> oder beim Schreiben benutzerdefinierter Steuerelemente verwendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1403">Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls.</span></span> <span data-ttu-id="8426f-1404">Stattdessen <xref:System.Windows.Forms.Control.Enter> sollten das-Ereignis und das- <xref:System.Windows.Forms.Control.Leave> Ereignis für alle-Steuerelemente verwendet werden, mit Ausnahme der <xref:System.Windows.Forms.Form> -Klasse, die die <xref:System.Windows.Forms.Form.Activated> Ereignisse und verwendet <xref:System.Windows.Forms.Form.Deactivate></span><span class="sxs-lookup"><span data-stu-id="8426f-1404">Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="8426f-1405">Weitere Informationen zu den <xref:System.Windows.Forms.Control.GotFocus> Ereignissen und <xref:System.Windows.Forms.Control.LostFocus> finden Sie in den Themen [WM_SETFOCUS](/windows/win32/inputdev/wm-setfocus) und [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) .</span><span class="sxs-lookup"><span data-stu-id="8426f-1405">For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](/windows/win32/inputdev/wm-setfocus) and [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) topics.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8426f-1406">Versuchen Sie nicht, den Fokus in den <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.GotFocus> <xref:System.Windows.Forms.Control.Leave> <xref:System.Windows.Forms.Control.LostFocus> <xref:System.Windows.Forms.Control.Validating> <xref:System.Windows.Forms.Control.Validated> Ereignis Handlern,,,, oder festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1406">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="8426f-1407">Dies kann dazu führen, dass Ihre Anwendung oder das Betriebssystem nicht mehr reagiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1407">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="8426f-1408">Weitere Informationen finden Sie im [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) Thema.</span><span class="sxs-lookup"><span data-stu-id="8426f-1408">For more information, see the [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) topic.</span></span>  
  
 <span data-ttu-id="8426f-1409">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1409">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1410">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1410">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-1411">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.GotFocus> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-1411">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.GotFocus> event.</span></span> <span data-ttu-id="8426f-1412">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1412">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="8426f-1413">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-1413">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-1414">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.GotFocus> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1414">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.GotFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#47](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#47)]
 [!code-vb[System.Windows.Forms.EventExamples#47](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.Control.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-515)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-515)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1415">Ruft das Fensterhandle ab, an das das Steuerelement gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1415">Gets the window handle that the control is bound to.</span></span></summary>
        <value><span data-ttu-id="8426f-1416">Ein <see cref="T:System.IntPtr" /> mit dem Fensterhandle (<see langword="HWND" />) des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1416">An <see cref="T:System.IntPtr" /> that contains the window handle (<see langword="HWND" />) of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1417">Der Wert der <xref:System.Windows.Forms.Control.Handle%2A> Eigenschaft ist "Windows" `HWND` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1417">The value of the <xref:System.Windows.Forms.Control.Handle%2A> property is a Windows `HWND`.</span></span> <span data-ttu-id="8426f-1418">Wenn das Handle noch nicht erstellt wurde, wird durch das verweisen auf diese Eigenschaft erzwungen, dass das Handle erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1418">If the handle has not yet been created, referencing this property will force the handle to be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1419">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType> -Eigenschaft und der- <xref:System.Windows.Forms.Control.Handle%2A> Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1419">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType> and the <xref:System.Windows.Forms.Control.Handle%2A> property.</span></span> <span data-ttu-id="8426f-1420">Fügen Sie den folgenden Code in ein Formular ein, um das Beispiel auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1420">To run the example paste the following code in a form.</span></span> <span data-ttu-id="8426f-1421">Fügen Sie zwei Schalt `Button1` Flächen `Button2` mit dem Namen und zum Formular hinzu, und stellen Sie sicher, dass alle Ereignisse mit ihren Ereignis Handlern verbunden sind</span><span class="sxs-lookup"><span data-stu-id="8426f-1421">Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HandleCreated">
      <MemberSignature Language="C#" Value="public event EventHandler HandleCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HandleCreated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HandleCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HandleCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HandleCreated;" />
      <MemberSignature Language="F#" Value="member this.HandleCreated : EventHandler " Usage="member this.HandleCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1422">Tritt ein, wenn ein Handle für das Steuerelement erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1422">Occurs when a handle is created for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1423">Ein Handle wird erstellt, wenn das <xref:System.Windows.Forms.Control> zum ersten Mal angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1423">A handle is created when the <xref:System.Windows.Forms.Control> is displayed for the first time.</span></span> <span data-ttu-id="8426f-1424">Wenn beispielsweise ein <xref:System.Windows.Forms.Control> erstellt wird, für das <xref:System.Windows.Forms.Control.Visible%2A> auf festgelegt ist `false` , wird das- <xref:System.Windows.Forms.Control.HandleCreated> Ereignis erst ausgelöst, wenn <xref:System.Windows.Forms.Control.Visible%2A> auf festgelegt ist `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1424">For example, if a <xref:System.Windows.Forms.Control> is created that has <xref:System.Windows.Forms.Control.Visible%2A> set to `false`, the <xref:System.Windows.Forms.Control.HandleCreated> event will not be raised until <xref:System.Windows.Forms.Control.Visible%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="8426f-1425">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1425">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1426">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1426">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-1427">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.HandleCreated> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-1427">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleCreated> event.</span></span> <span data-ttu-id="8426f-1428">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1428">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-1429">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1429">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-1430">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-1430">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-1431">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.HandleCreated> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1431">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleCreated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#37](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#37)]
 [!code-vb[System.Windows.Forms.EventExamples#37](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HandleDestroyed">
      <MemberSignature Language="C#" Value="public event EventHandler HandleDestroyed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HandleDestroyed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HandleDestroyed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HandleDestroyed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HandleDestroyed;" />
      <MemberSignature Language="F#" Value="member this.HandleDestroyed : EventHandler " Usage="member this.HandleDestroyed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1432">Tritt ein, wenn das Handle des Steuerelements gerade zerstört wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1432">Occurs when the control's handle is in the process of being destroyed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1433">Während des- <xref:System.Windows.Forms.Control.HandleDestroyed> Ereignisses ist das-Steuerelement weiterhin ein gültiges Windows-Steuerelement, und das-Element <xref:System.Windows.Forms.Control.Handle%2A> kann durch Aufrufen der-Methode neu erstellt werden <xref:System.Windows.Forms.Control.RecreateHandle%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1433">During the <xref:System.Windows.Forms.Control.HandleDestroyed> event, the control is still a valid Windows control and the <xref:System.Windows.Forms.Control.Handle%2A> can be recreated by calling the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="8426f-1434">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1434">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1435">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1435">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-1436">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.HandleDestroyed> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-1436">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleDestroyed> event.</span></span> <span data-ttu-id="8426f-1437">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1437">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-1438">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1438">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-1439">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-1439">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-1440">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.HandleDestroyed> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1440">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleDestroyed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#38](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#38)]
 [!code-vb[System.Windows.Forms.EventExamples#38](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Windows.Forms.Control.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1441">Ruft einen Wert ab, der angibt, ob das Steuerelement ein oder mehrere untergeordnete Steuerelemente enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1441">Gets a value indicating whether the control contains one or more child controls.</span></span></summary>
        <value><span data-ttu-id="8426f-1442"><see langword="true" />, wenn das Steuerelement ein oder mehrere untergeordnete Steuerelemente enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1442"><see langword="true" /> if the control contains one or more child controls; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1443">Wenn die Auflistung <xref:System.Windows.Forms.Control.Controls%2A> <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> größer als 0 (null) ist, gibt die- <xref:System.Windows.Forms.Control.HasChildren%2A> Eigenschaft zurück `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1443">If the <xref:System.Windows.Forms.Control.Controls%2A> collection has a <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> greater than zero, the <xref:System.Windows.Forms.Control.HasChildren%2A> property will return `true`.</span></span> <span data-ttu-id="8426f-1444">Durch den Zugriff auf die- <xref:System.Windows.Forms.Control.HasChildren%2A> Eigenschaft wird das Erstellen einer nicht erzwungen <xref:System.Windows.Forms.Control.ControlCollection> , wenn das Steuerelement keine untergeordneten Elemente aufweist. Daher kann das verweisen auf diese Eigenschaft einen Leistungsvorteil beim Durchlaufen einer Struktur von Steuerelementen bieten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1444">Accessing the <xref:System.Windows.Forms.Control.HasChildren%2A> property does not force the creation of a <xref:System.Windows.Forms.Control.ControlCollection> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1445">Im folgenden Codebeispiel werden die <xref:System.Windows.Forms.Control.BackColor%2A> und <xref:System.Windows.Forms.Control.ForeColor%2A> der-Steuerelemente auf die Standardsystem Farben festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1445">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="8426f-1446">Der Code ruft rekursiv selbst auf, wenn das Steuerelement über untergeordnete Steuerelemente verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1446">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="8426f-1447">Für dieses Codebeispiel ist es erforderlich, dass Sie über ein-Element mit mindestens einem untergeordneten Steuerelement verfügen <xref:System.Windows.Forms.Form> . ein untergeordnetes Container Steuerelement, wie z. b. <xref:System.Windows.Forms.Panel> oder, mit einem untergeordneten Steuerelement <xref:System.Windows.Forms.GroupBox> (en) würde die Rekursion besser veranschaulichen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1447">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.Control.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1448">Ruft die Höhe des Steuerelements ab bzw. legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1448">Gets or sets the height of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-1449">Die Höhe des Steuerelements in Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-1449">The height of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1450">Änderungen an den <xref:System.Windows.Forms.Control.Height%2A> <xref:System.Windows.Forms.Control.Top%2A> Eigenschafts Werten und bewirken, dass der- <xref:System.Windows.Forms.Control.Bottom%2A> Eigenschafts Wert des Steuer Elements geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1450">Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1451">Die Mindesthöhe für das abgeleitete Steuerelement <xref:System.Windows.Forms.Splitter> ist ein Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-1451">The minimum height for the derived control <xref:System.Windows.Forms.Splitter> is one pixel.</span></span> <span data-ttu-id="8426f-1452">Die Standardhöhe für das- <xref:System.Windows.Forms.Splitter> Steuerelement beträgt drei Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-1452">The default height for the <xref:System.Windows.Forms.Splitter> control is three pixels.</span></span> <span data-ttu-id="8426f-1453">Wenn die Höhe des <xref:System.Windows.Forms.Splitter> Steuer Elements auf einen Wert kleiner als 1 festgelegt wird, wird der Eigenschafts Wert auf die Standardhöhe zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1453">Setting the height of the <xref:System.Windows.Forms.Splitter> control to a value less than one will reset the property value to the default height.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1454">Im folgenden Codebeispiel werden drei Steuer <xref:System.Windows.Forms.Button> Elemente auf einem Formular erstellt, und die Größe und die Position werden mithilfe der verschiedenen Größen bezogenen und standortbezogenen Eigenschaften festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1454">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="8426f-1455">Für dieses Beispiel ist es erforderlich, dass Sie über eine <xref:System.Windows.Forms.Form> mit einer Breite und Höhe von mindestens 300 Pixel verfügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1455">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Drawing.Size.Height" />
      </Docs>
    </Member>
    <Member MemberName="HelpRequested">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HelpEventHandler HelpRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HelpEventHandler HelpRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HelpRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequested As HelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HelpEventHandler ^ HelpRequested;" />
      <MemberSignature Language="F#" Value="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " Usage="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1456">Tritt ein, wenn der Benutzer die Hilfe für ein Steuerelement anfordert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1456">Occurs when the user requests help for a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1457">Das <xref:System.Windows.Forms.Control.HelpRequested> Ereignis wird häufig ausgelöst, wenn der Benutzer die F1-Taste drückt oder wenn auf eine zugeordnete kontextabhängige Hilfe Schaltfläche geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1457">The <xref:System.Windows.Forms.Control.HelpRequested> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.</span></span>  
  
 <span data-ttu-id="8426f-1458">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1458">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1459">Im folgenden Codebeispiel wird die Behandlung des- <xref:System.Windows.Forms.Control.HelpRequested> Ereignisses zum Anzeigen von benutzerdefiniertem Hilfe Inhalt in einem Formular veranschaulicht, das vier Adressfelder enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1459">The following code example demonstrates handling the <xref:System.Windows.Forms.Control.HelpRequested> event to display custom Help content on a form containing four address fields.</span></span> <span data-ttu-id="8426f-1460">Das- <xref:System.Windows.Forms.Control.HelpRequested> Ereignis wird entweder durch Drücken der F1-Taste mit dem Fokus in einem Adressfeld oder durch das Verwenden der kontextabhängigen Hilfe Schaltfläche und durch Klicken auf den Hilfe Cursor in einem Adressfeld ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1460">The <xref:System.Windows.Forms.Control.HelpRequested> event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field.</span></span> <span data-ttu-id="8426f-1461">Die- <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> Eigenschaft wird auf true festgelegt, um anzugeben, dass das `HelpRequested` Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1461">The <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> property is set to true to indicate that the `HelpRequested` event is handled.</span></span> <span data-ttu-id="8426f-1462">Das Beispiel veranschaulicht auch das Speichern des Hilfe Texts in der- <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-1462">The example also demonstrates storing the Help text in the <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CPP/helpevent.cpp#1)]
 [!code-csharp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CS/helpevent.cs#1)]
 [!code-vb[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/VB/helpevent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <altmember cref="T:System.Windows.Forms.HelpProvider" />
        <altmember cref="T:System.Windows.Forms.Help" />
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="control.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-1463">Verbirgt das Steuerelement vor dem Benutzer.</span><span class="sxs-lookup"><span data-stu-id="8426f-1463">Conceals the control from the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1464">Wenn Sie das Steuerelement ausblenden, entspricht dies dem Festlegen der- <xref:System.Windows.Forms.Control.Visible%2A> Eigenschaft auf `false` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1464">Hiding the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `false`.</span></span> <span data-ttu-id="8426f-1465">Nachdem die- <xref:System.Windows.Forms.Control.Hide%2A> Methode aufgerufen wurde, <xref:System.Windows.Forms.Control.Visible%2A> gibt die-Eigenschaft den Wert zurück, `false` bis die- <xref:System.Windows.Forms.Control.Show%2A> Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1465">After the <xref:System.Windows.Forms.Control.Hide%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `false` until the <xref:System.Windows.Forms.Control.Show%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1466">Im folgenden Codebeispiel wird eine Schaltfläche ausgeblendet, wenn die STRG-Taste gedrückt wird, wenn auf die Schaltfläche geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1466">The following code example hides a button if the CTRL key is pressed when the button is clicked.</span></span> <span data-ttu-id="8426f-1467">Für dieses Beispiel ist es erforderlich, dass ein <xref:System.Windows.Forms.Button> mit dem Namen `button1` auf einem- <xref:System.Windows.Forms.Form></span><span class="sxs-lookup"><span data-stu-id="8426f-1467">This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]
 [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Show" />
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImeMode ImeMode { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeMode : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.Control.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1468">Ruft den IME-Modus (Eingabemethoden-Editor) des Steuerelements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1468">Gets or sets the Input Method Editor (IME) mode of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-1469">Einer der <see cref="T:System.Windows.Forms.ImeMode" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-1469">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span></span> <span data-ttu-id="8426f-1470">Der Standardwert ist <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1470">The default is <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1471">Ein IME ist ein Programm, mit dem Benutzer komplexe Zeichen und Symbole, wie z. b. japanische Kanji-Zeichen, mithilfe einer Standardtastatur eingeben können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1471">An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard.</span></span> <span data-ttu-id="8426f-1472">Die- <xref:System.Windows.Forms.Control.ImeMode%2A> Eigenschaft wird in der Regel auf für ein Steuerelement festgelegt, <xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType> <xref:System.Windows.Forms.TextBox> das nur numerische Werte eingeben soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1472">The <xref:System.Windows.Forms.Control.ImeMode%2A> property is typically set to <xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType> for a <xref:System.Windows.Forms.TextBox> control that is intended to only enter numeric values.</span></span> <span data-ttu-id="8426f-1473">Der- <xref:System.Windows.Forms.Control.ImeMode%2A> Eigenschafts Wert ist <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> für die-Klasse auf festgelegt <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1473">The <xref:System.Windows.Forms.Control.ImeMode%2A> property value is set to <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> for the <xref:System.Windows.Forms.Form> class.</span></span>  
  
 <span data-ttu-id="8426f-1474">Die meisten Klassen, die die Eingabemethoden-Editoren nicht direkt unterstützen oder direkte Eingaben aus einer IME zulassen, legen den Wert dieser Eigenschaft auf fest <xref:System.Windows.Forms.ImeMode.NoControl> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1474">Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <xref:System.Windows.Forms.ImeMode.NoControl>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8426f-1475">Der Benutzer kann den interaktiv ändern <xref:System.Windows.Forms.Control.ImeMode%2A> , sofern er nicht Programm gesteuert auf festgelegt wurde <xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1475">The user can interactively change the <xref:System.Windows.Forms.Control.ImeMode%2A> unless it has been programmatically set to <xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8426f-1476">In diesem Fall kann der Benutzer den IME nicht verwenden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1476">In this case, the user will not be able to use the IME.</span></span>  
>   
>  <span data-ttu-id="8426f-1477">Die- <xref:System.Windows.Forms.Control.ImeMode%2A> Eigenschaft wird unter Windows 8 ignoriert, wenn der globale Eingabemodus wirksam ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1477">The <xref:System.Windows.Forms.Control.ImeMode%2A> property is ignored on Windows 8 when the global input mode is in effect.</span></span> <span data-ttu-id="8426f-1478">Weitere Informationen finden Sie unter [Switch Text Input from an Thread to User](https://go.microsoft.com/fwlink/?LinkID=256509).</span><span class="sxs-lookup"><span data-stu-id="8426f-1478">For more info, see [Switch Text Input Changed from Per-Thread to Per-User](https://go.microsoft.com/fwlink/?LinkID=256509).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8426f-1479">Der zugewiesene Wert ist keiner der <see cref="T:System.Windows.Forms.ImeMode" />-Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="8426f-1479">The assigned value is not one of the <see cref="T:System.Windows.Forms.ImeMode" /> enumeration values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.Control.DefaultImeMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.Control.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1480">Ruft den IME-Modus eines Steuerelements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1480">Gets or sets the IME mode of a control.</span></span></summary>
        <value><span data-ttu-id="8426f-1481">Der IME-Modus des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1481">The IME mode of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ImeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ImeModeChanged : EventHandler " Usage="member this.ImeModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1482">Tritt ein, wenn die <see cref="P:System.Windows.Forms.Control.ImeMode" />-Eigenschaft geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1482">Occurs when the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1483">Dieses Ereignis wird ausgelöst, wenn die- <xref:System.Windows.Forms.Control.ImeMode%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder durch Interaktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1483">This event is raised if the <xref:System.Windows.Forms.Control.ImeMode%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="8426f-1484">Steuerelemente, die keine Eingabemethoden-Manager unterstützen, machen dieses Ereignis nie aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1484">Controls that do not support Input Method Managers will never raise this event.</span></span>  
  
 <span data-ttu-id="8426f-1485">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1485">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1486">Das folgende Codebeispiel ist ein Ereignishandler, der ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1486">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-1487">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster *propertyName* `Changed` , die ausgelöst werden, wenn der entsprechende *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-1487">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-1488">Im folgenden Codebeispiel wird der von einem-Wert geändert, der <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> Währungs Daten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1488">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="8426f-1489">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1489">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-1490">Für dieses Beispiel ist es erforderlich, dass über ein <xref:System.Windows.Forms.Form> verfügt, das eine enthält <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1490">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="protected virtual void InitLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InitLayout" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitLayout ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitLayout();" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : unit -&gt; unit&#xA;override this.InitLayout : unit -&gt; unit" Usage="control.InitLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-1491">Wird nach dem Hinzufügen des Steuerelements zu einem anderen Container aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1491">Called after the control has been added to another container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1492">Die- <xref:System.Windows.Forms.Control.InitLayout%2A> Methode wird sofort nach dem Hinzufügen eines-Steuer Elements zu einem Container aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1492">The <xref:System.Windows.Forms.Control.InitLayout%2A> method is called immediately after adding a control to a container.</span></span> <span data-ttu-id="8426f-1493">Die- <xref:System.Windows.Forms.Control.InitLayout%2A> Methode ermöglicht es einem Steuerelement, seinen Layoutzustand basierend auf seinem Container zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-1493">The <xref:System.Windows.Forms.Control.InitLayout%2A> method enables a control to initialize its layout state based on its container.</span></span> <span data-ttu-id="8426f-1494">Beispielsweise würden Sie in der Regel das verankern und Andocken auf das Steuerelement in der- <xref:System.Windows.Forms.Control.InitLayout%2A> Methode anwenden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1494">For example, you would typically apply anchoring and docking to the control in the <xref:System.Windows.Forms.Control.InitLayout%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-1495">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.InitLayout" /> in einer abgeleiteten Klasse sicher, dass die-Methode der Basisklasse aufgerufen wird, <see cref="M:System.Windows.Forms.Control.InitLayout" /> damit das Steuerelement ordnungsgemäß angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1495">When overriding <see cref="M:System.Windows.Forms.Control.InitLayout" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.InitLayout" /> method so that the control is displayed correctly.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.Anchor" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-1496">Erklärt einen bestimmten Bereich des Steuerelements für ungültig und veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1496">Invalidates a specific region of the control and causes a paint message to be sent to the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="control.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-1497">Erklärt die ganze Oberfläche des Steuerelements für ungültig und bewirkt, dass das Steuerelement neu gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1497">Invalidates the entire surface of the control and causes the control to be redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1498">Das Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode erzwingt keine synchrone Farbe. um eine synchrone Farbe zu erzwingen, rufen Sie die- <xref:System.Windows.Forms.Control.Update%2A> Methode nach dem Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1498">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="8426f-1499">Wenn diese Methode ohne Parameter aufgerufen wird, wird der gesamte Client Bereich der Aktualisierungs Region hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1499">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1500">Im folgenden Codebeispiel kann der Benutzer ein Bild oder eine Bilddatei auf das Formular ziehen und ihn an dem Punkt, an dem er abgelegt wird, anzeigen lassen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1500">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="8426f-1501">Die- <xref:System.Windows.Forms.Control.OnPaint%2A> Methode wird überschrieben, um jedes Mal, wenn das Formular gezeichnet wird, das Bild neu zu zeichnen. andernfalls wird das Bild nur bis zum nächsten Neuzeichnen beibehalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1501">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="8426f-1502">Die <xref:System.Windows.Forms.Control.DragEnter> Ereignis Behandlungsmethode bestimmt den Typ der Daten, die in das Formular gezogen werden, und stellt das entsprechende Feedback bereit.</span><span class="sxs-lookup"><span data-stu-id="8426f-1502">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="8426f-1503">Die <xref:System.Windows.Forms.Control.DragDrop> Ereignis Behandlungsmethode zeigt das Bild auf dem Formular an, wenn eine <xref:System.Drawing.Image> aus den Daten erstellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-1503">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="8426f-1504">Da der <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> -Wert und der- <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> Wert Bildschirm Koordinaten sind, wird im Beispiel die-Methode verwendet, <xref:System.Windows.Forms.Control.PointToClient%2A> um Sie in Client Koordinaten zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-1504">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (invalidateChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : bool -&gt; unit" Usage="control.Invalidate invalidateChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="invalidateChildren"><span data-ttu-id="8426f-1505"><see langword="true" />, um die untergeordneten Steuerelemente des Steuerelements für ungültig zu erklären, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1505"><see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8426f-1506">Erklärt einen bestimmten Bereich des Steuerelements für ungültig und veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1506">Invalidates a specific region of the control and causes a paint message to be sent to the control.</span></span> <span data-ttu-id="8426f-1507">Bei Bedarf wird das dem Steuerelement zugewiesene untergeordnete Steuerelement für ungültig erklärt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1507">Optionally, invalidates the child controls assigned to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1508">Das Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode erzwingt keine synchrone Farbe. um eine synchrone Farbe zu erzwingen, rufen Sie die- <xref:System.Windows.Forms.Control.Update%2A> Methode nach dem Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1508">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="8426f-1509">Wenn diese Methode ohne Parameter aufgerufen wird, wird der gesamte Client Bereich der Aktualisierungs Region hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1509">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (rc As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rc);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="control.Invalidate rc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rc"><span data-ttu-id="8426f-1510">Ein <see cref="T:System.Drawing.Rectangle" />, das den für ungültig zu erklärenden Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1510">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate.</span></span></param>
        <summary><span data-ttu-id="8426f-1511">Erklärt den angegebenen Bereich des Steuerelements für ungültig, indem es diesen dem Aktualisierungsbereich des Steuerelements hinzufügt. Dies ist der Bereich, der beim nächsten Zeichnenvorgang neu gezeichnet wird. Außerdem wird veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1511">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1512">Das Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode erzwingt keine synchrone Farbe. um eine synchrone Farbe zu erzwingen, rufen Sie die- <xref:System.Windows.Forms.Control.Update%2A> Methode nach dem Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1512">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="8426f-1513">Wenn diese Methode ohne Parameter aufgerufen wird, wird der gesamte Client Bereich der Aktualisierungs Region hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1513">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (region As Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Region -&gt; unit" Usage="control.Invalidate region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="8426f-1514">Die für ungültig zu erklärende <see cref="T:System.Drawing.Region" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1514">The <see cref="T:System.Drawing.Region" /> to invalidate.</span></span></param>
        <summary><span data-ttu-id="8426f-1515">Erklärt den angegebenen Bereich des Steuerelements für ungültig, indem es diesen dem Aktualisierungsbereich des Steuerelements hinzufügt. Dies ist der Bereich, der beim nächsten Zeichnenvorgang neu gezeichnet wird. Außerdem wird veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1515">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1516">Das Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode erzwingt keine synchrone Farbe. um eine synchrone Farbe zu erzwingen, rufen Sie die- <xref:System.Windows.Forms.Control.Update%2A> Methode nach dem Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1516">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="8426f-1517">Wenn diese Methode ohne Parameter aufgerufen wird, wird der gesamte Client Bereich der Aktualisierungs Region hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1517">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rc, bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rc, bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (rc As Rectangle, invalidateChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rc, bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle * bool -&gt; unit" Usage="control.Invalidate (rc, invalidateChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="System.Drawing.Rectangle" />
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rc"><span data-ttu-id="8426f-1518">Ein <see cref="T:System.Drawing.Rectangle" />, das den für ungültig zu erklärenden Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1518">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate.</span></span></param>
        <param name="invalidateChildren"><span data-ttu-id="8426f-1519"><see langword="true" />, um die untergeordneten Steuerelemente des Steuerelements für ungültig zu erklären, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1519"><see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8426f-1520">Erklärt den angegebenen Bereich des Steuerelements für ungültig, indem es diesen dem Aktualisierungsbereich des Steuerelements hinzufügt. Dies ist der Bereich, der beim nächsten Zeichnenvorgang neu gezeichnet wird. Außerdem wird veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1520">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span> <span data-ttu-id="8426f-1521">Bei Bedarf wird das dem Steuerelement zugewiesene untergeordnete Steuerelement für ungültig erklärt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1521">Optionally, invalidates the child controls assigned to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1522">Das Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode erzwingt keine synchrone Farbe. um eine synchrone Farbe zu erzwingen, rufen Sie die- <xref:System.Windows.Forms.Control.Update%2A> Methode nach dem Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1522">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="8426f-1523">Wenn diese Methode ohne Parameter aufgerufen wird, wird der gesamte Client Bereich der Aktualisierungs Region hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1523">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region, bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region, bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (region As Region, invalidateChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Region ^ region, bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Region * bool -&gt; unit" Usage="control.Invalidate (region, invalidateChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="8426f-1524">Die für ungültig zu erklärende <see cref="T:System.Drawing.Region" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1524">The <see cref="T:System.Drawing.Region" /> to invalidate.</span></span></param>
        <param name="invalidateChildren"><span data-ttu-id="8426f-1525"><see langword="true" />, um die untergeordneten Steuerelemente des Steuerelements für ungültig zu erklären, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1525"><see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8426f-1526">Erklärt den angegebenen Bereich des Steuerelements für ungültig, indem es diesen dem Aktualisierungsbereich des Steuerelements hinzufügt. Dies ist der Bereich, der beim nächsten Zeichnenvorgang neu gezeichnet wird. Außerdem wird veranlasst, dass eine Zeichnenmeldung an das Steuerelement gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1526">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span> <span data-ttu-id="8426f-1527">Bei Bedarf wird das dem Steuerelement zugewiesene untergeordnete Steuerelement für ungültig erklärt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1527">Optionally, invalidates the child controls assigned to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1528">Das Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode erzwingt keine synchrone Farbe. um eine synchrone Farbe zu erzwingen, rufen Sie die- <xref:System.Windows.Forms.Control.Update%2A> Methode nach dem Aufrufen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-1528">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="8426f-1529">Wenn diese Methode ohne Parameter aufgerufen wird, wird der gesamte Client Bereich der Aktualisierungs Region hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1529">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InvalidateEventHandler Invalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InvalidateEventHandler Invalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Invalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Invalidated As InvalidateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InvalidateEventHandler ^ Invalidated;" />
      <MemberSignature Language="F#" Value="member this.Invalidated : System.Windows.Forms.InvalidateEventHandler " Usage="member this.Invalidated : System.Windows.Forms.InvalidateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InvalidateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1530">Tritt ein, wenn für die Anzeige eines Steuerelements eine Neuzeichnung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1530">Occurs when a control's display requires redrawing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1531">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1531">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1532">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1532">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-1533">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.Invalidated> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-1533">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.Invalidated> event.</span></span> <span data-ttu-id="8426f-1534">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1534">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-1535">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1535">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-1536">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-1536">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-1537">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.Invalidated> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1537">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.Invalidated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#40)]
 [!code-vb[System.Windows.Forms.EventExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-1538">Führt einen Delegaten in dem Thread aus, der das dem Steuerelement zugrunde liegende Fensterhandle besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1538">Executes a delegate on the thread that owns the control's underlying window handle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate -&gt; obj" Usage="control.Invoke method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="8426f-1539">Ein Delegat, der eine aufzurufende Methode im Threadkontext des Steuerelements enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1539">A delegate that contains a method to be called in the control's thread context.</span></span></param>
        <summary><span data-ttu-id="8426f-1540">Führt den angegebenen Delegaten für den Thread aus, der das dem Steuerelement zugrunde liegende Fensterhandle besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1540">Executes the specified delegate on the thread that owns the control's underlying window handle.</span></span></summary>
        <returns><span data-ttu-id="8426f-1541">Der Rückgabewert des aufgerufenen Delegaten bzw. <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1541">The return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1542">Delegaten ähneln Funktions Zeigern in C-oder C++-Sprachen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1542">Delegates are similar to function pointers in C or C++ languages.</span></span> <span data-ttu-id="8426f-1543">Delegaten Kapseln einen Verweis auf eine Methode innerhalb eines Delegatobjekts.</span><span class="sxs-lookup"><span data-stu-id="8426f-1543">Delegates encapsulate a reference to a method inside a delegate object.</span></span> <span data-ttu-id="8426f-1544">Das Delegatobjekt kann dann an den Code weitergeleitet werden, der die referenzierte Methode aufruft, und die aufzurufende Methode kann zur Kompilierzeit nicht bekannt sein.</span><span class="sxs-lookup"><span data-stu-id="8426f-1544">The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</span></span> <span data-ttu-id="8426f-1545">Im Gegensatz zu Funktions Zeigern in C oder C++ sind Delegaten objektorientiert, typsicher und sicherer.</span><span class="sxs-lookup"><span data-stu-id="8426f-1545">Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</span></span>  
  
 <span data-ttu-id="8426f-1546">Die <xref:System.Windows.Forms.Control.Invoke%2A> -Methode durchsucht die übergeordnete Kette des Steuer Elements, bis ein Steuerelement oder ein Formular mit einem Fenster Handle gefunden wird, wenn das zugrunde liegende Fenster Handle des aktuellen Steuer Elements noch nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1546">The <xref:System.Windows.Forms.Control.Invoke%2A> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet.</span></span> <span data-ttu-id="8426f-1547">Wenn kein entsprechendes Handle gefunden werden kann, löst die <xref:System.Windows.Forms.Control.Invoke%2A> Methode eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1547">If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.Invoke%2A> method will throw an exception.</span></span> <span data-ttu-id="8426f-1548">Ausnahmen, die während des Aufrufens ausgelöst werden, werden an den Aufrufer zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1548">Exceptions that are raised during the call will be propagated back to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1549">Zusätzlich zur- <xref:System.Windows.Forms.Control.InvokeRequired%2A> Eigenschaft gibt es vier Methoden auf einem-Steuerelement, die Thread sicher sind: <xref:System.Windows.Forms.Control.Invoke%2A> , <xref:System.Windows.Forms.Control.BeginInvoke%2A> , und, <xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.CreateGraphics%2A> Wenn das Handle für das Steuerelement bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1549">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="8426f-1550">Wenn aufgerufen wird, <xref:System.Windows.Forms.Control.CreateGraphics%2A> bevor das Handle des Steuer Elements in einem Hintergrund Thread erstellt wurde, kann dies zu ungültigen Thread übergreifenden aufrufen führen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1550">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="8426f-1551">Für alle anderen Methodenaufrufe sollten Sie eine der Aufruf Methoden verwenden, um den Aufruf an den Thread des Steuer Elements zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1551">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 <span data-ttu-id="8426f-1552">Der Delegat kann eine Instanz von sein <xref:System.EventHandler> . in diesem Fall enthält der Sender-Parameter dieses Steuerelement, und der Ereignis Parameter enthält <xref:System.EventArgs.Empty?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1552">The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8426f-1553">Der Delegat kann auch eine Instanz von oder ein beliebiger anderer Delegat sein, der <xref:System.Windows.Forms.MethodInvoker> eine void-Parameterliste annimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1553">The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list.</span></span> <span data-ttu-id="8426f-1554">Ein Aufruf eines-oder-Delegaten ist <xref:System.EventHandler> <xref:System.Windows.Forms.MethodInvoker> schneller als ein Aufruf eines anderen Delegattyps.</span><span class="sxs-lookup"><span data-stu-id="8426f-1554">A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1555">Eine Ausnahme kann ausgelöst werden, wenn der Thread, der die Nachricht verarbeiten soll, nicht mehr aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1555">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1556">Das folgende Codebeispiel zeigt Steuerelemente, die einen Delegaten enthalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1556">The following code example shows controls that contain a delegate.</span></span> <span data-ttu-id="8426f-1557">Der-Delegat kapselt eine Methode, die dem Listenfeld Elemente hinzufügt, und diese Methode wird auf dem Thread ausgeführt, der das zugrunde liegende Handle des Formulars besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1557">The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form.</span></span> <span data-ttu-id="8426f-1558">Wenn der Benutzer auf die Schaltfläche klickt, führt den Delegaten aus `Invoke` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1558">When the user clicks on the button, `Invoke` runs the delegate.</span></span>  
  
 [!code-cpp[Control_Invoke2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke2/CPP/control_invoke2.cpp#1)]
 [!code-csharp[Control_Invoke2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke2/CS/control_invoke2.cs#1)]
 [!code-vb[Control_Invoke2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke2/VB/control_invoke2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MethodInvoker" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj&#xA;override this.Invoke : Delegate * obj[] -&gt; obj" Usage="control.Invoke (method, args)" />
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="8426f-1559">Ein Delegat einer Methode, der Parameter derselben Anzahl und desselben Typs der im <paramref name="args" />-Parameter enthaltenen Parameter annimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1559">A delegate to a method that takes parameters of the same number and type that are contained in the <paramref name="args" /> parameter.</span></span></param>
        <param name="args"><span data-ttu-id="8426f-1560">Ein Array von Objekten, die als Argumente an die angegebene Methode übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1560">An array of objects to pass as arguments to the specified method.</span></span> <span data-ttu-id="8426f-1561">Dieser Parameter kann <see langword="null" /> sein, wenn die Methode keine Argumente annimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1561">This parameter can be <see langword="null" /> if the method takes no arguments.</span></span></param>
        <summary><span data-ttu-id="8426f-1562">Führt mit der angegebenen Argumentliste den angegebenen Delegaten für den Thread aus, der das dem Steuerelement zugrunde liegende Fensterhandle besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1562">Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.</span></span></summary>
        <returns><span data-ttu-id="8426f-1563">Ein <see cref="T:System.Object" />, das den Rückgabewert des aufgerufenen Delegaten enthält, oder <see langword="null" />, wenn der Delegat keinen Wert zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1563">An <see cref="T:System.Object" /> that contains the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1564">Delegaten ähneln Funktions Zeigern in C-oder C++-Sprachen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1564">Delegates are similar to function pointers in C or C++ languages.</span></span> <span data-ttu-id="8426f-1565">Delegaten Kapseln einen Verweis auf eine Methode innerhalb eines Delegatobjekts.</span><span class="sxs-lookup"><span data-stu-id="8426f-1565">Delegates encapsulate a reference to a method inside a delegate object.</span></span> <span data-ttu-id="8426f-1566">Das Delegatobjekt kann dann an den Code weitergeleitet werden, der die referenzierte Methode aufruft, und die aufzurufende Methode kann zur Kompilierzeit nicht bekannt sein.</span><span class="sxs-lookup"><span data-stu-id="8426f-1566">The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</span></span> <span data-ttu-id="8426f-1567">Im Gegensatz zu Funktions Zeigern in C oder C++ sind Delegaten objektorientiert, typsicher und sicherer.</span><span class="sxs-lookup"><span data-stu-id="8426f-1567">Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</span></span>  
  
 <span data-ttu-id="8426f-1568">Wenn das Handle des Steuer Elements noch nicht vorhanden ist, durchsucht diese Methode die übergeordnete Kette des Steuer Elements, bis ein Steuerelement oder ein Formular gefunden wird, das über ein Fenster Handle verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1568">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="8426f-1569">Wenn kein entsprechendes Handle gefunden werden kann, löst diese Methode eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1569">If no appropriate handle can be found, this method throws an exception.</span></span> <span data-ttu-id="8426f-1570">Ausnahmen, die während des Aufrufens ausgelöst werden, werden an den Aufrufer zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1570">Exceptions that are raised during the call will be propagated back to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1571">Zusätzlich zur- <xref:System.Windows.Forms.Control.InvokeRequired%2A> Eigenschaft gibt es vier Methoden auf einem-Steuerelement, die Thread sicher sind: <xref:System.Windows.Forms.Control.Invoke%2A> , <xref:System.Windows.Forms.Control.BeginInvoke%2A> , und, <xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.CreateGraphics%2A> Wenn das Handle für das Steuerelement bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1571">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="8426f-1572">Wenn aufgerufen wird, <xref:System.Windows.Forms.Control.CreateGraphics%2A> bevor das Handle des Steuer Elements in einem Hintergrund Thread erstellt wurde, kann dies zu ungültigen Thread übergreifenden aufrufen führen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1572">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="8426f-1573">Für alle anderen Methodenaufrufe sollten Sie eine der Aufruf Methoden verwenden, um den Aufruf an den Thread des Steuer Elements zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1573">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 <span data-ttu-id="8426f-1574">Der Delegat kann eine Instanz von sein <xref:System.EventHandler> . in diesem Fall enthält der Sender-Parameter dieses Steuerelement, und der Ereignis Parameter enthält <xref:System.EventArgs.Empty?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1574">The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8426f-1575">Der Delegat kann auch eine Instanz von oder ein beliebiger anderer Delegat sein, der <xref:System.Windows.Forms.MethodInvoker> eine void-Parameterliste annimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1575">The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list.</span></span> <span data-ttu-id="8426f-1576">Ein Aufruf eines-oder-Delegaten ist <xref:System.EventHandler> <xref:System.Windows.Forms.MethodInvoker> schneller als ein Aufruf eines anderen Delegattyps.</span><span class="sxs-lookup"><span data-stu-id="8426f-1576">A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1577">Eine Ausnahme kann ausgelöst werden, wenn der Thread, der die Nachricht verarbeiten soll, nicht mehr aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1577">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1578">Das folgende Codebeispiel zeigt Steuerelemente, die einen Delegaten enthalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1578">The following code example shows controls that contain a delegate.</span></span> <span data-ttu-id="8426f-1579">Der-Delegat kapselt eine Methode, die dem Listenfeld Elemente hinzufügt, und diese Methode wird auf dem Thread ausgeführt, der das zugrunde liegende Handle des Formulars besitzt, wobei die angegebenen Argumente verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1579">The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments.</span></span> <span data-ttu-id="8426f-1580">Wenn der Benutzer auf die Schaltfläche klickt, führt den Delegaten aus `Invoke` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1580">When the user clicks on the button, `Invoke` runs the delegate.</span></span>  
  
 [!code-cpp[Control_Invoke1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke1/CPP/control_invoke1.cpp#1)]
 [!code-csharp[Control_Invoke1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke1/CS/control_invoke1.cs#1)]
 [!code-vb[Control_Invoke1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke1/VB/control_invoke1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MethodInvoker" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="InvokeGotFocus">
      <MemberSignature Language="C#" Value="protected void InvokeGotFocus (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeGotFocus(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeGotFocus (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeGotFocus(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeGotFocus : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeGotFocus (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="8426f-1581">Das <see cref="T:System.Windows.Forms.Control" />, dem das Ereignis zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1581">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to.</span></span></param>
        <param name="e"><span data-ttu-id="8426f-1582">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1582">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-1583">Löst das <see cref="E:System.Windows.Forms.Control.GotFocus" />-Ereignis für das angegebene Steuerelement aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1583">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeLostFocus">
      <MemberSignature Language="C#" Value="protected void InvokeLostFocus (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeLostFocus(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeLostFocus (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeLostFocus(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeLostFocus : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeLostFocus (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="8426f-1584">Das <see cref="T:System.Windows.Forms.Control" />, dem das Ereignis zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1584">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to.</span></span></param>
        <param name="e"><span data-ttu-id="8426f-1585">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1585">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-1586">Löst das <see cref="E:System.Windows.Forms.Control.LostFocus" />-Ereignis für das angegebene Steuerelement aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1586">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOnClick">
      <MemberSignature Language="C#" Value="protected void InvokeOnClick (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeOnClick(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeOnClick (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeOnClick(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeOnClick : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeOnClick (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="8426f-1587">Das <see cref="T:System.Windows.Forms.Control" />, dem das <see cref="E:System.Windows.Forms.Control.Click" />-Ereignis zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1587">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Click" /> event to.</span></span></param>
        <param name="e"><span data-ttu-id="8426f-1588">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1588">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-1589">Löst das <see cref="E:System.Windows.Forms.Control.Click" />-Ereignis für das angegebene Steuerelement aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1589">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokePaint">
      <MemberSignature Language="C#" Value="protected void InvokePaint (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokePaint(class System.Windows.Forms.Control c, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokePaint (c As Control, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokePaint(System::Windows::Forms::Control ^ c, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokePaint : System.Windows.Forms.Control * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.InvokePaint (c, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="8426f-1590">Das <see cref="T:System.Windows.Forms.Control" />, dem das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1590">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to.</span></span></param>
        <param name="e"><span data-ttu-id="8426f-1591">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1591">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-1592">Löst das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis für das angegebene Steuerelement aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1592">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="InvokePaintBackground">
      <MemberSignature Language="C#" Value="protected void InvokePaintBackground (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokePaintBackground(class System.Windows.Forms.Control c, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokePaintBackground (c As Control, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokePaintBackground(System::Windows::Forms::Control ^ c, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokePaintBackground : System.Windows.Forms.Control * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.InvokePaintBackground (c, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="8426f-1593">Das <see cref="T:System.Windows.Forms.Control" />, dem das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1593">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to.</span></span></param>
        <param name="e"><span data-ttu-id="8426f-1594">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1594">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-1595">Löst das <see langword="PaintBackground" />-Ereignis für das angegebene Steuerelement aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1595">Raises the <see langword="PaintBackground" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.Windows.Forms.Control.InvokeRequired" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1596">Ruft einen Wert ab, der angibt ob der Aufrufer beim Aufruf von Methoden des Steuerelements eine Aufrufmethode aufrufen muss, da sich der Aufrufer in einem anderen Thread als dem befindet, in dem das Steuerelement erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1596">Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.</span></span></summary>
        <value><span data-ttu-id="8426f-1597"><see langword="true" />, wenn das <see cref="P:System.Windows.Forms.Control.Handle" /> des Steuerelements in einem anderen Thread als dem aufrufenden Thread erstellt wurde, sodass Aufrufe des Steuerelements durch eine Aufrufmethode erfolgen müssen), andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1597"><see langword="true" /> if the control's <see cref="P:System.Windows.Forms.Control.Handle" /> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1598">Steuerelemente in Windows Forms sind an einen bestimmten Thread gebunden und sind nicht Thread sicher.</span><span class="sxs-lookup"><span data-stu-id="8426f-1598">Controls in Windows Forms are bound to a specific thread and are not thread safe.</span></span> <span data-ttu-id="8426f-1599">Wenn Sie also die-Methode eines Steuer Elements von einem anderen Thread aus aufrufen, müssen Sie eine der Aufruf Methoden des Steuer Elements verwenden, um den Aufruf an den richtigen Thread zu Mars Hallen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1599">Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread.</span></span> <span data-ttu-id="8426f-1600">Diese Eigenschaft kann verwendet werden, um zu bestimmen, ob eine Aufruf Methode aufgerufen werden muss. Dies kann hilfreich sein, wenn Sie nicht wissen, welcher Thread das Steuerelement besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1600">This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1601">Zusätzlich zur- <xref:System.Windows.Forms.Control.InvokeRequired%2A> Eigenschaft gibt es vier Methoden auf einem Steuerelement, die Thread sicher aufzurufen sind: <xref:System.Windows.Forms.Control.Invoke%2A> , <xref:System.Windows.Forms.Control.BeginInvoke%2A> , <xref:System.Windows.Forms.Control.EndInvoke%2A> und, <xref:System.Windows.Forms.Control.CreateGraphics%2A> Wenn das Handle für das Steuerelement bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1601">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe to call: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="8426f-1602">Wenn aufgerufen wird, <xref:System.Windows.Forms.Control.CreateGraphics%2A> bevor das Handle des Steuer Elements in einem Hintergrund Thread erstellt wurde, kann dies zu ungültigen Thread übergreifenden aufrufen führen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1602">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="8426f-1603">Für alle anderen Methodenaufrufe sollten Sie eine dieser Aufruf Methoden verwenden, wenn Sie von einem anderen Thread aufrufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1603">For all other method calls, you should use one of these invoke methods when calling from a different thread.</span></span>  
  
 <span data-ttu-id="8426f-1604">Wenn das Handle des Steuer Elements noch nicht vorhanden ist, wird <xref:System.Windows.Forms.Control.InvokeRequired%2A> die übergeordnete Kette des Steuer Elements durchsucht, bis ein Steuerelement oder ein Formular gefunden wird, das über ein Fenster Handle verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1604">If the control's handle does not yet exist, <xref:System.Windows.Forms.Control.InvokeRequired%2A> searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="8426f-1605">Wenn kein entsprechendes Handle gefunden werden kann, <xref:System.Windows.Forms.Control.InvokeRequired%2A> gibt die Methode zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1605">If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.InvokeRequired%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="8426f-1606">Dies bedeutet, dass <xref:System.Windows.Forms.Control.InvokeRequired%2A> zurückgeben kann `false` <xref:System.Windows.Forms.Control.Invoke%2A> , wenn nicht erforderlich ist (der-Befehl wird im gleichen Thread ausgeführt) oder wenn das Steuerelement in einem anderen Thread erstellt wurde, das Handle des Steuer Elements jedoch noch nicht erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1606">This means that <xref:System.Windows.Forms.Control.InvokeRequired%2A> can return `false` if <xref:System.Windows.Forms.Control.Invoke%2A> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.</span></span>  
  
 <span data-ttu-id="8426f-1607">Wenn das Handle des Steuer Elements noch nicht erstellt wurde, sollten Sie nicht einfach Eigenschaften, Methoden oder Ereignisse für das Steuerelement aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1607">In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control.</span></span> <span data-ttu-id="8426f-1608">Dies könnte dazu führen, dass das Handle des Steuer Elements im Hintergrund Thread erstellt wird, wobei das Steuerelement in einem Thread ohne nachrichtenpump isoliert und die Anwendung instabil wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1608">This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.</span></span>  
  
 <span data-ttu-id="8426f-1609">Sie können diesen Fall schützen, indem Sie auch den Wert von <xref:System.Windows.Forms.Control.IsHandleCreated%2A> überprüfen, wenn <xref:System.Windows.Forms.Control.InvokeRequired%2A> `false` in einem Hintergrund Thread zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1609">You can protect against this case by also checking the value of <xref:System.Windows.Forms.Control.IsHandleCreated%2A> when <xref:System.Windows.Forms.Control.InvokeRequired%2A> returns `false` on a background thread.</span></span> <span data-ttu-id="8426f-1610">Wenn das Steuerungs Handle noch nicht erstellt wurde, müssen Sie warten, bis es erstellt wurde, bevor Sie <xref:System.Windows.Forms.Control.Invoke%2A> oder aufrufen <xref:System.Windows.Forms.Control.BeginInvoke%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1610">If the control handle has not yet been created, you must wait until it has been created before calling <xref:System.Windows.Forms.Control.Invoke%2A> or <xref:System.Windows.Forms.Control.BeginInvoke%2A>.</span></span> <span data-ttu-id="8426f-1611">Dies geschieht in der Regel nur, wenn ein Hintergrund Thread im Konstruktor des primären Formulars für die Anwendung erstellt wird (wie in `Application.Run(new MainForm())` , bevor das Formular angezeigt oder aufgerufen wurde `Application.Run` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1611">Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in `Application.Run(new MainForm())`, before the form has been shown or `Application.Run` has been called.</span></span>  
  
 <span data-ttu-id="8426f-1612">Eine Lösung besteht darin, zu warten, bis das Handle des Formulars erstellt wurde, bevor der Hintergrund Thread gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1612">One solution is to wait until the form's handle has been created before starting the background thread.</span></span> <span data-ttu-id="8426f-1613">Erzwingen Sie die Erstellung von Handles durch Aufrufen der- <xref:System.Windows.Forms.Control.Handle%2A> Eigenschaft, oder warten Sie, bis das- <xref:System.Windows.Forms.Form.Load> Ereignis den Hintergrundprozess startet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1613">Either force handle creation by calling the <xref:System.Windows.Forms.Control.Handle%2A> property, or wait until the <xref:System.Windows.Forms.Form.Load> event to start the background process.</span></span>  
  
 <span data-ttu-id="8426f-1614">Eine noch bessere Lösung besteht darin, die `SynchronizationContext` von zurückgegebene <xref:System.Threading.SynchronizationContext> anstelle eines Steuer Elements für Thread übergreifendes Marshalling zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1614">An even better solution is to use the `SynchronizationContext` returned by <xref:System.Threading.SynchronizationContext> rather than a control for cross-thread marshaling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1615">Eine Ausnahme kann ausgelöst werden, wenn der Thread, der die Nachricht verarbeiten soll, nicht mehr aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1615">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
 <span data-ttu-id="8426f-1616">Weitere Informationen zu multithreadWindows Forms-Steuerelementen finden Sie unter Gewusst [wie: Verwenden eines Hintergrund Threads zum Suchen nach Dateien](/dotnet/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files) und Gewusst [wie: Erstellen von Thread sicheren Aufrufen von Windows Forms Steuerelementen](/dotnet/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls).</span><span class="sxs-lookup"><span data-stu-id="8426f-1616">For more information about multithreaded Windows Forms controls, see [How to: Use a Background Thread to Search for Files](/dotnet/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files) and [How to: Make Thread-Safe Calls to Windows Forms Controls](/dotnet/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsAccessible">
      <MemberSignature Language="C#" Value="public bool IsAccessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAccessible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsAccessible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAccessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAccessible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAccessible : bool with get, set" Usage="System.Windows.Forms.Control.IsAccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1617">Ruft einen Wert ab, der angibt, ob das Steuerelement für barrierefreie Anwendungen sichtbar ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1617">Gets or sets a value indicating whether the control is visible to accessibility applications.</span></span></summary>
        <value><span data-ttu-id="8426f-1618"><see langword="true" />, wenn das Steuerelement für barrierefreie Anwendungen sichtbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1618"><see langword="true" /> if the control is visible to accessibility applications; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Forms.Control.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1619">Ruft einen Wert ab, der angibt, ob das Steuerelement freigegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1619">Gets a value indicating whether the control has been disposed of.</span></span></summary>
        <value><span data-ttu-id="8426f-1620"><see langword="true" />, wenn das Steuerelement freigegeben wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1620"><see langword="true" /> if the control has been disposed of; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1621">Wenn diese Eigenschaft zurückgegeben wird `true` , wird das Steuerelement verworfen und kann nicht mehr als gültiges Windows-Steuerelement referenziert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1621">When this property returns `true`, the control is disposed of and can no longer be referenced as a valid Windows control.</span></span> <span data-ttu-id="8426f-1622">Obwohl die Instanz eines Steuer Elements verworfen wird, wird Sie weiterhin im Arbeitsspeicher beibehalten, bis Sie über Garbage Collection aus dem Arbeitsspeicher entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1622">Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</span></span> <span data-ttu-id="8426f-1623">Wenn ein Steuerelement verworfen wird, kann seine-Methode nicht aufgerufen werden <xref:System.Windows.Forms.Control.RecreateHandle%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1623">When a control is disposed, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <altmember cref="T:System.GC" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="IsHandleCreated">
      <MemberSignature Language="C#" Value="public bool IsHandleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHandleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsHandleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHandleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHandleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHandleCreated : bool" Usage="System.Windows.Forms.Control.IsHandleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1624">Ruft einen Wert ab, der angibt, ob dem Steuerelement ein Handle zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1624">Gets a value indicating whether the control has a handle associated with it.</span></span></summary>
        <value><span data-ttu-id="8426f-1625"><see langword="true" />, wenn dem Steuerelement ein Handle zugeordnet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1625"><see langword="true" /> if a handle has been assigned to the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1626">Verwenden Sie die- <xref:System.Windows.Forms.Control.IsHandleCreated%2A> Eigenschaft, um zu bestimmen, ob <xref:System.Windows.Forms.Control.CreateHandle%2A> aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1626">Use the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property to determine whether <xref:System.Windows.Forms.Control.CreateHandle%2A> has been called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected virtual bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member IsInputChar : char -&gt; bool&#xA;override this.IsInputChar : char -&gt; bool" Usage="control.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="8426f-1627">Das zu überprüfende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1627">The character to test.</span></span></param>
        <summary><span data-ttu-id="8426f-1628">Bestimmt, ob ein Zeichen ein vom Steuerelement erkanntes Eingabezeichen ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1628">Determines if a character is an input character that the control recognizes.</span></span></summary>
        <returns><span data-ttu-id="8426f-1629"><see langword="true" />, wenn das Zeichen direkt an das Steuerelement gesendet und nicht vorverarbeitet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1629"><see langword="true" /> if the character should be sent directly to the control and not preprocessed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1630">Aufrufen der- <xref:System.Windows.Forms.Control.IsInputChar%2A> Methode, um zu bestimmen, ob das durch den-Parameter angegebene Zeichen `charCode` ein Eingabezeichen ist, das das Steuerelement wünscht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1630">Call the <xref:System.Windows.Forms.Control.IsInputChar%2A> method to determine whether the character specified by the `charCode` parameter is an input character that the control wants.</span></span> <span data-ttu-id="8426f-1631">Diese Methode wird während der Vorverarbeitung von Fenster Meldungen aufgerufen, um zu bestimmen, ob das angegebene Eingabezeichen vorverarbeitet oder direkt an das Steuerelement gesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1631">This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control.</span></span> <span data-ttu-id="8426f-1632">Wenn <xref:System.Windows.Forms.Control.IsInputChar%2A> zurückgibt `true` , wird das angegebene Zeichen direkt an das Steuerelement gesendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1632">If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `true`, the specified character is sent directly to the control.</span></span> <span data-ttu-id="8426f-1633">Wenn <xref:System.Windows.Forms.Control.IsInputChar%2A> zurückgibt `false` , wird das angegebene Zeichen vorverarbeitet und nur an das Steuerelement gesendet, wenn es nicht von der Vorverarbeitungs Phase genutzt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1633">If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `false`, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</span></span> <span data-ttu-id="8426f-1634">Die Vorverarbeitung eines Zeichens umfasst das überprüfen, ob es sich um ein mnetmonisches Zeichen eines anderen Steuer Elements handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1634">The preprocessing of a character includes checking whether the character is a mnemonic of another control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected virtual bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member IsInputKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="control.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="8426f-1635">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-1635">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-1636">Bestimmt, ob es sich bei der angegebenen Taste um eine normale Eingabetaste handelt oder um eine Sondertaste, für die eine Vorverarbeitung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1636">Determines whether the specified key is a regular input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="8426f-1637"><see langword="true" />, wenn die angegebene Taste eine normale Taste ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1637"><see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1638">Aufrufen der- <xref:System.Windows.Forms.Control.IsInputKey%2A> Methode, um zu bestimmen, ob es sich bei dem vom-Parameter angegebenen Schlüssel um einen vom Steuerelement gewünschten `keyData` Eingabe Schlüssel handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1638">Call the <xref:System.Windows.Forms.Control.IsInputKey%2A> method to determine whether the key specified by the `keyData` parameter is an input key that the control wants.</span></span> <span data-ttu-id="8426f-1639">Diese Methode wird während der Vorverarbeitung von Fenster Meldungen aufgerufen, um zu bestimmen, ob der angegebene Eingabe Schlüssel vorverarbeitet oder direkt an das Steuerelement gesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1639">This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control.</span></span> <span data-ttu-id="8426f-1640">Wenn <xref:System.Windows.Forms.Control.IsInputKey%2A> zurückgibt `true` , wird der angegebene Schlüssel direkt an das-Steuerelement gesendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1640">If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `true`, the specified key is sent directly to the control.</span></span> <span data-ttu-id="8426f-1641">Wenn <xref:System.Windows.Forms.Control.IsInputKey%2A> zurückgibt `false` , wird der angegebene Schlüssel vorverarbeitet und nur an das Steuerelement gesendet, wenn er von der Vorverarbeitungs Phase nicht genutzt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1641">If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `false`, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</span></span> <span data-ttu-id="8426f-1642">Zu den vorverarbeiteten Schlüsseln zählen Registerkarte, Rückgabe, ESC-Taste, Pfeil nach oben, Pfeil nach unten, Pfeil nach links und nach-rechts-Taste.</span><span class="sxs-lookup"><span data-stu-id="8426f-1642">Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1643">Im folgenden Codebeispiel wird gezeigt, wie Sie die- <xref:System.Windows.Forms.Control.IsInputKey%2A> Methode für ein-Steuerelement überschreiben <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1643">The following code example shows you how to override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="8426f-1644">In diesem Beispiel verarbeitet die- `TabTextBox` Klasse die Tab-Taste.</span><span class="sxs-lookup"><span data-stu-id="8426f-1644">In this example, the `TabTextBox` class handles the TAB key.</span></span> <span data-ttu-id="8426f-1645">Wenn das den `TabTextBox` Fokus hat und der Benutzer die Tab-Taste drückt, werden an der Text Einfügemarke vier Leerzeichen hinzugefügt, wobei der ausgewählte Text ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1645">When the `TabTextBox` has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text.</span></span> <span data-ttu-id="8426f-1646">Standardmäßig verarbeitet das <xref:System.Windows.Forms.TextBox> Steuerelement die Tab-Taste, indem der Eingabefokus auf das nächste Steuerelement verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1646">By default, the <xref:System.Windows.Forms.TextBox> control handles the TAB key by moving the input focus to the next control.</span></span> <span data-ttu-id="8426f-1647">In diesem Fall erreicht das KeyPress niemals die <xref:System.Windows.Forms.Control.OnKeyDown%2A> Überschreibungs Methode der Methode.</span><span class="sxs-lookup"><span data-stu-id="8426f-1647">In this case, the keypress never reaches the <xref:System.Windows.Forms.Control.OnKeyDown%2A> method override.</span></span> <span data-ttu-id="8426f-1648">Um dieses Standardverhalten zu verhindern, <xref:System.Windows.Forms.Control.IsInputKey%2A> gibt die Methoden Überschreibung zurück, `true` Wenn der Benutzer die Tab-Taste drückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1648">To prevent this default behavior, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns `true` when the user presses the TAB key.</span></span> <span data-ttu-id="8426f-1649">Für alle anderen Tastatureingaben gibt die- <xref:System.Windows.Forms.Control.IsInputKey%2A> Methoden Überschreibung das Ergebnis des Aufruf der-Basisklassen Version der-Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-1649">For all other keypresses, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns the result of calling the base-class version of the method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/cs/form1.cs#0)]
 [!code-vb[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <altmember cref="P:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyLocked">
      <MemberSignature Language="C#" Value="public static bool IsKeyLocked (System.Windows.Forms.Keys keyVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyLocked(valuetype System.Windows.Forms.Keys keyVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyLocked (keyVal As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyLocked(System::Windows::Forms::Keys keyVal);" />
      <MemberSignature Language="F#" Value="static member IsKeyLocked : System.Windows.Forms.Keys -&gt; bool" Usage="System.Windows.Forms.Control.IsKeyLocked keyVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyVal" Type="System.Windows.Forms.Keys" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyVal"><span data-ttu-id="8426f-1650">Der FESTSTELLTASTE-, NUM- oder ROLLEN-Member der <see cref="T:System.Windows.Forms.Keys" />-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-1650">The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="8426f-1651">Bestimmt, ob die FESTSTELLTASTE, NUM oder ROLLEN aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1651">Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.</span></span></summary>
        <returns><span data-ttu-id="8426f-1652"><see langword="true" />, wenn die angegebenen Tasten aktiviert sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1652"><see langword="true" /> if the specified key or keys are in effect; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1653">Verwenden Sie die- <xref:System.Windows.Forms.Control.IsKeyLocked%2A> Eigenschaft, um zu bestimmen, ob die Schlüssel für die Feststell Taste, die Num-Taste oder die Schiebe Sperrtaste eingeschaltet sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-1653">Use the <xref:System.Windows.Forms.Control.IsKeyLocked%2A> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1654">Im folgenden Codebeispiel wird ein Meldungs Feld angezeigt, das angibt, ob der angegebene Schlüssel (in diesem Fall der Schlüssel Sperr Schlüssel) wirksam ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1654">The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.</span></span>  
  
 [!code-cpp[ControlIsKeyLocked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlIsKeyLocked/CPP/controliskeylocked.cpp#1)]
 [!code-csharp[ControlIsKeyLocked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlIsKeyLocked/CS/controliskeylocked.cs#1)]
 [!code-vb[ControlIsKeyLocked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlIsKeyLocked/VB/controliskeylocked.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8426f-1655">Der <paramref name="keyVal" />-Parameter verweist auf eine andere Taste als die FESTSTELLTASTE, NUM oder ROLLEN.</span><span class="sxs-lookup"><span data-stu-id="8426f-1655">The <paramref name="keyVal" /> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsMirrored">
      <MemberSignature Language="C#" Value="public bool IsMirrored { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMirrored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsMirrored" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMirrored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMirrored { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMirrored : bool" Usage="System.Windows.Forms.Control.IsMirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1656">Ruft einen Wert ab, der angibt, ob das Steuerelement gespiegelt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1656">Gets a value indicating whether the control is mirrored.</span></span></summary>
        <value><span data-ttu-id="8426f-1657"><see langword="true" />, wenn das Steuerelement gespiegelt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1657"><see langword="true" /> if the control is mirrored; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1658">Ein gespiegeltes Steuerelement zeigt Layout und Text von rechts nach links an.</span><span class="sxs-lookup"><span data-stu-id="8426f-1658">A mirrored control displays both layout and text from right to left.</span></span> <span data-ttu-id="8426f-1659">Weitere Informationen finden Sie unter Gewusst [wie: Erstellen von gespiegelten Windows Forms und Steuerelementen](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/xwbz5ws0(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="8426f-1659">For more information, see [How to: Create Mirrored Windows Forms and Controls](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/xwbz5ws0(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMnemonic">
      <MemberSignature Language="C#" Value="public static bool IsMnemonic (char charCode, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMnemonic(char charCode, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMnemonic (charCode As Char, text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMnemonic(char charCode, System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsMnemonic : char * string -&gt; bool" Usage="System.Windows.Forms.Control.IsMnemonic (charCode, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="8426f-1660">Das zu überprüfende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1660">The character to test.</span></span></param>
        <param name="text"><span data-ttu-id="8426f-1661">Die zu durchsuchende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="8426f-1661">The string to search.</span></span></param>
        <summary><span data-ttu-id="8426f-1662">Bestimmt, ob das angegebene Zeichen das mnemonische Zeichen ist, das dem Steuerelement in der angegebenen Zeichenfolge zugewiesen wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1662">Determines if the specified character is the mnemonic character assigned to the control in the specified string.</span></span></summary>
        <returns><span data-ttu-id="8426f-1663"><see langword="true" />, wenn das <paramref name="charCode" />-Zeichen das dem Steuerelement zugewiesene mnemonische Zeichen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1663"><see langword="true" /> if the <paramref name="charCode" /> character is the mnemonic character assigned to the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1664">Das Zeichen "mmamonic" ist das Zeichen, das unmittelbar auf die erste Instanz von "&" in einer folgt <xref:System.String> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1664">The mnemonic character is the character immediately following the first instance of "&" in a <xref:System.String>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1665">Im folgenden Codebeispiel wird eine Erweiterung der Button-Klasse veranschaulicht, die die-Methode überschreibt, <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> um benutzerdefiniertes Verhalten zu präsentieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-1665">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="8426f-1666">Im Beispiel wird auch die Verwendung der-Eigenschaft und der-Eigenschaft veranschaulicht <xref:System.Windows.Forms.Control.CanSelect%2A> <xref:System.Windows.Forms.Control.IsMnemonic%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1666">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="8426f-1667">Fügen Sie den folgenden Code nach einer Formular Klasse in dieselbe Datei ein, um dieses Beispiel auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1667">To run this example paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="8426f-1668">Fügen Sie dem Formular eine Schaltfläche vom Typ hinzu `MnemonicButton` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1668">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1669">Tritt ein, wenn eine Taste gedrückt wird, während das Steuerelement den Fokus hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-1669">Occurs when a key is pressed while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1670">Wichtige Ereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1670">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="8426f-1671">Legen Sie die <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> -Eigenschaft in der Ereignis Behandlungsmethode Ihres Formulars auf fest, um Tastatur Ereignisse nur auf der Formular Ebene zu verarbeiten und anderen Steuerelementen das Empfangen von Tastatur Ereignissen zu ermöglichen <xref:System.Windows.Forms.Control.KeyPress> `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1671">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span> <span data-ttu-id="8426f-1672">Bestimmte Schlüssel, z. b. die Registerkarten-, Rückgabe-, ESC-und Pfeiltasten, werden automatisch von Steuerelementen behandelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1672">Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</span></span> <span data-ttu-id="8426f-1673">Damit diese Schlüssel das-Ereignis hervorrufen <xref:System.Windows.Forms.Control.KeyDown> , müssen Sie die- <xref:System.Windows.Forms.Control.IsInputKey%2A> Methode in jedem Steuerelement auf dem Formular überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1673">To have these keys raise the <xref:System.Windows.Forms.Control.KeyDown> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form.</span></span> <span data-ttu-id="8426f-1674">Der Code für die Überschreibung von <xref:System.Windows.Forms.Control.IsInputKey%2A> muss ermitteln, ob einer der Sonderschlüssel gedrückt wird und den Wert zurückgibt `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1674">The code for the override of the <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.</span></span> <span data-ttu-id="8426f-1675">Anstatt die- <xref:System.Windows.Forms.Control.IsInputKey%2A> Methode zu überschreiben, können Sie das <xref:System.Windows.Forms.Control.PreviewKeyDown> -Ereignis behandeln und die- <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> Eigenschaft auf festlegen `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1675">Instead of overriding the <xref:System.Windows.Forms.Control.IsInputKey%2A> method, you can handle the <xref:System.Windows.Forms.Control.PreviewKeyDown> event and set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`.</span></span> <span data-ttu-id="8426f-1676">Ein Codebeispiel finden Sie unter dem- <xref:System.Windows.Forms.Control.PreviewKeyDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1676">For a code example, see the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.</span></span>  
  
 <span data-ttu-id="8426f-1677">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1677">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1678">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.KeyDown> Ereignis verwendet, um den Typ des in das-Steuerelement eingegebenen Zeichens zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1678">The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
 
 
 <span data-ttu-id="8426f-1679">Im folgenden Codebeispiel wird die Reihenfolge veranschaulicht, in der die <xref:System.Windows.Forms.Control.KeyDown> <xref:System.Windows.Forms.Control.KeyUp> Ereignisse,, <xref:System.Windows.Forms.Control.KeyPress> und registriert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1679">The following code example demonstrates the order of raising the <xref:System.Windows.Forms.Control.KeyDown>, <xref:System.Windows.Forms.Control.KeyUp>, <xref:System.Windows.Forms.Control.KeyPress> events, and how to register event handlers on them.</span></span>  
 
 [!code-csharp[Control.KeyDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form2.cs#1)]
 [!code-vb[Control.KeyDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/Form2.vb#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <altmember cref="T:System.Windows.Forms.KeyEventHandler" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As KeyPressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyPressEventHandler ^ KeyPress;" />
      <MemberSignature Language="F#" Value="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " Usage="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1680">Tritt auf, wenn eine Zeichen-,</span><span class="sxs-lookup"><span data-stu-id="8426f-1680">Occurs when a character.</span></span> <span data-ttu-id="8426f-1681">die LEER- oder RÜCKTASTE gedrückt wird, während das Steuerelement den Fokus hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-1681">space or backspace key is pressed while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1682">Wichtige Ereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1682">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="8426f-1683">Das <xref:System.Windows.Forms.Control.KeyPress> Ereignis wird nicht von nicht-Zeichen Schlüsseln, außer Leerzeichen und Rücktaste, ausgelöst. die nicht-Zeichen Schlüssel bewirken jedoch das <xref:System.Windows.Forms.Control.KeyDown> -Ereignis und das-Ereignis <xref:System.Windows.Forms.Control.KeyUp> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1683">The <xref:System.Windows.Forms.Control.KeyPress> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span>  
  
 <span data-ttu-id="8426f-1684">Verwenden <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Sie die-Eigenschaft, um zur Laufzeit Stichproben von Tastatureingaben auszuführen und eine Teilmenge allgemeiner Tastatureingaben zu nutzen oder zu ändern.</span><span class="sxs-lookup"><span data-stu-id="8426f-1684">Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.</span></span>  
  
 <span data-ttu-id="8426f-1685">Legen Sie die <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> -Eigenschaft in der Ereignis Behandlungsmethode Ihres Formulars auf fest, um Tastatur Ereignisse nur auf der Formular Ebene zu verarbeiten und anderen Steuerelementen das Empfangen von Tastatur Ereignissen zu ermöglichen <xref:System.Windows.Forms.Control.KeyPress> `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1685">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span>  
  
 <span data-ttu-id="8426f-1686">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1686">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1687">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.KeyPress> Ereignis verwendet, um zu verhindern, dass Zeichen in das Steuerelement eintreten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1687">The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
 
 
  <span data-ttu-id="8426f-1688">Das folgende Codebeispiel veranschaulicht die Reihenfolge, in der die <xref:System.Windows.Forms.Control.KeyDown> <xref:System.Windows.Forms.Control.KeyUp> -,-und-Ereignisse aufsteigend angezeigt <xref:System.Windows.Forms.Control.KeyPress> werden. Außerdem wird die Registrierung von Ereignis Handlern erläutert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1688">The following code example demonstrates the order of rising the <xref:System.Windows.Forms.Control.KeyDown>, <xref:System.Windows.Forms.Control.KeyUp> and <xref:System.Windows.Forms.Control.KeyPress> events, also how to register event handlers on them.</span></span>  
 
 [!code-csharp[Control.KeyPress#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form2.cs#1)]
 [!code-vb[Control.KeyPress#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/Form2.vb#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1689">Tritt ein, wenn eine Taste losgelassen wird, während das Steuerelement den Fokus hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-1689">Occurs when a key is released while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1690">Wichtige Ereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1690">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="8426f-1691">Legen Sie die <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> -Eigenschaft in der Ereignis Behandlungsmethode Ihres Formulars auf fest, um Tastatur Ereignisse nur auf der Formular Ebene zu verarbeiten und anderen Steuerelementen das Empfangen von Tastatur Ereignissen zu ermöglichen <xref:System.Windows.Forms.Control.KeyPress> `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1691">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span> <span data-ttu-id="8426f-1692">Bestimmte Schlüssel, z. b. die Registerkarten-, Rückgabe-, ESC-und Pfeiltasten, werden automatisch von Steuerelementen behandelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1692">Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</span></span> <span data-ttu-id="8426f-1693">Damit diese Schlüssel das-Ereignis hervorrufen <xref:System.Windows.Forms.Control.KeyUp> , müssen Sie die- <xref:System.Windows.Forms.Control.IsInputKey%2A> Methode in jedem Steuerelement auf dem Formular überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-1693">To have these keys raise the <xref:System.Windows.Forms.Control.KeyUp> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form.</span></span> <span data-ttu-id="8426f-1694">Der Code für die Überschreibung von <xref:System.Windows.Forms.Control.IsInputKey%2A> muss ermitteln, ob einer der Sonderschlüssel gedrückt wird und den Wert zurückgibt `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-1694">The code for the override of <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.</span></span>  
  
 <span data-ttu-id="8426f-1695">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1695">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1696">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.KeyUp> Ereignis mit der- <xref:System.Windows.Forms.Help> Klasse verwendet, um dem Benutzer eine Popup-Hilfe anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1696">The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
 
 
  <span data-ttu-id="8426f-1697">Das folgende Codebeispiel veranschaulicht die Reihenfolge, in der die <xref:System.Windows.Forms.Control.KeyDown> <xref:System.Windows.Forms.Control.KeyUp> -,-und-Ereignisse aufsteigend angezeigt <xref:System.Windows.Forms.Control.KeyPress> werden. Außerdem wird die Registrierung von Ereignis Handlern erläutert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1697">The following code example demonstrates the order of rising the <xref:System.Windows.Forms.Control.KeyDown>, <xref:System.Windows.Forms.Control.KeyUp> and <xref:System.Windows.Forms.Control.KeyPress> events, also how to register event handlers on them.</span></span>  
 
 [!code-csharp[Control.KeyUp#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form2.cs#1)]
 [!code-vb[Control.KeyUp#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/Form2.vb#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LayoutEventHandler Layout;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LayoutEventHandler Layout" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Layout As LayoutEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LayoutEventHandler ^ Layout;" />
      <MemberSignature Language="F#" Value="member this.Layout : System.Windows.Forms.LayoutEventHandler " Usage="member this.Layout : System.Windows.Forms.LayoutEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LayoutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1698">Tritt ein, wenn ein Steuerelement seine untergeordneten Steuerelemente neu positionieren muss.</span><span class="sxs-lookup"><span data-stu-id="8426f-1698">Occurs when a control should reposition its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1699">Das <xref:System.Windows.Forms.Control.Layout> Ereignis tritt auf, wenn untergeordnete Steuerelemente hinzugefügt oder entfernt werden, wenn sich die Begrenzungen des Steuer Elements ändern und wenn andere Änderungen auftreten, die sich auf das Layout des Steuer Elements auswirken können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1699">The <xref:System.Windows.Forms.Control.Layout> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control.</span></span> <span data-ttu-id="8426f-1700">Das layoutereignis kann mithilfe der <xref:System.Windows.Forms.Control.SuspendLayout%2A> -und der-Methode unterdrückt werden <xref:System.Windows.Forms.Control.ResumeLayout%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1700">The layout event can be suppressed using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span> <span data-ttu-id="8426f-1701">Durch das Anhalten des Layouts können Sie mehrere Aktionen für ein Steuerelement ausführen, ohne für jede Änderung ein Layout ausführen zu müssen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1701">Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change.</span></span> <span data-ttu-id="8426f-1702">Wenn Sie z. b. die Größe eines Steuer Elements ändern und verschieben, würde jeder Vorgang ein- <xref:System.Windows.Forms.Control.Layout> Ereignis auslösen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1702">For example, if you resize and move a control, each operation would raise a <xref:System.Windows.Forms.Control.Layout> event.</span></span>  
  
 <span data-ttu-id="8426f-1703">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1703">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1704">Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.Form> auf dem Bildschirm im- <xref:System.Windows.Forms.Control.Layout> Ereignis zentriert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1704">The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event.</span></span> <span data-ttu-id="8426f-1705">Dadurch bleibt das Formular zentriert, wenn der Benutzer die Größe ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1705">This will keep the form centered as the user resizes it.</span></span> <span data-ttu-id="8426f-1706">Dieses Beispiel erfordert, dass Sie ein-Steuerelement erstellt haben <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1706">This example requires that you have created a <xref:System.Windows.Forms.Form> control.</span></span>  
  
 [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]
 [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]
 [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.LayoutEngine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LayoutEngine As LayoutEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Layout::LayoutEngine ^ LayoutEngine { System::Windows::Forms::Layout::LayoutEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LayoutEngine : System.Windows.Forms.Layout.LayoutEngine" Usage="System.Windows.Forms.Control.LayoutEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1707">Ruft eine zwischengespeicherte Instanz der Layout-Engine des Steuerelements ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-1707">Gets a cached instance of the control's layout engine.</span></span></summary>
        <value><span data-ttu-id="8426f-1708">Die <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> für den Inhalt des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1708">The <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> for the control's contents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1709">Die <xref:System.Windows.Forms.Control.LayoutEngine%2A> -Eigenschaft ruft die Layout-Engine für die untergeordneten Elemente des Steuer Elements und nicht für das-Steuerelement ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-1709">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> property gets the layout engine for the control's children rather than for the control itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Layout.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Leave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Leave;" />
      <MemberSignature Language="F#" Value="member this.Leave : EventHandler " Usage="member this.Leave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1710">Tritt ein, wenn der Eingabefokus das Steuerelement verlässt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1710">Occurs when the input focus leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1711">Wenn Sie den Fokus mithilfe der Tastatur (Tab, UMSCHALT + TAB usw.) ändern, indem Sie die- <xref:System.Windows.Forms.Control.Select%2A> Methode oder die- <xref:System.Windows.Forms.Control.SelectNextControl%2A> Methode aufrufen, oder indem Sie die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> Eigenschaft auf das aktuelle Formular festlegen, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1711">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="8426f-1712">Wenn Sie den Fokus mit der Maus oder durch Aufrufen der- <xref:System.Windows.Forms.Control.Focus%2A> Methode ändern, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1712">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="8426f-1713">Wenn die <xref:System.Windows.Forms.Control.CausesValidation%2A> -Eigenschaft auf festgelegt ist `false` , <xref:System.Windows.Forms.Control.Validating> werden die Ereignisse und unter <xref:System.Windows.Forms.Control.Validated> drückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1713">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1714">Die <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.Leave> Ereignisse und werden von der- <xref:System.Windows.Forms.Form> Klasse unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1714">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class.</span></span> <span data-ttu-id="8426f-1715">Die entsprechenden Ereignisse in der <xref:System.Windows.Forms.Form> -Klasse sind das <xref:System.Windows.Forms.Form.Activated> -Ereignis und das- <xref:System.Windows.Forms.Form.Deactivate> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1715">The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="8426f-1716">Das <xref:System.Windows.Forms.Control.Enter> -Ereignis und das- <xref:System.Windows.Forms.Control.Leave> Ereignis sind hierarchisch und kaskadieren die übergeordnete Kette nach oben und unten, bis die entsprechende Steuerung erreicht ist</span><span class="sxs-lookup"><span data-stu-id="8426f-1716">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</span></span> <span data-ttu-id="8426f-1717">Angenommen, Sie verfügen über ein <xref:System.Windows.Forms.Form> -Element mit zwei <xref:System.Windows.Forms.GroupBox> -Steuerelementen, und jedes Steuerelement <xref:System.Windows.Forms.GroupBox> verfügt über ein- <xref:System.Windows.Forms.TextBox> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-1717">For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="8426f-1718">Wenn die Einfügemarke von einer <xref:System.Windows.Forms.TextBox> in die andere verschoben wird, <xref:System.Windows.Forms.Control.Leave> wird das-Ereignis für das und das-Ereignis ausgelöst <xref:System.Windows.Forms.TextBox> <xref:System.Windows.Forms.GroupBox> , und das- <xref:System.Windows.Forms.Control.Enter> Ereignis wird für die andere <xref:System.Windows.Forms.GroupBox> und ausgelöst <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1718">When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8426f-1719">Versuchen Sie nicht, den Fokus in den <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.GotFocus> <xref:System.Windows.Forms.Control.Leave> <xref:System.Windows.Forms.Control.LostFocus> <xref:System.Windows.Forms.Control.Validating> <xref:System.Windows.Forms.Control.Validated> Ereignis Handlern,,,, oder festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1719">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="8426f-1720">Dies kann dazu führen, dass Ihre Anwendung oder das Betriebssystem nicht mehr reagiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1720">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="8426f-1721">Weitere Informationen finden Sie im [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) Thema.</span><span class="sxs-lookup"><span data-stu-id="8426f-1721">For more information, see the [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) topic.</span></span>  
  
 <span data-ttu-id="8426f-1722">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1722">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1723">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.Leave> Ereignis verwendet, um ein-Steuerelement auf den früheren Zustand zurückzusetzen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1723">The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public int Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Left { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Left : int with get, set" Usage="System.Windows.Forms.Control.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1724">Ruft den Abstand zwischen dem linken Rand des Steuerelements und dem linken Rand des Clientbereichs des zugehörigen Containers in Pixel ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1724">Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="8426f-1725">Ein <see cref="T:System.Int32" />-Wert, der den Abstand zwischen dem linken Rand des Steuerelements und dem linken Rand des Clientbereichs des zugehörigen Containers in Pixel darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1725">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1726">Der- <xref:System.Windows.Forms.Control.Left%2A> Eigenschafts Wert entspricht der- <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> Eigenschaft des- <xref:System.Windows.Forms.Control.Location%2A> Eigenschafts Werts des-Steuer Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1726">The <xref:System.Windows.Forms.Control.Left%2A> property value is equivalent to the <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.</span></span>  
  
 <span data-ttu-id="8426f-1727">Änderungen an den <xref:System.Windows.Forms.Control.Width%2A> <xref:System.Windows.Forms.Control.Left%2A> Eigenschafts Werten und bewirken, dass der- <xref:System.Windows.Forms.Control.Right%2A> Eigenschafts Wert des Steuer Elements geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1727">Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1728">Im folgenden Codebeispiel werden drei Steuer <xref:System.Windows.Forms.Button> Elemente auf einem Formular erstellt, und die Größe und die Position werden mithilfe der verschiedenen Größen bezogenen und standortbezogenen Eigenschaften festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1728">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="8426f-1729">Für dieses Beispiel ist es erforderlich, dass Sie über eine <xref:System.Windows.Forms.Form> mit einer Breite und Höhe von mindestens 300 Pixel verfügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1729">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Point.X" />
        <altmember cref="P:System.Windows.Forms.Control.Right" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Control.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1730">Ruft die Koordinaten der linken oberen Ecke des Steuerelements relativ zur linken oberen Ecke des Containers ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1730">Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</span></span></summary>
        <value><span data-ttu-id="8426f-1731">Der <see cref="T:System.Drawing.Point" />, der die linke obere Ecke des Steuerelements relativ zur linken oberen Ecke des Containers darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1731">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the control relative to the upper-left corner of its container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1732">Da <xref:System.Drawing.Point> es sich bei der Klasse um einen Werttyp handelt ( `Structure` in Visual Basic `struct` in Visual c#), wird Sie als Wert zurückgegeben, was bedeutet, dass der Zugriff auf die Eigenschaft eine Kopie des oberen linken Punkts des Steuer Elements zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1732">Because the <xref:System.Drawing.Point> class is a value type (`Structure` in Visual Basic, `struct` in Visual C#), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control.</span></span> <span data-ttu-id="8426f-1733">Das Anpassen der-Eigenschaft oder der-Eigenschaft <xref:System.Drawing.Point.X%2A> <xref:System.Drawing.Point.Y%2A> des <xref:System.Drawing.Point> zurückgegebenen von dieser Eigenschaft wirkt sich nicht auf die-,-,- <xref:System.Windows.Forms.Control.Left%2A> oder- <xref:System.Windows.Forms.Control.Right%2A> <xref:System.Windows.Forms.Control.Top%2A> <xref:System.Windows.Forms.Control.Bottom%2A> Eigenschaftswerte des Steuer Elements aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1733">So, adjusting the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from this property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the control.</span></span> <span data-ttu-id="8426f-1734">Wenn Sie diese Eigenschaften anpassen möchten, legen Sie jeden Eigenschafts Wert einzeln fest, oder legen Sie die- <xref:System.Windows.Forms.Control.Location%2A> Eigenschaft mit einem neuen <xref:System.Drawing.Point></span><span class="sxs-lookup"><span data-stu-id="8426f-1734">To adjust these properties set each property value individually, or set the <xref:System.Windows.Forms.Control.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="8426f-1735">Wenn <xref:System.Windows.Forms.Control> eine ist <xref:System.Windows.Forms.Form> , stellt der- <xref:System.Windows.Forms.Control.Location%2A> Eigenschafts Wert die linke obere Ecke des <xref:System.Windows.Forms.Form> in Bildschirm Koordinaten dar.</span><span class="sxs-lookup"><span data-stu-id="8426f-1735">If the <xref:System.Windows.Forms.Control> is a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Location%2A> property value represents the upper-left corner of the <xref:System.Windows.Forms.Form> in screen coordinates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1736">Im folgenden Codebeispiel wird ein erstellt, <xref:System.Windows.Forms.GroupBox> und einige der allgemeinen Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1736">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="8426f-1737">Im Beispiel wird ein erstellt <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.Control.Location%2A> innerhalb des Gruppen Felds festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1737">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="8426f-1738">Anschließend wird die <xref:System.Windows.Forms.Control.Text%2A> -Eigenschaft des Gruppen Felds festgelegt, und das Gruppenfeld wird an den oberen Rand des Formulars angedockt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1738">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="8426f-1739">Schließlich wird das Gruppenfeld deaktiviert, indem die- <xref:System.Windows.Forms.Control.Enabled%2A> Eigenschaft auf festgelegt `false` wird. Dies bewirkt, dass alle im Gruppenfeld enthaltenen Steuerelemente deaktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1739">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1740">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.Location" />-Eigenschaftswert geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1740">Occurs when the <see cref="P:System.Windows.Forms.Control.Location" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1741">Dieses Ereignis wird ausgelöst, wenn die- <xref:System.Windows.Forms.Control.Location%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder durch Interaktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1741">This event is raised if the <xref:System.Windows.Forms.Control.Location%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="8426f-1742">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1742">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1743">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.LocationChanged> Ereignis für einen ausgelöst, <xref:System.Windows.Forms.StatusStrip> Wenn die Größe des Formulars geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1743">The following code example raises the <xref:System.Windows.Forms.Control.LocationChanged> event on a <xref:System.Windows.Forms.StatusStrip> when the form is resized.</span></span>  
  
 [!code-csharp[System.Windows.Forms.LocationChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LocationChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="LogicalToDeviceUnits">
      <MemberSignature Language="C#" Value="public System.Drawing.Size LogicalToDeviceUnits (System.Drawing.Size value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size LogicalToDeviceUnits(valuetype System.Drawing.Size value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalToDeviceUnits (value As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size LogicalToDeviceUnits(System::Drawing::Size value);" />
      <MemberSignature Language="F#" Value="member this.LogicalToDeviceUnits : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.LogicalToDeviceUnits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Size" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8426f-1744">Eine Größe, die skaliert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-1744">The size to be scaled.</span></span></param>
        <summary><span data-ttu-id="8426f-1745">Transformiert eine Größe von logischen in Geräteeinheiten, indem es sie entsprechend des aktuellen DPI-Werts skaliert und auf den nächsten ganzzahligen Wert für Breite und Höhe abrundet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1745">Transforms a size from logical to device units by scaling it for the current DPI and rounding down to the nearest integer value for width and height.</span></span></summary>
        <returns><span data-ttu-id="8426f-1746">Die skalierte Größe.</span><span class="sxs-lookup"><span data-stu-id="8426f-1746">The scaled size.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalToDeviceUnits">
      <MemberSignature Language="C#" Value="public int LogicalToDeviceUnits (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LogicalToDeviceUnits(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalToDeviceUnits (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LogicalToDeviceUnits(int value);" />
      <MemberSignature Language="F#" Value="member this.LogicalToDeviceUnits : int -&gt; int" Usage="control.LogicalToDeviceUnits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8426f-1747">Der zu konvertierende logische Wert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1747">The Logical value to convert.</span></span></param>
        <summary><span data-ttu-id="8426f-1748">Konvertiert einen logischen DPI-Wert in den entsprechenden DeviceUnit-DPI-Wert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1748">Converts a Logical DPI value to its equivalent DeviceUnit DPI value.</span></span></summary>
        <returns><span data-ttu-id="8426f-1749">Der resultierende DeviceUnit-Wert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1749">The resulting DeviceUnit value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event EventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : EventHandler " Usage="member this.LostFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1750">Tritt ein, wenn das Steuerelement den Fokus verliert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1750">Occurs when the control loses focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1751">Wenn Sie den Fokus mithilfe der Tastatur (Tab, UMSCHALT + TAB usw.) ändern, indem Sie die- <xref:System.Windows.Forms.Control.Select%2A> Methode oder die- <xref:System.Windows.Forms.Control.SelectNextControl%2A> Methode aufrufen, oder indem Sie die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> Eigenschaft auf das aktuelle Formular festlegen, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1751">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="8426f-1752">Wenn Sie den Fokus mit der Maus oder durch Aufrufen der- <xref:System.Windows.Forms.Control.Focus%2A> Methode ändern, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1752">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="8426f-1753">Wenn die <xref:System.Windows.Forms.Control.CausesValidation%2A> -Eigenschaft auf festgelegt ist `false` , <xref:System.Windows.Forms.Control.Validating> werden die Ereignisse und unter <xref:System.Windows.Forms.Control.Validated> drückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1753">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="8426f-1754">Wenn die- <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft des <xref:System.ComponentModel.CancelEventArgs> im Ereignis Delegaten auf festgelegt ist `true` <xref:System.Windows.Forms.Control.Validating> , werden alle Ereignisse, die normalerweise nach dem-Ereignis auftreten, <xref:System.Windows.Forms.Control.Validating> unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1754">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1755">Das <xref:System.Windows.Forms.Control.GotFocus> -Ereignis und das- <xref:System.Windows.Forms.Control.LostFocus> Ereignis sind Low-Level-Fokus Ereignisse, die an die WM_KILLFOCUS und WM_SETFOCUS Windows-Meldungen gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-1755">The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</span></span> <span data-ttu-id="8426f-1756">Normalerweise <xref:System.Windows.Forms.Control.GotFocus> werden das-Ereignis und das- <xref:System.Windows.Forms.Control.LostFocus> Ereignis nur beim Aktualisieren von <xref:System.Windows.Forms.UICues> oder beim Schreiben benutzerdefinierter Steuerelemente verwendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1756">Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls.</span></span> <span data-ttu-id="8426f-1757">Stattdessen <xref:System.Windows.Forms.Control.Enter> sollten das-Ereignis und das- <xref:System.Windows.Forms.Control.Leave> Ereignis für alle-Steuerelemente verwendet werden, mit Ausnahme der <xref:System.Windows.Forms.Form> -Klasse, die die <xref:System.Windows.Forms.Form.Activated> Ereignisse und verwendet <xref:System.Windows.Forms.Form.Deactivate></span><span class="sxs-lookup"><span data-stu-id="8426f-1757">Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="8426f-1758">Weitere Informationen zu den <xref:System.Windows.Forms.Control.GotFocus> Ereignissen und <xref:System.Windows.Forms.Control.LostFocus> finden Sie in den Themen [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) und [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) .</span><span class="sxs-lookup"><span data-stu-id="8426f-1758">For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) and [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) topics.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8426f-1759">Versuchen Sie nicht, den Fokus in den <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.GotFocus> <xref:System.Windows.Forms.Control.Leave> <xref:System.Windows.Forms.Control.LostFocus> <xref:System.Windows.Forms.Control.Validating> <xref:System.Windows.Forms.Control.Validated> Ereignis Handlern,,,, oder festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1759">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="8426f-1760">Dies kann dazu führen, dass Ihre Anwendung oder das Betriebssystem nicht mehr reagiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1760">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="8426f-1761">Weitere Informationen finden Sie im [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) Thema.</span><span class="sxs-lookup"><span data-stu-id="8426f-1761">For more information, see the [WM_KILLFOCUS](/windows/win32/inputdev/wm-killfocus) topic.</span></span>  
  
 <span data-ttu-id="8426f-1762">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1762">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1763">Im folgenden Codebeispiel wird das Validieren des Texts für textBox1 veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1763">The following code example demonstrates validating the text for TextBox1.</span></span> <span data-ttu-id="8426f-1764">Außerdem wird die Behandlung des- <xref:System.Windows.Forms.Control.LostFocus> Ereignisses veranschaulicht, indem die- <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType> Eigenschaft auf den Text in TextBox1 festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1764">It also demonstrates handling the <xref:System.Windows.Forms.Control.LostFocus> event by setting the <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType> property to the text in TextBox1.</span></span> <span data-ttu-id="8426f-1765">Im Codebeispiel wurde die- <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType> Methode verwendet, um vor dem Öffnen des Dialog Felds Datei auf einen Fehler zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1765">The code example used the <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType> method to check for an error before opening the file dialog box.</span></span> <span data-ttu-id="8426f-1766">Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das eine benannte, eine benannte, <xref:System.Windows.Forms.TextBox> `TextBox1` eine benannte <xref:System.Windows.Forms.OpenFileDialog> `OpenFileDialog1` <xref:System.Windows.Forms.Button> `Button1` und <xref:System.Windows.Forms.ErrorProvider> eine `ErrorProvider1` mit dem Namen enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1766">To run this example, paste the following code into a form containing a <xref:System.Windows.Forms.TextBox> named `TextBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, a <xref:System.Windows.Forms.Button> named `Button1`, and an <xref:System.Windows.Forms.ErrorProvider> named `ErrorProvider1`.</span></span> <span data-ttu-id="8426f-1767">Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-1767">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FileDialog#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#2)]
 [!code-csharp[System.Windows.Forms.FileDialog#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#2)]
 [!code-vb[System.Windows.Forms.FileDialog#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Control.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1768">Ruft den Zwischenraum zwischen Steuerelementen ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1768">Gets or sets the space between controls.</span></span></summary>
        <value><span data-ttu-id="8426f-1769">Ein <see cref="T:System.Windows.Forms.Padding" />, das den Zwischenraum zwischen Steuerelementen darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1769">A <see cref="T:System.Windows.Forms.Padding" /> representing the space between controls.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1770">Steuerelemente erhalten Standardwerte für <xref:System.Windows.Forms.Control.Margin%2A> , die in angemessener Nähe zu den Richtlinien der Windows-Benutzeroberfläche stehen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1770">Controls receive default values for <xref:System.Windows.Forms.Control.Margin%2A> that are reasonably close to Windows user interface guidelines.</span></span> <span data-ttu-id="8426f-1771">Einige Anpassungen sind für bestimmte Anwendungen möglicherweise noch erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8426f-1771">Some adjustments might still be necessary for particular applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1772">Das Festlegen der- <xref:System.Windows.Forms.Control.Margin%2A> Eigenschaft für ein angedocktes Steuerelement wirkt sich nicht auf den Abstand des Steuer Elements von den Rändern seines Containers aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1772">Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the edges of its container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberSignature Language="F#" Value="member this.MarginChanged : EventHandler " Usage="member this.MarginChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1773">Tritt ein, wenn der Rand des Steuerelements geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1773">Occurs when the control's margin changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1774">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1774">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1775">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1775">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-1776">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.MarginChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-1776">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MarginChanged> event.</span></span> <span data-ttu-id="8426f-1777">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1777">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-1778">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1778">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-1779">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-1779">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-1780">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.MarginChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1780">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MarginChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#21)]
 [!code-vb[System.Windows.Forms.EventExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.AmbientValue(typeof(System.Drawing.Size), "0, 0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.AmbientValue(typeof(System.Drawing.Size), "0, 0")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1781">Ruft die Größe ab, die die Obergrenze bildet, die <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> angeben kann, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1781">Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</span></span></summary>
        <value><span data-ttu-id="8426f-1782">Ein geordnetes Paar vom Typ <see cref="T:System.Drawing.Size" />, das die Breite und Höhe eines Rechtecks darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1782">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1783">Ruft die Größe ab, die die Untergrenze bildet, die <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> angeben kann, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1783">Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</span></span></summary>
        <value><span data-ttu-id="8426f-1784">Ein geordnetes Paar vom Typ <see cref="T:System.Drawing.Size" />, das die Breite und Höhe eines Rechtecks darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1784">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifierKeys">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Keys ModifierKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.Keys ModifierKeys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ModifierKeys" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ModifierKeys As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Keys ModifierKeys { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.ModifierKeys : System.Windows.Forms.Keys" Usage="System.Windows.Forms.Control.ModifierKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1785">Ruft einen Wert ab, der angibt, welche der Zusatztasten (Umschalttaste, STRG und ALT) gedrückt ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1785">Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.</span></span></summary>
        <value><span data-ttu-id="8426f-1786">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-1786">A bitwise combination of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span> <span data-ttu-id="8426f-1787">Der Standardwert ist <see cref="F:System.Windows.Forms.Keys.None" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1787">The default is <see cref="F:System.Windows.Forms.Keys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8426f-1788">Im folgenden Codebeispiel wird eine Schaltfläche ausgeblendet, wenn die STRG-Taste gedrückt wird, während auf die Schaltfläche geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1788">The following code example hides a button when the CTRL key is pressed while the button is clicked.</span></span> <span data-ttu-id="8426f-1789">Für dieses Beispiel ist es erforderlich, dass ein <xref:System.Windows.Forms.Button> mit dem Namen `button1` auf einem- <xref:System.Windows.Forms.Form></span><span class="sxs-lookup"><span data-stu-id="8426f-1789">This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]
 [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="MouseButtons">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.MouseButtons MouseButtons { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.MouseButtons MouseButtons" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MouseButtons" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MouseButtons As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::MouseButtons MouseButtons { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.MouseButtons : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.Control.MouseButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1790">Ruft einen Wert ab, der angibt, welche Maustasten gedrückt sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-1790">Gets a value indicating which of the mouse buttons is in a pressed state.</span></span></summary>
        <value><span data-ttu-id="8426f-1791">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.MouseButtons" />-Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="8426f-1791">A bitwise combination of the <see cref="T:System.Windows.Forms.MouseButtons" /> enumeration values.</span></span> <span data-ttu-id="8426f-1792">Der Standardwert ist <see cref="F:System.Windows.Forms.MouseButtons.None" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-1792">The default is <see cref="F:System.Windows.Forms.MouseButtons.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8426f-1793">Im folgenden Codebeispiel wird veranschaulicht, wie die Member <xref:System.Windows.Forms.Control.BackColor%2A> , <xref:System.Windows.Forms.Control.RectangleToScreen%2A> , <xref:System.Windows.Forms.Control.PointToScreen%2A> , <xref:System.Windows.Forms.Control.MouseButtons%2A> , und <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType> <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1793">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="8426f-1794">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular mit dem Namen Form1 ein, das mehrere Steuerelemente enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1794">To run the example, paste the following code in a form called Form1 containing several controls.</span></span> <span data-ttu-id="8426f-1795">Für dieses Beispiel ist es erforderlich, dass die <xref:System.Windows.Forms.Control.MouseDown> <xref:System.Windows.Forms.Control.MouseMove> -,-und- <xref:System.Windows.Forms.Control.MouseUp> Ereignisse mit den Ereignis Handlern verbunden sind, die im Beispiel definiert sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-1795">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseCaptureChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MouseCaptureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseCaptureChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseCaptureChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseCaptureChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseCaptureChanged;" />
      <MemberSignature Language="F#" Value="member this.MouseCaptureChanged : EventHandler " Usage="member this.MouseCaptureChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1796">Tritt ein, wenn das Steuerelement die Mausaufzeichnung verliert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1796">Occurs when the control loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1797">In seltenen Szenarios müssen Sie möglicherweise unerwartete Eingaben erkennen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1797">In rare scenarios, you might need to detect unexpected input.</span></span> <span data-ttu-id="8426f-1798">Beachten Sie z. b. die folgenden Szenarien:</span><span class="sxs-lookup"><span data-stu-id="8426f-1798">For example, consider the following scenarios.</span></span>  
  
-   <span data-ttu-id="8426f-1799">Während einer Maus wird der Benutzer das Startmenü durch Drücken der Windows-Taste oder STRG + ESC geöffnet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1799">During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.</span></span>  
  
-   <span data-ttu-id="8426f-1800">Während eines Mauszeigers wechselt der Benutzer durch Drücken von Alt + Tab zu einem anderen Programm.</span><span class="sxs-lookup"><span data-stu-id="8426f-1800">During a mouse operation, the user switches to another program by pressing ALT+TAB.</span></span>  
  
-   <span data-ttu-id="8426f-1801">Während einer Maus Operation zeigt ein anderes Programm ein Fenster oder ein Meldungs Feld an, das den Fokus von der aktuellen Anwendung entfernt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1801">During a mouse operation, another program displays a window or a message box that takes focus away from the current application.</span></span>  
  
 <span data-ttu-id="8426f-1802">Maus Vorgänge können das Klicken und halten der Maus auf ein Formular oder ein Steuerelement oder das Ausführen eines Maus Zieh Vorgangs einschließen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1802">Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation.</span></span> <span data-ttu-id="8426f-1803">Wenn Sie erkennen müssen, wenn ein Formular oder ein Steuerelement die Maus Aufzeichnung für diese und verwandte unerwartete Szenarien verliert, können Sie das- <xref:System.Windows.Forms.Control.MouseCaptureChanged> Ereignis verwenden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1803">If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1804">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.MouseCaptureChanged> Ereignis für ein-Steuerelement veranschaulicht <xref:System.Windows.Forms.Button> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1804">The following code example demonstrates the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event for a <xref:System.Windows.Forms.Button> control.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/vb/form1.vb#1)]  
  
 <span data-ttu-id="8426f-1805">Um dieses Beispiel zu testen, führen Sie es im Debugger aus, indem Sie F5 drücken.</span><span class="sxs-lookup"><span data-stu-id="8426f-1805">To test this example, run it in the debugger by pressing F5.</span></span> <span data-ttu-id="8426f-1806">Öffnen Sie das **Ausgabe** Fenster in Visual Studio, damit Sie sehen können, wann Ereignisse ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1806">Open the **Output** window in Visual Studio so that you can see when events are raised.</span></span> <span data-ttu-id="8426f-1807">Klicken Sie auf das, <xref:System.Windows.Forms.Button> und beachten Sie die folgende Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="8426f-1807">Click the <xref:System.Windows.Forms.Button> and notice the following output.</span></span>  
  
 `button1_MouseDown`  
  
 `button1_MouseUp`  
  
 `button1_MouseCaptureChanged`  
  
 <span data-ttu-id="8426f-1808">Klicken Sie nun mit der linken Maustaste auf das Steuerelement <xref:System.Windows.Forms.Button> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1808">Now, click and hold the left mouse button on the <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="8426f-1809">Wenn Sie auf die Maus klicken, drücken Sie Alt + Tab, um zu einem anderen Programm zu wechseln.</span><span class="sxs-lookup"><span data-stu-id="8426f-1809">While still clicking the mouse, press ALT+TAB to switch to another program.</span></span> <span data-ttu-id="8426f-1810">Beachten Sie, dass das- <xref:System.Windows.Forms.Control.MouseCaptureChanged> Ereignis ausgelöst wird, sodass Sie dieses Szenario potenziell verarbeiten können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1810">Notice that the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event is raised enabling you to potentially handle this scenario.</span></span> <span data-ttu-id="8426f-1811">Abhängig von den Aktionen wird das <xref:System.Windows.Forms.Control.MouseUp> Ereignis möglicherweise nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-1811">Depending on your actions, the <xref:System.Windows.Forms.Control.MouseUp> event might not be raised.</span></span> <span data-ttu-id="8426f-1812">Sie können diesen Test auch mit der Windows-Taste oder STRG + ESC testen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1812">You can also try this test with the Windows key or CTRL+ESC.</span></span>  
  
 `button1_MouseDown`  
  
 `button1_MouseCaptureChanged`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1813">Tritt ein, wenn mit der Maus auf das Steuerelement geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1813">Occurs when the control is clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1814">Wenn eine Maustaste gedrückt wird, wenn sich der Cursor über einem Steuerelement befindet, werden in der Regel die folgenden Ereignisse aus dem-Steuerelement ausgelöst:</span><span class="sxs-lookup"><span data-stu-id="8426f-1814">Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:</span></span>  
  
1.  <span data-ttu-id="8426f-1815"><xref:System.Windows.Forms.Control.MouseDown> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1815"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
2.  <span data-ttu-id="8426f-1816"><xref:System.Windows.Forms.Control.Click> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1816"><xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
3.  <span data-ttu-id="8426f-1817"><xref:System.Windows.Forms.Control.MouseClick> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1817"><xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
4.  <span data-ttu-id="8426f-1818"><xref:System.Windows.Forms.Control.MouseUp> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1818"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
 <span data-ttu-id="8426f-1819">Damit dies geschehen kann, können die verschiedenen Ereignisse in der-Klasse des Steuer Elements nicht deaktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1819">For this to occur, the various events cannot be disabled in the control's class.</span></span>  
  
 <span data-ttu-id="8426f-1820">Zwei einzelne Klicks, die in der Zeit genau genug vorkommen, wie durch die Mauseinstellungen des Betriebssystems des Benutzers festgelegt, generieren <xref:System.Windows.Forms.Control.MouseDoubleClick> anstelle des zweiten Ereignisses ein-Ereignis <xref:System.Windows.Forms.Control.MouseClick> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1820">Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <xref:System.Windows.Forms.Control.MouseDoubleClick> event instead of the second <xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8426f-1821"><xref:System.Windows.Forms.Control.Click>Ereignisse sind logisch übergeordnete Ereignisse eines Steuer Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1821"><xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control.</span></span> <span data-ttu-id="8426f-1822">Sie werden häufig durch andere Aktionen ausgelöst, z. b. durch Drücken der EINGABETASTE, wenn das Steuerelement den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1822">They are often raised by other actions, such as pressing the ENTER key when the control has focus.</span></span>  
  
 <span data-ttu-id="8426f-1823">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1823">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1824">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1824">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-1825">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.MouseClick> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-1825">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span> <span data-ttu-id="8426f-1826">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1826">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-1827">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1827">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-1828">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-1828">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-1829">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.MouseClick> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1829">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1830">Tritt ein, wenn mit der Maus auf das Steuerelement doppelgeklickt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1830">Occurs when the control is double clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1831">Das <xref:System.Windows.Forms.Control.MouseDoubleClick> Ereignis tritt auf, wenn der Benutzer die Maustaste zweimal in der schnell Folge drückt, wenn sich der Cursor über dem Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1831">The <xref:System.Windows.Forms.Control.MouseDoubleClick> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control.</span></span> <span data-ttu-id="8426f-1832">Das Zeitintervall, in dem zwei einzelne Klicks von einem Doppelklick getrennt werden, hängt von den Mauseinstellungen des Betriebssystems des Benutzers ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-1832">The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.</span></span>  
  
 <span data-ttu-id="8426f-1833">Die folgende Ereignis Reihe wird vom-Steuerelement ausgelöst, wenn eine solche Benutzeraktion stattfindet:</span><span class="sxs-lookup"><span data-stu-id="8426f-1833">The following series of events is raised by the control when such a user action takes place:</span></span>  
  
1.  <span data-ttu-id="8426f-1834"><xref:System.Windows.Forms.Control.MouseDown> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1834"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
2.  <span data-ttu-id="8426f-1835"><xref:System.Windows.Forms.Control.Click> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1835"><xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
3.  <span data-ttu-id="8426f-1836"><xref:System.Windows.Forms.Control.MouseClick> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1836"><xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
4.  <span data-ttu-id="8426f-1837"><xref:System.Windows.Forms.Control.MouseUp> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1837"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
5.  <span data-ttu-id="8426f-1838"><xref:System.Windows.Forms.Control.MouseDown> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1838"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
6.  <span data-ttu-id="8426f-1839"><xref:System.Windows.Forms.Control.DoubleClick> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1839"><xref:System.Windows.Forms.Control.DoubleClick> event.</span></span>  
  
7.  <span data-ttu-id="8426f-1840"><xref:System.Windows.Forms.Control.MouseDoubleClick> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1840"><xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span>  
  
8.  <span data-ttu-id="8426f-1841"><xref:System.Windows.Forms.Control.MouseUp> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-1841"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
 <span data-ttu-id="8426f-1842">Damit dies geschehen kann, können die verschiedenen Ereignisse in der-Klasse des Steuer Elements nicht deaktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1842">For this to occur, the various events cannot be disabled in the control's class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8426f-1843"><xref:System.Windows.Forms.Control.DoubleClick>Ereignisse sind logisch übergeordnete Ereignisse eines Steuer Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1843"><xref:System.Windows.Forms.Control.DoubleClick> events are logically higher-level events of a control.</span></span> <span data-ttu-id="8426f-1844">Sie können von anderen Benutzeraktionen, z. b. Tastenkombinationen, ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1844">They may be raised by other user actions, such as shortcut key combinations.</span></span>  
  
 <span data-ttu-id="8426f-1845">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1845">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1846">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-1846">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-1847">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.MouseDoubleClick> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-1847">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span> <span data-ttu-id="8426f-1848">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-1848">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-1849">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1849">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-1850">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-1850">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-1851">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.MouseDoubleClick> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1851">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#55)]
 [!code-vb[System.Windows.Forms.EventExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDown : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1852">Tritt ein, wenn sich der Mauszeiger über dem Steuerelement befindet und eine Maustaste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1852">Occurs when the mouse pointer is over the control and a mouse button is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1853">Mausereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1853">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1854">Die folgenden Ereignisse werden für die- <xref:System.Windows.Forms.TabControl> Klasse nur ausgelöst, wenn mindestens eine in der Auflistung vorhanden ist <xref:System.Windows.Forms.TabPage> <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> : <xref:System.Windows.Forms.Control.Click> , <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.MouseDown> , <xref:System.Windows.Forms.Control.MouseUp> , <xref:System.Windows.Forms.Control.MouseHover> , <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave> und <xref:System.Windows.Forms.Control.MouseMove> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1854">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="8426f-1855">Wenn in der Auflistung mindestens eine vorhanden ist <xref:System.Windows.Forms.TabPage> und der Benutzer mit dem Header des Registerkarten-Steuer Elements interagiert (wo die <xref:System.Windows.Forms.TabPage> Namen angezeigt werden), löst das <xref:System.Windows.Forms.TabControl> entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1855">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="8426f-1856">Wenn sich die Benutzerinteraktion jedoch im Client Bereich der Registerkarte befindet, löst die <xref:System.Windows.Forms.TabPage> das entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1856">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="8426f-1857">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1857">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1858">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe verschiedener Mausereignisse der Mauszeiger auf einem gezeichnet wird <xref:System.Windows.Forms.Panel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1858">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="8426f-1859">Ein Liniensegment wird <xref:System.Drawing.Drawing2D.GraphicsPath> für jedes <xref:System.Windows.Forms.Control.MouseMove> -Ereignis und jedes-Ereignis hinzugefügt <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1859">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="8426f-1860">Um die Grafiken zu aktualisieren, <xref:System.Windows.Forms.Control.Invalidate%2A> wird die-Methode für <xref:System.Windows.Forms.Panel> jedes `MouseDown` -Ereignis und jedes- `MouseUp` Ereignis aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1860">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="8426f-1861">Außerdem wird beim Auftreten des Ereignisses ein Bildlauf nach oben oder unten durchgeführt <xref:System.Windows.Forms.Control.MouseWheel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1861">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="8426f-1862">Weitere Mausereignisse, wie z <xref:System.Windows.Forms.Control.MouseHover> . b., werden auch auf dem Bildschirm angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1862">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="8426f-1863">Auch auf dem Bildschirm angezeigt werden zusätzliche Informationen über die Maus aus der- <xref:System.Windows.Forms.SystemInformation> Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1863">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event EventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : EventHandler " Usage="member this.MouseEnter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1864">Tritt ein, wenn der Mauszeiger in den Bereich des Steuerelements eintritt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1864">Occurs when the mouse pointer enters the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1865">Mausereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1865">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1866">Die folgenden Ereignisse werden für die- <xref:System.Windows.Forms.TabControl> Klasse nur ausgelöst, wenn mindestens eine in der Auflistung vorhanden ist <xref:System.Windows.Forms.TabPage> <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> : <xref:System.Windows.Forms.Control.Click> , <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.MouseDown> , <xref:System.Windows.Forms.Control.MouseUp> , <xref:System.Windows.Forms.Control.MouseHover> , <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave> und <xref:System.Windows.Forms.Control.MouseMove> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1866">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="8426f-1867">Wenn in der Auflistung mindestens eine vorhanden ist <xref:System.Windows.Forms.TabPage> und der Benutzer mit dem Header des Registerkarten-Steuer Elements interagiert (wo die <xref:System.Windows.Forms.TabPage> Namen angezeigt werden), löst das <xref:System.Windows.Forms.TabControl> entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1867">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="8426f-1868">Wenn sich die Benutzerinteraktion jedoch im Client Bereich der Registerkarte befindet, löst die <xref:System.Windows.Forms.TabPage> das entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1868">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="8426f-1869">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1869">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1870">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe verschiedener Mausereignisse der Mauszeiger auf einem gezeichnet wird <xref:System.Windows.Forms.Panel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1870">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="8426f-1871">Ein Liniensegment wird <xref:System.Drawing.Drawing2D.GraphicsPath> für jedes <xref:System.Windows.Forms.Control.MouseMove> -Ereignis und jedes-Ereignis hinzugefügt <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1871">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="8426f-1872">Um die Grafiken zu aktualisieren, <xref:System.Windows.Forms.Control.Invalidate%2A> wird die-Methode für <xref:System.Windows.Forms.Panel> jedes `MouseDown` -Ereignis und jedes- `MouseUp` Ereignis aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1872">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="8426f-1873">Außerdem wird beim Auftreten des Ereignisses ein Bildlauf nach oben oder unten durchgeführt <xref:System.Windows.Forms.Control.MouseWheel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1873">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="8426f-1874">Weitere Mausereignisse, wie z <xref:System.Windows.Forms.Control.MouseHover> . b., werden auch auf dem Bildschirm angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1874">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="8426f-1875">Auch auf dem Bildschirm angezeigt werden zusätzliche Informationen über die Maus aus der- <xref:System.Windows.Forms.SystemInformation> Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1875">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseHover">
      <MemberSignature Language="C#" Value="public event EventHandler MouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseHover As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseHover;" />
      <MemberSignature Language="F#" Value="member this.MouseHover : EventHandler " Usage="member this.MouseHover : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1876">Tritt ein, wenn der Mauszeiger auf dem Steuerelement verbleibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1876">Occurs when the mouse pointer rests on the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1877">Eine typische Verwendung von <xref:System.Windows.Forms.Control.MouseHover> besteht darin, eine QuickInfo anzuzeigen, wenn der Mauszeiger an einem Steuerelement in einem angegebenen Bereich um das Steuerelement bewegt wird (das "Hover-Rechteck").</span><span class="sxs-lookup"><span data-stu-id="8426f-1877">A typical use of <xref:System.Windows.Forms.Control.MouseHover> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the "hover rectangle").</span></span> <span data-ttu-id="8426f-1878">Die erforderliche Pause für das Ereignis, das ausgelöst werden muss, wird von der-Eigenschaft in Millisekunden angegeben <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1878">The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property.</span></span>  
  
 <span data-ttu-id="8426f-1879">Das- <xref:System.Windows.Forms.Control.MouseHover> Ereignis wird in Verbindung mit der-Eigenschaft und der-Eigenschaft definiert und erkannt <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1879">The <xref:System.Windows.Forms.Control.MouseHover> event is defined and detected in connection with the <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> and <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> properties.</span></span>  
  
 <span data-ttu-id="8426f-1880">Mausereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1880">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1881">Die folgenden Ereignisse werden für die- <xref:System.Windows.Forms.TabControl> Klasse nur ausgelöst, wenn mindestens eine in der Auflistung vorhanden ist <xref:System.Windows.Forms.TabPage> <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> : <xref:System.Windows.Forms.Control.Click> , <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.MouseDown> , <xref:System.Windows.Forms.Control.MouseUp> , <xref:System.Windows.Forms.Control.MouseHover> , <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave> und <xref:System.Windows.Forms.Control.MouseMove> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1881">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="8426f-1882">Wenn in der Auflistung mindestens eine vorhanden ist <xref:System.Windows.Forms.TabPage> und der Benutzer mit dem Header des Registerkarten-Steuer Elements interagiert (wo die <xref:System.Windows.Forms.TabPage> Namen angezeigt werden), löst das <xref:System.Windows.Forms.TabControl> entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1882">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="8426f-1883">Wenn sich die Benutzerinteraktion jedoch im Client Bereich der Registerkarte befindet, löst die <xref:System.Windows.Forms.TabPage> das entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1883">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="8426f-1884">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1884">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1885">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe verschiedener Mausereignisse der Mauszeiger auf einem gezeichnet wird <xref:System.Windows.Forms.Panel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1885">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="8426f-1886">Ein Liniensegment wird <xref:System.Drawing.Drawing2D.GraphicsPath> für jedes <xref:System.Windows.Forms.Control.MouseMove> -Ereignis und jedes-Ereignis hinzugefügt <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1886">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="8426f-1887">Um die Grafiken zu aktualisieren, <xref:System.Windows.Forms.Control.Invalidate%2A> wird die-Methode für <xref:System.Windows.Forms.Panel> jedes `MouseDown` -Ereignis und jedes- `MouseUp` Ereignis aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1887">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="8426f-1888">Außerdem wird beim Auftreten des Ereignisses ein Bildlauf nach oben oder unten durchgeführt <xref:System.Windows.Forms.Control.MouseWheel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1888">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="8426f-1889">Weitere Mausereignisse, wie z <xref:System.Windows.Forms.Control.MouseHover> . b., werden auch auf dem Bildschirm angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1889">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="8426f-1890">Auch auf dem Bildschirm angezeigt werden zusätzliche Informationen über die Maus aus der- <xref:System.Windows.Forms.SystemInformation> Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1890">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MouseHoverTime" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event EventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : EventHandler " Usage="member this.MouseLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1891">Tritt ein, wenn der Mauszeiger den Bereich des Steuerelements verlässt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1891">Occurs when the mouse pointer leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1892">Mausereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1892">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1893">Die folgenden Ereignisse werden für die- <xref:System.Windows.Forms.TabControl> Klasse nur ausgelöst, wenn mindestens eine in der Auflistung vorhanden ist <xref:System.Windows.Forms.TabPage> <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> : <xref:System.Windows.Forms.Control.Click> , <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.MouseDown> , <xref:System.Windows.Forms.Control.MouseUp> , <xref:System.Windows.Forms.Control.MouseHover> , <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave> und <xref:System.Windows.Forms.Control.MouseMove> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1893">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="8426f-1894">Wenn in der Auflistung mindestens eine vorhanden ist <xref:System.Windows.Forms.TabPage> und der Benutzer mit dem Header des Registerkarten-Steuer Elements interagiert (wo die <xref:System.Windows.Forms.TabPage> Namen angezeigt werden), löst das <xref:System.Windows.Forms.TabControl> entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1894">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="8426f-1895">Wenn sich die Benutzerinteraktion jedoch im Client Bereich der Registerkarte befindet, löst die <xref:System.Windows.Forms.TabPage> das entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1895">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="8426f-1896">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1896">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1897">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe verschiedener Mausereignisse der Mauszeiger auf einem gezeichnet wird <xref:System.Windows.Forms.Panel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1897">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="8426f-1898">Ein Liniensegment wird <xref:System.Drawing.Drawing2D.GraphicsPath> für jedes <xref:System.Windows.Forms.Control.MouseMove> -Ereignis und jedes-Ereignis hinzugefügt <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1898">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="8426f-1899">Um die Grafiken zu aktualisieren, <xref:System.Windows.Forms.Control.Invalidate%2A> wird die-Methode für <xref:System.Windows.Forms.Panel> jedes `MouseDown` -Ereignis und jedes- `MouseUp` Ereignis aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1899">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="8426f-1900">Außerdem wird beim Auftreten des Ereignisses ein Bildlauf nach oben oder unten durchgeführt <xref:System.Windows.Forms.Control.MouseWheel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1900">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="8426f-1901">Weitere Mausereignisse, wie z <xref:System.Windows.Forms.Control.MouseHover> . b., werden auch auf dem Bildschirm angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1901">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="8426f-1902">Auch auf dem Bildschirm angezeigt werden zusätzliche Informationen über die Maus aus der- <xref:System.Windows.Forms.SystemInformation> Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1902">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1903">Tritt ein, wenn der Mauszeiger über dem Steuerelement bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1903">Occurs when the mouse pointer is moved over the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1904">Typische Verwendungen von <xref:System.Windows.Forms.Control.MouseMove> sind das Ändern der Farbe des Steuer Elements oder das Zeichnen eines erhöhten Rechtecks um das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-1904">Typical uses of <xref:System.Windows.Forms.Control.MouseMove> are to change the control's color or to paint a raised rectangle around the control.</span></span>  
  
 <span data-ttu-id="8426f-1905">Mausereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1905">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1906">Die folgenden Ereignisse werden für die- <xref:System.Windows.Forms.TabControl> Klasse nur ausgelöst, wenn mindestens eine in der Auflistung vorhanden ist <xref:System.Windows.Forms.TabPage> <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> : <xref:System.Windows.Forms.Control.Click> , <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.MouseDown> , <xref:System.Windows.Forms.Control.MouseUp> , <xref:System.Windows.Forms.Control.MouseHover> , <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave> und <xref:System.Windows.Forms.Control.MouseMove> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1906">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="8426f-1907">Wenn in der Auflistung mindestens eine vorhanden ist <xref:System.Windows.Forms.TabPage> und der Benutzer mit dem Header des Registerkarten-Steuer Elements interagiert (wo die <xref:System.Windows.Forms.TabPage> Namen angezeigt werden), löst das <xref:System.Windows.Forms.TabControl> entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1907">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="8426f-1908">Wenn sich die Benutzerinteraktion jedoch im Client Bereich der Registerkarte befindet, löst die <xref:System.Windows.Forms.TabPage> das entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1908">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="8426f-1909">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1909">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1910">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe verschiedener Mausereignisse der Mauszeiger auf einem gezeichnet wird <xref:System.Windows.Forms.Panel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1910">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="8426f-1911">Ein Liniensegment wird <xref:System.Drawing.Drawing2D.GraphicsPath> für jedes <xref:System.Windows.Forms.Control.MouseMove> -Ereignis und jedes-Ereignis hinzugefügt <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1911">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="8426f-1912">Um die Grafiken zu aktualisieren, <xref:System.Windows.Forms.Control.Invalidate%2A> wird die-Methode für <xref:System.Windows.Forms.Panel> jedes `MouseDown` -Ereignis und jedes- `MouseUp` Ereignis aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1912">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="8426f-1913">Außerdem wird beim Auftreten des Ereignisses ein Bildlauf nach oben oder unten durchgeführt <xref:System.Windows.Forms.Control.MouseWheel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1913">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="8426f-1914">Weitere Mausereignisse, wie z <xref:System.Windows.Forms.Control.MouseHover> . b., werden auch auf dem Bildschirm angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1914">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="8426f-1915">Auch auf dem Bildschirm angezeigt werden zusätzliche Informationen über die Maus aus der- <xref:System.Windows.Forms.SystemInformation> Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1915">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MousePosition">
      <MemberSignature Language="C#" Value="public static System.Drawing.Point MousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Point MousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MousePosition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Point MousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.MousePosition : System.Drawing.Point" Usage="System.Windows.Forms.Control.MousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1916">Ruft die Position des Mauszeigers in Bildschirmkoordinaten ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-1916">Gets the position of the mouse cursor in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="8426f-1917">Ein <see cref="T:System.Drawing.Point" />, der die Koordinaten des Mauszeigers relativ zur linken oberen Ecke des Bildschirms enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1917">A <see cref="T:System.Drawing.Point" /> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1918">Die- <xref:System.Windows.Forms.Control.MousePosition%2A> Eigenschaft gibt einen zurück <xref:System.Drawing.Point> , der die Position des Mauszeigers zum Zeitpunkt der referenzierten Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1918">The <xref:System.Windows.Forms.Control.MousePosition%2A> property returns a <xref:System.Drawing.Point> that represents the mouse cursor position at the time the property was referenced.</span></span> <span data-ttu-id="8426f-1919">Die Koordinaten geben die Position auf dem Bildschirm an, nicht relativ zum Steuerelement und werden unabhängig davon zurückgegeben, ob der Cursor über dem Steuerelement positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1919">The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control.</span></span> <span data-ttu-id="8426f-1920">Die Koordinaten der oberen linken Ecke des Bildschirms sind 0, 0.</span><span class="sxs-lookup"><span data-stu-id="8426f-1920">The coordinates of the upper-left corner of the screen are 0,0.</span></span>  
  
 <span data-ttu-id="8426f-1921">Die- <xref:System.Windows.Forms.Control.MousePosition%2A> Eigenschaft ist identisch mit der- <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-1921">The <xref:System.Windows.Forms.Control.MousePosition%2A> property is identical to the <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1922">Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.TreeNode> Bezeichnung in einen bearbeitbaren Zustand versetzt, wenn der Benutzer ALT + E drückt, während sich der Mauszeiger über dem Struktur Knoten befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-1922">The following code example puts a <xref:System.Windows.Forms.TreeNode> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node.</span></span> <span data-ttu-id="8426f-1923">Nachdem der Benutzer mit dem Bearbeiten der Bezeichnung abgeschlossen ist, können die Bezeichnungen erst wieder bearbeitet werden, wenn die Tastenkombination ALT + E gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1923">After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again.</span></span> <span data-ttu-id="8426f-1924">Für dieses Beispiel ist es erforderlich, dass ein <xref:System.Windows.Forms.TreeView> auf einem vorhanden ist <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1924">This example requires that you have a <xref:System.Windows.Forms.TreeView> on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8426f-1925">Die Strukturansicht sollte auch mindestens eine in der Auflistung enthalten <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView.Nodes%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1925">The tree view should also have at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeView.Nodes%2A> collection.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseUp : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1926">Tritt ein, wenn sich der Mauszeiger über dem Steuerelement befindet und eine Maustaste losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1926">Occurs when the mouse pointer is over the control and a mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1927">Mausereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1927">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-1928">Die folgenden Ereignisse werden für die- <xref:System.Windows.Forms.TabControl> Klasse nur ausgelöst, wenn mindestens eine in der Auflistung vorhanden ist <xref:System.Windows.Forms.TabPage> <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> : <xref:System.Windows.Forms.Control.Click> , <xref:System.Windows.Forms.Control.DoubleClick> , <xref:System.Windows.Forms.Control.MouseDown> , <xref:System.Windows.Forms.Control.MouseUp> , <xref:System.Windows.Forms.Control.MouseHover> , <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave> und <xref:System.Windows.Forms.Control.MouseMove> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1928">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="8426f-1929">Wenn in der Auflistung mindestens eine vorhanden ist <xref:System.Windows.Forms.TabPage> und der Benutzer mit dem Header des Registerkarten-Steuer Elements interagiert (wo die <xref:System.Windows.Forms.TabPage> Namen angezeigt werden), löst das <xref:System.Windows.Forms.TabControl> entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1929">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="8426f-1930">Wenn sich die Benutzerinteraktion jedoch im Client Bereich der Registerkarte befindet, löst die <xref:System.Windows.Forms.TabPage> das entsprechende-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1930">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="8426f-1931">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1931">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1932">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe verschiedener Mausereignisse der Mauszeiger auf einem gezeichnet wird <xref:System.Windows.Forms.Panel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1932">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="8426f-1933">Ein Liniensegment wird <xref:System.Drawing.Drawing2D.GraphicsPath> für jedes <xref:System.Windows.Forms.Control.MouseMove> -Ereignis und jedes-Ereignis hinzugefügt <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1933">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="8426f-1934">Um die Grafiken zu aktualisieren, <xref:System.Windows.Forms.Control.Invalidate%2A> wird die-Methode für <xref:System.Windows.Forms.Panel> jedes `MouseDown` -Ereignis und jedes- `MouseUp` Ereignis aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1934">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="8426f-1935">Außerdem wird beim Auftreten des Ereignisses ein Bildlauf nach oben oder unten durchgeführt <xref:System.Windows.Forms.Control.MouseWheel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1935">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="8426f-1936">Weitere Mausereignisse, wie z <xref:System.Windows.Forms.Control.MouseHover> . b., werden auch auf dem Bildschirm angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1936">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="8426f-1937">Auch auf dem Bildschirm angezeigt werden zusätzliche Informationen über die Maus aus der- <xref:System.Windows.Forms.SystemInformation> Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1937">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseWheel : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1938">Tritt ein, wenn das Mausrad gedreht wird, während das Steuerelement fokussiert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1938">Occurs when the mouse wheel moves while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1939">Bei der Behandlung des <xref:System.Windows.Forms.Control.MouseWheel> Ereignisses ist es wichtig, die dem Mausrad zugeordneten Benutzeroberflächen Standards einzuhalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1939">When handling the <xref:System.Windows.Forms.Control.MouseWheel> event it is important to follow the user interface (UI) standards associated with the mouse wheel.</span></span> <span data-ttu-id="8426f-1940">Der- <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType> Eigenschafts Wert gibt den Betrag an, um den das Mausrad verschoben wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-1940">The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType> property value indicates the amount the mouse wheel has been moved.</span></span> <span data-ttu-id="8426f-1941">Die Benutzeroberfläche sollte scrollen, wenn das akkumulierte Delta plus oder minus 120 ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1941">The UI should scroll when the accumulated delta is plus or minus 120.</span></span> <span data-ttu-id="8426f-1942">Die Benutzeroberfläche sollte in der Anzahl der von der-Eigenschaft zurückgegebenen logischen Zeilen einen Bildlauf <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> für jeden erreichten Delta Wert durchführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1942">The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> property for every delta value reached.</span></span> <span data-ttu-id="8426f-1943">Sie können auch in weniger als 120 Einheiten Inkrementen einen Bildlauf durchführen. das Verhältnis sollte jedoch konstant bleiben, d <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> . h. Zeilen, die pro 120 Delta-Einheiten der Radbewegung gescrollt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-1943">You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> lines scrolled per 120 delta units of wheel movement.</span></span>  
  
 <span data-ttu-id="8426f-1944">Weitere Informationen zum Verarbeiten von Mausrad Nachrichten finden Sie im [WM_MOUSEWHEEL](/windows/win32/inputdev/wm-mousewheel) Thema.</span><span class="sxs-lookup"><span data-stu-id="8426f-1944">For more information about handling mouse wheel messages, see the [WM_MOUSEWHEEL](/windows/win32/inputdev/wm-mousewheel) topic.</span></span>  
  
 <span data-ttu-id="8426f-1945">Mausereignisse treten in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-1945">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
 <span data-ttu-id="8426f-1946">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1946">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1947">Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe verschiedener Mausereignisse der Mauszeiger auf einem gezeichnet wird <xref:System.Windows.Forms.Panel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1947">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="8426f-1948">Ein Liniensegment wird <xref:System.Drawing.Drawing2D.GraphicsPath> für jedes <xref:System.Windows.Forms.Control.MouseMove> -Ereignis und jedes-Ereignis hinzugefügt <xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1948">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="8426f-1949">Um die Grafiken zu aktualisieren, <xref:System.Windows.Forms.Control.Invalidate%2A> wird die-Methode für <xref:System.Windows.Forms.Panel> jedes `MouseDown` -Ereignis und jedes- `MouseUp` Ereignis aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1949">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="8426f-1950">Außerdem wird beim Auftreten des Ereignisses ein Bildlauf nach oben oder unten durchgeführt <xref:System.Windows.Forms.Control.MouseWheel> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1950">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="8426f-1951">Weitere Mausereignisse, wie z <xref:System.Windows.Forms.Control.MouseHover> . b., werden auch auf dem Bildschirm angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1951">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="8426f-1952">Auch auf dem Bildschirm angezeigt werden zusätzliche Informationen über die Maus aus der- <xref:System.Windows.Forms.SystemInformation> Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1952">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public event EventHandler Move;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Move" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Move" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Move As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Move;" />
      <MemberSignature Language="F#" Value="member this.Move : EventHandler " Usage="member this.Move : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1953">Tritt beim Verschieben des Steuerelements ein.</span><span class="sxs-lookup"><span data-stu-id="8426f-1953">Occurs when the control is moved.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1954">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1954">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1955">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.Move> Ereignis verwendet, um die Position des Formulars in Bildschirm Koordinaten auf der Titelleiste des Formulars anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1955">The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.</span></span>  
  
 [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]
 [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]
 [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.Control.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-1956">Ruft den Namen des Steuerelements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-1956">Gets or sets the name of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-1957">Der Name des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-1957">The name of the control.</span></span> <span data-ttu-id="8426f-1958">Der Standardwert ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="8426f-1958">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1959">Die <xref:System.Windows.Forms.Control.Name%2A> -Eigenschaft kann zur Laufzeit verwendet werden, um das Objekt anhand des Namens anstelle des Typs und des programmgesteuerten namens auszuwerten.</span><span class="sxs-lookup"><span data-stu-id="8426f-1959">The <xref:System.Windows.Forms.Control.Name%2A> property can be used at run time to evaluate the object by name rather than type and programmatic name.</span></span> <span data-ttu-id="8426f-1960">Da die <xref:System.Windows.Forms.Control.Name%2A> -Eigenschaft einen <xref:System.String> -Typ zurückgibt, kann Sie in Logik Anweisungen im Case-Stil ausgewertet werden ( `Select` Anweisung in Visual Basic, `switch` -Anweisung in Visual c# und [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)] ).</span><span class="sxs-lookup"><span data-stu-id="8426f-1960">Because the <xref:System.Windows.Forms.Control.Name%2A> property returns a <xref:System.String> type, it can be evaluated in case-style logic statements (`Select` statement in Visual Basic, `switch` statement in Visual C# and [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1961">Im folgenden Codebeispiel wird der eines-Steuer Elements in einem-Steuerelement angezeigt, <xref:System.Windows.Forms.Control.Name%2A> <xref:System.Windows.Forms.MessageBox> Wenn das Steuerelement einem Formular hinzugefügt oder daraus entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1961">The following code example displays the <xref:System.Windows.Forms.Control.Name%2A> of a control in a <xref:System.Windows.Forms.MessageBox> when the control is added or removed from a form.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.ISite.Name" />
      </Docs>
    </Member>
    <Member MemberName="NotifyInvalidate">
      <MemberSignature Language="C#" Value="protected virtual void NotifyInvalidate (System.Drawing.Rectangle invalidatedArea);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NotifyInvalidate(valuetype System.Drawing.Rectangle invalidatedArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub NotifyInvalidate (invalidatedArea As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void NotifyInvalidate(System::Drawing::Rectangle invalidatedArea);" />
      <MemberSignature Language="F#" Value="abstract member NotifyInvalidate : System.Drawing.Rectangle -&gt; unit&#xA;override this.NotifyInvalidate : System.Drawing.Rectangle -&gt; unit" Usage="control.NotifyInvalidate invalidatedArea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidatedArea" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="invalidatedArea"><span data-ttu-id="8426f-1962">Ein <see cref="T:System.Drawing.Rectangle" />, das den für ungültig erklärten Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-1962">A <see cref="T:System.Drawing.Rectangle" /> representing the area to invalidate.</span></span></param>
        <summary><span data-ttu-id="8426f-1963">Löst das <see cref="E:System.Windows.Forms.Control.Invalidated" />-Ereignis aus, wobei ein angegebener Bereich des Steuerelements für ungültig erklärt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-1963">Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event with a specified region of the control to invalidate.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="control.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-1964">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1964">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-1965">Löst das <see cref="E:System.Windows.Forms.Control.AutoSizeChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1965">Raises the <see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1966">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1966">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-1967">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1967">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-1968">Mit der <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-1968">The <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-1969">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1969">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-1970">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1970">When overriding <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="control.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-1971">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1971">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-1972">Löst das <see cref="E:System.Windows.Forms.Control.BackColorChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1972">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1973">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1973">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-1974">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1974">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-1975">Mit der <xref:System.Windows.Forms.Control.OnBackColorChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-1975">The <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-1976">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1976">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1977">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1977">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-1978">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-1978">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-1979">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1979">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-1980">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1980">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-1981">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1981">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-1982">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1982">When overriding <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundImageChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="control.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-1983">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1983">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-1984">Löst das <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1984">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1985">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1985">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-1986">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1986">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-1987">Mit der <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-1987">The <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-1988">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-1988">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-1989">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1989">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-1990">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-1990">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-1991">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-1991">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-1992">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-1992">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-1993">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-1993">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-1994">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1994">When overriding <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundImageLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundImageLayoutChanged : EventArgs -&gt; unit" Usage="control.OnBackgroundImageLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-1995">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-1995">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-1996">Löst das <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-1996">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-1997">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-1997">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-1998">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-1998">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-1999">Mit der <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-1999">The <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2000">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2000">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2001">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2001">When overriding <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingContextChanged : EventArgs -&gt; unit&#xA;override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="control.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2002">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2002">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2003">Löst das <see cref="E:System.Windows.Forms.Control.BindingContextChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2003">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2004">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2004">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2005">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2005">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2006">Mit der <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2006">The <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2007">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2007">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2008">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2008">When overriding <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BindingContext" />
      </Docs>
    </Member>
    <Member MemberName="OnCausesValidationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCausesValidationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCausesValidationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCausesValidationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCausesValidationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCausesValidationChanged : EventArgs -&gt; unit&#xA;override this.OnCausesValidationChanged : EventArgs -&gt; unit" Usage="control.OnCausesValidationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2009">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2009">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2010">Löst das <see cref="E:System.Windows.Forms.Control.CausesValidationChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2010">Raises the <see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2011">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2011">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2012">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2012">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2013">Mit der <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2013">The <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2014">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2014">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2015">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2015">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2016">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2016">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2017">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2017">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2018">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2018">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2019">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2019">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2020">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2020">When overriding <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="OnChangeUICues">
      <MemberSignature Language="C#" Value="protected virtual void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangeUICues(class System.Windows.Forms.UICuesEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChangeUICues (e As UICuesEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChangeUICues(System::Windows::Forms::UICuesEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChangeUICues : System.Windows.Forms.UICuesEventArgs -&gt; unit&#xA;override this.OnChangeUICues : System.Windows.Forms.UICuesEventArgs -&gt; unit" Usage="control.OnChangeUICues e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.UICuesEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2021">Ein <see cref="T:System.Windows.Forms.UICuesEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2021">A <see cref="T:System.Windows.Forms.UICuesEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2022">Löst das <see cref="E:System.Windows.Forms.Control.ChangeUICues" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2022">Raises the <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2023">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2023">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2024">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2024">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2025">Mit der <xref:System.Windows.Forms.Control.OnChangeUICues%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2025">The <xref:System.Windows.Forms.Control.OnChangeUICues%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2026">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2026">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2027">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2027">When overriding <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
        <altmember cref="T:System.Windows.Forms.UICues" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="control.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2028">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2028">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2029">Löst das <see cref="E:System.Windows.Forms.Control.Click" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2029">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2030">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2030">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2031">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2031">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2032">Mit der <xref:System.Windows.Forms.Control.OnClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2032">The <xref:System.Windows.Forms.Control.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2033">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2033">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2034">Im folgenden Codebeispiel wird das Überschreiben der- <xref:System.Windows.Forms.Control.OnClick%2A> Methode in einer abgeleiteten Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-2034">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.OnClick%2A> method in a derived class.</span></span> <span data-ttu-id="8426f-2035">Fügen Sie den folgenden Code nach einer Formular Klasse in dieselbe Datei ein, um das Beispiel auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2035">To run the example, paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="8426f-2036">Fügen Sie dem Formular ein Textfeld vom Typ hinzu `SingleClickTextBox` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2036">Add a textbox of type `SingleClickTextBox` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/VB/form1.vb#1)]  
  
 <span data-ttu-id="8426f-2037">Das folgende Codebeispiel zeigt eine der vielen Verwendungsmöglichkeiten des <xref:System.Windows.Forms.Control.Click> -Ereignisses und des-Ereignis Handlers.</span><span class="sxs-lookup"><span data-stu-id="8426f-2037">The following code example shows one of the many uses of the <xref:System.Windows.Forms.Control.Click> event and event handler.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2038">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2038">When overriding <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
    <Member MemberName="OnClientSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnClientSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClientSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClientSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClientSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClientSizeChanged : EventArgs -&gt; unit&#xA;override this.OnClientSizeChanged : EventArgs -&gt; unit" Usage="control.OnClientSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2039">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2039">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2040">Löst das <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2040">Raises the <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2041">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2041">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2042">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2042">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2043">Mit der <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2043">The <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2044">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2044">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2045">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2045">When overriding <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuChanged : EventArgs -&gt; unit&#xA;override this.OnContextMenuChanged : EventArgs -&gt; unit" Usage="control.OnContextMenuChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2046">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2046">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2047">Löst das <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2047">Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2048">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2048">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2049">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2049">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2050">Mit der <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2050">The <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2051">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2051">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2052">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2052">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2053">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2053">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2054">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2054">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2055">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2055">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2056">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2056">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2057">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2057">When overriding <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuStripChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuStripChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuStripChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuStripChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuStripChanged : EventArgs -&gt; unit&#xA;override this.OnContextMenuStripChanged : EventArgs -&gt; unit" Usage="control.OnContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2058">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2058">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2059">Löst das <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2059">Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2060">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2060">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2061">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2061">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2062">Mit der <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2062">The <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2063">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2063">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2064">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2064">When overriding <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnControlAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnControlAdded (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlAdded(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlAdded (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlAdded(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit&#xA;override this.OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="control.OnControlAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2065">Ein <see cref="T:System.Windows.Forms.ControlEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2065">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2066">Löst das <see cref="E:System.Windows.Forms.Control.ControlAdded" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2066">Raises the <see cref="E:System.Windows.Forms.Control.ControlAdded" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2067">Wird aufgerufen, wenn dem Steuerelement ein untergeordnetes Steuerelement hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2067">Called when a child control is added to the control.</span></span>  
  
 <span data-ttu-id="8426f-2068">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2068">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2069">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2069">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2070">Mit der <xref:System.Windows.Forms.Control.OnControlAdded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2070">The <xref:System.Windows.Forms.Control.OnControlAdded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2071">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2071">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2072">Im folgenden Codebeispiel wird verwendet <xref:System.Windows.Forms.Control.ControlAdded> , um ein-Steuerelement zu einem Formular hinzuzufügen und den Namen des hinzugefügten Steuer Elements in einem-Element angezeigt <xref:System.Windows.Forms.MessageBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2072">The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2073">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2073">When overriding <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ControlAdded" />
      </Docs>
    </Member>
    <Member MemberName="OnControlRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnControlRemoved (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlRemoved(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlRemoved (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlRemoved(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnControlRemoved : System.Windows.Forms.ControlEventArgs -&gt; unit&#xA;override this.OnControlRemoved : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="control.OnControlRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2074">Ein <see cref="T:System.Windows.Forms.ControlEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2074">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2075">Löst das <see cref="E:System.Windows.Forms.Control.ControlRemoved" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2075">Raises the <see cref="E:System.Windows.Forms.Control.ControlRemoved" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2076">Wird aufgerufen, wenn ein untergeordnetes Steuerelement aus dem Steuerelement entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2076">Called when a child control is removed from the control.</span></span>  
  
 <span data-ttu-id="8426f-2077">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2077">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2078">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2078">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2079">Mit der <xref:System.Windows.Forms.Control.OnControlRemoved%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2079">The <xref:System.Windows.Forms.Control.OnControlRemoved%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2080">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2080">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2081">Im folgenden Codebeispiel wird verwendet <xref:System.Windows.Forms.Control.ControlRemoved> , um ein-Steuerelement aus einem Formular zu entfernen und den Namen des entfernten Steuer Elements in einem-Element angezeigt <xref:System.Windows.Forms.MessageBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2081">The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2082">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2082">When overriding <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ControlRemoved" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateControl();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateControl : unit -&gt; unit&#xA;override this.OnCreateControl : unit -&gt; unit" Usage="control.OnCreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2083">Löst die <see cref="M:System.Windows.Forms.Control.CreateControl" />-Methode aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2083">Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2084">Die- <xref:System.Windows.Forms.Control.OnCreateControl%2A> Methode wird aufgerufen, wenn das Steuerelement erstmalig erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2084">The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method is called when the control is first created.</span></span>  
  
 <span data-ttu-id="8426f-2085">Mit der <xref:System.Windows.Forms.Control.OnCreateControl%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2085">The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2086">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2086">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2087">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnCreateControl" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2087">When overriding <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCursorChanged : EventArgs -&gt; unit&#xA;override this.OnCursorChanged : EventArgs -&gt; unit" Usage="control.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2088">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2088">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2089">Löst das <see cref="E:System.Windows.Forms.Control.CursorChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2089">Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2090">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2090">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2091">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2091">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2092">Mit der <xref:System.Windows.Forms.Control.OnCursorChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2092">The <xref:System.Windows.Forms.Control.OnCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2093">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2093">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2094">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2094">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2095">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2095">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2096">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2096">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2097">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2097">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2098">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2098">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2099">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2099">When overriding <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.CursorChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="OnDockChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDockChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDockChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDockChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDockChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDockChanged : EventArgs -&gt; unit&#xA;override this.OnDockChanged : EventArgs -&gt; unit" Usage="control.OnDockChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2100">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2100">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2101">Löst das <see cref="E:System.Windows.Forms.Control.DockChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2101">Raises the <see cref="E:System.Windows.Forms.Control.DockChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2102">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2102">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2103">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2103">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2104">Mit der <xref:System.Windows.Forms.Control.OnDockChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2104">The <xref:System.Windows.Forms.Control.OnDockChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2105">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2105">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2106">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2106">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2107">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2107">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2108">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2108">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2109">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2109">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2110">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2110">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2111">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2111">When overriding <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DockChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoubleClick : EventArgs -&gt; unit&#xA;override this.OnDoubleClick : EventArgs -&gt; unit" Usage="control.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2112">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2112">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2113">Löst das <see cref="E:System.Windows.Forms.Control.DoubleClick" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2113">Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2114">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2114">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2115">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2115">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2116">Mit der <xref:System.Windows.Forms.Control.OnDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2116">The <xref:System.Windows.Forms.Control.OnDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2117">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2117">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2118">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.DoubleClick> Ereignis eines verwendet <xref:System.Windows.Forms.ListBox> , um die in der aufgelisteten Textdateien in ein-Steuerelement zu laden <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2118">The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]
 [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]
 [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2119">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2119">When overriding <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChangedAfterParent">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChangedAfterParent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChangedAfterParent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChangedAfterParent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChangedAfterParent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChangedAfterParent : EventArgs -&gt; unit&#xA;override this.OnDpiChangedAfterParent : EventArgs -&gt; unit" Usage="control.OnDpiChangedAfterParent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2120">Ein <see cref="T:System.Windows.Forms.DpiChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2120">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2121">Löst das <see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2121">Raises the <see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChangedBeforeParent">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChangedBeforeParent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChangedBeforeParent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChangedBeforeParent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChangedBeforeParent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChangedBeforeParent : EventArgs -&gt; unit&#xA;override this.OnDpiChangedBeforeParent : EventArgs -&gt; unit" Usage="control.OnDpiChangedBeforeParent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2122">Ein <see cref="T:System.Windows.Forms.DpiChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2122">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2123">Löst das <see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2123">Raises the <see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragDrop drgevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent"><span data-ttu-id="8426f-2124">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2124">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2125">Löst das <see cref="E:System.Windows.Forms.Control.DragDrop" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2125">Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2126">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2126">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2127">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2127">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2128">Mit der <xref:System.Windows.Forms.Control.OnDragDrop%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2128">The <xref:System.Windows.Forms.Control.OnDragDrop%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2129">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2129">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2130">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2130">When overriding <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragEnter drgevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent"><span data-ttu-id="8426f-2131">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2131">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2132">Löst das <see cref="E:System.Windows.Forms.Control.DragEnter" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2132">Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2133">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2133">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2134">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2134">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2135">Mit der <xref:System.Windows.Forms.Control.OnDragEnter%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2135">The <xref:System.Windows.Forms.Control.OnDragEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2136">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2136">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2137">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2137">When overriding <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : EventArgs -&gt; unit&#xA;override this.OnDragLeave : EventArgs -&gt; unit" Usage="control.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2138">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2138">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2139">Löst das <see cref="E:System.Windows.Forms.Control.DragLeave" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2139">Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2140">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2140">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2141">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2141">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2142">Mit der <xref:System.Windows.Forms.Control.OnDragLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2142">The <xref:System.Windows.Forms.Control.OnDragLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2143">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2143">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2144">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2144">When overriding <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragOver drgevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent"><span data-ttu-id="8426f-2145">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2145">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2146">Löst das <see cref="E:System.Windows.Forms.Control.DragOver" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2146">Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2147">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2147">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2148">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2148">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2149">Mit der <xref:System.Windows.Forms.Control.OnDragOver%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2149">The <xref:System.Windows.Forms.Control.OnDragOver%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2150">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2150">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2151">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2151">When overriding <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="control.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2152">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2152">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2153">Löst das <see cref="E:System.Windows.Forms.Control.EnabledChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2153">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2154">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2154">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2155">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2155">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2156">Mit der <xref:System.Windows.Forms.Control.OnEnabledChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2156">The <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2157">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2157">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2158">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2158">When overriding <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.EnabledChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnter : EventArgs -&gt; unit&#xA;override this.OnEnter : EventArgs -&gt; unit" Usage="control.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2159">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2159">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2160">Löst das <see cref="E:System.Windows.Forms.Control.Enter" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2160">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2161">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2161">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2162">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2162">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2163">Mit der <xref:System.Windows.Forms.Control.OnEnter%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2163">The <xref:System.Windows.Forms.Control.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2164">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2164">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2165">Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.Control.Enter> -Ereignis verwendet, um die Vordergrund-und Hintergrundfarben eines <xref:System.Windows.Forms.TextBox> unter bestimmten Bedingungen zu ändern.</span><span class="sxs-lookup"><span data-stu-id="8426f-2165">The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2166">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2166">When overriding <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFontChanged : EventArgs -&gt; unit&#xA;override this.OnFontChanged : EventArgs -&gt; unit" Usage="control.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2167">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2167">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2168">Löst das <see cref="E:System.Windows.Forms.Control.FontChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2168">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2169">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2169">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2170">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2170">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2171">Mit der <xref:System.Windows.Forms.Control.OnFontChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2171">The <xref:System.Windows.Forms.Control.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2172">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2172">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2173">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2173">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2174">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2174">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2175">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2175">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2176">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2176">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2177">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2177">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2178">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2178">When overriding <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="control.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2179">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2179">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2180">Löst das <see cref="E:System.Windows.Forms.Control.ForeColorChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2180">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2181">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2181">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2182">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2182">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2183">Mit der <xref:System.Windows.Forms.Control.OnForeColorChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2183">The <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2184">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2184">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2185">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2185">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2186">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2186">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2187">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2187">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2188">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2188">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2189">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2189">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2190">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2190">When overriding <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs gfbevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (gfbevent As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ gfbevent);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="control.OnGiveFeedback gfbevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gfbevent" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="gfbevent"><span data-ttu-id="8426f-2191">Ein <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2191">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2192">Löst das <see cref="E:System.Windows.Forms.Control.GiveFeedback" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2192">Raises the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2193">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2193">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2194">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2194">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2195">Mit der <xref:System.Windows.Forms.Control.OnGiveFeedback%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2195">The <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2196">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2196">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2197">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2197">When overriding <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : EventArgs -&gt; unit&#xA;override this.OnGotFocus : EventArgs -&gt; unit" Usage="control.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2198">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2198">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2199">Löst das <see cref="E:System.Windows.Forms.Control.GotFocus" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2199">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2200">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2200">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2201">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2201">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2202">Mit der <xref:System.Windows.Forms.Control.OnGotFocus%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2202">The <xref:System.Windows.Forms.Control.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2203">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2203">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2204">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2204">When overriding <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHandleCreated : EventArgs -&gt; unit&#xA;override this.OnHandleCreated : EventArgs -&gt; unit" Usage="control.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2205">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2205">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2206">Löst das <see cref="E:System.Windows.Forms.Control.HandleCreated" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2206">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2207">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2207">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2208">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2208">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2209">Mit der <xref:System.Windows.Forms.Control.OnHandleCreated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2209">The <xref:System.Windows.Forms.Control.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2210">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2210">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2211">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2211">When overriding <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.HandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHandleDestroyed : EventArgs -&gt; unit&#xA;override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="control.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2212">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2212">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2213">Löst das <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2213">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2214">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2214">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2215">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2215">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2216">Mit der <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2216">The <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2217">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2217">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2218">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2218">When overriding <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.HandleDestroyed" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpRequested">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpRequested (System.Windows.Forms.HelpEventArgs hevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpRequested(class System.Windows.Forms.HelpEventArgs hevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpRequested (hevent As HelpEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpRequested(System::Windows::Forms::HelpEventArgs ^ hevent);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpRequested : System.Windows.Forms.HelpEventArgs -&gt; unit&#xA;override this.OnHelpRequested : System.Windows.Forms.HelpEventArgs -&gt; unit" Usage="control.OnHelpRequested hevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hevent" Type="System.Windows.Forms.HelpEventArgs" />
      </Parameters>
      <Docs>
        <param name="hevent"><span data-ttu-id="8426f-2219">Ein <see cref="T:System.Windows.Forms.HelpEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2219">A <see cref="T:System.Windows.Forms.HelpEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2220">Löst das <see cref="E:System.Windows.Forms.Control.HelpRequested" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2220">Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2221">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2221">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2222">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2222">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2223">Mit der <xref:System.Windows.Forms.Control.OnHelpRequested%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2223">The <xref:System.Windows.Forms.Control.OnHelpRequested%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2224">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2224">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2225">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2225">When overriding <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="OnImeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnImeModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnImeModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnImeModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnImeModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnImeModeChanged : EventArgs -&gt; unit&#xA;override this.OnImeModeChanged : EventArgs -&gt; unit" Usage="control.OnImeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2226">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2226">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2227">Löst das <see cref="E:System.Windows.Forms.Control.ImeModeChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2227">Raises the <see cref="E:System.Windows.Forms.Control.ImeModeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2228">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2228">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2229">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2229">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2230">Mit der <xref:System.Windows.Forms.Control.OnImeModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2230">The <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2231">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2231">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2232">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2232">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2233">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2233">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2234">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2234">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2235">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2235">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2236">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2236">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2237">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2237">When overriding <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ImeModeChanged" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="OnInvalidated">
      <MemberSignature Language="C#" Value="protected virtual void OnInvalidated (System.Windows.Forms.InvalidateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvalidated(class System.Windows.Forms.InvalidateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvalidated (e As InvalidateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvalidated(System::Windows::Forms::InvalidateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInvalidated : System.Windows.Forms.InvalidateEventArgs -&gt; unit&#xA;override this.OnInvalidated : System.Windows.Forms.InvalidateEventArgs -&gt; unit" Usage="control.OnInvalidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InvalidateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2238">Ein <see cref="T:System.Windows.Forms.InvalidateEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2238">An <see cref="T:System.Windows.Forms.InvalidateEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2239">Löst das <see cref="E:System.Windows.Forms.Control.Invalidated" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2239">Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2240">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2240">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2241">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2241">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2242">Mit der <xref:System.Windows.Forms.Control.OnInvalidated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2242">The <xref:System.Windows.Forms.Control.OnInvalidated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2243">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2243">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2244">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2244">When overriding <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Invalidated" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2245">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2245">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2246">Löst das <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2246">Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2247">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2247">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2248">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2248">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2249">Mit der <xref:System.Windows.Forms.Control.OnKeyDown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2249">The <xref:System.Windows.Forms.Control.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2250">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2250">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2251">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.KeyDown> Ereignis verwendet, um den Typ des in das-Steuerelement eingegebenen Zeichens zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2251">The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2252">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2252">When overriding <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit&#xA;override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="control.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2253">Ein <see cref="T:System.Windows.Forms.KeyPressEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2253">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2254">Löst das <see cref="E:System.Windows.Forms.Control.KeyPress" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2254">Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2255">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2255">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2256">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2256">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2257">Mit der <xref:System.Windows.Forms.Control.OnKeyPress%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2257">The <xref:System.Windows.Forms.Control.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2258">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2258">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2259">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.KeyPress> Ereignis verwendet, um zu verhindern, dass Zeichen in das Steuerelement eintreten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2259">The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2260">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2260">When overriding <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2261">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2261">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2262">Löst das <see cref="E:System.Windows.Forms.Control.KeyUp" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2262">Raises the <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2263">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2263">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2264">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2264">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2265">Mit der <xref:System.Windows.Forms.Control.OnKeyUp%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2265">The <xref:System.Windows.Forms.Control.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2266">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2266">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2267">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.KeyUp> Ereignis mit der- <xref:System.Windows.Forms.Help> Klasse verwendet, um dem Benutzer eine Popup-Hilfe anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2267">The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2268">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2268">When overriding <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected virtual void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="abstract member OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit&#xA;override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="control.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent"><span data-ttu-id="8426f-2269">Ein <see cref="T:System.Windows.Forms.LayoutEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2269">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2270">Löst das <see cref="E:System.Windows.Forms.Control.Layout" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2270">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2271">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2271">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2272">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2272">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2273">Mit der <xref:System.Windows.Forms.Control.OnLayout%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2273">The <xref:System.Windows.Forms.Control.OnLayout%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2274">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2274">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2275">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> in einer abgeleiteten Klasse sicher, dass die-Methode der Basisklasse aufgerufen wird, <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> damit registrierte Delegaten das Ereignis empfangen und typische Andock-und Verankerungs Funktionen funktionieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-2275">When overriding <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> method so that registered delegates receive the event and for typical docking and anchoring functions to work.</span></span> <span data-ttu-id="8426f-2276">Abgeleitete Klassen sollten diese Methode für jede beliebige benutzerdefinierte Layoutlogik überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2276">Derived classes should override this method to do any custom layout logic.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLeave : EventArgs -&gt; unit&#xA;override this.OnLeave : EventArgs -&gt; unit" Usage="control.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2277">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2277">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2278">Löst das <see cref="E:System.Windows.Forms.Control.Leave" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2278">Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2279">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2279">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2280">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2280">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2281">Mit der <xref:System.Windows.Forms.Control.OnLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2281">The <xref:System.Windows.Forms.Control.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2282">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2282">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2283">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.Leave> Ereignis verwendet, um ein-Steuerelement auf den früheren Zustand zurückzusetzen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2283">The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2284">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2284">When overriding <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="control.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2285">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2285">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2286">Löst das <see cref="E:System.Windows.Forms.Control.LocationChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2286">Raises the <see cref="E:System.Windows.Forms.Control.LocationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2287">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2287">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2288">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2288">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2289">Mit der <xref:System.Windows.Forms.Control.OnLocationChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2289">The <xref:System.Windows.Forms.Control.OnLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2290">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2290">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2291">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2291">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2292">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2292">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName* `Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2293">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2293">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2294">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2294">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2295">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2295">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2296">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2296">When overriding <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.LocationChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : EventArgs -&gt; unit&#xA;override this.OnLostFocus : EventArgs -&gt; unit" Usage="control.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2297">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2297">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2298">Löst das <see cref="E:System.Windows.Forms.Control.LostFocus" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2298">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2299">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2299">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2300">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2300">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2301">Mit der <xref:System.Windows.Forms.Control.OnLostFocus%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2301">The <xref:System.Windows.Forms.Control.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2302">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2302">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2303">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2303">When overriding <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnMarginChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMarginChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMarginChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMarginChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMarginChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMarginChanged : EventArgs -&gt; unit&#xA;override this.OnMarginChanged : EventArgs -&gt; unit" Usage="control.OnMarginChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2304">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2304">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2305">Löst das <see cref="E:System.Windows.Forms.Control.MarginChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2305">Raises the <see cref="E:System.Windows.Forms.Control.MarginChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2306">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2306">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2307">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2307">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2308">Mit der <xref:System.Windows.Forms.Control.OnMarginChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2308">The <xref:System.Windows.Forms.Control.OnMarginChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2309">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2309">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2310">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2310">When overriding <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseCaptureChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseCaptureChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseCaptureChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseCaptureChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseCaptureChanged : EventArgs -&gt; unit&#xA;override this.OnMouseCaptureChanged : EventArgs -&gt; unit" Usage="control.OnMouseCaptureChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2311">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2311">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2312">Löst das <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2312">Raises the <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2313">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2313">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2314">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2314">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2315">Mit der <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2315">The <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2316">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2316">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2317">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2317">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2318">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2318">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2319">Löst das <see cref="E:System.Windows.Forms.Control.MouseClick" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2319">Raises the <see cref="E:System.Windows.Forms.Control.MouseClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2320">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2320">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2321">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2321">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2322">Mit der <xref:System.Windows.Forms.Control.OnMouseClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2322">The <xref:System.Windows.Forms.Control.OnMouseClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2323">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2323">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2324">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2324">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2325">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2325">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2326">Löst das <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2326">Raises the <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2327">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2327">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2328">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2328">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2329">Mit der <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2329">The <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2330">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2330">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2331">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2331">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2332">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2332">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2333">Löst das <see cref="E:System.Windows.Forms.Control.MouseDown" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2333">Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2334">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2334">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2335">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2335">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2336">Mit der <xref:System.Windows.Forms.Control.OnMouseDown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2336">The <xref:System.Windows.Forms.Control.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2337">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2337">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2338">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2338">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : EventArgs -&gt; unit&#xA;override this.OnMouseEnter : EventArgs -&gt; unit" Usage="control.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2339">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2339">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2340">Löst das <see cref="E:System.Windows.Forms.Control.MouseEnter" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2340">Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2341">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2341">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2342">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2342">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2343">Mit der <xref:System.Windows.Forms.Control.OnMouseEnter%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2343">The <xref:System.Windows.Forms.Control.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2344">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2344">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2345">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2345">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseEnter" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : EventArgs -&gt; unit&#xA;override this.OnMouseHover : EventArgs -&gt; unit" Usage="control.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2346">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2346">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2347">Löst das <see cref="E:System.Windows.Forms.Control.MouseHover" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2347">Raises the <see cref="E:System.Windows.Forms.Control.MouseHover" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2348">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2348">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2349">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2349">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2350">Mit der <xref:System.Windows.Forms.Control.OnMouseHover%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2350">The <xref:System.Windows.Forms.Control.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2351">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2351">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2352">Das folgende Codebeispiel veranschaulicht, wie die <xref:System.Windows.Forms.Control.OnMouseHover%2A> -Methode und die- <xref:System.Windows.Forms.Control.OnMouseMove%2A> Methode in einer abgeleiteten Klasse überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2352">The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class.</span></span> <span data-ttu-id="8426f-2353">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein neues Formular ein, und fügen Sie diese Klasse, die dieselbe Datei bildet, nach dem Formular ein.</span><span class="sxs-lookup"><span data-stu-id="8426f-2353">To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</span></span> <span data-ttu-id="8426f-2354">Fügen Sie dem Formular eine Schaltfläche vom Typ hinzu `FunButton` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2354">Add a button of type `FunButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2355">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2355">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : EventArgs -&gt; unit&#xA;override this.OnMouseLeave : EventArgs -&gt; unit" Usage="control.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2356">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2356">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2357">Löst das <see cref="E:System.Windows.Forms.Control.MouseLeave" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2357">Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2358">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2358">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2359">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2359">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2360">Mit der <xref:System.Windows.Forms.Control.OnMouseLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2360">The <xref:System.Windows.Forms.Control.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2361">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2361">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2362">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2362">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2363">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2363">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2364">Löst das <see cref="E:System.Windows.Forms.Control.MouseMove" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2364">Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2365">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2365">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2366">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2366">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2367">Mit der <xref:System.Windows.Forms.Control.OnMouseMove%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2367">The <xref:System.Windows.Forms.Control.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2368">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2368">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2369">Das folgende Codebeispiel veranschaulicht, wie die <xref:System.Windows.Forms.Control.OnMouseHover%2A> -Methode und die- <xref:System.Windows.Forms.Control.OnMouseMove%2A> Methode in einer abgeleiteten Klasse überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2369">The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class.</span></span> <span data-ttu-id="8426f-2370">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein neues Formular ein, und fügen Sie diese Klasse, die dieselbe Datei bildet, nach dem Formular ein.</span><span class="sxs-lookup"><span data-stu-id="8426f-2370">To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</span></span> <span data-ttu-id="8426f-2371">Fügen Sie dem Formular eine Schaltfläche vom Typ hinzu `FunButton` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2371">Add a button of type `FunButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2372">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2372">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2373">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2373">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2374">Löst das <see cref="E:System.Windows.Forms.Control.MouseUp" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2374">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2375">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2375">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2376">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2376">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2377">Mit der <xref:System.Windows.Forms.Control.OnMouseUp%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2377">The <xref:System.Windows.Forms.Control.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2378">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2378">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2379">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2379">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2380">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2380">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2381">Löst das <see cref="E:System.Windows.Forms.Control.MouseWheel" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2381">Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2382">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2382">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2383">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2383">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2384">Mit der <xref:System.Windows.Forms.Control.OnMouseWheel%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2384">The <xref:System.Windows.Forms.Control.OnMouseWheel%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2385">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2385">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2386">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2386">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseWheel" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMove (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMove(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMove (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMove(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMove : EventArgs -&gt; unit&#xA;override this.OnMove : EventArgs -&gt; unit" Usage="control.OnMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2387">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2387">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2388">Löst das <see cref="E:System.Windows.Forms.Control.Move" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2388">Raises the <see cref="E:System.Windows.Forms.Control.Move" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2389">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2389">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2390">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2390">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2391">Mit der <xref:System.Windows.Forms.Control.OnMove%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2391">The <xref:System.Windows.Forms.Control.OnMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2392">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2392">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2393">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.Move> Ereignis verwendet, um die Position des Formulars in Bildschirm Koordinaten auf der Titelleiste des Formulars anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2393">The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.</span></span>  
  
 [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]
 [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]
 [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2394">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2394">When overriding <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Move" />
      </Docs>
    </Member>
    <Member MemberName="OnNotifyMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnNotifyMessage (System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyMessage(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNotifyMessage (m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNotifyMessage(System::Windows::Forms::Message m);" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyMessage : System.Windows.Forms.Message -&gt; unit&#xA;override this.OnNotifyMessage : System.Windows.Forms.Message -&gt; unit" Usage="control.OnNotifyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="8426f-2395">Eine <see cref="T:System.Windows.Forms.Message" />, die die Windows-Meldung darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2395">A <see cref="T:System.Windows.Forms.Message" /> that represents the Windows message.</span></span></param>
        <summary><span data-ttu-id="8426f-2396">Benachrichtigt das Steuerelement über Windows-Meldungen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2396">Notifies the control of Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2397">Die <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> -Methode wird aufgerufen, wenn das Style-Bit des Steuer Elements `EnableNotifyMessage` in festgelegt wird <xref:System.Windows.Forms.ControlStyles> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2397">The <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> method is called if the control's `EnableNotifyMessage` style bit is set in <xref:System.Windows.Forms.ControlStyles>.</span></span> <span data-ttu-id="8426f-2398">Mit der-Formatvorlage `EnableNotifyMessage` in <xref:System.Windows.Forms.ControlStyles> kann das-Steuerelement benachrichtigt werden, wenn die- <xref:System.Windows.Forms.Control.WndProc%2A> Methode eine Windows-Meldung empfängt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2398">The `EnableNotifyMessage` style in <xref:System.Windows.Forms.ControlStyles> enables the control to be notified when the <xref:System.Windows.Forms.Control.WndProc%2A> method receives a Windows message.</span></span> <span data-ttu-id="8426f-2399">Mit dieser Methode können halb vertrauenswürdige Steuerelemente auf Windows-Nachrichten lauschen, ohne Sie zum Ändern der Nachricht zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-2399">With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2400">Beim Überschreiben <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> in einer abgeleiteten Klasse ist das Aufrufen der-Methode der Basisklasse <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> nicht erforderlich, da keine anfängliche Implementierung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2400">When overriding <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> in a derived class, calling the base class's <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is not necessary because there is no initial implementation.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaddingChanged : EventArgs -&gt; unit&#xA;override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="control.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2401">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2401">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2402">Löst das <see cref="E:System.Windows.Forms.Control.PaddingChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2402">Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2403">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2403">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2404">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2404">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2405">Mit der <xref:System.Windows.Forms.Control.OnPaddingChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2405">The <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2406">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2406">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2407">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2407">When overriding <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2408">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2408">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2409">Löst das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2409">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2410">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2410">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2411">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2411">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2412">Die- <xref:System.Windows.Forms.Control.OnPaint%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2412">The <xref:System.Windows.Forms.Control.OnPaint%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2413">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2413">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2414">Im folgenden Codebeispiel kann der Benutzer ein Bild oder eine Bilddatei auf das Formular ziehen und an dem Punkt angezeigt werden, an dem Sie abgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-2414">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped.</span></span> <span data-ttu-id="8426f-2415">Die- <xref:System.Windows.Forms.Control.OnPaint%2A> Methode wird überschrieben, um jedes Mal, wenn das Formular gezeichnet wird, das Bild neu zu zeichnen. andernfalls wird das Bild nur bis zum nächsten Neuzeichnen beibehalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2415">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="8426f-2416">Die <xref:System.Windows.Forms.Control.DragEnter> Ereignis Behandlungsmethode bestimmt den Typ der Daten, die in das Formular gezogen werden, und stellt das entsprechende Feedback bereit.</span><span class="sxs-lookup"><span data-stu-id="8426f-2416">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="8426f-2417">Die <xref:System.Windows.Forms.Control.DragDrop> Ereignis Behandlungsmethode zeigt das Bild auf dem Formular an, wenn eine <xref:System.Drawing.Image> aus den Daten erstellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-2417">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="8426f-2418">Da der <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> -Wert und der- <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> Wert Bildschirm Koordinaten sind, wird im Beispiel die-Methode verwendet, <xref:System.Windows.Forms.Control.PointToClient%2A> um Sie in Client Koordinaten zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-2418">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2419">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2419">When overriding <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs pevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaintBackground (pevent As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ pevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPaintBackground pevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pevent" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pevent"><span data-ttu-id="8426f-2420">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" /> mit Informationen zum zu zeichnenden Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-2420">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the control to paint.</span></span></param>
        <summary><span data-ttu-id="8426f-2421">Zeichnet den Hintergrund des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-2421">Paints the background of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2422">Die- <xref:System.Windows.Forms.Control.OnPaintBackground%2A> Methode ermöglicht es abgeleiteten Klassen, Windows-Hintergrund Lösch Anforderungen zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2422">The <xref:System.Windows.Forms.Control.OnPaintBackground%2A> method enables derived classes to handle Windows background erase requests.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2423">Erbende Klassen sollten diese Methode überschreiben, um die Lösch Hintergrund Anforderung von Windows zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2423">Inheriting classes should override this method to handle the erase background request from windows.</span></span> <span data-ttu-id="8426f-2424">Beim Überschreiben <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> in einer abgeleiteten Klasse ist es nicht notwendig, die Basisklasse aufzurufen <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2424">When overriding <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> in a derived class it is not necessary to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackColorChanged : EventArgs -&gt; unit" Usage="control.OnParentBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2425">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2425">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2426">Löst das <see cref="E:System.Windows.Forms.Control.BackColorChanged" />-Ereignis aus, wenn sich der <see cref="P:System.Windows.Forms.Control.BackColor" />-Eigenschaftswert des Containers ändert, zu dem das Steuerelement gehört.</span><span class="sxs-lookup"><span data-stu-id="8426f-2426">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackColor" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2427">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2427">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2428">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2428">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2429">Die- <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2429">The <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2430">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2430">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2431">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2431">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2432">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2432">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2433">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2433">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2434">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2434">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2435">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2435">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2436">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2436">When overriding <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackgroundImageChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackgroundImageChanged : EventArgs -&gt; unit" Usage="control.OnParentBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2437">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2437">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2438">Löst das <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />-Ereignis aus, wenn sich der <see cref="P:System.Windows.Forms.Control.BackgroundImage" />-Eigenschaftswert des Containers ändert, zu dem das Steuerelement gehört.</span><span class="sxs-lookup"><span data-stu-id="8426f-2438">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2439">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2439">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2440">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2440">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2441">Die- <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2441">The <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2442">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2442">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2443">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2443">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2444">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2444">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2445">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2445">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2446">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2446">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2447">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2447">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2448">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2448">When overriding <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBindingContextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBindingContextChanged : EventArgs -&gt; unit&#xA;override this.OnParentBindingContextChanged : EventArgs -&gt; unit" Usage="control.OnParentBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2449">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2449">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2450">Löst das <see cref="E:System.Windows.Forms.Control.BindingContextChanged" />-Ereignis aus, wenn sich der <see cref="P:System.Windows.Forms.Control.BindingContext" />-Eigenschaftswert des Containers ändert, zu dem das Steuerelement gehört.</span><span class="sxs-lookup"><span data-stu-id="8426f-2450">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2451">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2451">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2452">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2452">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2453">Die- <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2453">The <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2454">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2454">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2455">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2455">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2456">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2456">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2457">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2457">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2458">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2458">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2459">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2459">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2460">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2460">When overriding <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentChanged : EventArgs -&gt; unit&#xA;override this.OnParentChanged : EventArgs -&gt; unit" Usage="control.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2461">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2461">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2462">Löst das <see cref="E:System.Windows.Forms.Control.ParentChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2462">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2463">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2463">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2464">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2464">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2465">Die- <xref:System.Windows.Forms.Control.OnParentChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2465">The <xref:System.Windows.Forms.Control.OnParentChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2466">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2466">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2467">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2467">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2468">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2468">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2469">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2469">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2470">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2470">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2471">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2471">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2472">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2472">When overriding <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ParentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentCursorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentCursorChanged : EventArgs -&gt; unit&#xA;override this.OnParentCursorChanged : EventArgs -&gt; unit" Usage="control.OnParentCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2473">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2473">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2474">Löst das <see cref="E:System.Windows.Forms.Control.CursorChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2474">Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2475">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2475">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2476">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2476">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2477">Mit der <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2477">The <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2478">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2478">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2479">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2479">When overriding <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnParentEnabledChanged : EventArgs -&gt; unit" Usage="control.OnParentEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2480">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2480">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2481">Löst das <see cref="E:System.Windows.Forms.Control.EnabledChanged" />-Ereignis aus, wenn sich der <see cref="P:System.Windows.Forms.Control.Enabled" />-Eigenschaftswert des Containers ändert, zu dem das Steuerelement gehört.</span><span class="sxs-lookup"><span data-stu-id="8426f-2481">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2482">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2482">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2483">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2483">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2484">Die- <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2484">The <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2485">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2485">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2486">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2486">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2487">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2487">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2488">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2488">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2489">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2489">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2490">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2490">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2491">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2491">When overriding <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.EnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentFontChanged : EventArgs -&gt; unit&#xA;override this.OnParentFontChanged : EventArgs -&gt; unit" Usage="control.OnParentFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2492">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2492">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2493">Löst das <see cref="E:System.Windows.Forms.Control.FontChanged" />-Ereignis aus, wenn sich der <see cref="P:System.Windows.Forms.Control.Font" />-Eigenschaftswert des Containers ändert, zu dem das Steuerelement gehört.</span><span class="sxs-lookup"><span data-stu-id="8426f-2493">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Font" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2494">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2494">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2495">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2495">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2496">Die- <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2496">The <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2497">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2497">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2498">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2498">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2499">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2499">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2500">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2500">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2501">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2501">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2502">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2502">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2503">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2503">When overriding <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentForeColorChanged : EventArgs -&gt; unit" Usage="control.OnParentForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2504">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2504">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2505">Löst das <see cref="E:System.Windows.Forms.Control.ForeColorChanged" />-Ereignis aus, wenn sich der <see cref="P:System.Windows.Forms.Control.ForeColor" />-Eigenschaftswert des Containers ändert, zu dem das Steuerelement gehört.</span><span class="sxs-lookup"><span data-stu-id="8426f-2505">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2506">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2506">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2507">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2507">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2508">Die- <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2508">The <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2509">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2509">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2510">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2510">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2511">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2511">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2512">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2512">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2513">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2513">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2514">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2514">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2515">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2515">When overriding <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnParentRightToLeftChanged : EventArgs -&gt; unit" Usage="control.OnParentRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2516">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2516">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2517">Löst das <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" />-Ereignis aus, wenn sich der <see cref="P:System.Windows.Forms.Control.RightToLeft" />-Eigenschaftswert des Containers ändert, zu dem das Steuerelement gehört.</span><span class="sxs-lookup"><span data-stu-id="8426f-2517">Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2518">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2518">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2519">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2519">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2520">Die- <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2520">The <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2521">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2521">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2522">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2522">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2523">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2523">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2524">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2524">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2525">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2525">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2526">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2526">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2527">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2527">When overriding <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.RightToLeftChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnParentVisibleChanged : EventArgs -&gt; unit" Usage="control.OnParentVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2528">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2528">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2529">Löst das <see cref="E:System.Windows.Forms.Control.VisibleChanged" />-Ereignis aus, wenn sich der <see cref="P:System.Windows.Forms.Control.Visible" />-Eigenschaftswert des Containers ändert, zu dem das Steuerelement gehört.</span><span class="sxs-lookup"><span data-stu-id="8426f-2529">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2530">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2530">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2531">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2531">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2532">Die- <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2532">The <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2533">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2533">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2534">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2534">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2535">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2535">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2536">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2536">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2537">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2537">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2538">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2538">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2539">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2539">When overriding <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Forms.PreviewKeyDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Forms.PreviewKeyDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As PreviewKeyDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Forms::PreviewKeyDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventArgs -&gt; unit" Usage="control.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PreviewKeyDownEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2540">Ein <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2540">A <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2541">Löst das <see cref="E:System.Windows.Forms.Control.PreviewKeyDown" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2541">Raises the <see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2542">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2542">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2543">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2543">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2544">Mit der <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2544">The <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2545">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2545">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2546">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2546">When overriding <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPrint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPrint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2547">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2547">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2548">Löst das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2548">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2549">Wenn das- `UserPaint` Bit von <xref:System.Windows.Forms.ControlStyles> festgelegt ist, können Sie <xref:System.Windows.Forms.Control.OnPrint%2A> überschreiben, um eine geschichtete Darstellung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2549">If the `UserPaint` bit of the <xref:System.Windows.Forms.ControlStyles> is set, you can override <xref:System.Windows.Forms.Control.OnPrint%2A> to do layered painting.</span></span> <span data-ttu-id="8426f-2550">Weitere Informationen finden Sie unter <xref:System.Windows.Forms.Control.SetStyle%2A>.</span><span class="sxs-lookup"><span data-stu-id="8426f-2550">See <xref:System.Windows.Forms.Control.SetStyle%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8426f-2551">Der <paramref name="e" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2551">The <paramref name="e" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs qcdevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (qcdevent As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ qcdevent);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="control.OnQueryContinueDrag qcdevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qcdevent" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="qcdevent"><span data-ttu-id="8426f-2552">Ein <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2552">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2553">Löst das <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2553">Raises the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2554">Nachdem der Zieh Vorgang begonnen hat, wird diese Methode wiederholt von aufgerufen, [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] bis der Zieh Vorgang entweder abgebrochen oder abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2554">After dragging has begun, this method is called repeatedly by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] until the drag operation is either canceled or completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-2555">Überschreiben Sie diese Methode, wenn Sie den Punkt ändern möchten, an dem der Zieh Vorgang abgebrochen wird oder bei dem eine Ablage auftritt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2555">Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.</span></span>  
  
 <span data-ttu-id="8426f-2556">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2556">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2557">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2557">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2558">Die- <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2558">The <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2559">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2559">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2560">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2560">When overriding <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnRegionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRegionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRegionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRegionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRegionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRegionChanged : EventArgs -&gt; unit&#xA;override this.OnRegionChanged : EventArgs -&gt; unit" Usage="control.OnRegionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2561">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2561">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2562">Löst das <see cref="E:System.Windows.Forms.Control.RegionChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2562">Raises the <see cref="E:System.Windows.Forms.Control.RegionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2563">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2563">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2564">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2564">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2565">Mit der <xref:System.Windows.Forms.Control.OnRegionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2565">The <xref:System.Windows.Forms.Control.OnRegionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2566">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2566">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2567">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2567">When overriding <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected virtual void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResize : EventArgs -&gt; unit&#xA;override this.OnResize : EventArgs -&gt; unit" Usage="control.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2568">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2568">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2569">Löst das <see cref="E:System.Windows.Forms.Control.Resize" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2569">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2570">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2570">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2571">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2571">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2572">Die- <xref:System.Windows.Forms.Control.OnResize%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2572">The <xref:System.Windows.Forms.Control.OnResize%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2573">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2573">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2574">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2574">When overriding <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> method so that registered delegates receive the event.</span></span> <span data-ttu-id="8426f-2575">Die- <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> Methode kann während der Erstellung aufgerufen werden. Wenn Sie Sie überschreiben, <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> kann Sie also aufgerufen werden, bevor der Steuerelement-Konstruktor aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2575">The <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> method can be called during construction, so if you override <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> it can be called before the control constructor is called.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="control.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2576">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2576">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2577">Löst das <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2577">Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2578">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2578">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2579">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2579">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2580">Die- <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2580">The <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2581">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2581">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2582">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2582">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2583">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2583">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2584">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2584">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2585">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2585">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2586">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2586">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2587">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2587">When overriding <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.RightToLeftChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSizeChanged : EventArgs -&gt; unit&#xA;override this.OnSizeChanged : EventArgs -&gt; unit" Usage="control.OnSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2588">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2588">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2589">Löst das <see cref="E:System.Windows.Forms.Control.SizeChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2589">Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2590">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2590">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2591">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2591">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2592">Die- <xref:System.Windows.Forms.Control.OnSizeChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2592">The <xref:System.Windows.Forms.Control.OnSizeChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2593">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2593">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2594">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2594">When overriding <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleChanged : EventArgs -&gt; unit&#xA;override this.OnStyleChanged : EventArgs -&gt; unit" Usage="control.OnStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2595">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2595">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2596">Löst das <see cref="E:System.Windows.Forms.Control.StyleChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2596">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2597">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2597">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2598">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2598">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2599">Die- <xref:System.Windows.Forms.Control.OnStyleChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2599">The <xref:System.Windows.Forms.Control.OnStyleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2600">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2600">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2601">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2601">When overriding <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.StyleChanged" />
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSystemColorsChanged : EventArgs -&gt; unit&#xA;override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="control.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2602">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2602">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2603">Löst das <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2603">Raises the <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2604">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2604">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2605">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2605">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2606">Die- <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2606">The <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2607">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2607">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2608">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2608">When overriding <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.SystemColorsChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTabIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTabIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTabIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTabIndexChanged : EventArgs -&gt; unit&#xA;override this.OnTabIndexChanged : EventArgs -&gt; unit" Usage="control.OnTabIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2609">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2609">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2610">Löst das <see cref="E:System.Windows.Forms.Control.TabIndexChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2610">Raises the <see cref="E:System.Windows.Forms.Control.TabIndexChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2611">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2611">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2612">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2612">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2613">Die- <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2613">The <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2614">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2614">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2615">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2615">When overriding <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.TabIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTabStopChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabStopChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabStopChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTabStopChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTabStopChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTabStopChanged : EventArgs -&gt; unit&#xA;override this.OnTabStopChanged : EventArgs -&gt; unit" Usage="control.OnTabStopChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2616">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2616">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2617">Löst das <see cref="E:System.Windows.Forms.Control.TabStopChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2617">Raises the <see cref="E:System.Windows.Forms.Control.TabStopChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2618">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2618">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2619">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2619">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2620">Die- <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2620">The <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2621">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2621">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2622">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2622">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2623">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2623">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2624">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2624">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2625">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2625">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2626">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2626">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2627">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2627">When overriding <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.TabStopChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : EventArgs -&gt; unit&#xA;override this.OnTextChanged : EventArgs -&gt; unit" Usage="control.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2628">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2628">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2629">Löst das <see cref="E:System.Windows.Forms.Control.TextChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2629">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2630">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2630">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2631">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2631">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2632">Die- <xref:System.Windows.Forms.Control.OnTextChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2632">The <xref:System.Windows.Forms.Control.OnTextChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2633">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2633">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2634">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2634">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2635">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2635">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2636">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2636">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2637">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2637">When overriding <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnValidated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidated : EventArgs -&gt; unit&#xA;override this.OnValidated : EventArgs -&gt; unit" Usage="control.OnValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2638">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2638">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2639">Löst das <see cref="E:System.Windows.Forms.Control.Validated" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2639">Raises the <see cref="E:System.Windows.Forms.Control.Validated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2640">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2640">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2641">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2641">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2642">Die- <xref:System.Windows.Forms.Control.OnValidated%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2642">The <xref:System.Windows.Forms.Control.OnValidated%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2643">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2643">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2644">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2644">When overriding <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="control.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2645">Ein <see cref="T:System.ComponentModel.CancelEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2645">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2646">Löst das <see cref="E:System.Windows.Forms.Control.Validating" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2646">Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2647">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2647">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2648">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2648">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2649">Die- <xref:System.Windows.Forms.Control.OnValidating%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2649">The <xref:System.Windows.Forms.Control.OnValidating%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2650">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2650">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2651">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2651">When overriding <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="control.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-2652">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2652">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2653">Löst das <see cref="E:System.Windows.Forms.Control.VisibleChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2653">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2654">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2654">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8426f-2655">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2655">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 <span data-ttu-id="8426f-2656">Die- <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> Methode ermöglicht es abgeleiteten Klassen auch, das Ereignis zu behandeln, ohne einen Delegaten anzufügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2656">The <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8426f-2657">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2657">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2658">Das folgende Codebeispiel ist eine Ereignis erbende Methode, die ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2658">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-2659">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster `On` *propertyName* `Changed` , das das entsprechende *propertyName* -Ereignis aufhebt, `Changed` Wenn der *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-2659">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-2660">Im folgenden Codebeispiel wird der einer <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> abgeleiteten Klasse, die Währungs Daten anzeigt, geändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2660">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="8426f-2661">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2661">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-2662">Dieses Beispiel erfordert, dass Sie über eine-Klasse verfügen, die von der-Klasse abgeleitet ist <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2662">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2663">Wenn Sie <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2663">When overriding <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Show" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Control.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2664">Ruft ab oder legt fest, welche Abstände innerhalb des Steuerelements verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2664">Gets or sets padding within the control.</span></span></summary>
        <value><span data-ttu-id="8426f-2665">Ein <see cref="T:System.Windows.Forms.Padding" />, das die internen Abstandsmerkmale des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2665">A <see cref="T:System.Windows.Forms.Padding" /> representing the control's internal spacing characteristics.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2666">Für Container wie <xref:System.Windows.Forms.GroupBox> und ruft <xref:System.Windows.Forms.TabControl> die- <xref:System.Windows.Forms.Control.Padding%2A> Eigenschaft ihre jeweiligen Eigenschaften ab oder legt Sie fest <xref:System.Windows.Forms.Control.DisplayRectangle%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2666">For containers such as <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TabControl>, the <xref:System.Windows.Forms.Control.Padding%2A> property gets or sets their respective <xref:System.Windows.Forms.Control.DisplayRectangle%2A> properties.</span></span> <span data-ttu-id="8426f-2667">Die- <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType> Eigenschaft ist gleich der- <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-2667">The <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType> property is equal to its <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8426f-2668">Steuerelemente erhalten Standardwerte für <xref:System.Windows.Forms.Control.Padding%2A> , die in angemessener Nähe zu den Richtlinien der Windows-Benutzeroberfläche stehen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2668">Controls receive default values for <xref:System.Windows.Forms.Control.Padding%2A> that are reasonably close to Windows user interface guidelines.</span></span> <span data-ttu-id="8426f-2669">Einige Anpassungen sind für bestimmte Anwendungen möglicherweise noch erforderlich.</span><span class="sxs-lookup"><span data-stu-id="8426f-2669">Some adjustments might still be necessary for particular applications.</span></span>  
  
 <span data-ttu-id="8426f-2670">Alle Steuerelemente, die implementieren, <xref:System.Windows.Forms.Control.GetPreferredSize%2A> werden um den Wert in vergrößert, wenn den Wert hat <xref:System.Windows.Forms.Control.Padding%2A> <xref:System.Windows.Forms.Control.AutoSize%2A> `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2670">All controls that implement <xref:System.Windows.Forms.Control.GetPreferredSize%2A> are enlarged by the amount in <xref:System.Windows.Forms.Control.Padding%2A> when <xref:System.Windows.Forms.Control.AutoSize%2A> is `true`.</span></span>  
  
 <span data-ttu-id="8426f-2671">Die folgenden Steuerelemente verwenden nicht <xref:System.Windows.Forms.Control.Padding%2A> :</span><span class="sxs-lookup"><span data-stu-id="8426f-2671">The following controls do not use <xref:System.Windows.Forms.Control.Padding%2A>:</span></span>  
  
-   <span data-ttu-id="8426f-2672">Steuerelemente, die nicht <xref:System.Windows.Forms.Control.AutoSize%2A> durch implementiert werden<xref:System.Windows.Forms.Control.GetPreferredSize%2A></span><span class="sxs-lookup"><span data-stu-id="8426f-2672">Controls that do not implement <xref:System.Windows.Forms.Control.AutoSize%2A> through <xref:System.Windows.Forms.Control.GetPreferredSize%2A></span></span>  
  
-   <span data-ttu-id="8426f-2673">Benutzerdefinierte Steuerelemente, die direkt von Erben<xref:System.Windows.Forms.Control></span><span class="sxs-lookup"><span data-stu-id="8426f-2673">Custom controls that directly inherit from <xref:System.Windows.Forms.Control></span></span>  
  
-   <xref:System.Windows.Forms.AxHost>  
  
-   <xref:System.Windows.Forms.ComboBox>  
  
-   <xref:System.Windows.Forms.DataGridView>  
  
-   <xref:System.Windows.Forms.DateTimePicker>  
  
-   <xref:System.Windows.Forms.HScrollBar>  
  
-   <xref:System.Windows.Forms.ListView>  
  
-   <xref:System.Windows.Forms.MaskedTextBox>  
  
-   <xref:System.Windows.Forms.MonthCalendar>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.PropertyGrid>  
  
-   <xref:System.Windows.Forms.RichTextBox>  
  
-   <xref:System.Windows.Forms.SplitContainer>  
  
-   <xref:System.Windows.Forms.TextBox>  
  
-   <xref:System.Windows.Forms.TextBoxBase>  
  
-   <xref:System.Windows.Forms.TreeView>  
  
-   <xref:System.Windows.Forms.VScrollBar>  
  
-   <xref:System.Windows.Forms.WebBrowser>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2674">Tritt ein, wenn der Abstand des Steuerelements geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2674">Occurs when the control's padding changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2675">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2675">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2676">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-2676">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-2677">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.PaddingChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-2677">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.PaddingChanged> event.</span></span> <span data-ttu-id="8426f-2678">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-2678">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-2679">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2679">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-2680">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-2680">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-2681">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.PaddingChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2681">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.PaddingChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#41](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#41)]
 [!code-vb[System.Windows.Forms.EventExamples#41](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2682">Tritt ein, wenn das Steuerelement neu gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2682">Occurs when the control is redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2683">Das- <xref:System.Windows.Forms.Control.Paint> Ereignis wird ausgelöst, wenn das-Steuerelement neu gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2683">The <xref:System.Windows.Forms.Control.Paint> event is raised when the control is redrawn.</span></span> <span data-ttu-id="8426f-2684">Es übergibt eine Instanz von <xref:System.Windows.Forms.PaintEventArgs> an die Methoden, die das <xref:System.Windows.Forms.Control.Paint> Ereignis verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2684">It passes an instance of <xref:System.Windows.Forms.PaintEventArgs> to the method(s) that handles the <xref:System.Windows.Forms.Control.Paint> event.</span></span>  
  
 <span data-ttu-id="8426f-2685">Beim Erstellen eines neuen benutzerdefinierten Steuer Elements oder eines geerbten Steuer Elements mit einer anderen visuellen Darstellung müssen Sie Code zum Rendering des Steuer Elements bereitstellen, indem Sie die-Methode überschreiben <xref:System.Windows.Forms.Control.OnPaint%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2685">When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <xref:System.Windows.Forms.Control.OnPaint%2A> method.</span></span> <span data-ttu-id="8426f-2686">Weitere Informationen finden Sie unter Überschreiben [der OnPaint-Methode](/dotnet/framework/winforms/controls/overriding-the-onpaint-method) und [benutzerdefiniertes Zeichnen und Rendern von Steuer](/dotnet/framework/winforms/controls/custom-control-painting-and-rendering)Elementen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2686">For more information, see [Overriding the OnPaint Method](/dotnet/framework/winforms/controls/overriding-the-onpaint-method) and [Custom Control Painting and Rendering](/dotnet/framework/winforms/controls/custom-control-painting-and-rendering).</span></span>  
  
 <span data-ttu-id="8426f-2687">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2687">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2688">Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.PictureBox> -Steuerelement auf dem Formular erstellt, und das-Ereignis wird verwendet <xref:System.Windows.Forms.Control.Paint> , um darauf zu zeichnen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2688">The following code example creates a <xref:System.Windows.Forms.PictureBox> control on the form and uses the <xref:System.Windows.Forms.Control.Paint> event to draw to it.</span></span>  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Parent { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.Control.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2689">Ruft den übergeordneten Container des Steuerelements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-2689">Gets or sets the parent container of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-2690">Ein <see cref="T:System.Windows.Forms.Control" />, das das übergeordnete Element oder das Container-Steuerelement des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2690">A <see cref="T:System.Windows.Forms.Control" /> that represents the parent or container control of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2691">Wenn Sie den- <xref:System.Windows.Forms.Control.Parent%2A> Eigenschafts Wert auf festlegen, wird `null` das Steuerelement aus dem <xref:System.Windows.Forms.Control.ControlCollection> seines aktuellen übergeordneten Steuer Elements entfernt</span><span class="sxs-lookup"><span data-stu-id="8426f-2691">Setting the <xref:System.Windows.Forms.Control.Parent%2A> property value to `null` removes the control from the <xref:System.Windows.Forms.Control.ControlCollection> of its current parent control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2692">Im folgenden Codebeispiel werden die <xref:System.Windows.Forms.Control.Parent%2A> -Eigenschaft und die- <xref:System.Windows.Forms.Control.FindForm%2A> Methode verwendet, um Eigenschaften für das übergeordnete Steuerelement einer Schaltfläche und deren Form festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2692">The following code example uses the <xref:System.Windows.Forms.Control.Parent%2A> property and the <xref:System.Windows.Forms.Control.FindForm%2A> method to set properties on the parent control of a button and its form.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ParentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ParentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ParentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParentChanged;" />
      <MemberSignature Language="F#" Value="member this.ParentChanged : EventHandler " Usage="member this.ParentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2693">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.Parent" />-Eigenschaftswert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2693">Occurs when the <see cref="P:System.Windows.Forms.Control.Parent" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2694">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.Parent%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2694">This event is raised if the <xref:System.Windows.Forms.Control.Parent%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-2695">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2695">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PerformLayout">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-2696">Erzwingt die Anwendung von Layoutlogik auf untergeordnete Steuerelemente durch das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-2696">Forces the control to apply layout logic to child controls.</span></span></summary>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PerformLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout();" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : unit -&gt; unit" Usage="control.PerformLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2697">Erzwingt die Anwendung von Layoutlogik durch das Steuerelement auf sämtliche diesem untergeordneten Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="8426f-2697">Forces the control to apply layout logic to all its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2698">Wenn die- <xref:System.Windows.Forms.Control.SuspendLayout%2A> Methode aufgerufen wurde, bevor die-Methode aufgerufen wurde <xref:System.Windows.Forms.Control.PerformLayout%2A> , wird das- <xref:System.Windows.Forms.Control.Layout> Ereignis unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2698">If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.</span></span>  
  
 <span data-ttu-id="8426f-2699">Die <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> -Eigenschaft und die-Eigenschaft <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> der <xref:System.Windows.Forms.LayoutEventArgs> erstellten werden auf festgelegt, `null` Wenn beim Aufrufen der-Methode keine Werte angegeben wurden <xref:System.Windows.Forms.Control.PerformLayout%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2699">The <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created are set to `null` if no values were provided when the <xref:System.Windows.Forms.Control.PerformLayout%2A> method was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2700">Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.Control.PerformLayout%2A>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2700">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method.</span></span> <span data-ttu-id="8426f-2701">Außerdem wird veranschaulicht, wie das- <xref:System.Windows.Forms.Control.Layout> Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2701">It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span> <span data-ttu-id="8426f-2702">In diesem Beispiel ruft der `Click` Ereignishandler für `Button1` explizit auf <xref:System.Windows.Forms.Control.PerformLayout%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2702">In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="8426f-2703">Der `Click` Ereignishandler für `Button2` implizit Aufrufe von <xref:System.Windows.Forms.Control.PerformLayout%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2703">The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="8426f-2704"><xref:System.Windows.Forms.Control.PerformLayout%2A>wird auch aufgerufen, wenn das Formular geladen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2704"><xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded.</span></span> <span data-ttu-id="8426f-2705">`Button3`Gibt das Steuerelement auf den Zustand zurück, in dem es sich beim Laden befand.</span><span class="sxs-lookup"><span data-stu-id="8426f-2705">`Button3` returns the control to the state it was in when loaded.</span></span> <span data-ttu-id="8426f-2706">In jedem Fall wird das- <xref:System.Windows.Forms.Control.Layout> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-2706">In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-2707">Dies ist ein umfassendes Beispiel.</span><span class="sxs-lookup"><span data-stu-id="8426f-2707">This is a complete example.</span></span> <span data-ttu-id="8426f-2708">Fügen Sie den folgenden Code in ein leeres Formular ein, um das Beispiel auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2708">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout (System.Windows.Forms.Control affectedControl, string affectedProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout(class System.Windows.Forms.Control affectedControl, string affectedProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout (affectedControl As Control, affectedProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout(System::Windows::Forms::Control ^ affectedControl, System::String ^ affectedProperty);" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : System.Windows.Forms.Control * string -&gt; unit" Usage="control.PerformLayout (affectedControl, affectedProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affectedControl" Type="System.Windows.Forms.Control" />
        <Parameter Name="affectedProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="affectedControl"><span data-ttu-id="8426f-2709">Ein <see cref="T:System.Windows.Forms.Control" />, das das zuletzt geänderte Steuerelement darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2709">A <see cref="T:System.Windows.Forms.Control" /> that represents the most recently changed control.</span></span></param>
        <param name="affectedProperty"><span data-ttu-id="8426f-2710">Der Name der zuletzt geänderten Eigenschaft des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-2710">The name of the most recently changed property on the control.</span></span></param>
        <summary><span data-ttu-id="8426f-2711">Erzwingt die Anwendung von Layoutlogik durch das Steuerelement auf sämtliche diesem untergeordneten Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="8426f-2711">Forces the control to apply layout logic to all its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2712">Wenn die- <xref:System.Windows.Forms.Control.SuspendLayout%2A> Methode aufgerufen wurde, bevor die-Methode aufgerufen wurde <xref:System.Windows.Forms.Control.PerformLayout%2A> , wird das- <xref:System.Windows.Forms.Control.Layout> Ereignis unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2712">If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.</span></span>  
  
 <span data-ttu-id="8426f-2713">Der `affectedControl` -Parameter und der- `affectedProperty` Parameter können auf festgelegt werden `null` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2713">The `affectedControl` and `affectedProperty` parameters can both be set to `null`.</span></span> <span data-ttu-id="8426f-2714">Dies bewirkt, dass die <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> -Eigenschaft und die-Eigenschaft <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> der <xref:System.Windows.Forms.LayoutEventArgs> erstellten auf festgelegt werden `null` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2714">Doing so causes the <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created to be set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2715">Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.Control.PerformLayout%2A>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2715">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method.</span></span> <span data-ttu-id="8426f-2716">Außerdem wird veranschaulicht, wie das- <xref:System.Windows.Forms.Control.Layout> Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2716">It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span> <span data-ttu-id="8426f-2717">In diesem Beispiel ruft der `Click` Ereignishandler für `Button1` explizit auf <xref:System.Windows.Forms.Control.PerformLayout%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2717">In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="8426f-2718">Der `Click` Ereignishandler für `Button2` implizit Aufrufe von <xref:System.Windows.Forms.Control.PerformLayout%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2718">The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="8426f-2719"><xref:System.Windows.Forms.Control.PerformLayout%2A>wird auch aufgerufen, wenn das Formular geladen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2719"><xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded.</span></span> <span data-ttu-id="8426f-2720">`Button3`Gibt das Steuerelement auf den Zustand zurück, in dem es sich beim Laden befand.</span><span class="sxs-lookup"><span data-stu-id="8426f-2720">`Button3` returns the control to the state it was in when loaded.</span></span> <span data-ttu-id="8426f-2721">In jedem Fall wird das- <xref:System.Windows.Forms.Control.Layout> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-2721">In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-2722">Dies ist ein umfassendes Beispiel.</span><span class="sxs-lookup"><span data-stu-id="8426f-2722">This is a complete example.</span></span> <span data-ttu-id="8426f-2723">Fügen Sie den folgenden Code in ein leeres Formular ein, um das Beispiel auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2723">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="PointToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Point PointToClient (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point PointToClient(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToClient (p As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point PointToClient(System::Drawing::Point p);" />
      <MemberSignature Language="F#" Value="member this.PointToClient : System.Drawing.Point -&gt; System.Drawing.Point" Usage="control.PointToClient p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p"><span data-ttu-id="8426f-2724">Der zu konvertierende Bildschirmkoordinaten-<see cref="T:System.Drawing.Point" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2724">The screen coordinate <see cref="T:System.Drawing.Point" /> to convert.</span></span></param>
        <summary><span data-ttu-id="8426f-2725">Rechnet die Position des angegebenen Bildschirmpunkts in Clientkoordinaten um.</span><span class="sxs-lookup"><span data-stu-id="8426f-2725">Computes the location of the specified screen point into client coordinates.</span></span></summary>
        <returns><span data-ttu-id="8426f-2726">Ein <see cref="T:System.Drawing.Point" />, der den konvertierten <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in Clientkoordinaten darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2726">A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in client coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8426f-2727">Im folgenden Codebeispiel kann der Benutzer ein Bild oder eine Bilddatei auf das Formular ziehen und ihn an dem Punkt, an dem er abgelegt wird, anzeigen lassen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2727">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="8426f-2728">Die- <xref:System.Windows.Forms.Control.OnPaint%2A> Methode wird überschrieben, um jedes Mal, wenn das Formular gezeichnet wird, das Bild neu zu zeichnen. andernfalls wird das Bild nur bis zum nächsten Neuzeichnen beibehalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2728">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="8426f-2729">Die <xref:System.Windows.Forms.Control.DragEnter> Ereignis Behandlungsmethode bestimmt den Typ der Daten, die in das Formular gezogen werden, und stellt das entsprechende Feedback bereit.</span><span class="sxs-lookup"><span data-stu-id="8426f-2729">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="8426f-2730">Die <xref:System.Windows.Forms.Control.DragDrop> Ereignis Behandlungsmethode zeigt das Bild auf dem Formular an, wenn eine <xref:System.Drawing.Image> aus den Daten erstellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-2730">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="8426f-2731">Da der <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> -Wert und der- <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> Wert Bildschirm Koordinaten sind, wird im Beispiel die-Methode verwendet, <xref:System.Windows.Forms.Control.PointToClient%2A> um Sie in Client Koordinaten zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-2731">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Point PointToScreen (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point PointToScreen(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToScreen (p As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point PointToScreen(System::Drawing::Point p);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Drawing.Point -&gt; System.Drawing.Point" Usage="control.PointToScreen p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p"><span data-ttu-id="8426f-2732">Der zu konvertierende Clientkoordinaten-<see cref="T:System.Drawing.Point" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2732">The client coordinate <see cref="T:System.Drawing.Point" /> to convert.</span></span></param>
        <summary><span data-ttu-id="8426f-2733">Rechnet die Position des angegebenen Clientpunkts in Bildschirmkoordinaten um.</span><span class="sxs-lookup"><span data-stu-id="8426f-2733">Computes the location of the specified client point into screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="8426f-2734">Ein <see cref="T:System.Drawing.Point" />, der den konvertierten <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in Bildschirmkoordinaten darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2734">A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8426f-2735">Im folgenden Codebeispiel wird veranschaulicht, wie die Member <xref:System.Windows.Forms.Control.BackColor%2A> , <xref:System.Windows.Forms.Control.RectangleToScreen%2A> , <xref:System.Windows.Forms.Control.PointToScreen%2A> , <xref:System.Windows.Forms.Control.MouseButtons%2A> , und <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType> <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2735">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="8426f-2736">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular mit dem Namen Form1 ein, das mehrere Steuerelemente enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2736">To run the example, paste the following code in a form called Form1 containing several controls.</span></span> <span data-ttu-id="8426f-2737">Für dieses Beispiel ist es erforderlich, dass die <xref:System.Windows.Forms.Control.MouseDown> <xref:System.Windows.Forms.Control.MouseMove> -,-und- <xref:System.Windows.Forms.Control.MouseUp> Ereignisse mit den Ereignis Handlern verbunden sind, die im Beispiel definiert sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-2737">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="PreferredSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size PreferredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size PreferredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.PreferredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size PreferredSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.PreferredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2738">Ruft die Größe eines rechteckigen Bereichs ab, in den das Steuerelement eingepasst werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-2738">Gets the size of a rectangular area into which the control can fit.</span></span></summary>
        <value><span data-ttu-id="8426f-2739">Eine <see cref="T:System.Drawing.Size" />, die die Höhe und Breite in Pixel enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2739">A <see cref="T:System.Drawing.Size" /> containing the height and width, in pixels.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessControlMessage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.PreProcessControlState PreProcessControlMessage (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.PreProcessControlState PreProcessControlMessage(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreProcessControlMessage (ByRef msg As Message) As PreProcessControlState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::PreProcessControlState PreProcessControlMessage(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="member this.PreProcessControlMessage : Message -&gt; System.Windows.Forms.PreProcessControlState" Usage="control.PreProcessControlMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PreProcessControlState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8426f-2740">Eine <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Meldung angibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2740">A <see cref="T:System.Windows.Forms.Message" /> that represents the message to process.</span></span></param>
        <summary><span data-ttu-id="8426f-2741">Führt eine Vorverarbeitung der Tastatur- oder Eingabemeldungen in der Nachrichtenschleife aus, bevor sie gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2741">Preprocesses keyboard or input messages within the message loop before they are dispatched.</span></span></summary>
        <returns><span data-ttu-id="8426f-2742">Einer der <see cref="T:System.Windows.Forms.PreProcessControlState" />-Werte, je nachdem, ob <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> den Wert <see langword="true" /> oder <see langword="false" /> besitzt und ob <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> oder <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> den Wert <see langword="true" /> oder <see langword="false" /> besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2742">One of the <see cref="T:System.Windows.Forms.PreProcessControlState" /> values, depending on whether <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> is <see langword="true" /> or <see langword="false" /> and whether <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> or <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> are <see langword="true" /> or <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessMessage">
      <MemberSignature Language="C#" Value="public virtual bool PreProcessMessage (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreProcessMessage(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PreProcessMessage (ByRef msg As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PreProcessMessage(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="abstract member PreProcessMessage : Message -&gt; bool&#xA;override this.PreProcessMessage : Message -&gt; bool" Usage="control.PreProcessMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8426f-2743">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Meldung darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2743">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the message to process.</span></span> <span data-ttu-id="8426f-2744">Die möglichen Werte sind WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR und WM_SYSCHAR.</span><span class="sxs-lookup"><span data-stu-id="8426f-2744">The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</span></span></param>
        <summary><span data-ttu-id="8426f-2745">Führt eine Vorverarbeitung der Tastatur- oder Eingabemeldungen in der Nachrichtenschleife aus, bevor sie gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2745">Preprocesses keyboard or input messages within the message loop before they are dispatched.</span></span></summary>
        <returns><span data-ttu-id="8426f-2746"><see langword="true" />, wenn die Meldung vom Steuerelement verarbeitet wurde; andernfalls, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2746"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2747"><xref:System.Windows.Forms.Control.PreProcessMessage%2A>wird von der Nachrichten Schleife der Anwendung aufgerufen, um Eingabe Nachrichten vor der Verteilung vorzuverarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2747"><xref:System.Windows.Forms.Control.PreProcessMessage%2A> is called by the application's message loop to preprocess input messages before they are dispatched.</span></span> <span data-ttu-id="8426f-2748">Mögliche Werte für den- `msg` Parameter sind WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR und WM_SYSCHAR.</span><span class="sxs-lookup"><span data-stu-id="8426f-2748">Possible values for the `msg` parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</span></span>  
  
 <span data-ttu-id="8426f-2749">Beim <xref:System.Windows.Forms.Control.PreProcessMessage%2A> überschreiben sollte ein Steuerelement zurückgeben, `true` um anzugeben, dass die Nachricht verarbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-2749">When overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, a control should return `true` to indicate that it has processed the message.</span></span> <span data-ttu-id="8426f-2750">Bei Nachrichten, die nicht vom-Steuerelement verarbeitet werden, sollte das Ergebnis von `base.PreProcessMessage` zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2750">For messages that are not processed by the control, the result of `base.PreProcessMessage` should be returned.</span></span> <span data-ttu-id="8426f-2751">Steuerelemente Überschreiben in der Regel eine der spezialisierteren Methoden <xref:System.Windows.Forms.Control.IsInputChar%2A> , z <xref:System.Windows.Forms.Control.IsInputKey%2A> . b.,, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> , <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> oder, <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> anstatt zu überschreiben <xref:System.Windows.Forms.Control.PreProcessMessage%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2751">Controls will typically override one of the more specialized methods such as <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, or <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> instead of overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As PreviewKeyDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PreviewKeyDownEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PreviewKeyDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2752">Tritt vor dem <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis ein, wenn eine Taste gedrückt wird, während dieses Steuerelement den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2752">Occurs before the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event when a key is pressed while focus is on this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2753">Einige Tastenkombinationen, wie z. b. die Registerkarten-, Rückgabe-, ESC-und Pfeiltasten, werden in der Regel von einigen Steuerelementen ignoriert, da Sie nicht als EINGABETASTE gedrückt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2753">Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses.</span></span> <span data-ttu-id="8426f-2754">Ein-Steuerelement ignoriert z. b. standardmäßig <xref:System.Windows.Controls.Button> die Pfeiltasten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2754">For example, by default, a <xref:System.Windows.Controls.Button> control ignores the arrow keys.</span></span> <span data-ttu-id="8426f-2755">Wenn Sie die Pfeiltasten drücken, wird der Fokus in der Regel auf das vorherige oder das nächste Steuerelement verschoben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2755">Pressing the arrow keys typically causes the focus to move to the previous or next control.</span></span> <span data-ttu-id="8426f-2756">Die Pfeiltasten werden als Navigationsschlüssel betrachtet. Wenn Sie diese Tasten drücken, wird das-Ereignis für nicht in der Regel erhoben <xref:System.Windows.Forms.Control.KeyDown> <xref:System.Windows.Controls.Button> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2756">The arrow keys are considered navigation keys and pressing these keys typically do not raise the <xref:System.Windows.Forms.Control.KeyDown> event for a <xref:System.Windows.Controls.Button>.</span></span> <span data-ttu-id="8426f-2757">Durch Drücken der Pfeiltasten für einen <xref:System.Windows.Controls.Button> wird jedoch das- <xref:System.Windows.Forms.Control.PreviewKeyDown> Ereignis angehoben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2757">However, pressing the arrow keys for a <xref:System.Windows.Controls.Button> does raise the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.</span></span> <span data-ttu-id="8426f-2758"><xref:System.Windows.Forms.Control.PreviewKeyDown>Wenn Sie das-Ereignis für eine behandeln <xref:System.Windows.Controls.Button> und die- <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> Eigenschaft auf festlegen `true` , können Sie das- <xref:System.Windows.Forms.Control.KeyDown> Ereignis beim Drücken der Pfeiltasten erhöhen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2758">By handling the <xref:System.Windows.Forms.Control.PreviewKeyDown> event for a <xref:System.Windows.Controls.Button> and setting the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`, you can raise the <xref:System.Windows.Forms.Control.KeyDown> event when the arrow keys are pressed.</span></span> <span data-ttu-id="8426f-2759">Wenn Sie jedoch die Pfeiltasten behandeln, wird der Fokus nicht mehr auf das vorherige oder das nächste Steuerelement verschoben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2759">However, if you handle the arrow keys, the focus will no longer move to the previous or next control.</span></span>  
  
 <span data-ttu-id="8426f-2760">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2760">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2761">Im folgenden Codebeispiel wird ein veranschaulicht <xref:System.Windows.Forms.Button> , das eine enthält <xref:System.Windows.Forms.ContextMenuStrip> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2761">The following code example demonstrates a <xref:System.Windows.Forms.Button> that includes a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="8426f-2762">Wenn das den <xref:System.Windows.Forms.Button> Fokus hat und Sie die nach-oben-oder nach-unten-Taste drücken, wird <xref:System.Windows.Forms.ContextMenuStrip> angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2762">When the <xref:System.Windows.Forms.Button> has the focus and you press the UP ARROW or DOWN ARROW keys, the <xref:System.Windows.Forms.ContextMenuStrip> appears.</span></span> <span data-ttu-id="8426f-2763">Der <xref:System.Windows.Forms.Control.PreviewKeyDown> Ereignishandler erkennt, wenn die nach-oben-oder nach-unten-Taste gedrückt wird, und legt die- <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> Eigenschaft auf fest `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2763">The <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`.</span></span> <span data-ttu-id="8426f-2764">Dadurch wird das- <xref:System.Windows.Forms.Control.KeyDown> Ereignis ausgelöst, sodass Sie das anzeigen können <xref:System.Windows.Forms.ContextMenuStrip> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2764">This raises the <xref:System.Windows.Forms.Control.KeyDown> event so that you can display the <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="8426f-2765">Sie sollten keine Logik im- <xref:System.Windows.Forms.Control.PreviewKeyDown> Ereignishandler ablegen, außer um die-Eigenschaft festzulegen <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2765">You should not put any logic in the <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler, other than to set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property.</span></span> <span data-ttu-id="8426f-2766">Stattdessen sollten Sie die Logik im- <xref:System.Windows.Forms.Control.KeyDown> Ereignishandler ablegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2766">Instead, you should put your logic in the <xref:System.Windows.Forms.Control.KeyDown> event handler.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="control.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8426f-2767">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2767">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="8426f-2768">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2768">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="8426f-2769">Verarbeitet eine Befehlstaste.</span><span class="sxs-lookup"><span data-stu-id="8426f-2769">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="8426f-2770"><see langword="true" />, wenn das Zeichen vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2770"><see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2771">Diese Methode wird während der Nachrichten Vorverarbeitung aufgerufen, um Befehlstasten zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2771">This method is called during message preprocessing to handle command keys.</span></span> <span data-ttu-id="8426f-2772">Befehlstasten sind Schlüssel, die immer Vorrang vor regulären Eingabe Schlüsseln haben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2772">Command keys are keys that always take precedence over regular input keys.</span></span> <span data-ttu-id="8426f-2773">Beispiele für Befehlstasten sind Accelerators und Menü Verknüpfungen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2773">Examples of command keys include accelerators and menu shortcuts.</span></span> <span data-ttu-id="8426f-2774">Die Methode muss zurückgeben, `true` um anzugeben, dass Sie den Befehls Schlüssel verarbeitet hat, oder `false` um anzugeben, dass es sich bei dem Schlüssel nicht um einen Befehls Schlüssel handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2774">The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key.</span></span> <span data-ttu-id="8426f-2775">Diese Methode wird nur aufgerufen, wenn das Steuerelement in einer Windows Forms Anwendung oder als ActiveX-Steuerelement gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2775">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 <span data-ttu-id="8426f-2776">Die <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> -Methode bestimmt zuerst, ob das-Steuerelement über ein verfügt <xref:System.Windows.Forms.ContextMenu> , und wenn dies der Fall ist, ermöglicht das <xref:System.Windows.Forms.ContextMenu> Verarbeiten des Befehls Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="8426f-2776">The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key.</span></span> <span data-ttu-id="8426f-2777">Wenn der Befehls Schlüssel keine Menü Verknüpfung ist und das Steuerelement über ein übergeordnetes Element verfügt, wird der Schlüssel an die-Methode des übergeordneten Elements übermittelt <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2777">If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method.</span></span> <span data-ttu-id="8426f-2778">Der Nettoeffekt ist, dass die Befehlstasten in der Steuerelement Hierarchie "Bubbled" sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-2778">The net effect is that command keys are "bubbled" up the control hierarchy.</span></span> <span data-ttu-id="8426f-2779">Zusätzlich zu dem Schlüssel, den der Benutzer gedrückt hat, gibt die Schlüsseldaten auch an, welche Modifizierertasten ggf. zur gleichen Zeit wie der Schlüssel gedrückt wurden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2779">In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.</span></span> <span data-ttu-id="8426f-2780">Modifizierertasten enthalten die Tasten UMSCHALT, STRG und alt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2780">Modifier keys include the SHIFT, CTRL, and ALT keys.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2781">Wenn die <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> Methode in einer abgeleiteten Klasse überschrieben wird, sollte ein Steuerelement zurückgeben, <see langword="true" /> um anzugeben, dass es den Schlüssel verarbeitet hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-2781">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="8426f-2782">Bei Schlüsseln, die nicht vom-Steuerelement verarbeitet werden, sollte das Ergebnis des Aufrufs der-Methode der Basisklasse <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2782">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method should be returned.</span></span> <span data-ttu-id="8426f-2783">Steuerelemente müssen, falls immer, diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2783">Controls will seldom, if ever, need to override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDialogChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogChar : char -&gt; bool&#xA;override this.ProcessDialogChar : char -&gt; bool" Usage="control.ProcessDialogChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="8426f-2784">Das zu verarbeitende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2784">The character to process.</span></span></param>
        <summary><span data-ttu-id="8426f-2785">Verarbeitet ein Dialogfeldzeichen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2785">Processes a dialog character.</span></span></summary>
        <returns><span data-ttu-id="8426f-2786"><see langword="true" />, wenn das Zeichen vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2786"><see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2787">Diese Methode wird während der Meldungs Vorverarbeitung aufgerufen, um Dialogfelder zu verarbeiten, z. b. Steuerelement-mnetmonics.</span><span class="sxs-lookup"><span data-stu-id="8426f-2787">This method is called during message preprocessing to handle dialog characters, such as control mnemonics.</span></span> <span data-ttu-id="8426f-2788">Diese Methode wird nur aufgerufen, wenn die- <xref:System.Windows.Forms.Control.IsInputChar%2A> Methode angibt, dass das-Steuerelement das Zeichen nicht verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="8426f-2788">This method is called only if the <xref:System.Windows.Forms.Control.IsInputChar%2A> method indicates that the control is not processing the character.</span></span> <span data-ttu-id="8426f-2789">Die <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> -Methode sendet das Zeichen einfach an die-Methode des übergeordneten Elements <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> oder gibt zurück, `false` Wenn das Steuerelement kein übergeordnetes Element aufweist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2789">The <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="8426f-2790">Die- <xref:System.Windows.Forms.Form> Klasse überschreibt diese Methode, um die tatsächliche Verarbeitung von Dialog Zeichen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2790">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog characters.</span></span> <span data-ttu-id="8426f-2791">Diese Methode wird nur aufgerufen, wenn das Steuerelement in einer Windows Forms Anwendung oder als ActiveX-Steuerelement gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2791">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2792">Wenn die <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> Methode in einer abgeleiteten Klasse überschrieben wird, sollte ein Steuerelement zurückgeben, <see langword="true" /> um anzugeben, dass es das Zeichen verarbeitet hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-2792">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the character.</span></span> <span data-ttu-id="8426f-2793">Für Zeichen, die nicht vom-Steuerelement verarbeitet werden, sollte das Ergebnis des Aufrufs der-Methode der Basisklasse <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2793">For characters that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method should be returned.</span></span> <span data-ttu-id="8426f-2794">Steuerelemente müssen, falls immer, diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2794">Controls will seldom, if ever, need to override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="control.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="8426f-2795">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2795">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="8426f-2796">Verarbeitet eine Tastatureingabe im Dialogfeld.</span><span class="sxs-lookup"><span data-stu-id="8426f-2796">Processes a dialog key.</span></span></summary>
        <returns><span data-ttu-id="8426f-2797"><see langword="true" />, wenn die Taste vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2797"><see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2798">Diese Methode wird während der Meldungs Vorverarbeitung aufgerufen, um Dialogfelder, z. b. Tabstopps, Rückgabe, ESC und Pfeiltasten, zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2798">This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys.</span></span> <span data-ttu-id="8426f-2799">Diese Methode wird nur aufgerufen, wenn die- <xref:System.Windows.Forms.Control.IsInputKey%2A> Methode angibt, dass das Steuerelement den Schlüssel nicht verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="8426f-2799">This method is called only if the <xref:System.Windows.Forms.Control.IsInputKey%2A> method indicates that the control is not processing the key.</span></span> <span data-ttu-id="8426f-2800">Der <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> sendet das Zeichen einfach an die-Methode des übergeordneten Elements <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> oder gibt zurück, `false` Wenn das Steuerelement über kein übergeordnetes Element verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2800">The <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="8426f-2801">Die- <xref:System.Windows.Forms.Form> Klasse überschreibt diese Methode, um die tatsächliche Verarbeitung von Dialog Schlüsseln auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2801">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.</span></span> <span data-ttu-id="8426f-2802">Diese Methode wird nur aufgerufen, wenn das Steuerelement in einer Windows Forms Anwendung oder als ActiveX-Steuerelement gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2802">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2803">Wenn die <see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /> Methode in einer abgeleiteten Klasse überschrieben wird, sollte ein Steuerelement zurückgeben, <see langword="true" /> um anzugeben, dass es den Schlüssel verarbeitet hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-2803">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="8426f-2804">Bei Schlüsseln, die nicht vom-Steuerelement verarbeitet werden, sollte das Ergebnis des Aufrufs der-Methode der Basisklasse <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2804">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method should be returned.</span></span> <span data-ttu-id="8426f-2805">Steuerelemente müssen, falls immer, diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2805">Controls will seldom, if ever, need to override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyEventArgs : Message -&gt; bool&#xA;override this.ProcessKeyEventArgs : Message -&gt; bool" Usage="control.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="8426f-2806">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2806">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="8426f-2807">Verarbeitet eine Tastenmeldung und generiert die entsprechenden Steuerelementereignisse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2807">Processes a key message and generates the appropriate control events.</span></span></summary>
        <returns><span data-ttu-id="8426f-2808"><see langword="true" />, wenn die Meldung vom Steuerelement verarbeitet wurde; andernfalls, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2808"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2809">Diese Methode wird aufgerufen, wenn ein Steuerelement eine Tastatur Meldung empfängt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2809">This method is called when a control receives a keyboard message.</span></span> <span data-ttu-id="8426f-2810">Die-Methode ist dafür verantwortlich, die entsprechenden Schlüsselereignisse für die Nachricht zu erzeugen <xref:System.Windows.Forms.Control.OnKeyPress%2A> , indem die Methoden, oder aufgerufen werden <xref:System.Windows.Forms.Control.OnKeyDown%2A> <xref:System.Windows.Forms.Control.OnKeyUp%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2810">The method is responsible for generating the appropriate key events for the message by calling the <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, or <xref:System.Windows.Forms.Control.OnKeyUp%2A> methods.</span></span> <span data-ttu-id="8426f-2811">Der- `m` Parameter enthält die Fenster Meldung, die verarbeitet werden muss.</span><span class="sxs-lookup"><span data-stu-id="8426f-2811">The `m` parameter contains the window message that must be processed.</span></span> <span data-ttu-id="8426f-2812">Mögliche Werte für die- <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> Eigenschaft sind WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP und WM_IME_CHAR.</span><span class="sxs-lookup"><span data-stu-id="8426f-2812">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2813">Wenn die <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> Methode in einer abgeleiteten Klasse überschrieben wird, sollte ein Steuerelement zurückgeben, <see langword="true" /> um anzugeben, dass es den Schlüssel verarbeitet hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-2813">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="8426f-2814">Bei Schlüsseln, die nicht vom-Steuerelement verarbeitet werden, sollte das Ergebnis des Aufrufs der-Methode der Basisklasse <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2814">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> method should be returned.</span></span> <span data-ttu-id="8426f-2815">Steuerelemente müssen, falls immer, diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2815">Controls will seldom, if ever, need to override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyMessage">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessKeyMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessKeyMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessKeyMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessKeyMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyMessage : Message -&gt; bool&#xA;override this.ProcessKeyMessage : Message -&gt; bool" Usage="control.ProcessKeyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="8426f-2816">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2816">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="8426f-2817">Verarbeitet eine Tastaturmeldung.</span><span class="sxs-lookup"><span data-stu-id="8426f-2817">Processes a keyboard message.</span></span></summary>
        <returns><span data-ttu-id="8426f-2818"><see langword="true" />, wenn die Meldung vom Steuerelement verarbeitet wurde; andernfalls, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2818"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2819">Diese Methode wird aufgerufen, wenn ein Steuerelement eine Tastatur Meldung empfängt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2819">This method is called when a control receives a keyboard message.</span></span> <span data-ttu-id="8426f-2820">Die Methode bestimmt zunächst, ob das Steuerelement über ein übergeordnetes Element verfügt. Wenn ja, wird die-Methode des übergeordneten Elements aufgerufen <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2820">The method first determines whether the control has a parent; if so, it calls the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method.</span></span> <span data-ttu-id="8426f-2821">Wenn die-Methode des übergeordneten Elements <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> die Nachricht nicht verarbeitet <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> , wird die-Methode aufgerufen, um die entsprechenden Tastatur Ereignisse zu generieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-2821">If the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method does not process the message then the <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> method is called to generate the appropriate keyboard events.</span></span> <span data-ttu-id="8426f-2822">Der- `m` Parameter enthält die Fenster Meldung, die verarbeitet werden muss.</span><span class="sxs-lookup"><span data-stu-id="8426f-2822">The `m` parameter contains the window message that must be processed.</span></span> <span data-ttu-id="8426f-2823">Mögliche Werte für die- <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> Eigenschaft sind WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP und WM_SYSKEYUP.</span><span class="sxs-lookup"><span data-stu-id="8426f-2823">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2824">Beim Überschreiben der- <see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /> Methode sollte ein Steuerelement zurückgeben, <see langword="true" /> um anzugeben, dass es den Schlüssel verarbeitet hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-2824">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /> method, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="8426f-2825">Bei Schlüsseln, die nicht vom-Steuerelement verarbeitet werden, sollte das Ergebnis der-Basisklasse <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2825">For keys that are not processed by the control, the result of the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> should be returned.</span></span> <span data-ttu-id="8426f-2826">Steuerelemente müssen, falls immer, diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2826">Controls will seldom, if ever, need to override this method.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyPreview : Message -&gt; bool&#xA;override this.ProcessKeyPreview : Message -&gt; bool" Usage="control.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="8426f-2827">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2827">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="8426f-2828">Zeigt eine Tastaturmeldung in der Vorschau an.</span><span class="sxs-lookup"><span data-stu-id="8426f-2828">Previews a keyboard message.</span></span></summary>
        <returns><span data-ttu-id="8426f-2829"><see langword="true" />, wenn die Meldung vom Steuerelement verarbeitet wurde; andernfalls, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2829"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2830">Diese Methode wird von einem untergeordneten Steuerelement aufgerufen, wenn das untergeordnete Steuerelement eine Tastatur Meldung empfängt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2830">This method is called by a child control when the child control receives a keyboard message.</span></span> <span data-ttu-id="8426f-2831">Das untergeordnete Steuerelement ruft diese Methode auf, bevor Tastatur Ereignisse für die Nachricht erzeugt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2831">The child control calls this method before generating any keyboard events for the message.</span></span> <span data-ttu-id="8426f-2832">Wenn diese Methode zurückgegeben `true` wird, betrachtet das untergeordnete Steuerelement die verarbeitete Nachricht und generiert keine Tastatur Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2832">If this method returns `true`, the child control considers the message processed and does not generate any keyboard events.</span></span> <span data-ttu-id="8426f-2833">Der- `m` Parameter enthält die Fenster Meldung, die als Vorschau angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2833">The `m` parameter contains the window message to preview.</span></span> <span data-ttu-id="8426f-2834">Mögliche Werte für die- <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> Eigenschaft sind WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP und WM_SYSKEYUP.</span><span class="sxs-lookup"><span data-stu-id="8426f-2834">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</span></span> <span data-ttu-id="8426f-2835">Die <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> -Methode sendet das Zeichen einfach an die-Methode des übergeordneten Elements <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> oder gibt zurück, `false` Wenn das Steuerelement kein übergeordnetes Element aufweist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2835">The <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="8426f-2836">Die- <xref:System.Windows.Forms.Form> Klasse überschreibt diese Methode, um die tatsächliche Verarbeitung von Dialog Schlüsseln auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2836">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2837">Wenn die <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> Methode in einer abgeleiteten Klasse überschrieben wird, sollte ein Steuerelement zurückgeben, <see langword="true" /> um anzugeben, dass es den Schlüssel verarbeitet hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-2837">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="8426f-2838">Bei Schlüsseln, die nicht vom-Steuerelement verarbeitet werden, sollte das Ergebnis des Aufrufs der-Methode der Basisklasse <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2838">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> method should be returned.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessMnemonic (char charCode);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessMnemonic(char charCode) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessMnemonic (charCode As Char) As Boolean" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessMnemonic(char charCode);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ProcessMnemonic : char -&gt; bool&#xA;override this.ProcessMnemonic : char -&gt; bool" Usage="control.ProcessMnemonic charCode" />
      <MemberSignature Language="C#" Value="protected virtual bool ProcessMnemonic (char charCode);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessMnemonic(char charCode) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessMnemonic (charCode As Char) As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessMnemonic(char charCode);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="8426f-2839">Das zu verarbeitende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2839">The character to process.</span></span></param>
        <summary><span data-ttu-id="8426f-2840">Verarbeitet ein mnemonisches Zeichen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2840">Processes a mnemonic character.</span></span></summary>
        <returns><span data-ttu-id="8426f-2841"><see langword="true" />, wenn das Zeichen als mnemonisches Zeichen vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2841"><see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2842">Diese Methode wird aufgerufen, um einem Steuerelement die Möglichkeit zu geben, ein mnetmonisches Zeichen zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2842">This method is called to give a control the opportunity to process a mnemonic character.</span></span> <span data-ttu-id="8426f-2843">Die-Methode sollte bestimmen, ob sich das Steuerelement in einem Zustand befindet, in dem mnetmonics verarbeitet werden soll, und ob das angegebene Zeichen ein mnetmonisches Zeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2843">The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</span></span> <span data-ttu-id="8426f-2844">Wenn dies der Fall ist, sollte die-Methode die dem mnetmonischen zugeordnete Aktion ausführen und zurückgeben `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2844">If so, the method should perform the action associated with the mnemonic and return `true`.</span></span> <span data-ttu-id="8426f-2845">Andernfalls sollte die Methode zurückgeben `false` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2845">If not, the method should return `false`.</span></span> <span data-ttu-id="8426f-2846">Implementierungen dieser Methode verwenden häufig die- <xref:System.Windows.Forms.Control.IsMnemonic%2A> Methode, um zu bestimmen, ob das angegebene Zeichen mit einem mnetmonischen im Text des Steuer Elements übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2846">Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.</span></span>  
  
 <span data-ttu-id="8426f-2847">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="8426f-2847">For example:</span></span>  
  
```csharp  
if (CanSelect && IsMnemonic(charCode, MyControl.Text) {  
      // Perform action associated with mnemonic.  
       }  
```  
  
 <span data-ttu-id="8426f-2848">Diese Standard Implementierung der- <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> Methode gibt einfach zurück `false` , um anzugeben, dass das Steuerelement über kein mnetmonisches verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2848">This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2849">Im folgenden Codebeispiel wird eine Erweiterung der Button-Klasse veranschaulicht, die die-Methode überschreibt, <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> um benutzerdefiniertes Verhalten zu präsentieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-2849">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="8426f-2850">Im Beispiel wird auch die Verwendung der-Eigenschaft und der-Eigenschaft veranschaulicht <xref:System.Windows.Forms.Control.CanSelect%2A> <xref:System.Windows.Forms.Control.IsMnemonic%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2850">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="8426f-2851">Fügen Sie den folgenden Code nach einer Formular Klasse in dieselbe Datei ein, um dieses Beispiel auszuführen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2851">To run this example paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="8426f-2852">Fügen Sie dem Formular eine Schaltfläche vom Typ hinzu `MnemonicButton` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2852">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)" />
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="System.Windows.Forms.Control.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2853">Ruft den Produktnamen der Assembly ab, die das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2853">Gets the product name of the assembly containing the control.</span></span></summary>
        <value><span data-ttu-id="8426f-2854">Der Produktname der Assembly, die das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2854">The product name of the assembly containing the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2855">Die <xref:System.Windows.Forms.Control.ProductName%2A> -Eigenschaft ist eine schreibgeschützte Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-2855">The <xref:System.Windows.Forms.Control.ProductName%2A> property is a read-only property.</span></span> <span data-ttu-id="8426f-2856">Um den Wert dieser Eigenschaft zu ändern, legen Sie den- <xref:System.Reflection.AssemblyProductAttribute.Product%2A> Eigenschafts Wert von fest <xref:System.Reflection.AssemblyProductAttribute> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2856">To change the value of this property, set the <xref:System.Reflection.AssemblyProductAttribute.Product%2A> property value of the <xref:System.Reflection.AssemblyProductAttribute>.</span></span> <span data-ttu-id="8426f-2857">In der folgenden Zeile des c#-Codes wird die-Eigenschaft festgelegt <xref:System.Windows.Forms.Control.ProductName%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2857">The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductName%2A> property.</span></span>  
  
```  
[assembly: AssemblyProduct("MyApplication")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="8426f-2858">Es wird dringend empfohlen, den Firmennamen, den Produktnamen und die Produktversion anzugeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2858">It is strongly recommended that you provide the company name, product name, and product version.</span></span> <span data-ttu-id="8426f-2859">Das Bereitstellen dieser Informationen ermöglicht die Verwendung von Windows Forms Features wie z <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> . b., die das Schreiben von Anwendungen erleichtern, die dem "Certified for Windows"-Programm entsprechen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2859">Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> that make it easier to write applications that comply with the "Certified for Windows" program.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="8426f-2860">Im folgenden Codebeispiel werden Informationen über die Anwendung in einer-Datei angezeigt, die in <xref:System.Windows.Forms.Label> enthalten ist <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2860">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8426f-2861">Für dieses Beispiel ist es erforderlich, dass <xref:System.Windows.Forms.Control.CompanyName%2A> <xref:System.Windows.Forms.Control.ProductName%2A> und <xref:System.Windows.Forms.Control.ProductVersion%2A> festgelegt wurden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2861">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyProductAttribute.Product" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductVersion : string" Usage="System.Windows.Forms.Control.ProductVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2862">Ruft die Version der Assembly ab, die das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2862">Gets the version of the assembly containing the control.</span></span></summary>
        <value><span data-ttu-id="8426f-2863">Die Dateiversion der Assembly, die das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2863">The file version of the assembly containing the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2864">Die <xref:System.Windows.Forms.Control.ProductVersion%2A> -Eigenschaft ist eine schreibgeschützte Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-2864">The <xref:System.Windows.Forms.Control.ProductVersion%2A> property is a read-only property.</span></span> <span data-ttu-id="8426f-2865">Um den Wert dieser Eigenschaft zu ändern, legen Sie den- <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> Eigenschafts Wert von fest <xref:System.Reflection.AssemblyVersionAttribute> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2865">To change the value of this property, set the <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> property value of the <xref:System.Reflection.AssemblyVersionAttribute>.</span></span> <span data-ttu-id="8426f-2866">In der folgenden Zeile des c#-Codes wird die-Eigenschaft festgelegt <xref:System.Windows.Forms.Control.ProductVersion%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2866">The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductVersion%2A> property.</span></span>  
  
```  
[assembly: AssemblyVersion("1.0.1")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="8426f-2867">Es wird dringend empfohlen, den Firmennamen, den Produktnamen und die Produktversion anzugeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-2867">It is strongly recommended that you provide the company name, product name, and product version.</span></span> <span data-ttu-id="8426f-2868">Das Bereitstellen dieser Informationen ermöglicht die Verwendung von Windows Forms Features wie z <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> . b., die das Schreiben von Anwendungen erleichtern, die dem "Certified for Windows"-Programm entsprechen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2868">Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> that make it easier to write applications that comply with the "Certified for Windows" program.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="8426f-2869">Im folgenden Codebeispiel werden Informationen über die Anwendung in einer-Datei angezeigt, die in <xref:System.Windows.Forms.Label> enthalten ist <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2869">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8426f-2870">Für dieses Beispiel ist es erforderlich, dass <xref:System.Windows.Forms.Control.CompanyName%2A> <xref:System.Windows.Forms.Control.ProductName%2A> und <xref:System.Windows.Forms.Control.ProductVersion%2A> festgelegt wurden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2870">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyVersionAttribute.Version" />
      </Docs>
    </Member>
    <Member MemberName="PropagatingImeMode">
      <MemberSignature Language="C#" Value="protected static System.Windows.Forms.ImeMode PropagatingImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.ImeMode PropagatingImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.PropagatingImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PropagatingImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Windows::Forms::ImeMode PropagatingImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.PropagatingImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Control.PropagatingImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2871">Ruft ein Objekt ab, das einen IME-Modus für Weitergabevorgänge darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2871">Gets an object that represents a propagating IME mode.</span></span></summary>
        <value><span data-ttu-id="8426f-2872">Ein Objekt, das einen IME-Modus für Weitergabevorgänge darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2872">An object that represents a propagating IME mode.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAccessibilityHelp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryAccessibilityHelp As QueryAccessibilityHelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryAccessibilityHelpEventHandler ^ QueryAccessibilityHelp;" />
      <MemberSignature Language="F#" Value="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " Usage="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryAccessibilityHelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2873">Tritt ein, wenn <see cref="T:System.Windows.Forms.AccessibleObject" /> Hilfe für barrierefreie Anwendungen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2873">Occurs when <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing help to accessibility applications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2874">Verwenden Sie die- <xref:System.Windows.Forms.HelpProvider> Klasse, um Benutzern das Aufrufen von Hilfe für Ihr Barrierefreies Objekt zu ermöglichen, indem Sie die F1-Taste drücken.</span><span class="sxs-lookup"><span data-stu-id="8426f-2874">You should use the <xref:System.Windows.Forms.HelpProvider> class to enable users to invoke help on your accessible object by pressing the F1 key.</span></span> <span data-ttu-id="8426f-2875">Mithilfe <xref:System.Windows.Forms.HelpProvider> von erhalten Sie umfassende Informationen in <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2875">Using the <xref:System.Windows.Forms.HelpProvider> provides you with complete information in the <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>.</span></span> <span data-ttu-id="8426f-2876">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2876">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2877">Das folgende Codebeispiel veranschaulicht die Erstellung eines Barrierefreiheits fähigen Diagramm Steuer Elements mithilfe der <xref:System.Windows.Forms.AccessibleObject> -Klasse und der- <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klasse, um Barrierefreie Informationen verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2877">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="8426f-2878">Das-Steuerelement zeichnet zwei Kurven zusammen mit einer Legende.</span><span class="sxs-lookup"><span data-stu-id="8426f-2878">The control plots two curves along with a legend.</span></span> <span data-ttu-id="8426f-2879">Die- `ChartControlAccessibleObject` Klasse, die von abgeleitet wird `ControlAccessibleObject` , wird in der-Methode verwendet, <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> um benutzerdefinierte Informationen für das Diagramm Steuerelement bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2879">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="8426f-2880">Da die Diagramm Legende kein tatsächliches Steuerelement ist <xref:System.Windows.Forms.Control> , sondern durch das Diagramm Steuerelement gezeichnet wird, sind keine integrierten zugänglichen Informationen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="8426f-2880">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="8426f-2881">Aus diesem Grund `ChartControlAccessibleObject` überschreibt die-Klasse die- <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> Methode, um das-Element zurückzugeben `CurveLegendAccessibleObject` , das barrierefreie Informationen für jeden Teil der Legende darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2881">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="8426f-2882">Wenn eine barrierefreie Anwendung dieses Steuerelement verwendet, kann das Steuerelement die erforderlichen zugänglichen Informationen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2882">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="8426f-2883">Dieser Code Ausschnitt veranschaulicht die Behandlung des- <xref:System.Windows.Forms.Control.QueryAccessibilityHelp> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-2883">This code excerpt demonstrates handling the <xref:System.Windows.Forms.Control.QueryAccessibilityHelp> event.</span></span> <span data-ttu-id="8426f-2884"><xref:System.Windows.Forms.AccessibleObject>Das gesamte Codebeispiel finden Sie in der Übersicht über die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8426f-2884">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#3)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#3)]
 [!code-vb[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2885">Tritt während eines Drag &amp; Drop-Vorgangs ein. Dadurch kann die Quelle des Ziehvorgangs bestimmen, ob der Drag &amp; Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-2885">Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2886">Das- <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignis wird ausgelöst, wenn während eines Drag & Drop-Vorgangs eine Änderung im Tastatur-oder Maustasten Zustand vorliegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2886">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span> <span data-ttu-id="8426f-2887">Das- <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignis ermöglicht der Zieh Quelle, zu bestimmen, ob der Drag & Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-2887">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="8426f-2888">Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag &amp; Drop-Vorgänge ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2888">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="8426f-2889">Die- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode bestimmt das Steuerelement unter der aktuellen Cursorposition.</span><span class="sxs-lookup"><span data-stu-id="8426f-2889">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="8426f-2890">Anschließend wird überprüft, ob das Steuerelement ein gültiges Ablage Ziel ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2890">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="8426f-2891">Wenn das Steuerelement ein gültiges Ablage Ziel ist, wird das-Ereignis ausgelöst, wenn der <xref:System.Windows.Forms.Control.GiveFeedback> Drag & Drop-Effekt angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2891">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="8426f-2892">Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-2892">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="8426f-2893">Änderungen der Mauszeigerposition, des Tastaturzustands und des Zustands der Maustasten werden verfolgt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2893">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="8426f-2894">Wenn die Benutzeraktion das Fenster verlässt, wird das <xref:System.Windows.Forms.Control.DragLeave>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-2894">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="8426f-2895">Wenn der Mauszeiger in ein anderes Steuerelement bewegt wird, wird das <xref:System.Windows.Forms.Control.DragEnter>-Ereignis für dieses Steuerelement ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-2895">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="8426f-2896">Wenn die Maus bewegt wird, ohne das Steuerelement zu verlassen, wird das <xref:System.Windows.Forms.Control.DragOver>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-2896">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-2897">Wenn sich der Tastatur-oder Maustasten Zustand ändert, <xref:System.Windows.Forms.Control.QueryContinueDrag> wird das-Ereignis ausgelöst, und es wird bestimmt, ob der Zieh Vorgang fortgesetzt, die Daten abgelegt oder der Vorgang basierend auf dem Wert der <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> -Eigenschaft des Ereignisses abgebrochen <xref:System.Windows.Forms.QueryContinueDragEventArgs> werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-2897">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="8426f-2898">Wenn der Wert von <xref:System.Windows.Forms.DragAction> `Continue` <xref:System.Windows.Forms.Control.DragOver> auf festgelegt ist, wird das-Ereignis ausgelöst, um den Vorgang fortzusetzen, und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis wird mit dem neuen Effekt ausgelöst, sodass entsprechendes visuelles Feedback festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-2898">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="8426f-2899">Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="8426f-2899">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="8426f-2900">Das <xref:System.Windows.Forms.Control.DragOver> -Ereignis und das- <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis werden gekoppelt, damit dem Benutzer beim Bewegen der Maus über das Ablage Ziel das aktuellste Feedback an der Position der Maus gegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2900">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="8426f-2901">Wenn der Wert von auf festgelegt ist <xref:System.Windows.Forms.DragAction> `Drop` , wird der Wert des Ablage Effekts an die Quelle zurückgegeben. die Quell Anwendung kann somit den entsprechenden Vorgang für die Quelldaten ausführen, z. b. die Daten Ausschneiden, wenn es sich um einen Verschiebe Vorgang handelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2901">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="8426f-2902">Wenn der Wert von <xref:System.Windows.Forms.DragAction> ist `Cancel` , wird das- <xref:System.Windows.Forms.Control.DragLeave> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-2902">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="8426f-2903">Standardmäßig legt das- <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignis <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> auf fest, `Cancel` <xref:System.Windows.Forms.DragAction> Wenn die ESC-Taste gedrückt wurde, und legt auf fest, <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> `Drop` <xref:System.Windows.Forms.DragAction> Wenn die linke, mittlere oder Rechte Maustaste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2903">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Cancel` in <xref:System.Windows.Forms.DragAction> if the ESC key was pressed and sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Drop` in <xref:System.Windows.Forms.DragAction> if the left, middle, or right mouse button is pressed.</span></span>  
  
 <span data-ttu-id="8426f-2904">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2904">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2905">Dieser Code Ausschnitt veranschaulicht die Verwendung des- <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignisses, um den Drag & Drop-Vorgang abzubrechen, wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2905">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.QueryContinueDrag> event to cancel the drag-and-drop operation if the drag operation moves outside the bounds of the form.</span></span> <span data-ttu-id="8426f-2906">Das gesamte Codebeispiel finden Sie unter der- <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="8426f-2906">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseDragEvent">
      <MemberSignature Language="C#" Value="protected void RaiseDragEvent (object key, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseDragEvent(object key, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseDragEvent (key As Object, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseDragEvent(System::Object ^ key, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseDragEvent : obj * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.RaiseDragEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8426f-2907">Das auszulösende Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-2907">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="8426f-2908">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2908">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2909">Löst das entsprechende Ziehereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2909">Raises the appropriate drag event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseKeyEvent">
      <MemberSignature Language="C#" Value="protected void RaiseKeyEvent (object key, System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseKeyEvent(object key, class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseKeyEvent (key As Object, e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseKeyEvent(System::Object ^ key, System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseKeyEvent : obj * System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.RaiseKeyEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8426f-2910">Das auszulösende Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-2910">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="8426f-2911">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2911">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2912">Löst das entsprechende Tastenereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2912">Raises the appropriate key event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseMouseEvent">
      <MemberSignature Language="C#" Value="protected void RaiseMouseEvent (object key, System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseMouseEvent(object key, class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseMouseEvent (key As Object, e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseMouseEvent(System::Object ^ key, System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseMouseEvent : obj * System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.RaiseMouseEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8426f-2913">Das auszulösende Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-2913">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="8426f-2914">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2914">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2915">Löst das entsprechende Mausereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2915">Raises the appropriate mouse event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePaintEvent">
      <MemberSignature Language="C#" Value="protected void RaisePaintEvent (object key, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaisePaintEvent(object key, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaisePaintEvent (key As Object, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaisePaintEvent(System::Object ^ key, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaisePaintEvent : obj * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.RaisePaintEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8426f-2916">Das auszulösende Ereignis.</span><span class="sxs-lookup"><span data-stu-id="8426f-2916">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="8426f-2917">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2917">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-2918">Löst das entsprechende Paint-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-2918">Raises the appropriate paint event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RecreateHandle">
      <MemberSignature Language="C#" Value="protected void RecreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RecreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RecreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RecreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RecreateHandle();" />
      <MemberSignature Language="F#" Value="member this.RecreateHandle : unit -&gt; unit" Usage="control.RecreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2919">Erzwingt ein erneutes Erstellen des Handles für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-2919">Forces the re-creation of the handle for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2920">Die- <xref:System.Windows.Forms.Control.RecreateHandle%2A> Methode wird immer dann aufgerufen, wenn Parameter für ein neues Steuerelement erforderlich sind, aber die Verwendung eines Aufrufs von <xref:System.Windows.Forms.Control.UpdateStyles%2A> zu <xref:System.Windows.Forms.Control.CreateParams%2A> unzureichend ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2920">The <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is called whenever parameters are needed for a new control, but using a call from <xref:System.Windows.Forms.Control.UpdateStyles%2A> to <xref:System.Windows.Forms.Control.CreateParams%2A> is insufficient.</span></span> <span data-ttu-id="8426f-2921">Diese Methode ruft außerdem <xref:System.Windows.Forms.Control.DestroyHandle%2A> und <xref:System.Windows.Forms.Control.CreateHandle%2A> <xref:System.Windows.Forms.Control.RecreatingHandle%2A> auf `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2921">This method also calls <xref:System.Windows.Forms.Control.DestroyHandle%2A> and <xref:System.Windows.Forms.Control.CreateHandle%2A> and sets <xref:System.Windows.Forms.Control.RecreatingHandle%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="RecreatingHandle">
      <MemberSignature Language="C#" Value="public bool RecreatingHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecreatingHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RecreatingHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecreatingHandle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecreatingHandle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RecreatingHandle : bool" Usage="System.Windows.Forms.Control.RecreatingHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2922">Ruft einen Wert ab, der angibt, ob das Steuerelement gerade das zugehörige Handle neu erstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2922">Gets a value indicating whether the control is currently re-creating its handle.</span></span></summary>
        <value><span data-ttu-id="8426f-2923"><see langword="true" />, wenn das Steuerelement gerade das Handle neu erstellt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2923"><see langword="true" /> if the control is currently re-creating its handle; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2924">Die- <xref:System.Windows.Forms.Control.RecreatingHandle%2A> Eigenschaft gibt zurück, `true` Wenn die- <xref:System.Windows.Forms.Control.RecreateHandle%2A> Methode noch im-Steuerelement ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2924">The <xref:System.Windows.Forms.Control.RecreatingHandle%2A> property returns `true` if the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is still running on the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="RectangleToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RectangleToClient (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle RectangleToClient(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function RectangleToClient (r As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle RectangleToClient(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.RectangleToClient : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="control.RectangleToClient r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="8426f-2925">Der zu konvertierende Bildschirmkoordinaten-<see cref="T:System.Drawing.Rectangle" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2925">The screen coordinate <see cref="T:System.Drawing.Rectangle" /> to convert.</span></span></param>
        <summary><span data-ttu-id="8426f-2926">Berechnet die Größe und die Position des angegebenen Bildschirmrechtecks in Clientkoordinaten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2926">Computes the size and location of the specified screen rectangle in client coordinates.</span></span></summary>
        <returns><span data-ttu-id="8426f-2927">Ein <see cref="T:System.Drawing.Rectangle" />, der den konvertierten <see cref="T:System.Drawing.Rectangle" />, <paramref name="r" />, in Clientkoordinaten darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2927">A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="r" />, in client coordinates.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="RectangleToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle RectangleToScreen(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function RectangleToScreen (r As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle RectangleToScreen(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.RectangleToScreen : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="control.RectangleToScreen r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="8426f-2928">Der zu konvertierende Clientkoordinaten-<see cref="T:System.Drawing.Rectangle" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2928">The client coordinate <see cref="T:System.Drawing.Rectangle" /> to convert.</span></span></param>
        <summary><span data-ttu-id="8426f-2929">Berechnet die Größe und die Position des angegebenen Clientrechtecks in Bildschirmkoordinaten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2929">Computes the size and location of the specified client rectangle in screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="8426f-2930">Ein <see cref="T:System.Drawing.Rectangle" />, der den konvertierten <see cref="T:System.Drawing.Rectangle" />, <paramref name="p" />, in Bildschirmkoordinaten darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2930">A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="p" />, in screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8426f-2931">Im folgenden Codebeispiel wird veranschaulicht, wie die Member <xref:System.Windows.Forms.Control.BackColor%2A> , <xref:System.Windows.Forms.Control.RectangleToScreen%2A> , <xref:System.Windows.Forms.Control.PointToScreen%2A> , <xref:System.Windows.Forms.Control.MouseButtons%2A> , und <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType> <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2931">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="8426f-2932">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular mit dem Namen **Form1** ein, das mehrere Steuerelemente enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-2932">To run the example, paste the following code in a form called **Form1** containing several controls.</span></span> <span data-ttu-id="8426f-2933">Für dieses Beispiel ist es erforderlich, dass die <xref:System.Windows.Forms.Control.MouseDown> <xref:System.Windows.Forms.Control.MouseMove> -,-und- <xref:System.Windows.Forms.Control.MouseUp> Ereignisse mit den Ereignis Handlern verbunden sind, die im Beispiel definiert sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-2933">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="ReflectMessage">
      <MemberSignature Language="C#" Value="protected static bool ReflectMessage (IntPtr hWnd, ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool ReflectMessage(native int hWnd, valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ReflectMessage (hWnd As IntPtr, ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool ReflectMessage(IntPtr hWnd, System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="static member ReflectMessage : nativeint * Message -&gt; bool" Usage="System.Windows.Forms.Control.ReflectMessage (hWnd, m)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="hWnd"><span data-ttu-id="8426f-2934">Ein <see cref="T:System.IntPtr" />, der das Handle des Steuerelements darstellt, an das die Meldung zurückgesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-2934">An <see cref="T:System.IntPtr" /> representing the handle of the control to reflect the message to.</span></span></param>
        <param name="m"><span data-ttu-id="8426f-2935">Eine <see cref="T:System.Windows.Forms.Message" />, die die Windows-Meldung darstellt, die zurückgesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-2935">A <see cref="T:System.Windows.Forms.Message" /> representing the Windows message to reflect.</span></span></param>
        <summary><span data-ttu-id="8426f-2936">Reflektiert die angegebene Meldung an das Steuerelement, das an das angegebene Handle gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2936">Reflects the specified message to the control that is bound to the specified handle.</span></span></summary>
        <returns><span data-ttu-id="8426f-2937"><see langword="true" />, wenn die Meldung reflektiert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2937"><see langword="true" /> if the message was reflected; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2938">Die <xref:System.Windows.Forms.Control.ReflectMessage%2A> -Methode ist eine Infrastruktur Methode und sollte in der Regel nicht aus dem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2938">The <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is an infrastructure method and typically should not be called from your code.</span></span>  
  
 <span data-ttu-id="8426f-2939">Wenn der- `hWnd` Parameter kein gültiges Steuerelement darstellt, <xref:System.Windows.Forms.Control.ReflectMessage%2A> gibt die Methode zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2939">If the `hWnd` parameter does not represent a valid control, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="8426f-2940">Da Windows-Meldungen an das Fenster der obersten Ebene zurückgegeben werden, wird die- <xref:System.Windows.Forms.Control.ReflectMessage%2A> Methode verwendet, um die Rückgabe Meldung an das Steuerelement zu übertragen, das die Nachricht gesendet hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-2940">Because Windows messages are returned to the top-level window, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is used to propagate the return message to the control that sent the message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Refresh();" />
      <MemberSignature Language="F#" Value="abstract member Refresh : unit -&gt; unit&#xA;override this.Refresh : unit -&gt; unit" Usage="control.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2941">Erzwingt, dass das Steuerelement seinen Clientbereich für ungültig erklärt und sich sowie alle untergeordneten Steuerelemente sofort selbst neu zeichnet.</span><span class="sxs-lookup"><span data-stu-id="8426f-2941">Forces the control to invalidate its client area and immediately redraw itself and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-2942">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.Refresh" /> in einer abgeleiteten Klasse sicher, dass die-Methode der Basisklasse aufgerufen wird, <see cref="M:System.Windows.Forms.Control.Refresh" /> damit das Steuerelement und seine untergeordneten Steuerelemente für ungültig erklärt und neu gezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2942">When overriding <see cref="M:System.Windows.Forms.Control.Refresh" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.Refresh" /> method so the control and its child controls are invalidated and redrawn.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.Update" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <Member MemberName="Region">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Region { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Region Region" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Region" />
      <MemberSignature Language="VB.NET" Value="Public Property Region As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Region ^ Region { System::Drawing::Region ^ get(); void set(System::Drawing::Region ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Region : System.Drawing.Region with get, set" Usage="System.Windows.Forms.Control.Region" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2943">Ruft den dem Steuerelement zugeordneten Fensterbereich ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-2943">Gets or sets the window region associated with the control.</span></span></summary>
        <value><span data-ttu-id="8426f-2944">Die dem Steuerelement zugeordnete Fenster-<see cref="T:System.Drawing.Region" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2944">The window <see cref="T:System.Drawing.Region" /> associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2945">Der Fensterbereich ist eine Auflistung von Pixeln innerhalb des Fensters, in dem das Betriebssystem das Zeichnen zulässt.</span><span class="sxs-lookup"><span data-stu-id="8426f-2945">The window region is a collection of pixels within the window where the operating system permits drawing.</span></span> <span data-ttu-id="8426f-2946">Das Betriebssystem zeigt keinen Teil eines Fensters an, der sich außerhalb des Fenster Bereichs befindet.</span><span class="sxs-lookup"><span data-stu-id="8426f-2946">The operating system does not display any portion of a window that lies outside of the window region.</span></span> <span data-ttu-id="8426f-2947">Die Koordinaten des Bereichs eines Steuer Elements sind relativ zur linken oberen Ecke des Steuer Elements, nicht zum Client Bereich des Steuer Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-2947">The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-2948">Die Auflistung von Pixeln, die im Bereich enthalten sind, kann nicht zusammenhängend sein.</span><span class="sxs-lookup"><span data-stu-id="8426f-2948">The collection of pixels contained with the region can be noncontiguous.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2949">Im folgenden Codebeispiel wird veranschaulicht, wie die- <xref:System.Windows.Forms.Control.Region%2A> Eigenschaft durch Erstellen einer roundschaltfläche verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2949">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.Region%2A> property by creating a round button.</span></span> <span data-ttu-id="8426f-2950">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular ein, das eine Schaltfläche mit dem Namen enthält `roundButton` .</span><span class="sxs-lookup"><span data-stu-id="8426f-2950">To run the example, paste the following code in a form containing a button called `roundButton`.</span></span> <span data-ttu-id="8426f-2951">Für dieses Beispiel ist es erforderlich, dass das- <xref:System.Windows.Forms.Control.Paint> Ereignis mit dem Ereignishandler verbunden ist, der im Beispiel definiert ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-2951">This example requires that the <xref:System.Windows.Forms.Control.Paint> event is connected to the event handler defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.Region#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.Region#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.Region#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="RegionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RegionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RegionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.RegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RegionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RegionChanged;" />
      <MemberSignature Language="F#" Value="member this.RegionChanged : EventHandler " Usage="member this.RegionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2952">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.Control.Region" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-2952">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2953">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2953">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2954">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-2954">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-2955">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.RegionChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-2955">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.RegionChanged> event.</span></span> <span data-ttu-id="8426f-2956">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-2956">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-2957">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2957">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-2958">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-2958">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-2959">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.RegionChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2959">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.RegionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#22)]
 [!code-vb[System.Windows.Forms.EventExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderRightToLeft">
      <MemberSignature Language="C#" Value="protected internal bool RenderRightToLeft { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RenderRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property RenderRightToLeft As Boolean" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool RenderRightToLeft { bool get(); };" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.RenderRightToLeft : bool" Usage="System.Windows.Forms.Control.RenderRightToLeft" />
      <MemberSignature Language="C#" Value="protected bool RenderRightToLeft { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RenderRightToLeft As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RenderRightToLeft { bool get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("This property has been deprecated. Please use RightToLeft instead. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property has been deprecated. Please use RightToLeft instead. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2960">Diese Eigenschaft ist jetzt veraltet.</span><span class="sxs-lookup"><span data-stu-id="8426f-2960">This property is now obsolete.</span></span></summary>
        <value><span data-ttu-id="8426f-2961"><see langword="true" />, wenn das Steuerelement von rechts nach links gerendert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2961"><see langword="true" /> if the control is rendered from right to left; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8426f-2962">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2962">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RescaleConstantsForDpi">
      <MemberSignature Language="C#" Value="protected virtual void RescaleConstantsForDpi (int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RescaleConstantsForDpi(int32 deviceDpiOld, int32 deviceDpiNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RescaleConstantsForDpi (deviceDpiOld As Integer, deviceDpiNew As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RescaleConstantsForDpi(int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="F#" Value="abstract member RescaleConstantsForDpi : int * int -&gt; unit&#xA;override this.RescaleConstantsForDpi : int * int -&gt; unit" Usage="control.RescaleConstantsForDpi (deviceDpiOld, deviceDpiNew)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld"><span data-ttu-id="8426f-2963">Der DPI-Wert vor der Änderung.</span><span class="sxs-lookup"><span data-stu-id="8426f-2963">The DPI value prior to the change.</span></span></param>
        <param name="deviceDpiNew"><span data-ttu-id="8426f-2964">Der DPI-Wert nach der Änderung.</span><span class="sxs-lookup"><span data-stu-id="8426f-2964">The DPI value after the change.</span></span></param>
        <summary><span data-ttu-id="8426f-2965">Stellt Konstanten für die Größenänderung des Steuerelements bereit, wenn ein DPI-Wert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2965">Provides constants for rescaling the control when a DPI change occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public virtual void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetBackColor : unit -&gt; unit&#xA;override this.ResetBackColor : unit -&gt; unit" Usage="control.ResetBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2966">Setzt die <see cref="P:System.Windows.Forms.Control.BackColor" />-Eigenschaft auf den Standardwert zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-2966">Resets the <see cref="P:System.Windows.Forms.Control.BackColor" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2967">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-2967">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetBindings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings();" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : unit -&gt; unit" Usage="control.ResetBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2968">Führt dazu, dass in ein an <see cref="T:System.Windows.Forms.BindingSource" /> gebundenes Steuerelement alle Elemente in der Liste erneut eingelesen und ihre angezeigten Werte aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2968">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2969">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-2969">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
      </Docs>
    </Member>
    <Member MemberName="ResetCursor">
      <MemberSignature Language="C#" Value="public virtual void ResetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetCursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetCursor();" />
      <MemberSignature Language="F#" Value="abstract member ResetCursor : unit -&gt; unit&#xA;override this.ResetCursor : unit -&gt; unit" Usage="control.ResetCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2970">Setzt die <see cref="P:System.Windows.Forms.Control.Cursor" />-Eigenschaft auf den Standardwert zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-2970">Resets the <see cref="P:System.Windows.Forms.Control.Cursor" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2971">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-2971">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetFont">
      <MemberSignature Language="C#" Value="public virtual void ResetFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetFont" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetFont();" />
      <MemberSignature Language="F#" Value="abstract member ResetFont : unit -&gt; unit&#xA;override this.ResetFont : unit -&gt; unit" Usage="control.ResetFont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2972">Setzt die <see cref="P:System.Windows.Forms.Control.Font" />-Eigenschaft auf den Standardwert zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-2972">Resets the <see cref="P:System.Windows.Forms.Control.Font" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2973">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-2973">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public virtual void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetForeColor : unit -&gt; unit&#xA;override this.ResetForeColor : unit -&gt; unit" Usage="control.ResetForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2974">Setzt die <see cref="P:System.Windows.Forms.Control.ForeColor" />-Eigenschaft auf den Standardwert zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-2974">Resets the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2975">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-2975">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetImeMode">
      <MemberSignature Language="C#" Value="public void ResetImeMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetImeMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetImeMode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetImeMode();" />
      <MemberSignature Language="F#" Value="member this.ResetImeMode : unit -&gt; unit" Usage="control.ResetImeMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2976">Setzt die <see cref="P:System.Windows.Forms.Control.ImeMode" />-Eigenschaft auf den Standardwert zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-2976">Resets the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2977">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-2977">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMouseEventArgs">
      <MemberSignature Language="C#" Value="protected void ResetMouseEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetMouseEventArgs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetMouseEventArgs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetMouseEventArgs();" />
      <MemberSignature Language="F#" Value="member this.ResetMouseEventArgs : unit -&gt; unit" Usage="control.ResetMouseEventArgs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2978">Setzt das Steuerelement zurück, um das <see cref="E:System.Windows.Forms.Control.MouseLeave" />-Ereignis zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-2978">Resets the control to handle the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetRightToLeft">
      <MemberSignature Language="C#" Value="public virtual void ResetRightToLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetRightToLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetRightToLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetRightToLeft();" />
      <MemberSignature Language="F#" Value="abstract member ResetRightToLeft : unit -&gt; unit&#xA;override this.ResetRightToLeft : unit -&gt; unit" Usage="control.ResetRightToLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2979">Setzt die <see cref="P:System.Windows.Forms.Control.RightToLeft" />-Eigenschaft auf den Standardwert zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-2979">Resets the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2980">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-2980">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public virtual void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetText();" />
      <MemberSignature Language="F#" Value="abstract member ResetText : unit -&gt; unit&#xA;override this.ResetText : unit -&gt; unit" Usage="control.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2981">Setzt die <see cref="P:System.Windows.Forms.Control.Text" />-Eigenschaft auf den Standardwert (<see cref="F:System.String.Empty" />) zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-2981">Resets the <see cref="P:System.Windows.Forms.Control.Text" /> property to its default value (<see cref="F:System.String.Empty" />).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2982">Normalerweise verwenden Sie diese Methode, wenn Sie entweder einen Designer für den erstellen <xref:System.Windows.Forms.Control> oder ein eigenes Steuerelement erstellen, das enthält <xref:System.Windows.Forms.Control> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2982">You typically use this method if you are either creating a designer for the <xref:System.Windows.Forms.Control> or creating your own control incorporating the <xref:System.Windows.Forms.Control>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event EventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Resize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Resize As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Resize;" />
      <MemberSignature Language="F#" Value="member this.Resize : EventHandler " Usage="member this.Resize : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2983">Tritt beim Ändern der Größe des Steuerelements ein.</span><span class="sxs-lookup"><span data-stu-id="8426f-2983">Occurs when the control is resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2984">Zum Ermitteln des-Objekts, das in der <xref:System.Windows.Forms.Control.Size%2A> Größe geändert wurde, können Sie den `sender` -Parameter der registrierten <xref:System.Windows.Forms.ControlEventHandler> -Methode in einen umwandeln <xref:System.Windows.Forms.Control> und seine <xref:System.Windows.Forms.Control.Size%2A> -Eigenschaft (oder <xref:System.Windows.Forms.Control.Height%2A> und <xref:System.Windows.Forms.Control.Width%2A> Eigenschaften einzeln) erhalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-2984">To determine the <xref:System.Windows.Forms.Control.Size%2A> of the resized control, you can cast the `sender` parameter of the registered <xref:System.Windows.Forms.ControlEventHandler> method  to a <xref:System.Windows.Forms.Control> and get its <xref:System.Windows.Forms.Control.Size%2A> property (or <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually).</span></span>  
  
 <span data-ttu-id="8426f-2985">Verwenden Sie zum Verarbeiten von benutzerdefinierten Layouts das <xref:System.Windows.Forms.Control.Layout> Ereignis anstelle des Ereignisses zum Ändern der Größe.</span><span class="sxs-lookup"><span data-stu-id="8426f-2985">To handle custom layouts, use the <xref:System.Windows.Forms.Control.Layout> event instead of the Resize event.</span></span> <span data-ttu-id="8426f-2986">Das- <xref:System.Windows.Forms.Control.Layout> Ereignis wird als Reaktion auf ein- <xref:System.Windows.Forms.Control.Resize> Ereignis ausgelöst, aber auch als Reaktion auf andere Änderungen, die das Layout des Steuer Elements beeinflussen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2986">The <xref:System.Windows.Forms.Control.Layout> event is raised in response to a <xref:System.Windows.Forms.Control.Resize> event, but also in response to other changes that affect the layout of the control.</span></span>  
  
 <span data-ttu-id="8426f-2987">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-2987">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-2988">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.Resize> Ereignis eines behandelt <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2988">The following code example handles the <xref:System.Windows.Forms.Control.Resize> event of a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8426f-2989">Wenn die Größe des Formulars geändert wird, stellt der Ereignishandler sicher, dass das Formular quadratisch bleibt (sein <xref:System.Windows.Forms.Control.Height%2A> und <xref:System.Windows.Forms.Control.Width%2A> bleibt gleich).</span><span class="sxs-lookup"><span data-stu-id="8426f-2989">When the form is resized, the event handler ensures that the form stays square (its <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> remain equal).</span></span> <span data-ttu-id="8426f-2990">Stellen Sie zum Ausführen dieses Beispiels sicher, und ordnen Sie diese Ereignis Behandlungsmethode dem-Ereignis des Formulars zu <xref:System.Windows.Forms.Control.Resize> .</span><span class="sxs-lookup"><span data-stu-id="8426f-2990">To run this example, make sure and associate this event-handling method with the form's <xref:System.Windows.Forms.Control.Resize> event.</span></span>  
  
 [!code-cpp[WinForms.Control.Resize#1](~/samples/snippets/cpp/VS_Snippets_Winforms/WinForms.Control.Resize/CPP/form1.cpp#1)]
 [!code-csharp[WinForms.Control.Resize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/WinForms.Control.Resize/CS/form1.cs#1)]
 [!code-vb[WinForms.Control.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WinForms.Control.Resize/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="protected bool ResizeRedraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeRedraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="Protected Property ResizeRedraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ResizeRedraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeRedraw : bool with get, set" Usage="System.Windows.Forms.Control.ResizeRedraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-2991">Ruft einen Wert ab, der angibt, ob das Steuerelement beim Ändern seiner Größe sich selbst neu zeichnet, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-2991">Gets or sets a value indicating whether the control redraws itself when resized.</span></span></summary>
        <value><span data-ttu-id="8426f-2992"><see langword="true" />, wenn das Steuerelement beim Ändern seiner Größe sich selbst neu zeichnet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-2992"><see langword="true" /> if the control redraws itself when resized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2993">Der- <xref:System.Windows.Forms.Control.ResizeRedraw%2A> Eigenschafts Wert entspricht dem Rückgabewert der- <xref:System.Windows.Forms.Control.GetStyle%2A> Methode, wenn der- <xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType> Wert als Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-2993">The <xref:System.Windows.Forms.Control.ResizeRedraw%2A> property value is equivalent to the return value of the <xref:System.Windows.Forms.Control.GetStyle%2A> method when passing in the <xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType> value as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeLayout">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-2994">Nimmt die übliche Layoutlogik wieder auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-2994">Resumes the usual layout logic.</span></span></summary>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResumeLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeLayout();" />
      <MemberSignature Language="F#" Value="member this.ResumeLayout : unit -&gt; unit" Usage="control.ResumeLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-2995">Nimmt die übliche Layoutlogik wieder auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-2995">Resumes usual layout logic.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-2996">Durch Aufrufen der- <xref:System.Windows.Forms.Control.ResumeLayout%2A> Methode wird ein sofortiges Layout erzwungen, wenn ausstehende Layoutanforderungen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-2996">Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.</span></span>  
  
 <span data-ttu-id="8426f-2997">Die <xref:System.Windows.Forms.Control.SuspendLayout%2A> -Methode und die- <xref:System.Windows.Forms.Control.ResumeLayout%2A> Methode werden zusammen verwendet, um mehrere Ereignisse zu unterdrücken, <xref:System.Windows.Forms.Control.Layout> während Sie mehrere Attribute des Steuer Elements anpassen.</span><span class="sxs-lookup"><span data-stu-id="8426f-2997">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="8426f-2998">Beispielsweise würden Sie in der Regel die-Methode und dann die-,-,- <xref:System.Windows.Forms.Control.SuspendLayout%2A> <xref:System.Windows.Forms.Control.Size%2A> <xref:System.Windows.Forms.Control.Location%2A> <xref:System.Windows.Forms.Control.Anchor%2A> oder <xref:System.Windows.Forms.Control.Dock%2A> -Eigenschaften des-Steuer Elements festlegen und dann die-Methode aufzurufen, <xref:System.Windows.Forms.Control.ResumeLayout%2A> damit die Änderungen wirksam werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-2998">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="8426f-2999">Es dürfen keine ausstehenden Aufrufe <xref:System.Windows.Forms.Control.SuspendLayout%2A> von für vorhanden sein <xref:System.Windows.Forms.Control.ResumeLayout%2A> , um erfolgreich aufgerufen werden zu können.</span><span class="sxs-lookup"><span data-stu-id="8426f-2999">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3000">Im folgenden Codebeispiel werden zwei Schaltflächen zu einem Formular hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3000">The following code example adds two buttons to a form.</span></span> <span data-ttu-id="8426f-3001">In dem Beispiel wird das Hinzufügen der Schaltflächen mithilfe der <xref:System.Windows.Forms.Control.SuspendLayout%2A> -Methode und der-Methode durch Transaktionen <xref:System.Windows.Forms.Control.ResumeLayout%2A></span><span class="sxs-lookup"><span data-stu-id="8426f-3001">The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]
 [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout (bool performLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout(bool performLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeLayout (performLayout As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeLayout(bool performLayout);" />
      <MemberSignature Language="F#" Value="member this.ResumeLayout : bool -&gt; unit" Usage="control.ResumeLayout performLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="performLayout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="performLayout"><span data-ttu-id="8426f-3002"><see langword="true" />, um ausstehende Layoutanforderungen auszuführen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3002"><see langword="true" /> to execute pending layout requests; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8426f-3003">Nimmt die übliche Layoutlogik wieder auf und erzwingt optional ein sofortiges Layout für ausstehende Layoutanforderungen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3003">Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3004">Durch Aufrufen der- <xref:System.Windows.Forms.Control.ResumeLayout%2A> Methode wird ein sofortiges Layout erzwungen, wenn ausstehende Layoutanforderungen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-3004">Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.</span></span> <span data-ttu-id="8426f-3005">Wenn der- `performLayout` Parameter auf festgelegt ist `true` , wird ein sofortiges Layout ausgelöst, wenn ausstehende Layoutanforderungen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-3005">When the `performLayout` parameter is set to `true`, an immediate layout occurs if there are any pending layout requests.</span></span>  
  
 <span data-ttu-id="8426f-3006">Die <xref:System.Windows.Forms.Control.SuspendLayout%2A> -Methode und die- <xref:System.Windows.Forms.Control.ResumeLayout%2A> Methode werden zusammen verwendet, um mehrere Ereignisse zu unterdrücken, <xref:System.Windows.Forms.Control.Layout> während Sie mehrere Attribute des Steuer Elements anpassen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3006">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="8426f-3007">Beispielsweise würden Sie in der Regel die-Methode und dann die-,-,- <xref:System.Windows.Forms.Control.SuspendLayout%2A> <xref:System.Windows.Forms.Control.Size%2A> <xref:System.Windows.Forms.Control.Location%2A> <xref:System.Windows.Forms.Control.Anchor%2A> oder <xref:System.Windows.Forms.Control.Dock%2A> -Eigenschaften des-Steuer Elements festlegen und dann die-Methode aufzurufen, <xref:System.Windows.Forms.Control.ResumeLayout%2A> damit die Änderungen wirksam werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3007">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="8426f-3008">Es dürfen keine ausstehenden Aufrufe <xref:System.Windows.Forms.Control.SuspendLayout%2A> von für vorhanden sein <xref:System.Windows.Forms.Control.ResumeLayout%2A> , um erfolgreich aufgerufen werden zu können.</span><span class="sxs-lookup"><span data-stu-id="8426f-3008">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-3009">Wenn Sie einem übergeordneten Steuerelement mehrere Steuerelemente hinzufügen, empfiehlt es sich, <xref:System.Windows.Forms.Control.SuspendLayout%2A> vor dem Initialisieren der hinzu zufügenden Steuerelemente die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3009">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="8426f-3010">Nachdem Sie dem übergeordneten Steuerelement die Steuerelemente hinzugefügt haben, müssen Sie die- <xref:System.Windows.Forms.Control.ResumeLayout%2A> Methode</span><span class="sxs-lookup"><span data-stu-id="8426f-3010">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="8426f-3011">Dadurch wird die Leistung von Anwendungen mit vielen Steuerelementen erhöht.</span><span class="sxs-lookup"><span data-stu-id="8426f-3011">This will increase the performance of applications with many controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public int Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Right { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : int" Usage="System.Windows.Forms.Control.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3012">Ruft den Abstand zwischen dem rechten Rand des Steuerelements und dem linken Rand des Clientbereichs des zugehörigen Containers in Pixel ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-3012">Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="8426f-3013">Ein <see cref="T:System.Int32" />-Wert, der den Abstand zwischen dem rechten Rand des Steuerelements und dem linken Rand des Clientbereichs des zugehörigen Containers in Pixel darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3013">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3014">Der Wert der <xref:System.Windows.Forms.Control.Right%2A> -Eigenschaft ist gleich der Summe aus dem <xref:System.Windows.Forms.Control.Left%2A> -Eigenschafts Wert und dem- <xref:System.Windows.Forms.Control.Width%2A> Eigenschafts Wert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3014">The value of the <xref:System.Windows.Forms.Control.Right%2A> property is equal to the sum of the <xref:System.Windows.Forms.Control.Left%2A> property value and the <xref:System.Windows.Forms.Control.Width%2A> property value.</span></span>  
  
 <span data-ttu-id="8426f-3015">Die <xref:System.Windows.Forms.Control.Right%2A>-Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3015">The <xref:System.Windows.Forms.Control.Right%2A> property is read-only.</span></span> <span data-ttu-id="8426f-3016">Sie können diesen Eigenschafts Wert indirekt ändern, indem Sie den Wert der-Eigenschaft oder der-Eigenschaft ändern <xref:System.Windows.Forms.Control.Left%2A> <xref:System.Windows.Forms.Control.Width%2A> oder die <xref:System.Windows.Forms.Control.SetBounds%2A> <xref:System.Windows.Forms.Control.SetBoundsCore%2A> Methoden,, <xref:System.Windows.Forms.Control.UpdateBounds%2A> oder aufrufen <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3016">You can change this property value indirectly by changing the value of the <xref:System.Windows.Forms.Control.Left%2A> or <xref:System.Windows.Forms.Control.Width%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3017">Im folgenden Codebeispiel werden drei Steuer <xref:System.Windows.Forms.Button> Elemente auf einem Formular erstellt, und die Größe und die Position werden mithilfe der verschiedenen Größen bezogenen und standortbezogenen Eigenschaften festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3017">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="8426f-3018">Für dieses Beispiel ist es erforderlich, dass Sie über eine <xref:System.Windows.Forms.Form> mit einer Breite und Höhe von mindestens 300 Pixel verfügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3018">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Right" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.Control.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3019">Ruft einen Wert ab, der angibt, ob Elemente des Steuerelements für die Unterstützung von Gebietsschemas ausgerichtet sind, die von rechts nach links geschriebene Schriftarten verwenden, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3019">Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</span></span></summary>
        <value><span data-ttu-id="8426f-3020">Einer der <see cref="T:System.Windows.Forms.RightToLeft" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3020">One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span></span> <span data-ttu-id="8426f-3021">Der Standardwert ist <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3021">The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3022">Die- <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft ist eine Ambient-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8426f-3022">The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is an ambient property.</span></span> <span data-ttu-id="8426f-3023">Eine Ambient-Eigenschaft ist eine Steuerelement Eigenschaft, die, wenn Sie nicht festgelegt ist, vom übergeordneten Steuerelement abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3023">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="8426f-3024">Beispielsweise hat ein <xref:System.Windows.Forms.Button> <xref:System.Windows.Forms.Control.BackColor%2A> standardmäßig dasselbe wie das übergeordnete Element <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3024">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="8426f-3025">Weitere Informationen zu Ambient-Eigenschaften finden Sie unter der- <xref:System.Windows.Forms.AmbientProperties> Klasse oder der- <xref:System.Windows.Forms.Control> Klassen Übersicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-3025">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
 <span data-ttu-id="8426f-3026">Die- <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft wird für internationale Anwendungen verwendet, bei denen die Sprache von rechts nach links geschrieben wird, z. b. Hebräisch oder Arabisch.</span><span class="sxs-lookup"><span data-stu-id="8426f-3026">The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic.</span></span> <span data-ttu-id="8426f-3027">Wenn diese Eigenschaft auf festgelegt ist <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> , werden Steuerelemente, die Text enthalten, von rechts nach links angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3027">When this property is set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, control elements that include text are displayed from right to left.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-3028">Wenn der Wert der <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft zur Laufzeit geändert wird, wird nur unformatierter Text ohne Formatierung beibehalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-3028">If the value of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed at run time, only raw text without formatting is preserved.</span></span>  
  
 <span data-ttu-id="8426f-3029">Im folgenden finden Sie einige Beispiele für die Auswirkungen von Steuerelement Elementen durch den- <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschafts Wert von <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> :</span><span class="sxs-lookup"><span data-stu-id="8426f-3029">The following are a few examples of how control elements are affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property value of <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> :</span></span>  
  
-   <span data-ttu-id="8426f-3030">Vertikale Schiebe leisten werden auf der linken Seite und nicht auf der rechten Seite der scrollbaren Steuerelemente angezeigt (z. b.,, <xref:System.Windows.Forms.Form> <xref:System.Windows.Forms.Panel> mehrzeiligen <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.RichTextBox> ).</span><span class="sxs-lookup"><span data-stu-id="8426f-3030">Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>, multiline <xref:System.Windows.Forms.TextBox>, and <xref:System.Windows.Forms.RichTextBox>).</span></span>  
  
-   <span data-ttu-id="8426f-3031">Horizontale Schiebe leisten beginnen mit dem rechtsbündig ausgerichteten Bild Lauf Feld (Ziehpunkt).</span><span class="sxs-lookup"><span data-stu-id="8426f-3031">Horizontal scroll bars start with the scroll box (thumb) right-aligned.</span></span>  
  
-   <span data-ttu-id="8426f-3032">Die von der-Eigenschaft gesteuerte Kontrollkästchen Element Ausrichtung `CheckAlign` wird für <xref:System.Windows.Forms.CheckBox> -und-Steuer <xref:System.Windows.Forms.RadioButton> Elemente umgekehrt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3032">The check box element alignment, controlled by the `CheckAlign` property, is reversed for <xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls.</span></span>  
  
-   <span data-ttu-id="8426f-3033">Elemente in Listenfeld, Kombinations Feld und auf-ab-Steuerelementen sind rechtsbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="8426f-3033">Items in list box, combo box, and up-down controls are right aligned.</span></span>  
  
-   <span data-ttu-id="8426f-3034">Die Schaltflächen "nach oben" und "nach unten" sind linksbündig ausgerichtet <xref:System.Windows.Forms.NumericUpDown> <xref:System.Windows.Forms.DomainUpDown> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3034">Up and down buttons are left-aligned on <xref:System.Windows.Forms.NumericUpDown> and <xref:System.Windows.Forms.DomainUpDown> controls.</span></span>  
  
-   <span data-ttu-id="8426f-3035">Menüs ( <xref:System.Windows.Forms.MainMenu> , <xref:System.Windows.Forms.MenuItem> und <xref:System.Windows.Forms.ContextMenu> ) werden rechtsbündig angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3035">Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, and <xref:System.Windows.Forms.ContextMenu>) are displayed right-aligned.</span></span>  
  
-   <span data-ttu-id="8426f-3036">Die Ausrichtung von Symbolleisten Schaltflächen auf einem- <xref:System.Windows.Forms.ToolBar> Steuerelement oder die Ausrichtung von Text auf einem <xref:System.Windows.Forms.ToolBarButton> wird von der-Eigenschaft nicht beeinträchtigt <xref:System.Windows.Forms.Control.RightToLeft%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3036">The alignment of toolbar buttons on a <xref:System.Windows.Forms.ToolBar> control or the alignment of text on a <xref:System.Windows.Forms.ToolBarButton> is not affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property.</span></span>  
  
-   <span data-ttu-id="8426f-3037"><xref:System.Windows.Forms.AxHost>unterstützt die Ausrichtung von rechts nach links. die Auswirkung auf ein ActiveX-Steuerelement hängt jedoch davon ab, in welchem Umfang der Autor des Steuer Elements die Unterstützung für die Anzeige von rechts nach links implementiert hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-3037"><xref:System.Windows.Forms.AxHost> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="8426f-3038">Der zugewiesene Wert ist keiner der <see cref="T:System.Windows.Forms.RightToLeft" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3038">The assigned value is not one of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-3039">Wenn Sie die <see cref="P:System.Windows.Forms.Control.RightToLeft" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.RightToLeft" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-3039">When overriding the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-3040">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3040">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-3041">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.RightToLeft" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-3041">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.RightToLeftChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftChanged : EventHandler " Usage="member this.RightToLeftChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3042">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.RightToLeft" />-Eigenschaftswert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3042">Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3043">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3043">This event is raised if the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-3044">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3044">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3045">Das folgende Codebeispiel ist ein Ereignishandler, der ausgeführt wird, wenn sich der- <xref:System.Windows.Forms.Control.Text%2A> Eigenschafts Wert ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3045">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="8426f-3046">Die- <xref:System.Windows.Forms.Control> Klasse verfügt über mehrere Methoden mit dem Namensmuster *propertyName* `Changed` , die ausgelöst werden, wenn der entsprechende *propertyName* -Wert geändert wird (*propertyName* steht für den Namen der entsprechenden Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="8426f-3046">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="8426f-3047">Im folgenden Codebeispiel wird der von einem-Wert geändert, der <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> Währungs Daten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3047">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="8426f-3048">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3048">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-3049">Für dieses Beispiel ist es erforderlich, dass über ein <xref:System.Windows.Forms.Form> verfügt, das eine enthält <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3049">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RtlTranslateAlignment">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-3050">Konvertiert die aktuelle Ausrichtung in die entsprechende Ausrichtung für die Unterstützung der Schriftrichtung von rechts nach links.</span><span class="sxs-lookup"><span data-stu-id="8426f-3050">Converts the current alignment to the appropriate alignment to support right-to-left text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Drawing.ContentAlignment RtlTranslateAlignment (System.Drawing.ContentAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.ContentAlignment RtlTranslateAlignment(valuetype System.Drawing.ContentAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As ContentAlignment) As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::ContentAlignment RtlTranslateAlignment(System::Drawing::ContentAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Drawing.ContentAlignment -&gt; System.Drawing.ContentAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Drawing.ContentAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="8426f-3051">Einer der <see cref="T:System.Drawing.ContentAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3051">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-3052">Konvertiert das angegebene <see cref="T:System.Drawing.ContentAlignment" /> in das entsprechende <see cref="T:System.Drawing.ContentAlignment" /> für die Unterstützung der Schriftrichtung von rechts nach links.</span><span class="sxs-lookup"><span data-stu-id="8426f-3052">Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="8426f-3053">Einer der <see cref="T:System.Drawing.ContentAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3053">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3054">Wenn die- <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft von <xref:System.Windows.Forms.RightToLeft> auf festgelegt ist `No` , ist der Rückgabewert gleich dem `align` übergebenen Parameter.</span><span class="sxs-lookup"><span data-stu-id="8426f-3054">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment (System.Windows.Forms.HorizontalAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment(valuetype System.Windows.Forms.HorizontalAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As HorizontalAlignment) As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::HorizontalAlignment RtlTranslateAlignment(System::Windows::Forms::HorizontalAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.HorizontalAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.HorizontalAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="8426f-3055">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3055">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-3056">Konvertiert das angegebene <see cref="T:System.Windows.Forms.HorizontalAlignment" /> in das entsprechende <see cref="T:System.Windows.Forms.HorizontalAlignment" /> für die Unterstützung der Schriftrichtung von rechts nach links.</span><span class="sxs-lookup"><span data-stu-id="8426f-3056">Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="8426f-3057">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3057">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3058">Wenn die- <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft von <xref:System.Windows.Forms.RightToLeft> auf festgelegt ist `No` , ist der Rückgabewert gleich dem `align` übergebenen Parameter.</span><span class="sxs-lookup"><span data-stu-id="8426f-3058">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment (System.Windows.Forms.LeftRightAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment(valuetype System.Windows.Forms.LeftRightAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As LeftRightAlignment) As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LeftRightAlignment RtlTranslateAlignment(System::Windows::Forms::LeftRightAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Windows.Forms.LeftRightAlignment -&gt; System.Windows.Forms.LeftRightAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="8426f-3059">Einer der <see cref="T:System.Windows.Forms.LeftRightAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3059">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-3060">Konvertiert das angegebene <see cref="T:System.Windows.Forms.LeftRightAlignment" /> in das entsprechende <see cref="T:System.Windows.Forms.LeftRightAlignment" /> für die Unterstützung der Schriftrichtung von rechts nach links.</span><span class="sxs-lookup"><span data-stu-id="8426f-3060">Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="8426f-3061">Einer der <see cref="T:System.Windows.Forms.LeftRightAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3061">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3062">Wenn die- <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft von <xref:System.Windows.Forms.RightToLeft> auf festgelegt ist `No` , ist der Rückgabewert gleich dem `align` übergebenen Parameter.</span><span class="sxs-lookup"><span data-stu-id="8426f-3062">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateContent">
      <MemberSignature Language="C#" Value="protected internal System.Drawing.ContentAlignment RtlTranslateContent (System.Drawing.ContentAlignment align);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Drawing.ContentAlignment RtlTranslateContent(valuetype System.Drawing.ContentAlignment align) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function RtlTranslateContent (align As ContentAlignment) As ContentAlignment" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Drawing::ContentAlignment RtlTranslateContent(System::Drawing::ContentAlignment align);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateContent : System.Drawing.ContentAlignment -&gt; System.Drawing.ContentAlignment" Usage="control.RtlTranslateContent align" />
      <MemberSignature Language="C#" Value="protected System.Drawing.ContentAlignment RtlTranslateContent (System.Drawing.ContentAlignment align);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.ContentAlignment RtlTranslateContent(valuetype System.Drawing.ContentAlignment align) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateContent (align As ContentAlignment) As ContentAlignment" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::ContentAlignment RtlTranslateContent(System::Drawing::ContentAlignment align);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Drawing.ContentAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="8426f-3063">Einer der <see cref="T:System.Drawing.ContentAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3063">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-3064">Konvertiert das angegebene <see cref="T:System.Drawing.ContentAlignment" /> in das entsprechende <see cref="T:System.Drawing.ContentAlignment" /> für die Unterstützung der Schriftrichtung von rechts nach links.</span><span class="sxs-lookup"><span data-stu-id="8426f-3064">Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="8426f-3065">Einer der <see cref="T:System.Drawing.ContentAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3065">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3066">Wenn die- <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft von <xref:System.Windows.Forms.RightToLeft> auf festgelegt ist `No` , ist der Rückgabewert gleich dem `align` übergebenen Parameter.</span><span class="sxs-lookup"><span data-stu-id="8426f-3066">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateHorizontal">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal (System.Windows.Forms.HorizontalAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal(valuetype System.Windows.Forms.HorizontalAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateHorizontal (align As HorizontalAlignment) As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::HorizontalAlignment RtlTranslateHorizontal(System::Windows::Forms::HorizontalAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateHorizontal : System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.HorizontalAlignment" Usage="control.RtlTranslateHorizontal align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.HorizontalAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="8426f-3067">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3067">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-3068">Konvertiert das angegebene <see cref="T:System.Windows.Forms.HorizontalAlignment" /> in das entsprechende <see cref="T:System.Windows.Forms.HorizontalAlignment" /> für die Unterstützung der Schriftrichtung von rechts nach links.</span><span class="sxs-lookup"><span data-stu-id="8426f-3068">Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="8426f-3069">Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3069">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3070">Wenn die- <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft von <xref:System.Windows.Forms.RightToLeft> auf festgelegt ist `No` , ist der Rückgabewert gleich dem `align` übergebenen Parameter.</span><span class="sxs-lookup"><span data-stu-id="8426f-3070">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateLeftRight">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight (System.Windows.Forms.LeftRightAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight(valuetype System.Windows.Forms.LeftRightAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateLeftRight (align As LeftRightAlignment) As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LeftRightAlignment RtlTranslateLeftRight(System::Windows::Forms::LeftRightAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateLeftRight : System.Windows.Forms.LeftRightAlignment -&gt; System.Windows.Forms.LeftRightAlignment" Usage="control.RtlTranslateLeftRight align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="8426f-3071">Einer der <see cref="T:System.Windows.Forms.LeftRightAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3071">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-3072">Konvertiert das angegebene <see cref="T:System.Windows.Forms.LeftRightAlignment" /> in das entsprechende <see cref="T:System.Windows.Forms.LeftRightAlignment" /> für die Unterstützung der Schriftrichtung von rechts nach links.</span><span class="sxs-lookup"><span data-stu-id="8426f-3072">Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="8426f-3073">Einer der <see cref="T:System.Windows.Forms.LeftRightAlignment" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3073">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3074">Wenn die- <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaft von <xref:System.Windows.Forms.RightToLeft> auf festgelegt ist `No` , ist der Rückgabewert gleich dem `align` übergebenen Parameter.</span><span class="sxs-lookup"><span data-stu-id="8426f-3074">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-3075">Skaliert das Steuerelement und alle untergeordneten Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="8426f-3075">Scales the control and any child controls.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (System.Drawing.SizeF factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(valuetype System.Drawing.SizeF factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (factor As SizeF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(System::Drawing::SizeF factor);" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Drawing.SizeF -&gt; unit" Usage="control.Scale factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="8426f-3076">Ein <see cref="T:System.Drawing.SizeF" />, das die horizontalen und vertikalen Skalierungsfaktoren enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-3076">A <see cref="T:System.Drawing.SizeF" /> containing the horizontal and vertical scaling factors.</span></span></param>
        <summary><span data-ttu-id="8426f-3077">Skaliert das Steuerelement und alle untergeordneten Steuerelemente entsprechend dem angegebenen Skalierungsfaktor.</span><span class="sxs-lookup"><span data-stu-id="8426f-3077">Scales the control and all child controls by the specified scaling factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3078">Die- <xref:System.Windows.Forms.Control.Scale%2A> Methode skaliert das Steuerelement mit der angegebenen Skalierung `factor` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3078">The <xref:System.Windows.Forms.Control.Scale%2A> method scales the control by the specified scaling `factor`.</span></span> <span data-ttu-id="8426f-3079">Außerdem werden alle untergeordneten Steuerelemente rekursiv skaliert, wenn die- <xref:System.Windows.Forms.Control.ScaleChildren%2A> Eigenschaft ist `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3079">It also recursively scales all child controls if the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`.</span></span> <span data-ttu-id="8426f-3080">Intern ruft diese Methode <xref:System.Windows.Forms.Control.ScaleControl%2A> auf, um die einzelnen Steuerelemente zu skalieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-3080">Internally, this method calls <xref:System.Windows.Forms.Control.ScaleControl%2A> to scale each control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ScaleChildren" />
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float ratio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 ratio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (ratio As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float ratio);" />
      <MemberSignature Language="F#" Value="member this.Scale : single -&gt; unit" Usage="control.Scale ratio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ratio" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="ratio"><span data-ttu-id="8426f-3081">Das für die Skalierung zu verwendende Verhältnis.</span><span class="sxs-lookup"><span data-stu-id="8426f-3081">The ratio to use for scaling.</span></span></param>
        <summary><span data-ttu-id="8426f-3082">Skaliert das Steuerelement und alle untergeordneten Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="8426f-3082">Scales the control and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="control.Scale (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="8426f-3083">Der Faktor für die horizontale Skalierung.</span><span class="sxs-lookup"><span data-stu-id="8426f-3083">The horizontal scaling factor.</span></span></param>
        <param name="dy"><span data-ttu-id="8426f-3084">Der Faktor für die vertikale Skalierung.</span><span class="sxs-lookup"><span data-stu-id="8426f-3084">The vertical scaling factor.</span></span></param>
        <summary><span data-ttu-id="8426f-3085">Skaliert das gesamte Steuerelement und alle untergeordneten Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="8426f-3085">Scales the entire control and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleBitmapLogicalToDevice">
      <MemberSignature Language="C#" Value="public void ScaleBitmapLogicalToDevice (ref System.Drawing.Bitmap logicalBitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleBitmapLogicalToDevice(class System.Drawing.Bitmap&amp; logicalBitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleBitmapLogicalToDevice (ByRef logicalBitmap As Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleBitmapLogicalToDevice(System::Drawing::Bitmap ^ % logicalBitmap);" />
      <MemberSignature Language="F#" Value="member this.ScaleBitmapLogicalToDevice : Bitmap -&gt; unit" Usage="control.ScaleBitmapLogicalToDevice logicalBitmap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalBitmap" Type="System.Drawing.Bitmap" RefType="ref" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="logicalBitmap"><span data-ttu-id="8426f-3086">Die zu skalierende Bitmap.</span><span class="sxs-lookup"><span data-stu-id="8426f-3086">The bitmap to scale.</span></span></param>
        <summary><span data-ttu-id="8426f-3087">Skaliert, wenn DPI-Wert geändert wird, einen logischen Bitmapwert in den entsprechenden Wert in der Geräteeinheit.</span><span class="sxs-lookup"><span data-stu-id="8426f-3087">Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleChildren">
      <MemberSignature Language="C#" Value="protected virtual bool ScaleChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScaleChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ScaleChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ScaleChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ScaleChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScaleChildren : bool" Usage="System.Windows.Forms.Control.ScaleChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3088">Ruft einen Wert ab, der die Skalierung der untergeordneten Steuerelemente bestimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3088">Gets a value that determines the scaling of child controls.</span></span></summary>
        <value><span data-ttu-id="8426f-3089"><see langword="true" />, wenn untergeordnete Steuerelemente beim Aufrufen dieser <see cref="M:System.Windows.Forms.Control.Scale(System.Single)" />-Methode für dieses Steuerelement skaliert werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3089"><see langword="true" /> if child controls will be scaled when the <see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /> method on this control is called; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8426f-3090">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3090">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3091">Wenn die- <xref:System.Windows.Forms.Control.ScaleChildren%2A> Eigenschaft ist `true` , ruft die- <xref:System.Windows.Forms.Control.Scale%2A> Methode rekursiv die- <xref:System.Windows.Forms.Control.ScaleControl%2A> Methode der einzelnen untergeordneten Steuerelemente auf.</span><span class="sxs-lookup"><span data-stu-id="8426f-3091">If the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`, then the <xref:System.Windows.Forms.Control.Scale%2A> method will recursively call the <xref:System.Windows.Forms.Control.ScaleControl%2A> method of each of its child controls.</span></span>  
  
 <span data-ttu-id="8426f-3092">Die Standard Implementierung von <xref:System.Windows.Forms.Control.ScaleChildren%2A> gibt immer zurück `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3092">The default implementation of <xref:System.Windows.Forms.Control.ScaleChildren%2A> always returns `true`.</span></span> <span data-ttu-id="8426f-3093">Abgeleitete Klassen können überschreiben <xref:System.Windows.Forms.Control.ScaleChildren%2A> , um `false` anzugeben, dass die Skalierung für ihre untergeordneten Elemente nicht ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-3093">Derived classes can override <xref:System.Windows.Forms.Control.ScaleChildren%2A> to return `false` to indicate that scaling should not be performed on their children.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected virtual void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="8426f-3094">Der Faktor, um den die Höhe und die Breite des Steuerelements skaliert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3094">The factor by which the height and width of the control will be scaled.</span></span></param>
        <param name="specified"><span data-ttu-id="8426f-3095">Ein <see cref="T:System.Windows.Forms.BoundsSpecified" />-Wert, der die Begrenzungen des Steuerelements angibt und bei der Definition von Größe und Position verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3095">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="8426f-3096">Skaliert Speicherort, Größe, Textabstand und Rand eines Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3096">Scales a control's location, size, padding and margin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3097">Wenn das Steuerelement die oberste Ebene ist, wird die Position des Steuer Elements nicht skaliert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3097">If the control is top level, this will not scale the control's location.</span></span> <span data-ttu-id="8426f-3098">Dabei werden weder untergeordnete Elemente noch die Größe der Steuerelemente mit automatischer Größe skaliert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3098">This does not scale children or the size of automatically sized controls.</span></span> <span data-ttu-id="8426f-3099">Sie können die Skalierung in beliebiger Richtung weglassen, indem Sie den Wert des `specified` Parameters ändern.</span><span class="sxs-lookup"><span data-stu-id="8426f-3099">You can omit scaling in any direction by changing the value of the `specified` parameter.</span></span>  
  
   
  
## Examples  
 <xref:System.Windows.Forms.BoundsSpecified>  
  
 <xref:System.Windows.Forms.Control.Scale%2A>  
  
 <xref:System.Windows.Forms.Control.GetScaledBounds%2A>  
  
 <xref:System.Windows.Forms.Control.SetBoundsCore%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected virtual void ScaleCore (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScaleCore(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ScaleCore (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ScaleCore(float dx, float dy);" />
      <MemberSignature Language="F#" Value="abstract member ScaleCore : single * single -&gt; unit&#xA;override this.ScaleCore : single * single -&gt; unit" Usage="control.ScaleCore (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="8426f-3100">Der Faktor für die horizontale Skalierung.</span><span class="sxs-lookup"><span data-stu-id="8426f-3100">The horizontal scaling factor.</span></span></param>
        <param name="dy"><span data-ttu-id="8426f-3101">Der Faktor für die vertikale Skalierung.</span><span class="sxs-lookup"><span data-stu-id="8426f-3101">The vertical scaling factor.</span></span></param>
        <summary><span data-ttu-id="8426f-3102">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-3102">This method is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3103">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-3103">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-3104">Aktiviert ein Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-3104">Activates a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="8426f-3105">Die <xref:System.Windows.Forms.Control.Select%2A> -Methode aktiviert das-Steuerelement, wenn das Style-Bit des-Steuer Elements <xref:System.Windows.Forms.ControlStyles.Selectable?displayProperty=nameWithType> auf festgelegt ist `true` , es in einem anderen-Steuerelement enthalten ist und alle übergeordneten Steuerelemente sichtbar und aktiviert sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-3105">The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's <xref:System.Windows.Forms.ControlStyles.Selectable?displayProperty=nameWithType> style bit is set to `true`, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>

<span data-ttu-id="8426f-3106">Die Windows Forms-Steuerelemente in der folgenden Liste können nicht ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3106">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="8426f-3107">Steuerelemente, die von Steuerelementen in der Liste abgeleitet sind, können ebenfalls nicht ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3107">Controls derived from controls in the list will also not be selectable.</span></span>
  
- <xref:System.Windows.Forms.Label>  
- <xref:System.Windows.Forms.Panel>  
- <xref:System.Windows.Forms.GroupBox>
- <xref:System.Windows.Forms.PictureBox>  
- <xref:System.Windows.Forms.ProgressBar>
- <xref:System.Windows.Forms.Splitter>
- <span data-ttu-id="8426f-3108"><xref:System.Windows.Forms.LinkLabel>(wenn im-Steuerelement kein Link vorhanden ist)</span><span class="sxs-lookup"><span data-stu-id="8426f-3108"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="control.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-3109">Aktiviert das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-3109">Activates the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Examples  

<span data-ttu-id="8426f-3110">Im folgenden Codebeispiel wird der angegebene ausgewählt <xref:System.Windows.Forms.Control> , wenn er auswählbar ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3110">The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.</span></span>
  
[!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]
[!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]
[!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected virtual void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="abstract member Select : bool * bool -&gt; unit&#xA;override this.Select : bool * bool -&gt; unit" Usage="control.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed"><span data-ttu-id="8426f-3111"><see langword="true" />, um die Richtung für die Auswahl des Steuerelements anzugeben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3111"><see langword="true" /> to specify the direction of the control to select; otherwise, <see langword="false" />.</span></span></param>
        <param name="forward"><span data-ttu-id="8426f-3112"><see langword="true" />, um sich in der Aktivierreihenfolge vorwärts zu bewegen, <see langword="false" />, um sich rückwärts zu bewegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3112"><see langword="true" /> to move forward in the tab order; <see langword="false" /> to move backward in the tab order.</span></span></param>
        <summary><span data-ttu-id="8426f-3113">Aktiviert ein untergeordnetes Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-3113">Activates a child control.</span></span> <span data-ttu-id="8426f-3114">Gibt optional die Richtung in der Aktivierreihenfolge für die Auswahl des Steuerelements an.</span><span class="sxs-lookup"><span data-stu-id="8426f-3114">Optionally specifies the direction in the tab order to select the control from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3115">Der `directed` `forward` -Parameter und der-Parameter werden von Steuerelementen im Containerformat verwendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-3115">The `directed` and `forward` parameters are used by container-style controls.</span></span> <span data-ttu-id="8426f-3116">Wenn der- `directed` Parameter auf festgelegt ist `true` , `forward` wird der Parameter ausgewertet, um zu bestimmen, welches Steuerelement ausgewählt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-3116">When the `directed` parameter is set to `true`, the `forward` parameter is evaluated to determine which control to select.</span></span> <span data-ttu-id="8426f-3117">Wenn `forward` auf festgelegt ist `true` , wird das nächste Steuerelement in der Aktivier Reihenfolge ausgewählt `false` . wenn, wird das vorherige Steuerelement in der Aktivier Reihenfolge ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3117">When `forward` is set to `true`, the next control in the tab order is selected; when `false`, the previous control in the tab order is selected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="M:System.Windows.Forms.Control.Select" />
      </Docs>
    </Member>
    <Member MemberName="SelectNextControl">
      <MemberSignature Language="C#" Value="public bool SelectNextControl (System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SelectNextControl(class System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNextControl (ctl As Control, forward As Boolean, tabStopOnly As Boolean, nested As Boolean, wrap As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SelectNextControl(System::Windows::Forms::Control ^ ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);" />
      <MemberSignature Language="F#" Value="member this.SelectNextControl : System.Windows.Forms.Control * bool * bool * bool * bool -&gt; bool" Usage="control.SelectNextControl (ctl, forward, tabStopOnly, nested, wrap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
        <Parameter Name="forward" Type="System.Boolean" />
        <Parameter Name="tabStopOnly" Type="System.Boolean" />
        <Parameter Name="nested" Type="System.Boolean" />
        <Parameter Name="wrap" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="8426f-3118">Das <see cref="T:System.Windows.Forms.Control" />, bei dem mit der Suche begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-3118">The <see cref="T:System.Windows.Forms.Control" /> at which to start the search.</span></span></param>
        <param name="forward"><span data-ttu-id="8426f-3119"><see langword="true" />, um sich in der Aktivierreihenfolge vorwärts zu bewegen, <see langword="false" />, um sich rückwärts zu bewegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3119"><see langword="true" /> to move forward in the tab order; <see langword="false" /> to move backward in the tab order.</span></span></param>
        <param name="tabStopOnly"><span data-ttu-id="8426f-3120"><see langword="true" />, um Steuerelemente zu ignorieren, deren <see cref="P:System.Windows.Forms.Control.TabStop" />-Eigenschaft auf <see langword="false" /> festgelegt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3120"><see langword="true" /> to ignore the controls with the <see cref="P:System.Windows.Forms.Control.TabStop" /> property set to <see langword="false" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="nested"><span data-ttu-id="8426f-3121"><see langword="true" />, um geschachtelte untergeordnete (d. h. untergeordneten Steuerelementen untergeordnete) Steuerelemente einzuschließen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3121"><see langword="true" /> to include nested (children of child controls) child controls; otherwise, <see langword="false" />.</span></span></param>
        <param name="wrap"><span data-ttu-id="8426f-3122"><see langword="true" />, um die Suche beim ersten Steuerelement der Aktivierreihenfolge fortzusetzen, nachdem das letzte Steuerelement erreicht wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3122"><see langword="true" /> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8426f-3123">Aktiviert das nächste Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-3123">Activates the next control.</span></span></summary>
        <returns><span data-ttu-id="8426f-3124"><see langword="true" />, wenn ein Steuerelement aktiviert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3124"><see langword="true" /> if a control was activated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3125">Die <xref:System.Windows.Forms.Control.SelectNextControl%2A> -Methode aktiviert das nächste Steuerelement in der Aktivier Reihenfolge, wenn das Stilbit des Steuer Elements `Selectable` in auf festgelegt ist `true` <xref:System.Windows.Forms.ControlStyles> , es in einem anderen Steuerelement enthalten ist und alle übergeordneten Steuerelemente sichtbar und aktiviert sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-3125">The <xref:System.Windows.Forms.Control.SelectNextControl%2A> method activates the next control in the tab order if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="8426f-3126">Die Windows Forms-Steuerelemente in der folgenden Liste können nicht ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3126">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="8426f-3127">Steuerelemente, die von Steuerelementen in der Liste abgeleitet sind, können ebenfalls nicht ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3127">Controls derived from controls in the list will also not be selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <span data-ttu-id="8426f-3128"><xref:System.Windows.Forms.LinkLabel>(wenn im-Steuerelement kein Link vorhanden ist)</span><span class="sxs-lookup"><span data-stu-id="8426f-3128"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
 <span data-ttu-id="8426f-3129">Wenn Sie den Fokus mithilfe der Tastatur (Tab, UMSCHALT + TAB usw.) ändern, indem Sie die- <xref:System.Windows.Forms.Control.Select%2A> Methode oder die- <xref:System.Windows.Forms.Control.SelectNextControl%2A> Methode aufrufen, oder indem Sie die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> Eigenschaft auf das aktuelle Formular festlegen, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-3129">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="8426f-3130">Wenn die <xref:System.Windows.Forms.Control.CausesValidation%2A> -Eigenschaft auf festgelegt ist `false` , <xref:System.Windows.Forms.Control.Validating> werden die Ereignisse und unter <xref:System.Windows.Forms.Control.Validated> drückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3130">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3131">Der folgende Code zeigt die <xref:System.Windows.Forms.Control.SelectNextControl%2A> Methode, die in einem Formular verwendet wird, das über einige Steuerelemente verfügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3131">The following code exampleshows the <xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has some controls.</span></span> <span data-ttu-id="8426f-3132">Jedes Mal, wenn Sie auf das Formular klicken, wird das nächste Steuerelement aktiviert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3132">Each time that you click the form, the next control is activated.</span></span> <span data-ttu-id="8426f-3133">Die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> Eigenschaft ruft das derzeit aktive-Steuerelement im Container Steuerelement ab.</span><span class="sxs-lookup"><span data-stu-id="8426f-3133">The <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property gets the currently active control in the container control.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#1)]  
  
 <span data-ttu-id="8426f-3134">Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.Control.SelectNextControl%2A> -Methode veranschaulicht, die in einem Formular verwendet wird, das ein-Steuerelement <xref:System.Windows.Forms.Button> und ein anderes-Steuerelement</span><span class="sxs-lookup"><span data-stu-id="8426f-3134">The following code example shows the <xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has a <xref:System.Windows.Forms.Button> and some other controls.</span></span> <span data-ttu-id="8426f-3135">Wenn Sie auf das Klicken <xref:System.Windows.Forms.Button> , wird das nächste Steuerelement nach dem <xref:System.Windows.Forms.Button> Aktivieren von aktiviert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3135">When you click the <xref:System.Windows.Forms.Button>, the next control after the <xref:System.Windows.Forms.Button> is activated.</span></span> <span data-ttu-id="8426f-3136">Beachten Sie, dass Sie das übergeordnete Element des Steuer Elements erhalten müssen <xref:System.Windows.Forms.Button> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3136">Notice that you have to get the parent of the <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="8426f-3137">Da <xref:System.Windows.Forms.Button> kein Container ist, <xref:System.Windows.Forms.Control.SelectNextControl%2A> würde die Aktivierung durch direktes Aufrufen von <xref:System.Windows.Forms.Button> nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3137">Since <xref:System.Windows.Forms.Button> is not a container, calling <xref:System.Windows.Forms.Control.SelectNextControl%2A> directly on the <xref:System.Windows.Forms.Button> would not change the activation.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#2)]
 [!code-vb[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="SendToBack">
      <MemberSignature Language="C#" Value="public void SendToBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendToBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SendToBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendToBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendToBack();" />
      <MemberSignature Language="F#" Value="member this.SendToBack : unit -&gt; unit" Usage="control.SendToBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-3138">Sendet das Steuerelement ans Ende der z-Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="8426f-3138">Sends the control to the back of the z-order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3139">Das Steuerelement wird an den Hintergrund der z-Reihenfolge verschoben.</span><span class="sxs-lookup"><span data-stu-id="8426f-3139">The control is moved to the back of the z-order.</span></span> <span data-ttu-id="8426f-3140">Wenn das Steuerelement ein untergeordnetes Element eines anderen Steuer Elements ist, wird das untergeordnete Steuerelement an den Hintergrund der z-Reihenfolge verschoben.</span><span class="sxs-lookup"><span data-stu-id="8426f-3140">If the control is a child of another control, the child control is moved to the back of the z-order.</span></span> <span data-ttu-id="8426f-3141">Wenn das Steuerelement ein Steuerelement der obersten Ebene ist, funktioniert diese Methode nur dann ordnungsgemäß, wenn das Steuerelement aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3141">If the control is a top-level control, this method will not work correctly unless the control is active.</span></span> <span data-ttu-id="8426f-3142">Ein Steuerelement der obersten Ebene ist ein Steuerelement, z. b. ein <xref:System.Windows.Forms.Form> , das kein untergeordnetes Element eines anderen Steuer Elements ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3142">A top-level control is a control, such as a <xref:System.Windows.Forms.Form>, that is not a child of another control.</span></span> <span data-ttu-id="8426f-3143">Ein aktives Steuerelement ist ein sichtbares Steuerelement, das den Eingabefokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3143">An active control is a visible control that has input focus.</span></span> <span data-ttu-id="8426f-3144">Um die- <xref:System.Windows.Forms.Control.SendToBack%2A> Methode mit einem inaktiven Steuerelement der obersten Ebene zu verwenden, wird zuerst die- <xref:System.Windows.Forms.Control.BringToFront%2A> Methode für das-Steuerelement aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3144">To use the <xref:System.Windows.Forms.Control.SendToBack%2A> method with an inactive, top-level control, first call the <xref:System.Windows.Forms.Control.BringToFront%2A> method on the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
      </Docs>
    </Member>
    <Member MemberName="SetAutoSizeMode">
      <MemberSignature Language="C#" Value="protected void SetAutoSizeMode (System.Windows.Forms.AutoSizeMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAutoSizeMode(valuetype System.Windows.Forms.AutoSizeMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAutoSizeMode (mode As AutoSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAutoSizeMode(System::Windows::Forms::AutoSizeMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetAutoSizeMode : System.Windows.Forms.AutoSizeMode -&gt; unit" Usage="control.SetAutoSizeMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Forms.AutoSizeMode" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="8426f-3145">Einer der <see cref="T:System.Windows.Forms.AutoSizeMode" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3145">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-3146">Legt einen Wert fest, der angibt, wie sich ein Steuerelement verhält, wenn seine <see cref="P:System.Windows.Forms.Control.AutoSize" />-Eigenschaft aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3146">Sets a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-3147">Legt die Begrenzungen des Steuerelements fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3147">Sets the bounds of the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public void SetBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetBounds : int * int * int * int -&gt; unit" Usage="control.SetBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8426f-3148">Der neue <see cref="P:System.Windows.Forms.Control.Left" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3148">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="8426f-3149">Der neue <see cref="P:System.Windows.Forms.Control.Top" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3149">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="8426f-3150">Der neue <see cref="P:System.Windows.Forms.Control.Width" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3150">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="8426f-3151">Der neue <see cref="P:System.Windows.Forms.Control.Height" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3151">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <summary><span data-ttu-id="8426f-3152">Legt die Begrenzungen des Steuerelements auf die angegebene Position und Größe fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3152">Sets the bounds of the control to the specified location and size.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public void SetBounds (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBounds(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBounds (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBounds(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="member this.SetBounds : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.SetBounds (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8426f-3153">Der neue <see cref="P:System.Windows.Forms.Control.Left" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3153">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="8426f-3154">Der neue <see cref="P:System.Windows.Forms.Control.Top" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3154">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="8426f-3155">Der neue <see cref="P:System.Windows.Forms.Control.Width" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3155">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="8426f-3156">Der neue <see cref="P:System.Windows.Forms.Control.Height" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3156">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="8426f-3157">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.BoundsSpecified" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3157">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span> <span data-ttu-id="8426f-3158">Für jeden nicht angegebenen Parameter wird der aktuelle Wert verwendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-3158">For any parameter not specified, the current value will be used.</span></span></param>
        <summary><span data-ttu-id="8426f-3159">Legt die angegebenen Begrenzungen des Steuerelements auf die angegebene Position und Größe fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3159">Sets the specified bounds of the control to the specified location and size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8426f-3160">Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.Form> auf dem Bildschirm im- <xref:System.Windows.Forms.Control.Layout> Ereignis zentriert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3160">The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event.</span></span> <span data-ttu-id="8426f-3161">Dadurch bleibt das Formular zentriert, wenn der Benutzer die Größe ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3161">This will keep the form centered as the user resizes it.</span></span> <span data-ttu-id="8426f-3162">Dieses Beispiel erfordert, dass Sie ein-Steuerelement erstellt haben <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3162">This example requires that you have created a <xref:System.Windows.Forms.Form> control.</span></span>  
  
 [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]
 [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]
 [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected virtual void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8426f-3163">Der neue <see cref="P:System.Windows.Forms.Control.Left" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3163">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="8426f-3164">Der neue <see cref="P:System.Windows.Forms.Control.Top" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3164">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="8426f-3165">Der neue <see cref="P:System.Windows.Forms.Control.Width" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3165">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="8426f-3166">Der neue <see cref="P:System.Windows.Forms.Control.Height" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3166">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="8426f-3167">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.BoundsSpecified" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="8426f-3167">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="8426f-3168">Legt die angegebenen Begrenzungen dieses Steuerelements fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3168">Performs the work of setting the specified bounds of this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3169">In der Regel werden die Parameter, die den Begrenzungen entsprechen, die nicht im- `specified` Parameter enthalten sind, mit ihren aktuellen Werten übergeben.</span><span class="sxs-lookup"><span data-stu-id="8426f-3169">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="8426f-3170">Beispielsweise können die- <xref:System.Windows.Forms.Control.Height%2A> ,- <xref:System.Windows.Forms.Control.Width%2A> oder die- <xref:System.Drawing.Point.X%2A> Eigenschaft oder die- <xref:System.Drawing.Point.Y%2A> Eigenschaft der- <xref:System.Windows.Forms.Control.Location%2A> Eigenschaft mit einem Verweis auf die aktuelle Instanz des-Steuer Elements übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3170">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="8426f-3171">Alle übergebenen Werte werden jedoch berücksichtigt und auf das Steuerelement angewendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-3171">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="8426f-3172">Der- `boundsSpecified` Parameter stellt die Elemente der Steuerelemente dar, die <xref:System.Windows.Forms.Control.Bounds%2A> von der Anwendung geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3172">The `boundsSpecified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="8426f-3173">Wenn Sie z. b. den <xref:System.Windows.Forms.Control.Size%2A> des Steuer Elements ändern, `boundsSpecified` ist der Parameterwert der `Size` Wert von <xref:System.Windows.Forms.BoundsSpecified> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3173">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `boundsSpecified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="8426f-3174">Wenn jedoch <xref:System.Windows.Forms.Control.Size%2A> als Reaktion auf die <xref:System.Windows.Forms.Control.Dock%2A> festgelegte Eigenschaft angepasst wird, `boundsSpecified` ist der Parameterwert der `None` Wert von <xref:System.Windows.Forms.BoundsSpecified> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3174">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `boundsSpecified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-3175">Auf Windows Server 2003-Systemen wird die Größe eines <xref:System.Windows.Forms.Form> durch die maximale Pixel Breite und Höhe des Monitors eingeschränkt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3175">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3176">Im folgenden Codebeispiel wird die- <xref:System.Windows.Forms.Control.SetBoundsCore%2A> Methode überschrieben, um sicherzustellen, dass das Steuerelement eine festgelegte Größe hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-3176">The following code example overrides the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that the control remains a fixed size.</span></span> <span data-ttu-id="8426f-3177">Für dieses Beispiel ist es erforderlich, dass Sie über eine-Klasse verfügen, die entweder direkt oder indirekt von der-Klasse abgeleitet ist <xref:System.Windows.Forms.Control> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3177">This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_Methods#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#1)]
 [!code-csharp[Windows.Forms.Control_Methods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#1)]
 [!code-vb[Windows.Forms.Control_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-3178">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in einer abgeleiteten Klasse sicher, dass die-Methode der Basisklasse aufgerufen wird, um zu erzwingen, dass <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> die Begrenzungen des Steuer Elements geändert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3178">When overriding <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span></span> <span data-ttu-id="8426f-3179">Abgeleitete Klassen können der Methode Größenbeschränkungen hinzufügen <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3179">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected virtual void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetClientSizeCore(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member SetClientSizeCore : int * int -&gt; unit&#xA;override this.SetClientSizeCore : int * int -&gt; unit" Usage="control.SetClientSizeCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8426f-3180">Die Breite des Clientbereichs in Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-3180">The client area width, in pixels.</span></span></param>
        <param name="y"><span data-ttu-id="8426f-3181">Die Höhe des Clientbereichs in Pixel.</span><span class="sxs-lookup"><span data-stu-id="8426f-3181">The client area height, in pixels.</span></span></param>
        <summary><span data-ttu-id="8426f-3182">Legt die Größe für den Clientbereich des Steuerelements fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3182">Sets the size of the client area of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3183">Der Client Bereich beginnt am (0,0) Speicherort und erstreckt sich um den `x` `y` Speicherort (,).</span><span class="sxs-lookup"><span data-stu-id="8426f-3183">The client area starts at the (0, 0) location and extends to the (`x`, `y`) location.</span></span>  
  
 <span data-ttu-id="8426f-3184">In der Regel sollten Sie den des Steuer Elements nicht festlegen <xref:System.Windows.Forms.Control.ClientSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3184">Typically, you should not set the <xref:System.Windows.Forms.Control.ClientSize%2A> of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3185">Im folgenden Codebeispiel wird die- <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> Methode überschrieben, um sicherzustellen, dass das Steuerelement quadratisch bleibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3185">The following code example overrides the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that the control remains square.</span></span> <span data-ttu-id="8426f-3186">Für dieses Beispiel ist es erforderlich, dass Sie über eine-Klasse verfügen, die entweder direkt oder indirekt von der-Klasse abgeleitet ist <xref:System.Windows.Forms.Control> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3186">This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_Methods#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#2)]
 [!code-csharp[Windows.Forms.Control_Methods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#2)]
 [!code-vb[Windows.Forms.Control_Methods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-3187">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> in einer abgeleiteten Klasse sicher, dass die-Methode der Basisklasse aufgerufen wird, <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> damit die- <see cref="P:System.Windows.Forms.Control.ClientSize" /> Eigenschaft angepasst wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3187">When overriding <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> method so that the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property is adjusted.</span></span>  
  
<span data-ttu-id="8426f-3188">Weitere Informationen zum Zeichnen von Steuerelementen finden Sie unter [Rendering eines Windows Forms-Steuer](/dotnet/framework/winforms/controls/rendering-a-windows-forms-control)Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3188">For more information about drawing on controls, see [Rendering a Windows Forms Control](/dotnet/framework/winforms/controls/rendering-a-windows-forms-control).</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetStyle">
      <MemberSignature Language="C#" Value="protected void SetStyle (System.Windows.Forms.ControlStyles flag, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetStyle(valuetype System.Windows.Forms.ControlStyles flag, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetStyle (flag As ControlStyles, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetStyle(System::Windows::Forms::ControlStyles flag, bool value);" />
      <MemberSignature Language="F#" Value="member this.SetStyle : System.Windows.Forms.ControlStyles * bool -&gt; unit" Usage="control.SetStyle (flag, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Windows.Forms.ControlStyles" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="8426f-3189">Das <see cref="T:System.Windows.Forms.ControlStyles" />-Bit, das festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-3189">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to set.</span></span></param>
        <param name="value"><span data-ttu-id="8426f-3190"><see langword="true" />, um das angegebene Format auf das Steuerelement anzuwenden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3190"><see langword="true" /> to apply the specified style to the control; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8426f-3191">Legt ein angegebenes <see cref="T:System.Windows.Forms.ControlStyles" />-Flag auf <see langword="true" /> oder <see langword="false" /> fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3191">Sets a specified <see cref="T:System.Windows.Forms.ControlStyles" /> flag to either <see langword="true" /> or <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3192">Steuerelement-Bitflags werden verwendet, um unterstütztes Verhalten zu kategorisieren.</span><span class="sxs-lookup"><span data-stu-id="8426f-3192">Control style bit flags are used to categorize supported behavior.</span></span> <span data-ttu-id="8426f-3193">Ein Steuerelement kann einen Stil aktivieren, indem er die <xref:System.Windows.Forms.Control.SetStyle%2A> -Methode aufrufen und das entsprechende <xref:System.Windows.Forms.ControlStyles> Bit (oder Bits) und den booleschen Wert übergibt, um die Bits (n) auf festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3193">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="8426f-3194">Um den Wert zu bestimmen, der einem angegebenen <xref:System.Windows.Forms.ControlStyles> Bit zugewiesen ist, verwenden Sie die <xref:System.Windows.Forms.Control.GetStyle%2A> -Methode, und übergeben Sie den- <xref:System.Windows.Forms.ControlStyles> Member zum Auswerten von.</span><span class="sxs-lookup"><span data-stu-id="8426f-3194">To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8426f-3195">Das Festlegen der Steuerelemente des Steuer Elements kann das Verhalten des Steuer Elements erheblich verändern.</span><span class="sxs-lookup"><span data-stu-id="8426f-3195">Setting the control style bits can substantially change the behavior of the control.</span></span> <span data-ttu-id="8426f-3196">Überprüfen <xref:System.Windows.Forms.ControlStyles> Sie die enumerationsdokumentation, um zu verstehen, wie sich die Änderung der Steuerelement Bits vor dem Aufrufen der- <xref:System.Windows.Forms.Control.SetStyle%2A> Methode auswirkt</span><span class="sxs-lookup"><span data-stu-id="8426f-3196">Review the <xref:System.Windows.Forms.ControlStyles> enumeration documentation to understand the effects of changing the control style bits before calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3197">Im folgenden Codebeispiel wird die doppelte Pufferung für einen aktiviert <xref:System.Windows.Forms.Form> und die Stile aktualisiert, um die Änderungen widerzuspiegeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-3197">The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]
 [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]
 [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="SetTopLevel">
      <MemberSignature Language="C#" Value="protected void SetTopLevel (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTopLevel(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTopLevel (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTopLevel(bool value);" />
      <MemberSignature Language="F#" Value="member this.SetTopLevel : bool -&gt; unit" Usage="control.SetTopLevel value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8426f-3198"><see langword="true" />, um das Steuerelement als Steuerelement der obersten Ebene festzulegen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3198"><see langword="true" /> to set the control as the top-level control; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8426f-3199">Legt das Steuerelement als Steuerelement der obersten Ebene fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3199">Sets the control as the top-level control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3200">Wenn Sie die <xref:System.Windows.Forms.Control.SetTopLevel%2A> -Methode einer <xref:System.Windows.Forms.Form> -Methode und den-Wert übergeben `false` , ist das Formular erst sichtbar, wenn Sie <xref:System.Windows.Forms.Control.SetTopLevel%2A> erneut aufgerufen haben und dabei den Wert übergeben `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3200">If you call the <xref:System.Windows.Forms.Control.SetTopLevel%2A> method of a <xref:System.Windows.Forms.Form> and pass in a value of `false`, the form will not be visible until you call <xref:System.Windows.Forms.Control.SetTopLevel%2A> again, passing in a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8426f-3201">Der <paramref name="value" />-Parameter ist auf <see langword="true" /> festgelegt, und das Steuerelement ist ein ActiveX-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-3201">The <paramref name="value" /> parameter is set to <see langword="true" /> and the control is an ActiveX control.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="8426f-3202">Der <see cref="M:System.Windows.Forms.Control.GetTopLevel" />-Rückgabewert ist ungleich dem <paramref name="value" />-Parameter, und die <see cref="P:System.Windows.Forms.Control.Parent" />-Eigenschaft ist nicht <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3202">The <see cref="M:System.Windows.Forms.Control.GetTopLevel" /> return value is not equal to the <paramref name="value" /> parameter and the <see cref="P:System.Windows.Forms.Control.Parent" /> property is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.GetTopLevel" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected virtual void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetVisibleCore(bool value);" />
      <MemberSignature Language="F#" Value="abstract member SetVisibleCore : bool -&gt; unit&#xA;override this.SetVisibleCore : bool -&gt; unit" Usage="control.SetVisibleCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8426f-3203"><see langword="true" />, um das Steuerelement sichtbar zu machen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3203"><see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8426f-3204">Legt das Steuerelement auf den angegebenen sichtbaren Zustand fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3204">Sets the control to the specified visible state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3205">Normalerweise überschreiben Sie diese Methode, um das Sichtbarkeits Verhalten des Steuer Elements zu ändern.</span><span class="sxs-lookup"><span data-stu-id="8426f-3205">You would typically override this method to change the visibility behavior of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-3206">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> in einer abgeleiteten Klasse sicher, dass die-Methode der Basisklasse aufgerufen wird, <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> um die Sichtbarkeit des Steuer Elements zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3206">When overriding <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> method to force the visibility of the control to change.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="control.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-3207">Zeigt dem Benutzer das Steuerelement an.</span><span class="sxs-lookup"><span data-stu-id="8426f-3207">Displays the control to the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3208">Die Darstellung des Steuer Elements entspricht dem Festlegen der- <xref:System.Windows.Forms.Control.Visible%2A> Eigenschaft auf `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3208">Showing the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="8426f-3209">Nachdem die- <xref:System.Windows.Forms.Control.Show%2A> Methode aufgerufen wurde, <xref:System.Windows.Forms.Control.Visible%2A> gibt die-Eigenschaft den Wert zurück, `true` bis die- <xref:System.Windows.Forms.Control.Hide%2A> Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3209">After the <xref:System.Windows.Forms.Control.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3210">Im folgenden Codebeispiel wird ein Info Dialogfeld angezeigt, in dem vorübergehend ein blaues Quadrat auf der-Oberfläche gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3210">The following code example displays an about dialog box and temporarily draws a blue square on its surface.</span></span> <span data-ttu-id="8426f-3211">Dieses Beispiel erfordert, dass Sie eine Klasse definiert haben, die von mit dem Namen abgeleitet ist <xref:System.Windows.Forms.Form> `AboutDialog` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3211">This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `AboutDialog`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#1)]
 [!code-vb[Windows.Forms.Control Members2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
      </Docs>
    </Member>
    <Member MemberName="ShowFocusCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowFocusCues { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFocusCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ShowFocusCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowFocusCues As Boolean" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowFocusCues { bool get(); };" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ShowFocusCues : bool" Usage="System.Windows.Forms.Control.ShowFocusCues" />
      <MemberSignature Language="C#" Value="protected virtual bool ShowFocusCues { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowFocusCues As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowFocusCues { bool get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3212">Ruft einen Wert ab, der angibt, ob das Steuerelement Fokusrechtecke anzeigen soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-3212">Gets a value indicating whether the control should display focus rectangles.</span></span></summary>
        <value><span data-ttu-id="8426f-3213"><see langword="true" />, wenn das Steuerelement Fokusrechtecke anzeigen soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3213"><see langword="true" /> if the control should display focus rectangles; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3214">Weitere Informationen zu dieser Funktion finden Sie in den Themen [WM_CHANGEUISTATE](/windows/win32/menurc/wm-changeuistate), [WM_QUERYUISTATE](/windows/win32/menurc/wm-queryuistate)und [WM_UPDATEUISTATE](/windows/win32/menurc/wm-updateuistate) .</span><span class="sxs-lookup"><span data-stu-id="8426f-3214">For more information about this feature, see the [WM_CHANGEUISTATE](/windows/win32/menurc/wm-changeuistate), [WM_QUERYUISTATE](/windows/win32/menurc/wm-queryuistate), and the [WM_UPDATEUISTATE](/windows/win32/menurc/wm-updateuistate) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-3215">Wenn Sie die <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-3215">When overriding the <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-3216">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3216">Otherwise, you must provide all the implementation.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
        <altmember cref="P:System.Windows.Forms.Control.ShowKeyboardCues" />
      </Docs>
    </Member>
    <Member MemberName="ShowKeyboardCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowKeyboardCues { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowKeyboardCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ShowKeyboardCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowKeyboardCues As Boolean" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowKeyboardCues { bool get(); };" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ShowKeyboardCues : bool" Usage="System.Windows.Forms.Control.ShowKeyboardCues" />
      <MemberSignature Language="C#" Value="protected bool ShowKeyboardCues { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ShowKeyboardCues As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ShowKeyboardCues { bool get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3217">Ruft einen Wert ab, der angibt, ob sich die Benutzeroberfläche in einem entsprechenden Zustand befindet, um Zugriffstasten anzuzeigen bzw. auszublenden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3217">Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.</span></span></summary>
        <value><span data-ttu-id="8426f-3218"><see langword="true" />, wenn die Zugriffstasten sichtbar sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3218"><see langword="true" /> if the keyboard accelerators are visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3219">In Steuerelementen, die im Windows Forms-Designer erstellt wurden, sind die Tastaturbeschleuniger standardmäßig sichtbar.</span><span class="sxs-lookup"><span data-stu-id="8426f-3219">In controls created in the Windows Forms designer, keyboard accelerators are visible by default.</span></span>  
  
 <span data-ttu-id="8426f-3220">Weitere Informationen zu dieser Funktion finden Sie in den Themen [WM_CHANGEUISTATE](/windows/win32/menurc/wm-changeuistate), [WM_QUERYUISTATE](/windows/win32/menurc/wm-queryuistate)und [WM_UPDATEUISTATE](/windows/win32/menurc/wm-updateuistate) .</span><span class="sxs-lookup"><span data-stu-id="8426f-3220">For more information about this feature, see the [WM_CHANGEUISTATE](/windows/win32/menurc/wm-changeuistate), [WM_QUERYUISTATE](/windows/win32/menurc/wm-queryuistate), and the [WM_UPDATEUISTATE](/windows/win32/menurc/wm-updateuistate) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="P:System.Windows.Forms.Control.ShowFocusCues" />
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Windows.Forms.Control.Site" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">P:System.ComponentModel.IComponent.Site</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3221">Ruft die Site des Steuerelements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3221">Gets or sets the site of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-3222">Die <see cref="T:System.ComponentModel.ISite" />, die <see cref="T:System.Windows.Forms.Control" /> zugeordnet ist, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3222">The <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.Windows.Forms.Control" />, if any.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ISite" />
        <altmember cref="P:System.ComponentModel.IComponent.Site" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3223">Ruft die Höhe und Breite des Steuerelements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3223">Gets or sets the height and width of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-3224">Die <see cref="T:System.Drawing.Size" />, die die Höhe und Breite des Steuerelements in Pixel darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3224">The <see cref="T:System.Drawing.Size" /> that represents the height and width of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3225">Da <xref:System.Drawing.Size> es sich bei der Klasse um einen Werttyp handelt ( `Structure` in Visual Basic `struct` in Visual c#), wird Sie als Wert zurückgegeben, was bedeutet, dass der Zugriff auf die Eigenschaft eine Kopie der Größe des Steuer Elements zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3225">Because the <xref:System.Drawing.Size> class is a value type (`Structure` in Visual Basic, `struct` in Visual C#), it is returned by value, meaning accessing the property returns a copy of the size of the control.</span></span> <span data-ttu-id="8426f-3226">Das Anpassen der- <xref:System.Drawing.Size.Width%2A> Eigenschaft oder der- <xref:System.Drawing.Size.Height%2A> Eigenschaft der, die <xref:System.Drawing.Size> von dieser Eigenschaft zurückgegeben wird, wirkt sich nicht <xref:System.Windows.Forms.Control.Width%2A> auf das oder <xref:System.Windows.Forms.Control.Height%2A> des Steuer Elements aus</span><span class="sxs-lookup"><span data-stu-id="8426f-3226">So, adjusting the <xref:System.Drawing.Size.Width%2A> or <xref:System.Drawing.Size.Height%2A> properties of the <xref:System.Drawing.Size> returned from this property will not affect the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control.</span></span> <span data-ttu-id="8426f-3227">Um das <xref:System.Windows.Forms.Control.Width%2A> -Steuerelement oder das <xref:System.Windows.Forms.Control.Height%2A> -Steuerelement anzupassen, müssen Sie die-Eigenschaft oder die-Eigenschaft des-Steuer Elements festlegen <xref:System.Windows.Forms.Control.Width%2A> <xref:System.Windows.Forms.Control.Height%2A> oder die- <xref:System.Windows.Forms.Control.Size%2A> Eigenschaft mit einem neuen festlegen <xref:System.Drawing.Size></span><span class="sxs-lookup"><span data-stu-id="8426f-3227">To adjust the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control, you must set the control's <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> property, or set the <xref:System.Windows.Forms.Control.Size%2A> property with a new <xref:System.Drawing.Size>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-3228">Um eine bessere Leistung zu gewährleisten, legen Sie die <xref:System.Drawing.Size> eines-Steuer Elements im Konstruktor nicht fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3228">To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="8426f-3229">Die bevorzugte Methode besteht darin, die-Eigenschaft zu überschreiben <xref:System.Windows.Forms.Control.DefaultSize%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3229">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-3230">Auf Windows Server 2003-Systemen wird die Größe eines <xref:System.Windows.Forms.Form> durch die maximale Pixel Breite und Höhe des Monitors eingeschränkt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3230">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3231">Im folgenden Codebeispiel wird ein einem Formular hinzugefügt <xref:System.Windows.Forms.Button> , und einige der allgemeinen Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3231">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="8426f-3232">Im Beispiel wird die Schaltfläche in der unteren rechten Ecke des Formulars verankert, sodass die relative Position bei der Größenänderung des Formulars beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3232">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="8426f-3233">Anschließend wird der festgelegt <xref:System.Windows.Forms.Control.BackgroundImage%2A> , und die Größe der Schaltfläche wird auf die gleiche Größe wie die angepasst <xref:System.Drawing.Image> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3233">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="8426f-3234">Im Beispiel wird dann auf festgelegt <xref:System.Windows.Forms.Control.TabStop%2A> , `true` und die-Eigenschaft wird festgelegt <xref:System.Windows.Forms.Control.TabIndex%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3234">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="8426f-3235">Schließlich fügt Sie einen Ereignishandler hinzu, der das- <xref:System.Windows.Forms.Control.Click> Ereignis der Schaltfläche behandelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3235">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="8426f-3236">Für dieses Beispiel muss ein mit dem <xref:System.Windows.Forms.ImageList> Namen vorhanden sein `imageList1` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3236">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.SizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeChanged : EventHandler " Usage="member this.SizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3237">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.Size" />-Eigenschaftswert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3237">Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3238">Es ist vorzuziehen, das- <xref:System.Windows.Forms.Control.Layout> Ereignis zu verwenden, um benutzerdefinierte Layouts zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8426f-3238">It is preferable to use the <xref:System.Windows.Forms.Control.Layout> event to handle custom layouts.</span></span> <span data-ttu-id="8426f-3239">Das <xref:System.Windows.Forms.Control.Layout> Ereignis wird als Reaktion auf <xref:System.Windows.Forms.Control.Resize> Ereignisse ausgelöst, aber auch in anderen Situationen, in denen das Layout möglicherweise angewendet werden muss.</span><span class="sxs-lookup"><span data-stu-id="8426f-3239">The <xref:System.Windows.Forms.Control.Layout> event is raised in response to <xref:System.Windows.Forms.Control.Resize> events, but also in other conditions when layout might need to be applied.</span></span>  
  
 <span data-ttu-id="8426f-3240">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.Size%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3240">This event is raised if the <xref:System.Windows.Forms.Control.Size%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-3241">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3241">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3242">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.SizeChanged> Ereignis veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-3242">The following code example demonstrates the <xref:System.Windows.Forms.Control.SizeChanged> event.</span></span> <span data-ttu-id="8426f-3243">Eine Instanz eines Steuer Elements wurde <xref:System.Windows.Forms.Button> bereitgestellt, die sowohl horizontal als auch vertikal skaliert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-3243">An instance of a <xref:System.Windows.Forms.Button> control has been provided that can be scaled both horizontally and vertically.</span></span> <span data-ttu-id="8426f-3244">Eine- <xref:System.Windows.Forms.NumericUpDown> Instanz stellt den horizontalen und vertikalen Skalierungs Wert bereit.</span><span class="sxs-lookup"><span data-stu-id="8426f-3244">A <xref:System.Windows.Forms.NumericUpDown> instance provides the horizontal and vertical scale value.</span></span> <span data-ttu-id="8426f-3245">Die- <xref:System.Windows.Forms.Button> Instanz mit dem Namen **OK** wird verwendet, um die Skalierungs Werte für die Steuerelement Instanz festzulegen <xref:System.Windows.Forms.Button> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3245">The <xref:System.Windows.Forms.Button> instance named **OK** is used to set the scale values for the <xref:System.Windows.Forms.Button> control instance.</span></span> <span data-ttu-id="8426f-3246">Wenn sich die Größe des Steuer Elements ändert, wird der Ereignishandler aufgerufen, der dem- <xref:System.Windows.Forms.Control.SizeChanged> Ereignis des-Steuer Elements zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3246">Whenever the size of the control changes, the event handler associated with the <xref:System.Windows.Forms.Control.SizeChanged> event of the control is called.</span></span> <span data-ttu-id="8426f-3247">Dieser Ereignishandler zeigt ein Meldungs Feld an, das angibt, dass sich die Größe des Steuer Elements geändert hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-3247">This event handler displays a message box indicating that the size of the control has changed.</span></span>  
  
 [!code-cpp[Control_Scale1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Scale1/CPP/control_scale1.cpp#2)]
 [!code-csharp[Control_Scale1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Scale1/CS/control_scale1.cs#2)]
 [!code-vb[Control_Scale1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Scale1/VB/control_scale1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="SizeFromClientSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size SizeFromClientSize (System.Drawing.Size clientSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size SizeFromClientSize(valuetype System.Drawing.Size clientSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SizeFromClientSize (clientSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size SizeFromClientSize(System::Drawing::Size clientSize);" />
      <MemberSignature Language="F#" Value="abstract member SizeFromClientSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.SizeFromClientSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.SizeFromClientSize clientSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSize" Type="System.Drawing.Size" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="clientSize"><span data-ttu-id="8426f-3248">Ein <see cref="T:System.Drawing.Size" />-Wert, der die Höhe und Breite des Clientbereichs des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3248">A <see cref="T:System.Drawing.Size" /> value representing the height and width of the control's client area.</span></span></param>
        <summary><span data-ttu-id="8426f-3249">Bestimmt die Größe des gesamten Steuerelements anhand der Höhe und Breite seines Clientbereichs.</span><span class="sxs-lookup"><span data-stu-id="8426f-3249">Determines the size of the entire control from the height and width of its client area.</span></span></summary>
        <returns><span data-ttu-id="8426f-3250">Ein <see cref="T:System.Drawing.Size" />-Wert, der die Höhe und die Breite des gesamten Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3250">A <see cref="T:System.Drawing.Size" /> value representing the height and width of the entire control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.StyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StyleChanged;" />
      <MemberSignature Language="F#" Value="member this.StyleChanged : EventHandler " Usage="member this.StyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3251">Tritt ein, wenn sich das Format des Steuerelements ändert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3251">Occurs when the control style changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3252">Das <xref:System.Windows.Forms.Control.StyleChanged> Ereignis tritt auf, wenn <xref:System.Windows.Forms.ControlStyles> Flags hinzugefügt oder geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3252">The <xref:System.Windows.Forms.Control.StyleChanged> event occurs when <xref:System.Windows.Forms.ControlStyles> flags have been added or changed.</span></span>  
  
 <span data-ttu-id="8426f-3253">Dieses Ereignis wird ausgelöst, wenn der Steuerelement Stil durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3253">This event is raised if the control style is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-3254">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3254">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3255">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-3255">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-3256">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.StyleChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-3256">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span> <span data-ttu-id="8426f-3257">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-3257">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-3258">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3258">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-3259">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-3259">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-3260">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.StyleChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3260">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#68](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#68)]
 [!code-vb[System.Windows.Forms.EventExamples#68](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#68)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="SuspendLayout">
      <MemberSignature Language="C#" Value="public void SuspendLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SuspendLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendLayout();" />
      <MemberSignature Language="F#" Value="member this.SuspendLayout : unit -&gt; unit" Usage="control.SuspendLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-3261">Unterbricht vorübergehend die Layoutlogik für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-3261">Temporarily suspends the layout logic for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3262">Die Layoutlogik des Steuer Elements wird angehalten, bis die- <xref:System.Windows.Forms.Control.ResumeLayout%2A> Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3262">The layout logic of the control is suspended until the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method is called.</span></span>  
  
 <span data-ttu-id="8426f-3263">Die <xref:System.Windows.Forms.Control.SuspendLayout%2A> -Methode und die- <xref:System.Windows.Forms.Control.ResumeLayout%2A> Methode werden zusammen verwendet, um mehrere Ereignisse zu unterdrücken, <xref:System.Windows.Forms.Control.Layout> während Sie mehrere Attribute des Steuer Elements anpassen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3263">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="8426f-3264">Beispielsweise würden Sie in der Regel die-Methode und dann die-,-,- <xref:System.Windows.Forms.Control.SuspendLayout%2A> <xref:System.Windows.Forms.Control.Size%2A> <xref:System.Windows.Forms.Control.Location%2A> <xref:System.Windows.Forms.Control.Anchor%2A> oder <xref:System.Windows.Forms.Control.Dock%2A> -Eigenschaften des-Steuer Elements festlegen und dann die-Methode aufzurufen, <xref:System.Windows.Forms.Control.ResumeLayout%2A> damit die Änderungen wirksam werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3264">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="8426f-3265">Es dürfen keine ausstehenden Aufrufe <xref:System.Windows.Forms.Control.SuspendLayout%2A> von für vorhanden sein <xref:System.Windows.Forms.Control.ResumeLayout%2A> , um erfolgreich aufgerufen werden zu können.</span><span class="sxs-lookup"><span data-stu-id="8426f-3265">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8426f-3266">Wenn Sie einem übergeordneten Steuerelement mehrere Steuerelemente hinzufügen, empfiehlt es sich, <xref:System.Windows.Forms.Control.SuspendLayout%2A> vor dem Initialisieren der hinzu zufügenden Steuerelemente die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3266">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="8426f-3267">Nachdem Sie dem übergeordneten Steuerelement die Steuerelemente hinzugefügt haben, müssen Sie die- <xref:System.Windows.Forms.Control.ResumeLayout%2A> Methode</span><span class="sxs-lookup"><span data-stu-id="8426f-3267">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="8426f-3268">Dadurch wird die Leistung von Anwendungen mit vielen Steuerelementen erhöht.</span><span class="sxs-lookup"><span data-stu-id="8426f-3268">This will increase the performance of applications with many controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3269">Im folgenden Codebeispiel werden zwei Schaltflächen zu einem Formular hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3269">The following code example adds two buttons to a form.</span></span> <span data-ttu-id="8426f-3270">In dem Beispiel wird das Hinzufügen der Schaltflächen mithilfe der <xref:System.Windows.Forms.Control.SuspendLayout%2A> -Methode und der-Methode durch Transaktionen <xref:System.Windows.Forms.Control.ResumeLayout%2A></span><span class="sxs-lookup"><span data-stu-id="8426f-3270">The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]
 [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragDrop">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragDrop(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragDrop (drgEvent As DragEventArgs) Implements IDropTarget.OnDragDrop" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragDrop(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragDrop;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Forms.IDropTarget.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.System.Windows.Forms.IDropTarget.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.System.Windows.Forms.IDropTarget.OnDragDrop drgEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="drgEvent"><span data-ttu-id="8426f-3271">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-3271">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-3272">Löst das <see cref="E:System.Windows.Forms.Control.DragDrop" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-3272">Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragEnter">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragEnter(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragEnter (drgEvent As DragEventArgs) Implements IDropTarget.OnDragEnter" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragEnter(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragEnter;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Forms.IDropTarget.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.System.Windows.Forms.IDropTarget.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.System.Windows.Forms.IDropTarget.OnDragEnter drgEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="drgEvent"><span data-ttu-id="8426f-3273">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-3273">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-3274">Löst das <see cref="E:System.Windows.Forms.Control.DragEnter" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-3274">Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragLeave">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragLeave (e As EventArgs) Implements IDropTarget.OnDragLeave" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs ^ e) = System::Windows::Forms::IDropTarget::OnDragLeave;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Forms.IDropTarget.OnDragLeave : EventArgs -&gt; unit&#xA;override this.System.Windows.Forms.IDropTarget.OnDragLeave : EventArgs -&gt; unit" Usage="control.System.Windows.Forms.IDropTarget.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8426f-3275">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-3275">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-3276">Löst das <see cref="E:System.Windows.Forms.Control.DragLeave" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-3276">Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragOver">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragOver(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragOver (drgEvent As DragEventArgs) Implements IDropTarget.OnDragOver" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragOver(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragOver;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Forms.IDropTarget.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.System.Windows.Forms.IDropTarget.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.System.Windows.Forms.IDropTarget.OnDragOver drgEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="drgEvent"><span data-ttu-id="8426f-3277">Ein <see cref="T:System.Windows.Forms.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-3277">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8426f-3278">Löst das <see cref="E:System.Windows.Forms.Control.DragOver" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-3278">Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemColorsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SystemColorsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SystemColorsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.SystemColorsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SystemColorsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SystemColorsChanged;" />
      <MemberSignature Language="F#" Value="member this.SystemColorsChanged : EventHandler " Usage="member this.SystemColorsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3279">Tritt ein, wenn sich die Systemfarben ändern.</span><span class="sxs-lookup"><span data-stu-id="8426f-3279">Occurs when the system colors change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3280">Dieses Ereignis wird ausgelöst, wenn der <xref:System.Drawing.SystemColors> durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3280">This event is raised if the <xref:System.Drawing.SystemColors> is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-3281">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3281">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3282">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-3282">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-3283">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.SystemColorsChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-3283">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.SystemColorsChanged> event.</span></span> <span data-ttu-id="8426f-3284">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-3284">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-3285">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3285">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-3286">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-3286">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-3287">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.SystemColorsChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3287">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.SystemColorsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#69](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#69)]
 [!code-vb[System.Windows.Forms.EventExamples#69](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#69)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="System.Windows.Forms.Control.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.MergableProperty(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.MergableProperty(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3288">Ruft die Aktivierreihenfolge des Steuerelements in dessen Container ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3288">Gets or sets the tab order of the control within its container.</span></span></summary>
        <value><span data-ttu-id="8426f-3289">Der Indexwert des Steuerelements in einer Gruppe von Steuerelementen in dessen Container.</span><span class="sxs-lookup"><span data-stu-id="8426f-3289">The index value of the control within the set of controls within its container.</span></span> <span data-ttu-id="8426f-3290">Die Steuerelemente im Container werden in die Aktivierreihenfolge aufgenommen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3290">The controls in the container are included in the tab order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3291">Ein Registerkarten Index kann aus einer beliebigen gültigen Ganzzahl größer oder gleich 0 (null), niedrigeren Zahlen in der Aktivier Reihenfolge bestehen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3291">A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order.</span></span> <span data-ttu-id="8426f-3292">Wenn mehr als ein Steuerelement desselben übergeordneten Steuer Elements denselben Registerkarten Index aufweist, bestimmt die z-Reihenfolge der Steuerelemente die Reihenfolge, in der die Steuerelemente durchlaufen werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3292">If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.</span></span>  
  
 <span data-ttu-id="8426f-3293">Damit ein Steuerelement in der Aktivier Reihenfolge enthalten ist, muss die- <xref:System.Windows.Forms.Control.TabStop%2A> Eigenschaft auf festgelegt werden `true` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3293">For a control to be included in the tab order, its <xref:System.Windows.Forms.Control.TabStop%2A> property must be set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3294">Im folgenden Codebeispiel wird ein einem Formular hinzugefügt <xref:System.Windows.Forms.Button> , und einige der allgemeinen Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3294">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="8426f-3295">Im Beispiel wird die Schaltfläche in der unteren rechten Ecke des Formulars verankert, sodass die relative Position bei der Größenänderung des Formulars beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3295">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="8426f-3296">Anschließend wird der festgelegt <xref:System.Windows.Forms.Control.BackgroundImage%2A> , und die Größe der Schaltfläche wird auf die gleiche Größe wie die angepasst <xref:System.Drawing.Image> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3296">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="8426f-3297">Im Beispiel wird dann auf festgelegt <xref:System.Windows.Forms.Control.TabStop%2A> , `true` und die-Eigenschaft wird festgelegt <xref:System.Windows.Forms.Control.TabIndex%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3297">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="8426f-3298">Schließlich fügt Sie einen Ereignishandler hinzu, der das- <xref:System.Windows.Forms.Control.Click> Ereignis der Schaltfläche behandelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3298">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="8426f-3299">Für dieses Beispiel muss ein mit dem <xref:System.Windows.Forms.ImageList> Namen vorhanden sein `imageList1` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3299">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
        <altmember cref="P:System.Windows.Forms.Control.TabStop" />
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.TabIndexChanged : EventHandler " Usage="member this.TabIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3300">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.TabIndex" />-Eigenschaftswert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3300">Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3301">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.TabIndex%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3301">This event is raised if the <xref:System.Windows.Forms.Control.TabIndex%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-3302">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3302">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3303">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-3303">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-3304">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.TabIndexChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-3304">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabIndexChanged> event.</span></span> <span data-ttu-id="8426f-3305">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-3305">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-3306">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3306">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-3307">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-3307">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-3308">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.TabIndexChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3308">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabIndexChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#25)]
 [!code-vb[System.Windows.Forms.EventExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.Control.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-516)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-516)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3309">Ruft einen Wert ab, der angibt, ob Benutzer den Fokus mit der TAB-TASTE auf dieses Steuerelement setzen können, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3309">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span></span></summary>
        <value><span data-ttu-id="8426f-3310"><see langword="true" />, wenn der Fokus mit der TAB-TASTE auf dieses Steuerelement gesetzt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3310"><see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8426f-3311">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3311">The default is <see langword="true" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="8426f-3312">Diese Eigenschaft gibt immer <see langword="true" /> für eine Instanz der <see cref="T:System.Windows.Forms.Form" />-Klasse zurück.</span><span class="sxs-lookup"><span data-stu-id="8426f-3312">This property will always return <see langword="true" /> for an instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3313">Wenn der Benutzer die Tab-Taste drückt, wird der Eingabefokus auf das nächste Steuerelement in der Aktivier Reihenfolge festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3313">When the user presses the TAB key, the input focus is set to the next control in the tab order.</span></span> <span data-ttu-id="8426f-3314">Steuerelemente, deren-Eigenschaft den Wert hat, <xref:System.Windows.Forms.Control.TabStop%2A> `false` sind nicht in der Auflistung von Steuerelementen in der Aktivier Reihenfolge enthalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-3314">Controls with the <xref:System.Windows.Forms.Control.TabStop%2A> property value of `false` are not included in the collection of controls in the tab order.</span></span> <span data-ttu-id="8426f-3315">Die Aktivier Reihenfolge kann durch Festlegen des Eigenschafts Werts des Steuer Elements bearbeitet werden <xref:System.Windows.Forms.Control.TabIndex%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3315">The tab order can be manipulated by setting the control's <xref:System.Windows.Forms.Control.TabIndex%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3316">Im folgenden Codebeispiel wird ein einem Formular hinzugefügt <xref:System.Windows.Forms.Button> , und einige der allgemeinen Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3316">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="8426f-3317">Im Beispiel wird die Schaltfläche in der unteren rechten Ecke des Formulars verankert, sodass die relative Position bei der Größenänderung des Formulars beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3317">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="8426f-3318">Anschließend wird der festgelegt <xref:System.Windows.Forms.Control.BackgroundImage%2A> , und die Größe der Schaltfläche wird auf die gleiche Größe wie die angepasst <xref:System.Drawing.Image> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3318">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="8426f-3319">Im Beispiel wird dann auf festgelegt <xref:System.Windows.Forms.Control.TabStop%2A> , `true` und die-Eigenschaft wird festgelegt <xref:System.Windows.Forms.Control.TabIndex%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3319">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="8426f-3320">Schließlich fügt Sie einen Ereignishandler hinzu, der das- <xref:System.Windows.Forms.Control.Click> Ereignis der Schaltfläche behandelt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3320">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="8426f-3321">Für dieses Beispiel muss ein mit dem <xref:System.Windows.Forms.ImageList> Namen vorhanden sein `imageList1` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3321">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3322">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.TabStop" />-Eigenschaftswert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3322">Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3323">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.TabStop%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3323">This event is raised if the <xref:System.Windows.Forms.Control.TabStop%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-3324">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3324">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3325">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8426f-3325">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8426f-3326">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.TabStopChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="8426f-3326">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabStopChanged> event.</span></span> <span data-ttu-id="8426f-3327">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="8426f-3327">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8426f-3328">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3328">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8426f-3329">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="8426f-3329">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="8426f-3330">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.TabStopChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3330">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabStopChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#26)]
 [!code-vb[System.Windows.Forms.EventExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.TabStop" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Control.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3331">Ruft das Objekt ab, das Daten über das Steuerelement enthält, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3331">Gets or sets the object that contains data about the control.</span></span></summary>
        <value><span data-ttu-id="8426f-3332">Ein <see cref="T:System.Object" />, das Daten über das Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-3332">An <see cref="T:System.Object" /> that contains data about the control.</span></span> <span data-ttu-id="8426f-3333">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3333">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3334">Jeder von der-Klasse abgeleitete Typ <xref:System.Object> kann dieser Eigenschaft zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3334">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="8426f-3335">Wenn die <xref:System.Windows.Forms.Control.Tag%2A> Eigenschaft über den Windows Forms-Designer festgelegt wird, kann nur Text zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3335">If the <xref:System.Windows.Forms.Control.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="8426f-3336">Die- <xref:System.Windows.Forms.Control.Tag%2A> Eigenschaft wird häufig verwendet, um Daten zu speichern, die eng mit dem Steuerelement verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="8426f-3336">A common use for the <xref:System.Windows.Forms.Control.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="8426f-3337">Wenn Sie z. b. über ein Steuerelement verfügen, das Informationen zu einem Kunden anzeigt, können Sie ein speichern, <xref:System.Data.DataSet> das den Bestellverlauf des Kunden in der-Eigenschaft dieses Steuer Elements enthält, <xref:System.Windows.Forms.Control.Tag%2A> sodass schnell auf die Daten zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="8426f-3337">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.Control.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3338">Im folgenden Codebeispiel wird ein Formular angezeigt und eine `Customer` in der- <xref:System.Windows.Forms.Control.Tag%2A> Eigenschaft gespeichert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3338">The following code example displays a form and stores a `Customer` in its <xref:System.Windows.Forms.Control.Tag%2A> property.</span></span> <span data-ttu-id="8426f-3339">Für dieses Beispiel ist es erforderlich, dass Sie eine Klasse definiert haben, die von <xref:System.Windows.Forms.Form> benannt wird `CustomerForm` und die Sie definiert haben `Customer` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3339">This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `CustomerForm` and that you have defined a `Customer`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#3)]
 [!code-vb[Windows.Forms.Control Members2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.Control.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-517)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-517)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3340">Ruft den Text ab, der diesem Steuerelement zugeordnet ist, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3340">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="8426f-3341">Der diesem Steuerelement zugeordnete Text.</span><span class="sxs-lookup"><span data-stu-id="8426f-3341">The text associated with this control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3342">Die- <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft des-Steuer Elements wird von jeder abgeleiteten Klasse unterschiedlich verwendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-3342">The <xref:System.Windows.Forms.Control.Text%2A> property of the control is used differently by each derived class.</span></span> <span data-ttu-id="8426f-3343">Beispielsweise wird die- <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft eines <xref:System.Windows.Forms.Form> in der Titelleiste am oberen Rand des Formulars angezeigt, ist in der Zeichen Anzahl relativ klein und zeigt in der Regel den Anwendungs-oder Dokumentnamen an.</span><span class="sxs-lookup"><span data-stu-id="8426f-3343">For example the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.Form> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name.</span></span> <span data-ttu-id="8426f-3344">Die <xref:System.Windows.Forms.Control.Text%2A> -Eigenschaft eines kann jedoch sehr <xref:System.Windows.Forms.RichTextBox> groß sein und kann zahlreiche nicht visuelle Zeichen enthalten, die zum Formatieren des Texts verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3344">However, the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.RichTextBox> can be large and can include numerous nonvisual characters used to format the text.</span></span> <span data-ttu-id="8426f-3345">Beispielsweise kann der in einem angezeigte Text <xref:System.Windows.Forms.RichTextBox> formatiert werden, indem die Eigenschaften angepasst werden <xref:System.Drawing.Font> , oder durch das Hinzufügen von Leerzeichen oder Tabstopp Zeichen, um den Text auszurichten.</span><span class="sxs-lookup"><span data-stu-id="8426f-3345">For example, the text displayed in a <xref:System.Windows.Forms.RichTextBox> can be formatted by adjusting the <xref:System.Drawing.Font> properties, or by the addition of spaces or tab characters to align the text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3346">Im folgenden Codebeispiel wird ein erstellt, <xref:System.Windows.Forms.GroupBox> und einige der allgemeinen Eigenschaften werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3346">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="8426f-3347">Im Beispiel wird ein erstellt <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.Control.Location%2A> innerhalb des Gruppen Felds festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3347">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="8426f-3348">Anschließend wird die <xref:System.Windows.Forms.Control.Text%2A> -Eigenschaft des Gruppen Felds festgelegt, und das Gruppenfeld wird an den oberen Rand des Formulars angedockt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3348">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="8426f-3349">Schließlich wird das Gruppenfeld deaktiviert, indem die- <xref:System.Windows.Forms.Control.Enabled%2A> Eigenschaft auf festgelegt `false` wird. Dies bewirkt, dass alle im Gruppenfeld enthaltenen Steuerelemente deaktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3349">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-3350">Wenn Sie die <see cref="P:System.Windows.Forms.Control.Text" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie die-Eigenschaft der Basisklasse, <see cref="P:System.Windows.Forms.Control.Text" /> um die Basis Implementierung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="8426f-3350">When overriding the <see cref="P:System.Windows.Forms.Control.Text" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Text" /> property to extend the base implementation.</span></span> <span data-ttu-id="8426f-3351">Andernfalls müssen Sie die gesamte-Implementierung bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3351">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="8426f-3352">Es ist nicht erforderlich, die <see langword="get" /> -und- <see langword="set" /> Accessoren der-Eigenschaft zu überschreiben <see cref="P:System.Windows.Forms.Control.Text" /> . Sie können bei Bedarf nur eine überschreiben.</span><span class="sxs-lookup"><span data-stu-id="8426f-3352">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Text" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3353">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.Text" />-Eigenschaftswert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3353">Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3354">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3354">This event is raised if the <xref:System.Windows.Forms.Control.Text%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-3355">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3355">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3356">Im folgenden Codebeispiel wird der von einem-Wert geändert, der <xref:System.Windows.Forms.Control.ForeColor%2A> <xref:System.Windows.Forms.TextBox> Währungs Daten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3356">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="8426f-3357">Im Beispiel wird der Text in eine Dezimalzahl konvertiert und der <xref:System.Windows.Forms.Control.ForeColor%2A> in geändert, <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> Wenn die Zahl negativ ist, und, <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Wenn die Zahl positiv ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3357">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="8426f-3358">Für dieses Beispiel ist es erforderlich, dass über ein <xref:System.Windows.Forms.Form> verfügt, das eine enthält <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3358">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Top { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Top : int with get, set" Usage="System.Windows.Forms.Control.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3359">Ruft den Abstand zwischen dem oberen Rand des Steuerelements und dem oberen Rand des Clientbereichs des zugehörigen Containers in Pixel ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3359">Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="8426f-3360">Ein <see cref="T:System.Int32" />-Wert, der den Abstand zwischen dem unteren Rand des Steuerelements und dem oberen Rand des Clientbereichs des zugehörigen Containers in Pixel darstellt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3360">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3361">Der- <xref:System.Windows.Forms.Control.Top%2A> Eigenschafts Wert entspricht der- <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> Eigenschaft des- <xref:System.Windows.Forms.Control.Location%2A> Eigenschafts Werts des-Steuer Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3361">The <xref:System.Windows.Forms.Control.Top%2A> property value is equivalent to the <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.</span></span>  
  
 <span data-ttu-id="8426f-3362">Änderungen an den <xref:System.Windows.Forms.Control.Height%2A> <xref:System.Windows.Forms.Control.Top%2A> Eigenschafts Werten und bewirken, dass der- <xref:System.Windows.Forms.Control.Bottom%2A> Eigenschafts Wert des Steuer Elements geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3362">Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3363">Im folgenden Codebeispiel werden drei Steuer <xref:System.Windows.Forms.Button> Elemente auf einem Formular erstellt, und die Größe und die Position werden mithilfe der verschiedenen Größen bezogenen und standortbezogenen Eigenschaften festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3363">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="8426f-3364">Für dieses Beispiel ist es erforderlich, dass Sie über eine <xref:System.Windows.Forms.Form> mit einer Breite und Höhe von mindestens 300 Pixel verfügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3364">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Point.Y" />
        <altmember cref="P:System.Windows.Forms.Control.Bottom" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="TopLevelControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control TopLevelControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control TopLevelControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TopLevelControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLevelControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ TopLevelControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLevelControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.TopLevelControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3365">Ruft das übergeordnete Steuerelement ab, dem kein anderes Windows Forms-Steuerelement übergeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3365">Gets the parent control that is not parented by another Windows Forms control.</span></span> <span data-ttu-id="8426f-3366">Dies ist i. d. R. das äußerste <see cref="T:System.Windows.Forms.Form" />, in dem das Steuerelement enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3366">Typically, this is the outermost <see cref="T:System.Windows.Forms.Form" /> that the control is contained in.</span></span></summary>
        <value><span data-ttu-id="8426f-3367">Das <see cref="T:System.Windows.Forms.Control" />, das das Steuerelement der obersten Ebene darstellt, das das aktuelle Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="8426f-3367">The <see cref="T:System.Windows.Forms.Control" /> that represents the top-level control that contains the current control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3368">Das Steuerelement der obersten Ebene ist als übergeordnetes Steuerelement definiert, das nicht von einem anderen Windows Forms-Steuerelement untergeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3368">The top-level control is defined as the parent control that is not parented by another Windows Forms control.</span></span> <span data-ttu-id="8426f-3369">Dies ist i. d. R. das äußerste <xref:System.Windows.Forms.Form>, in dem das Steuerelement enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3369">Typically, this is the outermost <xref:System.Windows.Forms.Form> that the control is contained in.</span></span> <span data-ttu-id="8426f-3370">Wenn das Steuerelement z. b. in einem untergeordneten MDI-Element enthalten ist <xref:System.Windows.Forms.Form> , ist das Steuerelement der obersten Ebene das übergeordnete Element der Multiple Document Interface (MDI) <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3370">For example, if the control is contained on an MDI child <xref:System.Windows.Forms.Form>, then the top-level control is the Multiple Document Interface (MDI) parent <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="8426f-3371">Wenn das Steuerelement nicht einem übergeordnet ist <xref:System.Windows.Forms.Form> , gibt diese Eigenschaft zurück `null` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3371">If the control is not parented on a <xref:System.Windows.Forms.Form>, this property will return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="control.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-3372">Bewirkt, dass das Steuerelement die für ungültig erklärten Bereiche im Clientbereich neu zeichnet.</span><span class="sxs-lookup"><span data-stu-id="8426f-3372">Causes the control to redraw the invalidated regions within its client area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3373">Führt alle ausstehenden Anforderungen zum Zeichnen aus.</span><span class="sxs-lookup"><span data-stu-id="8426f-3373">Executes any pending requests for painting.</span></span>  
  
 <span data-ttu-id="8426f-3374">Es gibt zwei Möglichkeiten, ein Formular und seinen Inhalt neu zu zeichnen:</span><span class="sxs-lookup"><span data-stu-id="8426f-3374">There are two ways to repaint a form and its contents:</span></span>  
  
-   <span data-ttu-id="8426f-3375">Sie können eine der über Ladungen der- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode mit der- <xref:System.Windows.Forms.Control.Update%2A> Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3375">You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the <xref:System.Windows.Forms.Control.Update%2A> method.</span></span>  
  
-   <span data-ttu-id="8426f-3376">Sie können die <xref:System.Windows.Forms.Control.Refresh%2A> -Methode aufrufen, die das-Steuerelement zwingt, sich selbst und alle untergeordneten Elemente neu zu zeichnen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3376">You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children.</span></span> <span data-ttu-id="8426f-3377">Dies entspricht dem Festlegen der <xref:System.Windows.Forms.Control.Invalidate%2A> -Methode auf `true` und deren Verwendung mit <xref:System.Windows.Forms.Control.Update%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3377">This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with <xref:System.Windows.Forms.Control.Update%2A>.</span></span>  
  
 <span data-ttu-id="8426f-3378">Die- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode steuert, was gezeichnet oder neu gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3378">The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted.</span></span> <span data-ttu-id="8426f-3379">Die- <xref:System.Windows.Forms.Control.Update%2A> Methode steuert, wann das Zeichnen oder Neuzeichnen auftritt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3379">The <xref:System.Windows.Forms.Control.Update%2A> method governs when the painting or repainting occurs.</span></span> <span data-ttu-id="8426f-3380">Wenn Sie die <xref:System.Windows.Forms.Control.Invalidate%2A> -Methode und die-Methode in kombinieren und <xref:System.Windows.Forms.Control.Update%2A> nicht aufrufen <xref:System.Windows.Forms.Control.Refresh%2A> , wird die neu gezeichnet, abhängig von der verwendeten Überladung <xref:System.Windows.Forms.Control.Invalidate%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3380">If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and <xref:System.Windows.Forms.Control.Update%2A> methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use.</span></span> <span data-ttu-id="8426f-3381">Die- <xref:System.Windows.Forms.Control.Update%2A> Methode zwingt lediglich, dass das Steuerelement sofort gezeichnet wird, aber die- <xref:System.Windows.Forms.Control.Invalidate%2A> Methode steuert, was gezeichnet wird, wenn Sie die- <xref:System.Windows.Forms.Control.Update%2A> Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="8426f-3381">The <xref:System.Windows.Forms.Control.Update%2A> method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the <xref:System.Windows.Forms.Control.Update%2A> method.</span></span>  
  
 <span data-ttu-id="8426f-3382">Weitere Informationen finden Sie im [WM_PAINT](/windows/win32/gdi/wm-paint) Thema.</span><span class="sxs-lookup"><span data-stu-id="8426f-3382">For more information, see the [WM_PAINT](/windows/win32/gdi/wm-paint) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8426f-3383">Aktualisiert die Begrenzungen des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3383">Updates the bounds of the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected internal void UpdateBounds ();" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void UpdateBounds() cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub UpdateBounds ()" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void UpdateBounds();" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : unit -&gt; unit" Usage="control.UpdateBounds " />
      <MemberSignature Language="C#" Value="protected void UpdateBounds ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateBounds() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateBounds ()" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateBounds();" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-3384">Aktualisiert die Begrenzungen des Steuerelements mit der aktuellen Größe und Position.</span><span class="sxs-lookup"><span data-stu-id="8426f-3384">Updates the bounds of the control with the current size and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3385">Wenn sich das neue- <xref:System.Windows.Forms.Control.Size%2A> Steuerelement vom vorherigen unterscheidet <xref:System.Drawing.Size> , wird das- <xref:System.Windows.Forms.Control.SizeChanged> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-3385">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="8426f-3386">Ebenso wird das-Ereignis ausgelöst, wenn sich der <xref:System.Windows.Forms.Control.Location%2A> des-Steuer Elements ändert <xref:System.Windows.Forms.Control.LocationChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3386">Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected void UpdateBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : int * int * int * int -&gt; unit" Usage="control.UpdateBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8426f-3387">Die <see cref="P:System.Drawing.Point.X" />-Koordinate des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3387">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control.</span></span></param>
        <param name="y"><span data-ttu-id="8426f-3388">Die <see cref="P:System.Drawing.Point.Y" />-Koordinate des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3388">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control.</span></span></param>
        <param name="width"><span data-ttu-id="8426f-3389">Der <see cref="P:System.Drawing.Size.Width" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3389">The <see cref="P:System.Drawing.Size.Width" /> of the control.</span></span></param>
        <param name="height"><span data-ttu-id="8426f-3390">Der <see cref="P:System.Drawing.Size.Height" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3390">The <see cref="P:System.Drawing.Size.Height" /> of the control.</span></span></param>
        <summary><span data-ttu-id="8426f-3391">Aktualisiert die Begrenzungen des Steuerelements mit der angegebenen Größe und Position.</span><span class="sxs-lookup"><span data-stu-id="8426f-3391">Updates the bounds of the control with the specified size and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3392">Wenn das neue- <xref:System.Windows.Forms.Control.Size%2A> Steuerelement vom vorherigen abweicht <xref:System.Drawing.Size> , wird das- <xref:System.Windows.Forms.Control.SizeChanged> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-3392">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control if different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="8426f-3393">Ebenso gilt, dass das- <xref:System.Windows.Forms.Control.Location%2A> Steuerelement geändert wird <xref:System.Windows.Forms.Control.LocationChanged> . das-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-3393">Likewise, is the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected void UpdateBounds (int x, int y, int width, int height, int clientWidth, int clientHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateBounds(int32 x, int32 y, int32 width, int32 height, int32 clientWidth, int32 clientHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateBounds (x As Integer, y As Integer, width As Integer, height As Integer, clientWidth As Integer, clientHeight As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateBounds(int x, int y, int width, int height, int clientWidth, int clientHeight);" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : int * int * int * int * int * int -&gt; unit" Usage="control.UpdateBounds (x, y, width, height, clientWidth, clientHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="clientWidth" Type="System.Int32" />
        <Parameter Name="clientHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8426f-3394">Die <see cref="P:System.Drawing.Point.X" />-Koordinate des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3394">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control.</span></span></param>
        <param name="y"><span data-ttu-id="8426f-3395">Die <see cref="P:System.Drawing.Point.Y" />-Koordinate des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3395">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control.</span></span></param>
        <param name="width"><span data-ttu-id="8426f-3396">Der <see cref="P:System.Drawing.Size.Width" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3396">The <see cref="P:System.Drawing.Size.Width" /> of the control.</span></span></param>
        <param name="height"><span data-ttu-id="8426f-3397">Der <see cref="P:System.Drawing.Size.Height" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3397">The <see cref="P:System.Drawing.Size.Height" /> of the control.</span></span></param>
        <param name="clientWidth"><span data-ttu-id="8426f-3398">Die Client-<see cref="P:System.Drawing.Size.Width" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3398">The client <see cref="P:System.Drawing.Size.Width" /> of the control.</span></span></param>
        <param name="clientHeight"><span data-ttu-id="8426f-3399">Die Client-<see cref="P:System.Drawing.Size.Height" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3399">The client <see cref="P:System.Drawing.Size.Height" /> of the control.</span></span></param>
        <summary><span data-ttu-id="8426f-3400">Aktualisiert die Begrenzungen des Steuerelements mit der angegebenen Größe, Position und Größe des Clients.</span><span class="sxs-lookup"><span data-stu-id="8426f-3400">Updates the bounds of the control with the specified size, location, and client size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3401">Wenn sich das neue- <xref:System.Windows.Forms.Control.Size%2A> Steuerelement vom vorherigen unterscheidet <xref:System.Drawing.Size> , wird das- <xref:System.Windows.Forms.Control.SizeChanged> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8426f-3401">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="8426f-3402">Ebenso wird das-Ereignis ausgelöst, wenn sich der <xref:System.Windows.Forms.Control.Location%2A> des-Steuer Elements ändert <xref:System.Windows.Forms.Control.LocationChanged> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3402">Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
      </Docs>
    </Member>
    <Member MemberName="UpdateStyles">
      <MemberSignature Language="C#" Value="protected void UpdateStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateStyles : unit -&gt; unit" Usage="control.UpdateStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-3403">Erzwingt ein erneutes Anwenden der zugewiesenen Formate auf das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="8426f-3403">Forces the assigned styles to be reapplied to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3404">Diese Methode ruft die- <xref:System.Windows.Forms.Control.CreateParams%2A> Methode auf, um die anzuwendenden Stile zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="8426f-3404">This method calls the <xref:System.Windows.Forms.Control.CreateParams%2A> method to get the styles to apply.</span></span> <span data-ttu-id="8426f-3405">Die Stile, die den <xref:System.Windows.Forms.CreateParams.Style%2A> -und <xref:System.Windows.Forms.CreateParams.ExStyle%2A> -Eigenschaften der zugewiesen <xref:System.Windows.Forms.CreateParams> sind, die der-Eigenschaft des Steuer Elements zugewiesen ist, <xref:System.Windows.Forms.Control.CreateParams%2A> werden erneut angewendet.</span><span class="sxs-lookup"><span data-stu-id="8426f-3405">The styles assigned to the <xref:System.Windows.Forms.CreateParams.Style%2A> and <xref:System.Windows.Forms.CreateParams.ExStyle%2A> properties of the <xref:System.Windows.Forms.CreateParams> assigned to the control's <xref:System.Windows.Forms.Control.CreateParams%2A> property are reapplied.</span></span> <span data-ttu-id="8426f-3406">Das Steuerelement wird neu gezeichnet, um die Stiländerungen bei Bedarf widerzuspiegeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-3406">The control is repainted to reflect the style changes if necessary.</span></span>  
  
 <span data-ttu-id="8426f-3407">Die- <xref:System.Windows.Forms.Control.UpdateStyles%2A> Methode hat keine Auswirkung, wenn der- <xref:System.Windows.Forms.Control.IsHandleCreated%2A> Eigenschafts Wert ist `false` .</span><span class="sxs-lookup"><span data-stu-id="8426f-3407">The <xref:System.Windows.Forms.Control.UpdateStyles%2A> method has no effect if the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3408">Im folgenden Codebeispiel wird die doppelte Pufferung für einen aktiviert <xref:System.Windows.Forms.Form> und die Stile aktualisiert, um die Änderungen widerzuspiegeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-3408">The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]
 [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]
 [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="UpdateZOrder">
      <MemberSignature Language="C#" Value="protected void UpdateZOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateZOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateZOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateZOrder ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateZOrder();" />
      <MemberSignature Language="F#" Value="member this.UpdateZOrder : unit -&gt; unit" Usage="control.UpdateZOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8426f-3409">Aktualisiert das Steuerelement in der z-Reihenfolge des übergeordneten Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3409">Updates the control in its parent's z-order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3410">Die <xref:System.Windows.Forms.Control.UpdateZOrder%2A> -Methode aktualisiert die Position des-Steuer Elements in der z-Reihenfolge des übergeordneten Steuer Elements.</span><span class="sxs-lookup"><span data-stu-id="8426f-3410">The <xref:System.Windows.Forms.Control.UpdateZOrder%2A> method updates the position of the control in its parent control's z-order.</span></span> <span data-ttu-id="8426f-3411">Wenn dieses Steuerelement z. b. ein neu erstelltes Steuerelement ist, das einem hinzugefügt wurde <xref:System.Windows.Forms.Control.ControlCollection> , wird die z-Reihenfolge mit dem neuen Steuerelement aktualisiert, das dem Hintergrund hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="8426f-3411">For example, if this control is a newly created control that was added to a <xref:System.Windows.Forms.Control.ControlCollection>, the z-order is updated with the new control added to the back.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="UseWaitCursor">
      <MemberSignature Language="C#" Value="public bool UseWaitCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWaitCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.UseWaitCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseWaitCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWaitCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseWaitCursor : bool with get, set" Usage="System.Windows.Forms.Control.UseWaitCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3412">Ruft einen Wert ab, der angibt, ob der Wartecursor für das aktuelle Steuerelement und alle untergeordneten Steuerelemente verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="8426f-3412">Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</span></span></summary>
        <value><span data-ttu-id="8426f-3413"><see langword="true" />, wenn der Wartecursor für das aktuelle Steuerelement und alle untergeordneten Steuerelemente verwendet werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3413"><see langword="true" /> to use the wait cursor for the current control and all child controls; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8426f-3414">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3414">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3415">Verwenden Sie einen Warte Cursor, wenn Sie einen Vorgang ausführen, der eine beträchtliche Zeit in Anspruch nimmt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3415">Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.</span></span> <span data-ttu-id="8426f-3416">Beachten Sie jedoch, dass Vorgänge, die den UI-Thread blockieren, auch eine Cursor Änderung blockieren werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3416">However, note that operations that block the UI thread will also block a cursor change.</span></span> <span data-ttu-id="8426f-3417">Diese Eigenschaft sollte daher nur verwendet werden, wenn zeitaufwändige Vorgänge in einem anderen Thread durchgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3417">Therefore, this property should only be used when performing time-consuming operations in another thread.</span></span> <span data-ttu-id="8426f-3418">Wenn Sie den Cursor Global und sofort ändern möchten, sehen Sie sich die- <xref:System.Windows.Forms.Cursor.Current%2A> Eigenschaft an.</span><span class="sxs-lookup"><span data-stu-id="8426f-3418">To change the cursor globally and immediately, see the <xref:System.Windows.Forms.Cursor.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validated">
      <MemberSignature Language="C#" Value="public event EventHandler Validated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Validated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Validated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Validated;" />
      <MemberSignature Language="F#" Value="member this.Validated : EventHandler " Usage="member this.Validated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3419">Tritt ein, wenn das Steuerelement die Überprüfung abgeschlossen hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-3419">Occurs when the control is finished validating.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3420">Wenn Sie den Fokus mithilfe der Tastatur (Tab, UMSCHALT + TAB usw.) ändern, indem Sie die- <xref:System.Windows.Forms.Control.Select%2A> Methode oder die- <xref:System.Windows.Forms.Control.SelectNextControl%2A> Methode aufrufen, oder indem Sie die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> Eigenschaft auf das aktuelle Formular festlegen, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-3420">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="8426f-3421">Wenn Sie den Fokus mit der Maus oder durch Aufrufen der- <xref:System.Windows.Forms.Control.Focus%2A> Methode ändern, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-3421">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="8426f-3422">Wenn die <xref:System.Windows.Forms.Control.CausesValidation%2A> -Eigenschaft auf festgelegt ist `false` , <xref:System.Windows.Forms.Control.Validating> werden die Ereignisse und unter <xref:System.Windows.Forms.Control.Validated> drückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3422">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="8426f-3423">Wenn die- <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft des <xref:System.ComponentModel.CancelEventArgs> im Ereignis Delegaten auf festgelegt ist `true` <xref:System.Windows.Forms.Control.Validating> , werden alle Ereignisse, die normalerweise nach dem-Ereignis auftreten, <xref:System.Windows.Forms.Control.Validating> unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3423">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8426f-3424">Versuchen Sie nicht, den Fokus in den <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.GotFocus> <xref:System.Windows.Forms.Control.Leave> <xref:System.Windows.Forms.Control.LostFocus> <xref:System.Windows.Forms.Control.Validating> <xref:System.Windows.Forms.Control.Validated> Ereignis Handlern,,,, oder festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3424">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="8426f-3425">Dies kann dazu führen, dass Ihre Anwendung oder das Betriebssystem nicht mehr reagiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3425">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="8426f-3426">Weitere Informationen finden Sie im Thema [WM_KILLFOCUS](/windows/win32/winmsg/wm-activateapp) und im Abschnitt "Nachrichten Deadlocks" im Thema [Informationen zu Meldungen und Nachrichten Warteschlangen](/windows/win32/winmsg/about-messages-and-message-queues) .</span><span class="sxs-lookup"><span data-stu-id="8426f-3426">For more information, see the [WM_KILLFOCUS](/windows/win32/winmsg/wm-activateapp) topic, and the "Message Deadlocks" section of the [About Messages and Message Queues](/windows/win32/winmsg/about-messages-and-message-queues) topic.</span></span>  
  
 <span data-ttu-id="8426f-3427">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3427">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3428">Im folgenden Codebeispiel wird die abgeleitete Klasse verwendet <xref:System.Windows.Forms.TextBox> und eine e-Mail-Adresse überprüft, die der Benutzer eingibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3428">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="8426f-3429">Wenn die e-Mail-Adresse nicht im Standardformat vorliegt (" @" and " ."), schlägt die Validierung fehl, ein <xref:System.Windows.Forms.ErrorProvider> Symbol wird angezeigt, und das Ereignis wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3429">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="8426f-3430">Dieses Beispiel erfordert, dass ein <xref:System.Windows.Forms.TextBox> -Steuerelement und ein- <xref:System.Windows.Forms.ErrorProvider> Steuerelement in einem Formular erstellt wurden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3430">This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]
 [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]
 [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Validating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Validating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Validating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validating As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Validating;" />
      <MemberSignature Language="F#" Value="member this.Validating : System.ComponentModel.CancelEventHandler " Usage="member this.Validating : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3431">Tritt ein, wenn das Steuerelement eine Validierung ausführt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3431">Occurs when the control is validating.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3432">Wenn Sie den Fokus mithilfe der Tastatur (Tab, UMSCHALT + TAB usw.) ändern, indem Sie die- <xref:System.Windows.Forms.Control.Select%2A> Methode oder die- <xref:System.Windows.Forms.Control.SelectNextControl%2A> Methode aufrufen, oder indem Sie die- <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> Eigenschaft auf das aktuelle Formular festlegen, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-3432">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="8426f-3433">Wenn Sie den Fokus mit der Maus oder durch Aufrufen der- <xref:System.Windows.Forms.Control.Focus%2A> Methode ändern, treten Fokus Ereignisse in der folgenden Reihenfolge auf:</span><span class="sxs-lookup"><span data-stu-id="8426f-3433">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="8426f-3434">Wenn die <xref:System.Windows.Forms.Control.CausesValidation%2A> -Eigenschaft auf festgelegt ist `false` , <xref:System.Windows.Forms.Control.Validating> werden die Ereignisse und unter <xref:System.Windows.Forms.Control.Validated> drückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3434">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="8426f-3435">Wenn die- <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft des <xref:System.ComponentModel.CancelEventArgs> im Ereignis Delegaten auf festgelegt ist `true` <xref:System.Windows.Forms.Control.Validating> , werden alle Ereignisse, die normalerweise nach dem-Ereignis auftreten, <xref:System.Windows.Forms.Control.Validating> unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3435">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8426f-3436">Versuchen Sie nicht, den Fokus in den <xref:System.Windows.Forms.Control.Enter> <xref:System.Windows.Forms.Control.GotFocus> <xref:System.Windows.Forms.Control.Leave> <xref:System.Windows.Forms.Control.LostFocus> <xref:System.Windows.Forms.Control.Validating> <xref:System.Windows.Forms.Control.Validated> Ereignis Handlern,,,, oder festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3436">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="8426f-3437">Dies kann dazu führen, dass Ihre Anwendung oder das Betriebssystem nicht mehr reagiert.</span><span class="sxs-lookup"><span data-stu-id="8426f-3437">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="8426f-3438">Weitere Informationen finden Sie `WM_KILLFOCUS` im Thema im Abschnitt "Tastatureingabe Referenz" und im Artikel "Nachrichten Deadlocks" im Artikel [Informationen zu Meldungen und Nachrichten Warteschlangen](/windows/win32/winmsg/about-messages-and-message-queues) .</span><span class="sxs-lookup"><span data-stu-id="8426f-3438">For more information, see the `WM_KILLFOCUS` topic in the "Keyboard Input Reference" section, and the "Message Deadlocks" section of the [About Messages and Message Queues](/windows/win32/winmsg/about-messages-and-message-queues) article.</span></span>  
  
 <span data-ttu-id="8426f-3439">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3439">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3440">Im folgenden Codebeispiel wird die abgeleitete Klasse verwendet <xref:System.Windows.Forms.TextBox> und eine e-Mail-Adresse überprüft, die der Benutzer eingibt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3440">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="8426f-3441">Wenn die e-Mail-Adresse nicht im Standardformat vorliegt (" @" and " ."), schlägt die Validierung fehl, ein <xref:System.Windows.Forms.ErrorProvider> Symbol wird angezeigt, und das Ereignis wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3441">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="8426f-3442">Dieses Beispiel erfordert, dass ein <xref:System.Windows.Forms.TextBox> -Steuerelement und ein- <xref:System.Windows.Forms.ErrorProvider> Steuerelement in einem Formular erstellt wurden.</span><span class="sxs-lookup"><span data-stu-id="8426f-3442">This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]
 [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]
 [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.Control.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3443">Ruft einen Wert ab, mit dem angegeben wird, ob das Steuerelement und alle untergeordneten Steuerelemente angezeigt werden, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3443">Gets or sets a value indicating whether the control and all its child controls are displayed.</span></span></summary>
        <value><span data-ttu-id="8426f-3444"><see langword="true" />, wenn das Steuerelement und alle untergeordneten Steuerelemente angezeigt werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3444"><see langword="true" /> if the control and all its child controls are displayed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8426f-3445">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3445">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3446">Beachten Sie, dass das Steuerelement, selbst wenn `Visible` auf festgelegt ist `true` , für den Benutzer möglicherweise nicht sichtbar ist, wenn es hinter anderen Steuerelementen verdeckt ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3446">Note that even if `Visible` is set to `true`, the control might not be visible to the user if it is obscured behind other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3447">Im folgenden Codebeispiel werden die abgeleiteten Klassen <xref:System.Windows.Forms.VScrollBar> und und <xref:System.Windows.Forms.HScrollBar> deren <xref:System.Windows.Forms.Control.Visible%2A> Eigenschaftswerte basierend auf der Größe eines, das <xref:System.Drawing.Image> in einem-Steuerelement angezeigt wird, verwendet <xref:System.Windows.Forms.PictureBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3447">The following code example uses the derived classes <xref:System.Windows.Forms.VScrollBar> and <xref:System.Windows.Forms.HScrollBar> and sets their <xref:System.Windows.Forms.Control.Visible%2A> property values, based on the size of an <xref:System.Drawing.Image> being displayed in a <xref:System.Windows.Forms.PictureBox> control.</span></span> <span data-ttu-id="8426f-3448">Für dieses Beispiel ist es erforderlich, dass <xref:System.Windows.Forms.PictureBox> auf einem Formular erstellt wurde und dass <xref:System.Windows.Forms.HScrollBar> die-und-Steuer <xref:System.Windows.Forms.VScrollBar> Elemente auf dem erstellt wurden <xref:System.Windows.Forms.PictureBox> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3448">This example requires that a <xref:System.Windows.Forms.PictureBox> has been created on a form and that <xref:System.Windows.Forms.HScrollBar> and <xref:System.Windows.Forms.VScrollBar> controls have been created on the <xref:System.Windows.Forms.PictureBox>.</span></span> <span data-ttu-id="8426f-3449">Dieser Code sollte aufgerufen werden, wenn das Bild in das Bildfeld und das- <xref:System.Windows.Forms.Control.Resize> Ereignis des Formulars geladen wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3449">This code should be called when the image is loaded into the picture box and by the <xref:System.Windows.Forms.Control.Resize> event of the form.</span></span>  
  
 [!code-cpp[Classic Control.Visible Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.Visible Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.Visible Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.Visible Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Visible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.Visible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="VisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler VisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.VisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.VisibleChanged : EventHandler " Usage="member this.VisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3450">Tritt ein, wenn der <see cref="P:System.Windows.Forms.Control.Visible" />-Eigenschaftswert geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3450">Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3451">Dieses Ereignis wird ausgelöst, wenn die <xref:System.Windows.Forms.Control.Visible%2A> Eigenschaft entweder durch eine programmgesteuerte Änderung oder eine Benutzerinteraktion geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3451">This event is raised if the <xref:System.Windows.Forms.Control.Visible%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="8426f-3452">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="8426f-3452">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3453">Im folgenden Codebeispiel wird das-Ereignis ausgelöst, <xref:System.Windows.Forms.Control.VisibleChanged> Wenn sich der- <xref:System.Windows.Forms.Control.Visible%2A> Eigenschafts Wert des- <xref:System.Windows.Forms.Label> Steuer Elements geändert hat.</span><span class="sxs-lookup"><span data-stu-id="8426f-3453">The following code example raises the <xref:System.Windows.Forms.Control.VisibleChanged> event when the <xref:System.Windows.Forms.Control.Visible%2A> property value of the <xref:System.Windows.Forms.Label> control has changed.</span></span>  
  
 [!code-cpp[Control_VisibleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_VisibleChanged/CPP/control_visiblechanged.cpp#1)]
 [!code-csharp[Control_VisibleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_VisibleChanged/CS/control_visiblechanged.cs#1)]
 [!code-vb[Control_VisibleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_VisibleChanged/VB/control_visiblechanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Forms.Control.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3454">Ruft die Breite des Steuerelements ab bzw. legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="8426f-3454">Gets or sets the width of the control.</span></span></summary>
        <value><span data-ttu-id="8426f-3455">Die Breite des Steuerelements in Pixeln.</span><span class="sxs-lookup"><span data-stu-id="8426f-3455">The width of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3456">Änderungen an den <xref:System.Windows.Forms.Control.Width%2A> <xref:System.Windows.Forms.Control.Left%2A> Eigenschafts Werten und bewirken, dass der- <xref:System.Windows.Forms.Control.Right%2A> Eigenschafts Wert des Steuer Elements geändert wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3456">Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3457">Im folgenden Codebeispiel werden drei Steuer <xref:System.Windows.Forms.Button> Elemente auf einem Formular erstellt, und die Größe und die Position werden mithilfe der verschiedenen Größen bezogenen und standortbezogenen Eigenschaften festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8426f-3457">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="8426f-3458">Für dieses Beispiel ist es erforderlich, dass Sie über eine <xref:System.Windows.Forms.Form> mit einer Breite und Höhe von mindestens 300 Pixel verfügen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3458">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Drawing.Size.Width" />
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WindowTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IWindowTarget WindowTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IWindowTarget WindowTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.WindowTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowTarget As IWindowTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IWindowTarget ^ WindowTarget { System::Windows::Forms::IWindowTarget ^ get(); void set(System::Windows::Forms::IWindowTarget ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTarget : System.Windows.Forms.IWindowTarget with get, set" Usage="System.Windows.Forms.Control.WindowTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IWindowTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8426f-3459">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-3459">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="8426f-3460">Das NativeWindow, das innerhalb des Steuerelements enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="8426f-3460">The NativeWindow contained within the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3461">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="8426f-3461">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc : Message -&gt; unit&#xA;override this.WndProc : Message -&gt; unit" Usage="control.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="8426f-3462">Die zu verarbeitende Windows-<see cref="T:System.Windows.Forms.Message" />.</span><span class="sxs-lookup"><span data-stu-id="8426f-3462">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="8426f-3463">Verarbeitet Windows-Meldungen.</span><span class="sxs-lookup"><span data-stu-id="8426f-3463">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8426f-3464">Alle Nachrichten werden an die-Methode gesendet, <xref:System.Windows.Forms.Control.WndProc%2A> nachdem Sie durch die-Methode gefiltert wurden <xref:System.Windows.Forms.Control.PreProcessMessage%2A> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3464">All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.</span></span>  
  
 <span data-ttu-id="8426f-3465">Die <xref:System.Windows.Forms.Control.WndProc%2A>-Methode entspricht genau der `WindowProc`-Funktion von Windows.</span><span class="sxs-lookup"><span data-stu-id="8426f-3465">The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function.</span></span> <span data-ttu-id="8426f-3466">Weitere Informationen zum Verarbeiten von Windows-Meldungen finden Sie unter der [WindowProc-Funktion](https://go.microsoft.com/fwlink/?LinkId=181565).</span><span class="sxs-lookup"><span data-stu-id="8426f-3466">For more information about processing Windows messages, see the [WindowProc function](https://go.microsoft.com/fwlink/?LinkId=181565).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8426f-3467">Das folgende Codebeispiel veranschaulicht das Überschreiben der- <xref:System.Windows.Forms.Control.WndProc%2A> Methode, um in der-Struktur identifizierte Betriebssystem Meldungen zu verarbeiten <xref:System.Windows.Forms.Message> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3467">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.WndProc%2A> method to handle operating system messages identified in the <xref:System.Windows.Forms.Message> structure.</span></span> <span data-ttu-id="8426f-3468">In diesem Beispiel wird die Meldung des [WM_ACTIVATEAPP](/windows/win32/winmsg/wm-activateapp) Betriebssystems behandelt, um zu erfahren, wann eine andere Anwendung aktiv wird.</span><span class="sxs-lookup"><span data-stu-id="8426f-3468">The [WM_ACTIVATEAPP](/windows/win32/winmsg/wm-activateapp) operating system message is handled in this example to know when another application is becoming active.</span></span> <span data-ttu-id="8426f-3469">In den folgenden Themen finden Sie Informationen zu den verfügbaren <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> Werten für, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8426f-3469">See the following topics to understand the available <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="8426f-3470">Tatsächliche Konstante Werte finden Sie in der Header Datei "Windows. h".</span><span class="sxs-lookup"><span data-stu-id="8426f-3470">Actual constant values can be found in the Windows.h header file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8426f-3471">Erbende Steuerelemente sollten die-Methode der Basisklasse <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> zum Verarbeiten von Nachrichten verwenden, die Sie nicht verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="8426f-3471">Inheriting controls should call the base class's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> method to process any messages that they do not handle.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>
