<Type Name="ControlPaint" FullName="System.Windows.Forms.ControlPaint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd671b967a1a03cecb729905295c4a3193127df0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36347189" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ControlPaint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlPaint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlPaint" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlPaint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlPaint sealed" />
  <TypeSignature Language="F#" Value="type ControlPaint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden zum Zeichnen von Windows-Standardsteuerelementen und der zugehörigen Elemente bereit. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methoden in der <xref:System.Windows.Forms.ControlPaint> Klasse ermöglichen es Ihnen, eigene Steuerelemente oder Elemente von Steuerelementen zu zeichnen. Sie können das Zeichnen von eigene Steuerelemente steuern, wenn die <xref:System.Windows.Forms.ControlStyles.UserPaint> Bit ist gesetzt, um `true` für das Steuerelement. Sie können abrufen oder Festlegen von Stilbits durch Aufrufen der <xref:System.Windows.Forms.Control.GetStyle%2A> oder <xref:System.Windows.Forms.Control.SetStyle%2A> Methoden. Sie können mehrere Stilbits für jedes Steuerelement festlegen. Die <xref:System.Windows.Forms.ControlStyles> Enumerationsmember mit bitweise Operationen kombiniert werden können.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mithilfe eines der <xref:System.Windows.Forms.ControlPaint> Konstruktoren zum Zeichnen einer flachen <xref:System.Windows.Forms.Button> Steuerelement.  
  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.ControlStyles" />
  </Docs>
  <Members>
    <Member MemberName="ContrastControlDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color ContrastControlDark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color ContrastControlDark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ControlPaint.ContrastControlDark" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContrastControlDark As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color ContrastControlDark { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.ContrastControlDark : System.Drawing.Color" Usage="System.Windows.Forms.ControlPaint.ContrastControlDark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die als <see cref="P:System.Drawing.SystemColors.ControlDark" />-Farbe zu verwendende Farbe ab.</summary>
        <value>Die als <see cref="T:System.Drawing.Color" />-Farbe zu verwendende <see cref="P:System.Drawing.SystemColors.ControlDark" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Benutzer aktiviert hat die <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> Modus, diese Eigenschaft wird festgelegt, um <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=nameWithType>ist, andernfalls wird festgelegt <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemInformation" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmap16Bit">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmap16Bit (System.Drawing.Bitmap bitmap, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmap16Bit(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmap16Bit(System::Drawing::Bitmap ^ bitmap, System::Drawing::Color background);" />
      <MemberSignature Language="F#" Value="static member CreateHBitmap16Bit : System.Drawing.Bitmap * System.Drawing.Color -&gt; nativeint" Usage="System.Windows.Forms.ControlPaint.CreateHBitmap16Bit (bitmap, background)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="bitmap">Die zu erstellende <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="background">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds.</param>
        <summary>Erstellt eine 16-Bit-Farbbitmap.</summary>
        <returns>
          <see cref="T:System.IntPtr" /> zur Darstellung des Handles für die Bitmap.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapColorMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapColorMask (System.Drawing.Bitmap bitmap, IntPtr monochromeMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapColorMask(class System.Drawing.Bitmap bitmap, native int monochromeMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmapColorMask(System::Drawing::Bitmap ^ bitmap, IntPtr monochromeMask);" />
      <MemberSignature Language="F#" Value="static member CreateHBitmapColorMask : System.Drawing.Bitmap * nativeint -&gt; nativeint" Usage="System.Windows.Forms.ControlPaint.CreateHBitmapColorMask (bitmap, monochromeMask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="monochromeMask" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="bitmap">Die zu erstellende <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="monochromeMask">Ein Zeiger auf die monochrome Maske.</param>
        <summary>Erstellt eine Win32-<see langword="HBITMAP" /> aus dem Bild.</summary>
        <returns>
          <see cref="T:System.IntPtr" /> zur Darstellung des Handles für die Bitmap.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sind verantwortlich für die Zuordnung der `HBITMAP`. Wenn das Bild Transparenz verwendet wird, wird der Hintergrund mit der angegebenen Farbe ausgefüllt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapTransparencyMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapTransparencyMask (System.Drawing.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapTransparencyMask(class System.Drawing.Bitmap bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmapTransparencyMask(System::Drawing::Bitmap ^ bitmap);" />
      <MemberSignature Language="F#" Value="static member CreateHBitmapTransparencyMask : System.Drawing.Bitmap -&gt; nativeint" Usage="System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask bitmap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">Die <see cref="T:System.Drawing.Bitmap" />, für die die Transparenzmaske erstellt werden soll.</param>
        <summary>Erstellt eine Farbmaske für die angegebene Bitmap, die angibt, welche Farbe transparent angezeigt werden soll.</summary>
        <returns>Das Handle für die <see cref="T:System.Drawing.Bitmap" />-Maske.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sind verantwortlich für die Zuordnung der Bitmap.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dark">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein neues Objekt dunkler Farbe für das Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dark (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Dark(System::Drawing::Color baseColor);" />
      <MemberSignature Language="F#" Value="static member Dark : System.Drawing.Color -&gt; System.Drawing.Color" Usage="System.Windows.Forms.ControlPaint.Dark baseColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">Die abzudunkelnde <see cref="T:System.Drawing.Color" />.</param>
        <summary>Erstellt aus der angegebenen Farbe ein neues Objekt dunkler Farbe für das Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Drawing.Color" />, die die dunkle Farbe für das Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das angegebene <xref:System.Drawing.Color> ist eines der der <xref:System.Drawing.SystemColors>, konvertiert die Farbe einer <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> Farbe; andernfalls wird die Farbe der Helligkeitswert verringert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor, float percOfDarkDark);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor, float32 percOfDarkDark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dark (baseColor As Color, percOfDarkDark As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Dark(System::Drawing::Color baseColor, float percOfDarkDark);" />
      <MemberSignature Language="F#" Value="static member Dark : System.Drawing.Color * single -&gt; System.Drawing.Color" Usage="System.Windows.Forms.ControlPaint.Dark (baseColor, percOfDarkDark)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfDarkDark" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor">Die abzudunkelnde <see cref="T:System.Drawing.Color" />.</param>
        <param name="percOfDarkDark">Der Prozentsatz, um den die angegebene <see cref="T:System.Drawing.Color" /> abgedunkelt werden soll.</param>
        <summary>Erstellt aus der angegebenen Farbe ein neues Objekt dunkler Farbe für das Steuerelement und dunkelt es um den angegebenen Prozentsatz ab.</summary>
        <returns>Eine <see cref="T:System.Drawing.Color" />, die die dunkle Farbe für das Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das angegebene <xref:System.Drawing.Color> ist eines der der <xref:System.Drawing.SystemColors>, konvertiert die Farbe einer <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> Farbe; andernfalls wird die Farbe der Helligkeitswert verringert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DarkDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DarkDark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color DarkDark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DarkDark (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color DarkDark(System::Drawing::Color baseColor);" />
      <MemberSignature Language="F#" Value="static member DarkDark : System.Drawing.Color -&gt; System.Drawing.Color" Usage="System.Windows.Forms.ControlPaint.DarkDark baseColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">Die abzudunkelnde <see cref="T:System.Drawing.Color" />.</param>
        <summary>Erstellt aus der angegebenen Farbe ein neues Objekt dunkler Farbe für das Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Drawing.Color" />, die die dunkle Farbe für das Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das angegebene <xref:System.Drawing.Color> ist eines der der <xref:System.Drawing.SystemColors>, konvertiert die Farbe der <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=nameWithType> Farbe; andernfalls wird die Farbe der Helligkeitswert erhöht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBorder">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet einen Rahmen um ein Schaltflächen-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color color, System.Windows.Forms.ButtonBorderStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color color, valuetype System.Windows.Forms.ButtonBorderStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Drawing::Color color, System::Windows::Forms::ButtonBorderStyle style);" />
      <MemberSignature Language="F#" Value="static member DrawBorder : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Color * System.Windows.Forms.ButtonBorderStyle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawBorder (graphics, bounds, color, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Rahmens darstellt.</param>
        <param name="color">Die <see cref="T:System.Drawing.Color" /> des Rahmens.</param>
        <param name="style">Einer der <see cref="T:System.Windows.Forms.ButtonBorderStyle" />-Werte, der das Format des Rahmens angibt.</param>
        <summary>Zeichnet einen Rahmen um ein Schaltflächen-Steuerelement im angegebenen Format, in der angegebenen Farbe, auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung eines der <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, importiert der <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Stellen Sie sicher des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color leftColor, int leftWidth, System.Windows.Forms.ButtonBorderStyle leftStyle, System.Drawing.Color topColor, int topWidth, System.Windows.Forms.ButtonBorderStyle topStyle, System.Drawing.Color rightColor, int rightWidth, System.Windows.Forms.ButtonBorderStyle rightStyle, System.Drawing.Color bottomColor, int bottomWidth, System.Windows.Forms.ButtonBorderStyle bottomStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color leftColor, int32 leftWidth, valuetype System.Windows.Forms.ButtonBorderStyle leftStyle, valuetype System.Drawing.Color topColor, int32 topWidth, valuetype System.Windows.Forms.ButtonBorderStyle topStyle, valuetype System.Drawing.Color rightColor, int32 rightWidth, valuetype System.Windows.Forms.ButtonBorderStyle rightStyle, valuetype System.Drawing.Color bottomColor, int32 bottomWidth, valuetype System.Windows.Forms.ButtonBorderStyle bottomStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Drawing::Color leftColor, int leftWidth, System::Windows::Forms::ButtonBorderStyle leftStyle, System::Drawing::Color topColor, int topWidth, System::Windows::Forms::ButtonBorderStyle topStyle, System::Drawing::Color rightColor, int rightWidth, System::Windows::Forms::ButtonBorderStyle rightStyle, System::Drawing::Color bottomColor, int bottomWidth, System::Windows::Forms::ButtonBorderStyle bottomStyle);" />
      <MemberSignature Language="F#" Value="static member DrawBorder : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Color * int * System.Windows.Forms.ButtonBorderStyle * System.Drawing.Color * int * System.Windows.Forms.ButtonBorderStyle * System.Drawing.Color * int * System.Windows.Forms.ButtonBorderStyle * System.Drawing.Color * int * System.Windows.Forms.ButtonBorderStyle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawBorder (graphics, bounds, leftColor, leftWidth, leftStyle, topColor, topWidth, topStyle, rightColor, rightWidth, rightStyle, bottomColor, bottomWidth, bottomStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="leftColor" Type="System.Drawing.Color" />
        <Parameter Name="leftWidth" Type="System.Int32" />
        <Parameter Name="leftStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="topColor" Type="System.Drawing.Color" />
        <Parameter Name="topWidth" Type="System.Int32" />
        <Parameter Name="topStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="rightColor" Type="System.Drawing.Color" />
        <Parameter Name="rightWidth" Type="System.Int32" />
        <Parameter Name="rightStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="bottomColor" Type="System.Drawing.Color" />
        <Parameter Name="bottomWidth" Type="System.Int32" />
        <Parameter Name="bottomStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Rahmens darstellt.</param>
        <param name="leftColor">Die <see cref="T:System.Drawing.Color" /> der linken Rahmenseite.</param>
        <param name="leftWidth">Die Breite des linken Rahmens.</param>
        <param name="leftStyle">Einer der <see cref="T:System.Windows.Forms.ButtonBorderStyle" />-Werte, der das Format des linken Rahmens angibt.</param>
        <param name="topColor">Die <see cref="T:System.Drawing.Color" /> der oberen Rahmenseite.</param>
        <param name="topWidth">Die Breite des oberen Rahmens.</param>
        <param name="topStyle">Einer der <see cref="T:System.Windows.Forms.ButtonBorderStyle" />-Werte, der das Format des oberen Rahmens angibt.</param>
        <param name="rightColor">Die <see cref="T:System.Drawing.Color" /> der rechten Rahmenseite.</param>
        <param name="rightWidth">Die Breite des rechten Rahmens.</param>
        <param name="rightStyle">Einer der <see cref="T:System.Windows.Forms.ButtonBorderStyle" />-Werte, der das Format des rechten Rahmens angibt.</param>
        <param name="bottomColor">Die <see cref="T:System.Drawing.Color" /> der unteren Rahmenseite.</param>
        <param name="bottomWidth">Die Breite des unteren Rahmens.</param>
        <param name="bottomStyle">Einer der <see cref="T:System.Windows.Forms.ButtonBorderStyle" />-Werte, der das Format des unteren Rahmens angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen einen Rahmen um ein Schaltflächen-Steuerelement mit den angegebenen Formaten, Farben und Rahmenbreiten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung eines der <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, importiert der <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Stellen Sie sicher des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ButtonBorderStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBorder3D">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet einen dreidimensionalen Rahmen um ein Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="static member DrawBorder3D : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawBorder3D (graphics, rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Rahmens darstellt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen einen dreidimensionalen Rahmen um ein Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> Stil dient standardmäßig zum Zeichnen des Rahmens.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung eines der <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, importiert der <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Stellen Sie sicher des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::Border3DStyle style);" />
      <MemberSignature Language="F#" Value="static member DrawBorder3D : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.Border3DStyle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawBorder3D (graphics, rectangle, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Rahmens darstellt.</param>
        <param name="style">Einer der <see cref="T:System.Windows.Forms.Border3DStyle" />-Werte, der das Format des Rahmens angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen einen dreidimensionalen Rahmen im angegebenen Format um ein Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung eines der <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, importiert der <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Stellen Sie sicher des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::Border3DStyle style, System::Windows::Forms::Border3DSide sides);" />
      <MemberSignature Language="F#" Value="static member DrawBorder3D : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.Border3DStyle * System.Windows.Forms.Border3DSide -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawBorder3D (graphics, rectangle, style, sides)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Rahmens darstellt.</param>
        <param name="style">Einer der <see cref="T:System.Windows.Forms.Border3DStyle" />-Werte, der das Format des Rahmens angibt.</param>
        <param name="sides">Einer der <see cref="T:System.Windows.Forms.Border3DSide" />-Werte, der die Seite des Rechtecks angibt, an der ein Rahmen gezeichnet werden soll.</param>
        <summary>Zeichnet einen dreidimensionalen Rahmen um ein Steuerelement im angegebenen Format, auf der angegebenen Grafikoberfläche und den angegebenen Seiten und innerhalb der angegebenen Begrenzungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung eines der <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, importiert der <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Stellen Sie sicher des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
        <altmember cref="T:System.Windows.Forms.Border3DSide" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="static member DrawBorder3D : System.Drawing.Graphics * int * int * int * int -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawBorder3D (graphics, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Seite des Rahmenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Seite des Rahmenrechtecks.</param>
        <param name="width">Die Breite des Rahmenrechtecks.</param>
        <param name="height">Die Höhe des Rahmenrechtecks.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen einen dreidimensionalen Rahmen um ein Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> Stil dient standardmäßig zum Zeichnen des Rahmens.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung eines der <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, importiert der <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Stellen Sie sicher des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::Border3DStyle style);" />
      <MemberSignature Language="F#" Value="static member DrawBorder3D : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.Border3DStyle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawBorder3D (graphics, x, y, width, height, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Seite des Rahmenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Seite des Rahmenrechtecks.</param>
        <param name="width">Die Breite des Rahmenrechtecks.</param>
        <param name="height">Die Höhe des Rahmenrechtecks.</param>
        <param name="style">Einer der <see cref="T:System.Windows.Forms.Border3DStyle" />-Werte, der das Format des Rahmens angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen einen dreidimensionalen Rahmen im angegebenen Format um ein Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung eines der <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, importiert der <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Stellen Sie sicher des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::Border3DStyle style, System::Windows::Forms::Border3DSide sides);" />
      <MemberSignature Language="F#" Value="static member DrawBorder3D : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.Border3DStyle * System.Windows.Forms.Border3DSide -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawBorder3D (graphics, x, y, width, height, style, sides)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Seite des Rahmenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Seite des Rahmenrechtecks.</param>
        <param name="width">Die Breite des Rahmenrechtecks.</param>
        <param name="height">Die Höhe des Rahmenrechtecks.</param>
        <param name="style">Einer der <see cref="T:System.Windows.Forms.Border3DStyle" />-Werte, der das Format des Rahmens angibt.</param>
        <param name="sides">Die <see cref="T:System.Windows.Forms.Border3DSide" /> des Rechtecks, an der der Rahmen gezeichnet werden soll.</param>
        <summary>Zeichnet einen dreidimensionalen Rahmen um ein Steuerelement im angegebenen Format, auf der angegebenen Grafikoberfläche und der angegebenen Seite und innerhalb der angegebenen Begrenzungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung eines der <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, importiert der <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Stellen Sie sicher des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
        <altmember cref="T:System.Windows.Forms.Border3DSide" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet ein Schaltflächen-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawButton (graphics, rectangle, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen der Schaltfläche darstellt.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen der Schaltfläche angibt.</param>
        <summary>Zeichnet ein Schaltflächen-Steuerelement auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawButton (graphics, x, y, width, height, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="width">Die Breite der Schaltfläche.</param>
        <param name="height">Die Höhe der Schaltfläche.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen der Schaltfläche angibt.</param>
        <summary>Zeichnet ein Schaltflächen-Steuerelement auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen im angegebenen Zustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCaptionButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet ein Titelleisten-Schaltflächen-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCaptionButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::CaptionButton button, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawCaptionButton : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.CaptionButton * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawCaptionButton (graphics, rectangle, button, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen der Titelleisten-Schaltfläche darstellt.</param>
        <param name="button">Einer der <see cref="T:System.Windows.Forms.CaptionButton" />-Werte, der den Typ der zu zeichnenden Titelleisten-Schaltfläche angibt.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen der Schaltfläche angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen das angegebene Titelleisten-Schaltflächen-Steuerelement im angegebenen Zustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A?displayProperty=nameWithType> Methode und die <xref:System.Windows.Forms.CaptionButton> Enumeration. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular mit einer Schaltfläche mit dem Namen `Button1`. Das Formular importieren sollte die <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Gewährleisten Sie der Schaltfläche <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CaptionButton" />
      </Docs>
    </Member>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCaptionButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::CaptionButton button, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawCaptionButton : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.CaptionButton * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawCaptionButton (graphics, x, y, width, height, button, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Seite des Zeichenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Seite des Zeichenrechtecks.</param>
        <param name="width">Die Breite des Zeichenrechtecks.</param>
        <param name="height">Die Höhe des Zeichenrechtecks.</param>
        <param name="button">Einer der <see cref="T:System.Windows.Forms.CaptionButton" />-Werte, der den Typ der zu zeichnenden Titelleisten-Schaltfläche angibt.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen der Schaltfläche angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen das angegebene Titelleisten-Schaltflächen-Steuerelement im angegebenen Zustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A> Methode und die <xref:System.Windows.Forms.CaptionButton> Enumeration. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular mit einem <xref:System.Windows.Forms.Button> mit dem Namen `Button1`. Das Formular importieren sollte die <xref:System.Windows.Forms> und <xref:System.Drawing> Namespaces. Gewährleisten Sie der Schaltfläche <xref:System.Windows.Forms.Control.Paint> Ereignis in diesem Beispiel wird der Ereignishandler zugeordnet ist.  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CaptionButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCheckBox">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet ein Kontrollkästchen-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCheckBox(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawCheckBox : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawCheckBox (graphics, rectangle, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Kontrollkästchens darstellt.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen des Kontrollkästchens angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen ein Kontrollkästchen-Steuerelement im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCheckBox(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawCheckBox : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawCheckBox (graphics, x, y, width, height, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="width">Die Breite des Kontrollkästchens.</param>
        <param name="height">Die Höhe des Kontrollkästchens.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen des Kontrollkästchens angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen ein Kontrollkästchen-Steuerelement im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawComboButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet eine Dropdown-Schaltfläche in einem Kombinationsfeld-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawComboButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawComboButton : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawComboButton (graphics, rectangle, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Kombinationsfelds darstellt.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen des Kombinationsfelds angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen eine Dropdown-Schaltfläche in einem Kombinationsfeld-Steuerelement im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawComboButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawComboButton : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawComboButton (graphics, x, y, width, height, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Seite des Rahmenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Seite des Rahmenrechtecks.</param>
        <param name="width">Die Breite des Kombinationsfelds.</param>
        <param name="height">Die Höhe des Kombinationsfelds.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen des Kombinationsfelds angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen eine Dropdown-Schaltfläche in einem Kombinationsfeld-Steuerelement im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawContainerGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawContainerGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawContainerGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawContainerGrabHandle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="static member DrawContainerGrabHandle : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawContainerGrabHandle (graphics, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Ziehpunktsymbols darstellt.</param>
        <summary>Zeichnet ein Ziehpunktsymbol eines Containersteuerelements auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ziehpunkte werden von Containern verwendet, um zu verdeutlichen, dass der Benutzer die Container direkt bearbeiten kann. Die Bearbeitung kann Aktionen wie das Ändern der Größe und verschieben bestehen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawFocusRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet ein Fokusrechteck.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawFocusRectangle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="static member DrawFocusRectangle : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawFocusRectangle (graphics, rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Ziehpunktsymbols darstellt.</param>
        <summary>Zeichnet ein Fokusrechteck auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Fokusrechteck ist ein gepunktetes Rechteck, das von Windows verwendet, um anzugeben, welches Steuerelement den aktuellen Tastaturfokus aufweist.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> Methode und die <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> Eigenschaft. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular aus. Fügen Sie zwei Schaltflächen, die mit dem Namen `Button1` und `Button2` in das Formular und vergewissern Sie sich an ihren Ereignishandler alle Ereignisse verbunden sind.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawFocusRectangle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawFocusRectangle : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawFocusRectangle (graphics, rectangle, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Ziehpunktsymbols darstellt.</param>
        <param name="foreColor">Die <see cref="T:System.Drawing.Color" />, die als Vordergrundfarbe für das Objekt verwendet wird, auf dem das Fokusrechteck gezeichnet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" />, die als Hintergrundfarbe für das Objekt verwendet wird, auf dem das Fokusrechteck gezeichnet werden soll.</param>
        <summary>Zeichnet ein Fokusrechteck auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Fokusrechteck ist ein gepunktetes Rechteck, das von Windows verwendet, um anzugeben, welches Steuerelement den aktuellen Tastaturfokus aufweist.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> Methode und die <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> Eigenschaft. Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular aus. Fügen Sie zwei Schaltflächen, die mit dem Namen `Button1` und Button2 in das Formular und vergewissern Sie sich an ihren Ereignishandler alle Ereignisse verbunden sind.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawGrabHandle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, bool primary, bool enabled);" />
      <MemberSignature Language="F#" Value="static member DrawGrabHandle : System.Drawing.Graphics * System.Drawing.Rectangle * bool * bool -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawGrabHandle (graphics, rectangle, primary, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Ziehpunktsymbols darstellt.</param>
        <param name="primary">
          <see langword="true" />, um den Ziehpunkt als primären Ziehpunkt zu zeichnen, andernfalls <see langword="false" />.</param>
        <param name="enabled">
          <see langword="true" />, um den Ziehpunkt im aktivierten Zustand zu zeichnen, andernfalls <see langword="false" />.</param>
        <summary>Zeichnet ein Standardsymbol für den Auswahlziehpunkt auf der angegebenen Grafikoberfläche, innerhalb der angegebenen Begrenzungen sowie im angegebenen Zustand und Format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ziehpunkte werden von Objekten verwendet, um zu verdeutlichen, dass der Benutzer das Objekt direkt bearbeiten kann. Die Bearbeitung kann Aktionen wie das Ändern der Größe und verschieben bestehen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrid">
      <MemberSignature Language="C#" Value="public static void DrawGrid (System.Drawing.Graphics graphics, System.Drawing.Rectangle area, System.Drawing.Size pixelsBetweenDots, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrid(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle area, valuetype System.Drawing.Size pixelsBetweenDots, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawGrid(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle area, System::Drawing::Size pixelsBetweenDots, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawGrid : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Size * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawGrid (graphics, area, pixelsBetweenDots, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="area" Type="System.Drawing.Rectangle" />
        <Parameter Name="pixelsBetweenDots" Type="System.Drawing.Size" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="area">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Rasters darstellt.</param>
        <param name="pixelsBetweenDots">Die <see cref="T:System.Drawing.Size" />, die den vertikalen und horizontalen Abstand zwischen den Rasterpunkten angibt.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds hinter dem Datenblatt.</param>
        <summary>Zeichnet ein Datenblatt aus Ein-Pixel-Punkten mit dem angegebenen Abstand, innerhalb der angegebenen Begrenzungen, auf der angegebenen Grafikoberfläche und in der angegebenen Farbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backColor` Parameter wird verwendet, um die Füllfarbe der Punkte berechnet, sodass das Datenblatt immer vor dem Hintergrund angezeigt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawImageDisabled">
      <MemberSignature Language="C#" Value="public static void DrawImageDisabled (System.Drawing.Graphics graphics, System.Drawing.Image image, int x, int y, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawImageDisabled(class System.Drawing.Graphics graphics, class System.Drawing.Image image, int32 x, int32 y, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawImageDisabled(System::Drawing::Graphics ^ graphics, System::Drawing::Image ^ image, int x, int y, System::Drawing::Color background);" />
      <MemberSignature Language="F#" Value="static member DrawImageDisabled : System.Drawing.Graphics * System.Drawing.Image * int * int * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawImageDisabled (graphics, image, x, y, background)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="image">Das zu zeichnende <see cref="T:System.Drawing.Image" />.</param>
        <param name="x">Die x-Koordinate der oberen linken Seite des Rahmenbilds.</param>
        <param name="y">Die y-Koordinate der oberen linken Seite des Rahmenbilds.</param>
        <param name="background">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds hinter dem Bild.</param>
        <summary>Zeichnet das angegebene Bild im deaktivierten Zustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `background` Parameter wird verwendet, um die Füllfarbe des deaktivierten Bilds berechnet, sodass es immer vor dem Hintergrund angezeigt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="DrawLockedFrame">
      <MemberSignature Language="C#" Value="public static void DrawLockedFrame (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawLockedFrame(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawLockedFrame(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, bool primary);" />
      <MemberSignature Language="F#" Value="static member DrawLockedFrame : System.Drawing.Graphics * System.Drawing.Rectangle * bool -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawLockedFrame (graphics, rectangle, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Rahmens darstellt.</param>
        <param name="primary">
          <see langword="true" />, um diesen Rahmen mit den für die primäre Auswahl verwendeten Farben zu zeichnen, andernfalls <see langword="false" />.</param>
        <summary>Zeichnet einen gesperrten Auswahlrahmen auf dem Bildschirm innerhalb der angegebenen Begrenzungen und auf der angegebenen Grafikoberfläche. Gibt an, ob der Rahmen mit den Farben der primären Auswahl gezeichnet werden soll.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawMenuGlyph">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet ein Menüsymbol für ein Menüelement-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::MenuGlyph glyph);" />
      <MemberSignature Language="F#" Value="static member DrawMenuGlyph : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.MenuGlyph -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawMenuGlyph (graphics, rectangle, glyph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Symbols darstellt.</param>
        <param name="glyph">Einer der <see cref="T:System.Windows.Forms.MenuGlyph" />-Werte, der das zu zeichnende Bild angibt.</param>
        <summary>Zeichnet das angegebene Menüsymbol auf einem Menüelement-Steuerelement innerhalb der angegebenen Begrenzungen und auf der angegebenen Oberfläche.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Ownerdrawing- <xref:System.Windows.Forms.MenuItem> Steuerelemente müssen beim Überprüfen der Eigenschaftswerte, um zu bestimmen, das richtige Symbol gezeichnet werden soll, oder entfernen. Z. B., wenn die <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `true`, rufen Sie die <xref:System.Windows.Forms.MenuGlyph.Checkmark> Wert <xref:System.Windows.Forms.MenuGlyph> ein Häkchen gezeichnet werden soll, auf die <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::MenuGlyph glyph, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawMenuGlyph : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.MenuGlyph * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawMenuGlyph (graphics, rectangle, glyph, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Symbols darstellt.</param>
        <param name="glyph">Einer der <see cref="T:System.Windows.Forms.MenuGlyph" />-Werte, der das zu zeichnende Bild angibt.</param>
        <param name="foreColor">Die Farbe, die <see cref="P:System.Drawing.Color.White" /> als Vordergrundfarbe ersetzt.</param>
        <param name="backColor">Die Farbe, die <see cref="P:System.Drawing.Color.Black" /> als Hintergrundfarbe ersetzt.</param>
        <summary>Zeichnet auf der angegebenen Oberfläche und innerhalb der angegebenen Begrenzungen das angegebene Menüsymbol auf einem Menüelement-Steuerelement. Dabei wird <see cref="P:System.Drawing.Color.White" /> durch die im <paramref name="backColor" />-Parameter angegebene Farbe ersetzt und <see cref="P:System.Drawing.Color.Black" /> wird durch die im <paramref name="foreColor" />-Parameter angegebene Farbe ersetzt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Ownerdrawing- <xref:System.Windows.Forms.MenuItem> Steuerelemente müssen beim Überprüfen der Eigenschaftswerte, um zu bestimmen, das richtige Symbol gezeichnet werden soll, oder entfernen. Z. B., wenn die <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `true`, rufen Sie die <xref:System.Windows.Forms.MenuGlyph.Checkmark> Wert <xref:System.Windows.Forms.MenuGlyph> ein Häkchen gezeichnet werden soll, auf die <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::MenuGlyph glyph);" />
      <MemberSignature Language="F#" Value="static member DrawMenuGlyph : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.MenuGlyph -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawMenuGlyph (graphics, x, y, width, height, glyph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="width">Die Breite des Menüsymbols.</param>
        <param name="height">Die Höhe des Menüsymbols.</param>
        <param name="glyph">Einer der <see cref="T:System.Windows.Forms.MenuGlyph" />-Werte, der das zu zeichnende Bild angibt.</param>
        <summary>Zeichnet das angegebene Menüsymbol auf einem Menüelement-Steuerelement innerhalb der angegebenen Begrenzungen und auf der angegebenen Oberfläche.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Ownerdrawing- <xref:System.Windows.Forms.MenuItem> Steuerelemente müssen beim Überprüfen der Eigenschaftswerte, um zu bestimmen, das richtige Symbol gezeichnet werden soll, oder entfernen. Z. B., wenn die <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> -Eigenschaftensatz auf "true", rufen Sie die <xref:System.Windows.Forms.MenuGlyph.Checkmark> Wert <xref:System.Windows.Forms.MenuGlyph> ein Häkchen gezeichnet werden soll, auf die <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::MenuGlyph glyph, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawMenuGlyph : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.MenuGlyph * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawMenuGlyph (graphics, x, y, width, height, glyph, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="width">Die Breite des Menüsymbols.</param>
        <param name="height">Die Höhe des Menüsymbols.</param>
        <param name="glyph">Einer der <see cref="T:System.Windows.Forms.MenuGlyph" />-Werte, der das zu zeichnende Bild angibt.</param>
        <param name="foreColor">Die Farbe, die <see cref="P:System.Drawing.Color.White" /> als Vordergrundfarbe ersetzt.</param>
        <param name="backColor">Die Farbe, die <see cref="P:System.Drawing.Color.Black" /> als Hintergrundfarbe ersetzt.</param>
        <summary>Zeichnet auf der angegebenen Oberfläche und innerhalb der angegebenen Koordinaten, d. h. mit der angegebenen Höhe und Breite, das angegebene Menüsymbol auf einem Menüelement-Steuerelement. Dabei wird <see cref="P:System.Drawing.Color.White" /> durch die im <paramref name="backColor" />-Parameter angegebene Farbe ersetzt und <see cref="P:System.Drawing.Color.Black" /> wird durch die im <paramref name="foreColor" />-Parameter angegebene Farbe ersetzt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Ownerdrawing- <xref:System.Windows.Forms.MenuItem> Steuerelemente müssen beim Überprüfen der Eigenschaftswerte, um zu bestimmen, das richtige Symbol gezeichnet werden soll, oder entfernen. Z. B., wenn die <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `true`, rufen Sie die <xref:System.Windows.Forms.MenuGlyph.Checkmark> Wert <xref:System.Windows.Forms.MenuGlyph> ein Häkchen gezeichnet werden soll, auf die <xref:System.Windows.Forms.MenuItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawMixedCheckBox">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet ein Kontrollkästchen-Steuerelement mit drei Zuständen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMixedCheckBox(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawMixedCheckBox : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawMixedCheckBox (graphics, rectangle, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Kontrollkästchens darstellt.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen des Kontrollkästchens angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen ein Kontrollkästchen-Steuerelement mit drei Zuständen im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMixedCheckBox(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawMixedCheckBox : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawMixedCheckBox (graphics, x, y, width, height, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="width">Die Breite des Kontrollkästchens.</param>
        <param name="height">Die Höhe des Kontrollkästchens.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen des Kontrollkästchens angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen ein Kontrollkästchen-Steuerelement mit drei Zuständen im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRadioButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet ein Optionsfeld-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawRadioButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawRadioButton : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawRadioButton (graphics, rectangle, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Optionsfelds darstellt.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen des Optionsfelds angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen ein Optionsfeld-Steuerelement im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawRadioButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawRadioButton : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawRadioButton (graphics, x, y, width, height, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="width">Die Breite des Optionsfelds.</param>
        <param name="height">Die Höhe des Optionsfelds.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen des Optionsfelds angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen ein Optionsfeld-Steuerelement im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleFrame">
      <MemberSignature Language="C#" Value="public static void DrawReversibleFrame (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor, System.Windows.Forms.FrameStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleFrame(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.FrameStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawReversibleFrame(System::Drawing::Rectangle rectangle, System::Drawing::Color backColor, System::Windows::Forms::FrameStyle style);" />
      <MemberSignature Language="F#" Value="static member DrawReversibleFrame : System.Drawing.Rectangle * System.Drawing.Color * System.Windows.Forms.FrameStyle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawReversibleFrame (rectangle, backColor, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.FrameStyle" />
      </Parameters>
      <Docs>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des zu zeichnenden Rechtecks in Bildschirmkoordinaten darstellt.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds hinter dem Rahmen.</param>
        <param name="style">Einer der <see cref="T:System.Windows.Forms.FrameStyle" />-Werte, der das Rahmenformat angibt.</param>
        <summary>Zeichnet einen umkehrbaren Rahmen auf dem Bildschirm innerhalb der angegebenen Begrenzungen, mit der angegebenen Hintergrundfarbe und im angegebenen Zustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backColor` Parameter wird verwendet, um die Füllfarbe des Frames zu berechnen, sodass es immer vor dem Hintergrund angezeigt wird.  
  
 Die Ergebnisse dieser Methode können rückgängig gemacht werden, indem desselben Frames erneut gezeichnet wird. Zeichnen eines Frames verwenden diese Methode ähnelt invertieren einen Bereich des Bildschirms, außer dass sie eine bessere Leistung für eine größere Bandbreite von Farben bereitstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Control.RectangleToScreen%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType>, und die <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A> Elemente. Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular namens `Form1` mehrere Steuerelemente enthält. Dieses Beispiel benötigen Sie, dass die Ereignishandler, die im Beispiel definiert Mausereignisse verbunden sind.  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FrameStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleLine">
      <MemberSignature Language="C#" Value="public static void DrawReversibleLine (System.Drawing.Point start, System.Drawing.Point end, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleLine(valuetype System.Drawing.Point start, valuetype System.Drawing.Point end, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawReversibleLine (start As Point, end As Point, backColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawReversibleLine(System::Drawing::Point start, System::Drawing::Point end, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawReversibleLine : System.Drawing.Point * System.Drawing.Point * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawReversibleLine (start, end, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Drawing.Point" />
        <Parameter Name="end" Type="System.Drawing.Point" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="start">Der Start-<see cref="T:System.Drawing.Point" /> der Linie in Bildschirmkoordinaten.</param>
        <param name="end">Der End-<see cref="T:System.Drawing.Point" /> der Linie in Bildschirmkoordinaten.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds hinter der Linie.</param>
        <summary>Zeichnet eine umkehrbare Linie auf dem Bildschirm zwischen den angegebenen Start- und Endpunkten und mit der angegebenen Hintergrundfarbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backColor` Parameter wird verwendet, um die Füllfarbe der Linie berechnet, sodass es immer vor dem Hintergrund angezeigt wird.  
  
 Die Ergebnisse dieser Methode können rückgängig gemacht werden, von der gleichen Zeile erneut gezeichnet wird. Zeichnen einer Linie, die mit dieser Methode ähnelt dem Umkehren eines Bereichs des Bildschirms, außer dass sie eine bessere Leistung für eine größere Bandbreite von Farben bereitstellt.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ControlPaint.DrawReversibleLine%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType> Methoden. Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular. Fügen Sie eine Schaltfläche mit dem Namen `Button3` in das Formular und vergewissern Sie sich an ihren Ereignishandler alle Ereignisse verbunden sind.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FrameStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawScrollButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet eine Bildlaufschaltfläche auf einem Schiebeleisten-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawScrollButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ScrollButton button, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawScrollButton : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.ScrollButton * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawScrollButton (graphics, rectangle, button, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Symbols darstellt.</param>
        <param name="button">Einer der <see cref="T:System.Windows.Forms.ScrollButton" />-Werte, der die Art des zu zeichnenden Bildlaufpfeils angibt.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen der Bildlaufschaltfläche angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen die angegebene Bildlaufschaltfläche auf einem Schiebeleisten-Steuerelement im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ScrollButton" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="T:System.Windows.Forms.ScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawScrollButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ScrollButton button, System::Windows::Forms::ButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawScrollButton : System.Drawing.Graphics * int * int * int * int * System.Windows.Forms.ScrollButton * System.Windows.Forms.ButtonState -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawScrollButton (graphics, x, y, width, height, button, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="x">Die x-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="y">Die y-Koordinate der oberen linken Ecke des Zeichenrechtecks.</param>
        <param name="width">Die Breite der Bildlaufschaltfläche.</param>
        <param name="height">Die Höhe der Bildlaufschaltfläche.</param>
        <param name="button">Einer der <see cref="T:System.Windows.Forms.ScrollButton" />-Werte, der die Art des zu zeichnenden Bildlaufpfeils angibt.</param>
        <param name="state">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.ButtonState" />-Werte, die den Zustand für das Zeichnen der Bildlaufschaltfläche angibt.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen die angegebene Bildlaufschaltfläche auf einem Schiebeleisten-Steuerelement im angegebenen Zustand.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ScrollButton" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="T:System.Windows.Forms.ScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="DrawSelectionFrame">
      <MemberSignature Language="C#" Value="public static void DrawSelectionFrame (System.Drawing.Graphics graphics, bool active, System.Drawing.Rectangle outsideRect, System.Drawing.Rectangle insideRect, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSelectionFrame(class System.Drawing.Graphics graphics, bool active, valuetype System.Drawing.Rectangle outsideRect, valuetype System.Drawing.Rectangle insideRect, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSelectionFrame(System::Drawing::Graphics ^ graphics, bool active, System::Drawing::Rectangle outsideRect, System::Drawing::Rectangle insideRect, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawSelectionFrame : System.Drawing.Graphics * bool * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawSelectionFrame (graphics, active, outsideRect, insideRect, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="active" Type="System.Boolean" />
        <Parameter Name="outsideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="insideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="active">
          <see langword="true" />, um den Auswahlrahmen im aktivierten Zustand zu zeichnen, andernfalls <see langword="false" />.</param>
        <param name="outsideRect">Das <see cref="T:System.Drawing.Rectangle" />, das die äußere Begrenzung des Auswahlrahmens darstellt.</param>
        <param name="insideRect">Das <see cref="T:System.Drawing.Rectangle" />, das die innere Begrenzung des Auswahlrahmens darstellt.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds hinter dem Rahmen.</param>
        <summary>Zeichnet einen Standardauswahlrahmen im angegebenen Zustand, auf der angegebenen Grafikoberfläche, in den angegebenen inneren und äußeren Abmessungen und mit der angegebenen Hintergrundfarbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Auswahl Frame handelt es sich um einen Rahmen, der um eine ausgewählte Komponente zur Entwurfszeit gezeichnet wird.  
  
 Die `backColor` Parameter wird verwendet, um die Füllfarbe des Frames zu berechnen, sodass es immer vor dem Hintergrund angezeigt wird.  
  
 Wenn die `active` Parametersatz auf `true`, der Auswahlrahmen wird gezeichnet, als eine Reihe von Schraffur Markierungen gibt an, dass die Komponente aktiviert wurde; andernfalls der Auswahlrahmen gezeichnet wird, mit einer gepunkteten Muster oder nichts, abhängig von der Implementierung .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawSizeGrip">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet einen Größenziehpunkt in einem Formular.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSizeGrip(System::Drawing::Graphics ^ graphics, System::Drawing::Color backColor, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="static member DrawSizeGrip : System.Drawing.Graphics * System.Drawing.Color * System.Drawing.Rectangle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawSizeGrip (graphics, backColor, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds, mit der die Farben des Größenziehpunkts bestimmt werden.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Größenziehpunkts darstellt.</param>
        <summary>Zeichnet einen Größenziehpunkt in einem Formular mit den angegebenen Begrenzungen und der angegebenen Hintergrundfarbe sowie auf der angegebenen Grafikoberfläche.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backColor` Parameter wird verwendet, um die Farbe des Größenziehpunkts berechnet, sodass es immer vor dem Hintergrund angezeigt wird.  
  
 Wenn Sie ein beträchtliche Anzahl an Fenster definieren, können Sie einen Größenziehpunkt einschließen. Ein Größenziehpunkt handelt es sich um eine spezielle-Handle, das dem Benutzer ermöglicht, ändern Sie die Größe eines Fensters.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSizeGrip(System::Drawing::Graphics ^ graphics, System::Drawing::Color backColor, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="static member DrawSizeGrip : System.Drawing.Graphics * System.Drawing.Color * int * int * int * int -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawSizeGrip (graphics, backColor, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds, mit der die Farben des Größenziehpunkts bestimmt werden.</param>
        <param name="x">Die x-Koordinate der oberen linken Ecke des Größenziehpunkts.</param>
        <param name="y">Die y-Koordinate der oberen linken Ecke des Größenziehpunkts.</param>
        <param name="width">Die Breite des Größenziehpunkts.</param>
        <param name="height">Die Höhe des Größenziehpunkts.</param>
        <summary>Zeichnet einen Größenziehpunkt in einem Formular mit den angegebenen Begrenzungen und der angegebenen Hintergrundfarbe sowie auf der angegebenen Grafikoberfläche.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backColor` Parameter wird verwendet, um die Farbe des Größenziehpunkts berechnet, sodass es immer vor dem Hintergrund angezeigt wird.  
  
 Wenn Sie ein beträchtliche Anzahl an Fenster definieren, können Sie einen Größenziehpunkt einschließen. Ein Größenziehpunkt handelt es sich um eine spezielle-Handle, das dem Benutzer ermöglicht, ändern Sie die Größe eines Fensters.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawStringDisabled">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet die angegebene Zeichenfolge im deaktivierten Zustand.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.Graphics graphics, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.Graphics graphics, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.RectangleF layoutRectangle, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawStringDisabled(System::Drawing::Graphics ^ graphics, System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Color color, System::Drawing::RectangleF layoutRectangle, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="static member DrawStringDisabled : System.Drawing.Graphics * string * System.Drawing.Font * System.Drawing.Color * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawStringDisabled (graphics, s, font, color, layoutRectangle, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="s">Die zu zeichnende Zeichenfolge.</param>
        <param name="font">Die <see cref="T:System.Drawing.Font" />, mit der die Zeichenfolge gezeichnet werden soll.</param>
        <param name="color">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds hinter der Zeichenfolge.</param>
        <param name="layoutRectangle">Das <see cref="T:System.Drawing.RectangleF" />, das die Abmessungen der Zeichenfolge darstellt.</param>
        <param name="format">Das auf die Zeichenfolge anzuwendende <see cref="T:System.Drawing.StringFormat" />.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen die angegebene Zeichenfolge im deaktivierten Zustand mit der angegebenen Schriftart, der angegebenen Farbe und dem angegebenem Format.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.IDeviceContext dc, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.Rectangle layoutRectangle, System.Windows.Forms.TextFormatFlags format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.IDeviceContext dc, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.Rectangle layoutRectangle, valuetype System.Windows.Forms.TextFormatFlags format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawStringDisabled(System::Drawing::IDeviceContext ^ dc, System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Color color, System::Drawing::Rectangle layoutRectangle, System::Windows::Forms::TextFormatFlags format);" />
      <MemberSignature Language="F#" Value="static member DrawStringDisabled : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Color * System.Drawing.Rectangle * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawStringDisabled (dc, s, font, color, layoutRectangle, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der GDI-basierte <see cref="T:System.Windows.Forms.TextRenderer" />.</param>
        <param name="s">Die zu zeichnende Zeichenfolge.</param>
        <param name="font">Die <see cref="T:System.Drawing.Font" />, mit der die Zeichenfolge gezeichnet werden soll.</param>
        <param name="color">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds hinter der Zeichenfolge.</param>
        <param name="layoutRectangle">Das <see cref="T:System.Drawing.RectangleF" />, das die Abmessungen der Zeichenfolge darstellt.</param>
        <param name="format">Das auf die Zeichenfolge anzuwendende <see cref="T:System.Drawing.StringFormat" />.</param>
        <summary>Zeichnet auf der angegebenen Grafikoberfläche und innerhalb der angegebenen Begrenzungen mithilfe des angegebenen GDI-basierten <see cref="T:System.Windows.Forms.TextRenderer" /> die angegebene Zeichenfolge im deaktivierten Zustand mit der angegebenen Schriftart, der angegebenen Farbe und dem angegebenem Format.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawVisualStyleBorder">
      <MemberSignature Language="C#" Value="public static void DrawVisualStyleBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawVisualStyleBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawVisualStyleBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="static member DrawVisualStyleBorder : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; unit" Usage="System.Windows.Forms.ControlPaint.DrawVisualStyleBorder (graphics, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die Instanz von <see cref="T:System.Drawing.Graphics" />, in der gezeichnet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des Rahmens darstellt.</param>
        <summary>Zeichnet einen Rahmen im Format für deaktivierte Elemente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillReversibleRectangle">
      <MemberSignature Language="C#" Value="public static void FillReversibleRectangle (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FillReversibleRectangle(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FillReversibleRectangle(System::Drawing::Rectangle rectangle, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member FillReversibleRectangle : System.Drawing.Rectangle * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.ControlPaint.FillReversibleRectangle (rectangle, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="rectangle">Das <see cref="T:System.Drawing.Rectangle" />, das die Abmessungen des auszufüllenden Rechtecks in Bildschirmkoordinaten darstellt.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" /> des Hintergrunds hinter der Füllung.</param>
        <summary>Zeichnet ein ausgefülltes umkehrbares Rechteck auf dem Bildschirm.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backColor` Parameter wird verwendet, um die Füllfarbe des Rechtecks berechnet, sodass es immer vor dem Hintergrund angezeigt wird.  
  
 Die Ergebnisse dieser Methode können rückgängig gemacht werden, indem das gleiche Rechteck erneut gezeichnet wird. Zeichnen ein Rechteck, das mit dieser Methode ähnelt dem Umkehren eines Bereichs des Bildschirms, außer dass sie eine bessere Leistung für eine größere Bandbreite von Farben bereitstellt.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ControlPaint.FillReversibleRectangle%2A> Methode. Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular. Fügen Sie eine Schaltfläche mit dem Namen `Button2` in das Formular und vergewissern Sie sich an ihren Ereignishandler alle Ereignisse verbunden sind.  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Light">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein neues Objekt heller Farbe für das Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Light (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Light(System::Drawing::Color baseColor);" />
      <MemberSignature Language="F#" Value="static member Light : System.Drawing.Color -&gt; System.Drawing.Color" Usage="System.Windows.Forms.ControlPaint.Light baseColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">Die aufzuhellende <see cref="T:System.Drawing.Color" />.</param>
        <summary>Erstellt aus der angegebenen Farbe ein neues Objekt heller Farbe für das Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Drawing.Color" />, die die helle Farbe für das Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das angegebene <xref:System.Drawing.Color> ist eines der der <xref:System.Drawing.SystemColors>, konvertiert die Farbe einer <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> Farbe; andernfalls wird die Farbe der Helligkeitswert verringert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor, float percOfLightLight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor, float32 percOfLightLight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Light (baseColor As Color, percOfLightLight As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Light(System::Drawing::Color baseColor, float percOfLightLight);" />
      <MemberSignature Language="F#" Value="static member Light : System.Drawing.Color * single -&gt; System.Drawing.Color" Usage="System.Windows.Forms.ControlPaint.Light (baseColor, percOfLightLight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfLightLight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor">Die aufzuhellende <see cref="T:System.Drawing.Color" />.</param>
        <param name="percOfLightLight">Der Prozentsatz, um den die angegebene <see cref="T:System.Drawing.Color" /> aufgehellt werden soll.</param>
        <summary>Erstellt aus der angegebenen Farbe ein neues Objekt heller Farbe für das Steuerelement und hellt es um den angegebenen Prozentsatz auf.</summary>
        <returns>Eine <see cref="T:System.Drawing.Color" />, die die helle Farbe für das Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das angegebene <xref:System.Drawing.Color> ist eines der der <xref:System.Drawing.SystemColors>, konvertiert die Farbe einer <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> Farbe; andernfalls wird die Farbe der Helligkeitswert verringert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightLight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color LightLight (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color LightLight(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LightLight (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color LightLight(System::Drawing::Color baseColor);" />
      <MemberSignature Language="F#" Value="static member LightLight : System.Drawing.Color -&gt; System.Drawing.Color" Usage="System.Windows.Forms.ControlPaint.LightLight baseColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor">Die aufzuhellende <see cref="T:System.Drawing.Color" />.</param>
        <summary>Erstellt aus der angegebenen Farbe ein neues Objekt heller Farbe für das Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Drawing.Color" />, die die helle Farbe für das Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das angegebene <xref:System.Drawing.Color> ist eines der der <xref:System.Drawing.SystemColors>, konvertiert die Farbe der <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=nameWithType> Farbe; andernfalls wird die Farbe der Helligkeitswert erhöht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>