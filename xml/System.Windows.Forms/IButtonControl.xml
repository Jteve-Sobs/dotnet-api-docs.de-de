<Type Name="IButtonControl" FullName="System.Windows.Forms.IButtonControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c6c65828229a2dc34703ff0a868f350bcd45eb4e" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82362275" /></Metadata><TypeSignature Language="C#" Value="public interface IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IButtonControl" />
  <TypeSignature Language="F#" Value="type IButtonControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht es einem Steuerelement, als Schaltfläche in einem Formular zu fungieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Beispiel für die Implementierung dieser Schnittstelle ist die Standard-und Abbruch-Schaltflächen Verarbeitung. Standard Schaltflächen werden benachrichtigt, wenn eine nicht verarbeitete EINGABETASTE für ein Formular eingegeben wird, so wie ein Dialogfeld geschlossen wird. Ebenso werden Abbruch Schaltflächen immer dann benachrichtigt, wenn eine nicht verarbeitete ESC-Taste in einem Formular eingegeben wird, ähnlich wie bei einem Dialogfeld.  
  
   
  
## Examples  
 Im folgenden Beispiel wird von der <xref:System.Windows.Forms.ButtonBase>-Klasse geerbt und die <xref:System.Windows.Forms.IButtonControl>-Schnittstelle implementiert. Die-Implementierung wird der <xref:System.Windows.Forms.IButtonControl.DialogResult%2A>-Eigenschaft und der Methoden <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> und <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> hinzugefügt.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Implementieren Sie diese Schnittstelle in Klassen, die als Schaltflächen Steuerelemente fungieren. Die Member dieser Schnittstelle stellen grundlegende Schaltflächen Funktionen bereit, wie z. b. das Bereitstellen eines <see cref="T:System.Windows.Forms.DialogResult" /> für das übergeordnete Formular oder das Ausführen eines <see cref="E:System.Windows.Forms.Control.Click" /> Ereignisses oder das fungieren als Standard Schaltfläche eines Formulars.</para></block>
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="T:System.Windows.Forms.Form" />
  </Docs>
  <Members>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der beim Klicken auf die Schaltfläche an das übergeordnete Formular zurückgegeben wird, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.DialogResult" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Formular mithilfe der <xref:System.Windows.Forms.Form.ShowDialog%2A>-Methode als Dialogfeld angezeigt wird und auf eine seiner Schaltflächen geklickt wird, wird der <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> Wert der Schaltfläche der <xref:System.Windows.Forms.Form.DialogResult%2A>-Eigenschaft des Formulars zugewiesen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird von der <xref:System.Windows.Forms.ButtonBase>-Klasse geerbt und die <xref:System.Windows.Forms.IButtonControl>-Schnittstelle implementiert. Die-Implementierung wird der <xref:System.Windows.Forms.IButtonControl.DialogResult%2A>-Eigenschaft und der Methoden <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> und <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> hinzugefügt.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyDefault(bool value);" />
      <MemberSignature Language="F#" Value="abstract member NotifyDefault : bool -&gt; unit" Usage="iButtonControl.NotifyDefault value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><see langword="true" />, wenn das Steuerelement als Standardschaltfläche fungiert, andernfalls <see langword="false" />.</param>
        <summary>Benachrichtigt ein Steuerelement darüber, dass es als Standardschaltfläche fungiert, wodurch dessen Darstellung und Verhalten entsprechend angepasst werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von einem übergeordneten Formular aufgerufen, um ein Steuerelement als Standard Schaltfläche zu erstellen. Standard Schaltflächen sind auf einen zusätzlichen Thick Rahmen festgelegt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird von der <xref:System.Windows.Forms.ButtonBase>-Klasse geerbt und die <xref:System.Windows.Forms.IButtonControl>-Schnittstelle implementiert. Die-Implementierung wird der <xref:System.Windows.Forms.IButtonControl.DialogResult%2A>-Eigenschaft und der Methoden <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> und <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> hinzugefügt.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="abstract member PerformClick : unit -&gt; unit" Usage="iButtonControl.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generiert ein <see cref="E:System.Windows.Forms.Control.Click" />-Ereignis für das Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird für die Schaltfläche aufgerufen, die den Fokus besitzt, oder für die Standard Schaltfläche (wenn keine andere Schaltfläche den Fokus besitzt), wenn der Benutzer die EINGABETASTE drückt. Diese Methode wird auch aufgerufen, wenn der Benutzer die ESC-Taste drückt, wenn die Schaltfläche als Schaltfläche "Abbrechen" festgelegt ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird von der <xref:System.Windows.Forms.ButtonBase>-Klasse geerbt und die <xref:System.Windows.Forms.IButtonControl>-Schnittstelle implementiert. Die-Implementierung wird der <xref:System.Windows.Forms.IButtonControl.DialogResult%2A>-Eigenschaft und der Methoden <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> und <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> hinzugefügt.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
  </Members>
</Type>
