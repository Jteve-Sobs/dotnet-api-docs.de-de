<Type Name="ApplicationContext" FullName="System.Windows.Forms.ApplicationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28139d75ef4ecb84227bbc9fb17b9fb2de4017b6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36349759" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ApplicationContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ApplicationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationContext : IDisposable" />
  <TypeSignature Language="F#" Value="type ApplicationContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="86638-101">Gibt die Kontextinformationen zu einem Anwendungsthread an.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86638-101">Specifies the contextual information about an application thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-102">Sie können die <xref:System.Windows.Forms.ApplicationContext> Klasse, die Umstände neu zu definieren, die dazu führen, eine Nachrichtenschleife dass zu beenden.</span><span class="sxs-lookup"><span data-stu-id="86638-102">You can use the <xref:System.Windows.Forms.ApplicationContext> class to redefine the circumstances that cause a message loop to exit.</span></span> <span data-ttu-id="86638-103">Standardmäßig die <xref:System.Windows.Forms.ApplicationContext> überwacht die <xref:System.Windows.Forms.Form.Closed> Ereignis für die Anwendung der wichtigsten <xref:System.Windows.Forms.Form>, dann Nachrichtenschleife der Thread beendet.</span><span class="sxs-lookup"><span data-stu-id="86638-103">By default, the <xref:System.Windows.Forms.ApplicationContext> listens to the <xref:System.Windows.Forms.Form.Closed> event on the application's main <xref:System.Windows.Forms.Form>, then exits the thread's message loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86638-104">Das folgende Codebeispiel zeigt zwei Formen und beendet die Anwendung aus, wenn beide Formulare geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="86638-104">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="86638-105">Wenn die Anwendung gestartet und beendet wird, wird die Position der einzelnen Abfrageformen gespeichert haben.</span><span class="sxs-lookup"><span data-stu-id="86638-105">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="86638-106">In diesem Beispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.ApplicationContext>, zusammen mit der `Application.Run(context)` Methode, um mehrere Formen angezeigt wird, wenn die Anwendung gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="86638-106">This example demonstrates how to use an <xref:System.Windows.Forms.ApplicationContext>, along with the `Application.Run(context)` method, to display multiple forms when the application starts.</span></span>  
  
 <span data-ttu-id="86638-107">Die Klasse `MyApplicationContext` erbt von <xref:System.Windows.Forms.ApplicationContext> und nachverfolgt wird, wenn jedes Formular wird geschlossen, und den aktuellen Thread beendet wird, wenn beide sind.</span><span class="sxs-lookup"><span data-stu-id="86638-107">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="86638-108">Die Klasse speichert die Positionen der einzelnen Abfrageformen für den Benutzer.</span><span class="sxs-lookup"><span data-stu-id="86638-108">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="86638-109">Die Formulardaten Position befindet sich in einer Datei mit dem Titel `Appdata.txt` , erstellt wird, an dem Speicherort, der bestimmt, indem <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="86638-109">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span>  
  
 <span data-ttu-id="86638-110">Die `Main` Methodenaufrufe `Application.Run(context)` an die Anwendung zu starten, erhält die <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="86638-110">The `Main` method calls `Application.Run(context)` to start the application, given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 [!code-cpp[Application#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#1)]
 [!code-csharp[Application#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#1)]
 [!code-vb[Application#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86638-111">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ApplicationContext" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86638-112">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ApplicationContext" />-Klasse ohne Kontext.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with no context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext (System.Windows.Forms.Form mainForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form mainForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mainForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext(System::Windows::Forms::Form ^ mainForm);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ApplicationContext : System.Windows.Forms.Form -&gt; System.Windows.Forms.ApplicationContext" Usage="new System.Windows.Forms.ApplicationContext mainForm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mainForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="mainForm">
          <span data-ttu-id="86638-113">Das als Kontext zu verwendende Haupt-<see cref="T:System.Windows.Forms.Form" /> der Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-113">The main <see cref="T:System.Windows.Forms.Form" /> of the application to use for context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86638-114">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ApplicationContext" />-Klasse mit der angegebenen <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with the specified <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-115">Wenn <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> wird nicht überschrieben, das die Meldungsschleife des Threads beendet, wenn <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="86638-115">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86638-116">Gibt die von der <see cref="T:System.Windows.Forms.ApplicationContext" /> verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-116">Releases the resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="applicationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86638-117">Gibt alle vom <see cref="T:System.Windows.Forms.ApplicationContext" /> verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-117">Releases all resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-118">Rufen Sie <xref:System.Windows.Forms.ApplicationContext.Dispose> auf, wenn Sie <xref:System.Windows.Forms.ApplicationContext> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="86638-118">Call <xref:System.Windows.Forms.ApplicationContext.Dispose> when you are finished using the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="86638-119">Die <xref:System.Windows.Forms.ApplicationContext.Dispose>-Methode bewirkt, dass <xref:System.Windows.Forms.ApplicationContext> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="86638-119">The <xref:System.Windows.Forms.ApplicationContext.Dispose> method leaves the <xref:System.Windows.Forms.ApplicationContext> in an unusable state.</span></span> <span data-ttu-id="86638-120">Nach dem Aufruf <xref:System.Windows.Forms.ApplicationContext.Dispose>, müssen Sie alle Verweise auf Freigeben der <xref:System.Windows.Forms.ApplicationContext> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Windows.Forms.ApplicationContext> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="86638-120">After calling <xref:System.Windows.Forms.ApplicationContext.Dispose>, you must release all references to the <xref:System.Windows.Forms.ApplicationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.ApplicationContext> was occupying.</span></span> <span data-ttu-id="86638-121">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="86638-121">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86638-122">Rufen Sie immer <xref:System.Windows.Forms.ApplicationContext.Dispose> auf, bevor Sie den letzten Verweis auf das <xref:System.Windows.Forms.ApplicationContext> freigeben.</span><span class="sxs-lookup"><span data-stu-id="86638-122">Always call <xref:System.Windows.Forms.ApplicationContext.Dispose> before you release your last reference to the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="86638-123">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Windows.Forms.ApplicationContext>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="86638-123">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.ApplicationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="applicationContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="86638-124">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-124">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86638-125">Gibt die von <see cref="T:System.Windows.Forms.ApplicationContext" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-125">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-126">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="86638-126">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="86638-127">`Dispose()` Ruft die geschützte <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="86638-127">`Dispose()` invokes the protected <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="86638-128"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="86638-128"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="86638-129">Wenn die `disposing` Parameter ist "true", gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte, die von diesem <xref:System.Windows.Forms.ApplicationContext> Verweise.</span><span class="sxs-lookup"><span data-stu-id="86638-129">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ApplicationContext> references.</span></span> <span data-ttu-id="86638-130">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="86638-130">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="86638-131">
            <para>
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben von <see langword="Dispose(Boolean)" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see langword="Dispose" /> freigegeben wurden. Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen nicht verwaltete Resources](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-131">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExitThread">
      <MemberSignature Language="C#" Value="public void ExitThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExitThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExitThread();" />
      <MemberSignature Language="F#" Value="member this.ExitThread : unit -&gt; unit" Usage="applicationContext.ExitThread " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86638-132">Beendet die Nachrichtenschleife des Threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-132">Terminates the message loop of the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-133">Diese Methode ruft <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> auf.</span><span class="sxs-lookup"><span data-stu-id="86638-133">This method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86638-134"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> und <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> werden nicht tatsächlich Ursache des Threads zu beenden.</span><span class="sxs-lookup"><span data-stu-id="86638-134"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="86638-135">Diese Methoden lösen die <xref:System.Windows.Forms.Application.ThreadExit> Ereignis, auf das die <xref:System.Windows.Forms.Application> -Objekt überwacht.</span><span class="sxs-lookup"><span data-stu-id="86638-135">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="86638-136">Die <xref:System.Windows.Forms.Application> Objekt wird dann der Thread beendet.</span><span class="sxs-lookup"><span data-stu-id="86638-136">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86638-137">Das folgende Codebeispiel ist ein Auszug aus dem Beispiel in der <xref:System.Windows.Forms.ApplicationContext> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="86638-137">The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="86638-138">In diesem Beispiel verfolgt offenen Formulare und den aktuellen Thread beendet wird, wenn alle Formulare geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="86638-138">This example keeps track of open forms and exits the current thread when all forms are closed.</span></span> <span data-ttu-id="86638-139">Die `OnFormClosed` Methode ist ein Ereignishandler für das <xref:System.Windows.Forms.Form.Closed> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="86638-139">The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event.</span></span> <span data-ttu-id="86638-140">Wenn die Anzahl der offenen Formulare gleich 0 ist, klicken Sie dann aktuellen Thread beendet wird durch Aufrufen der <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="86638-140">When the number of open forms is equal to 0, then current thread is exited by calling the <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> method.</span></span> <span data-ttu-id="86638-141">Durch erhöhen die Anzahl der Formulare nachverfolgt wird die `formCount` Variable, wenn ein Formular angezeigt wird, und dem Dekrementieren geht, wenn ein Formular geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="86638-141">The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.</span></span>  
  
 <span data-ttu-id="86638-142">Code ist für die Übersichtlichkeit nicht dargestellt.</span><span class="sxs-lookup"><span data-stu-id="86638-142">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="86638-143">Finden Sie unter <xref:System.Windows.Forms.ApplicationContext> für das gesamte Codelisting.</span><span class="sxs-lookup"><span data-stu-id="86638-143">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#3)]
 [!code-csharp[Application#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#3)]
 [!code-vb[Application#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitThreadCore">
      <MemberSignature Language="C#" Value="protected virtual void ExitThreadCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExitThreadCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExitThreadCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExitThreadCore();" />
      <MemberSignature Language="F#" Value="abstract member ExitThreadCore : unit -&gt; unit&#xA;override this.ExitThreadCore : unit -&gt; unit" Usage="applicationContext.ExitThreadCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86638-144">Beendet die Nachrichtenschleife des Threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-144">Terminates the message loop of the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-145">Diese Methode wird aufgerufen, von <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span><span class="sxs-lookup"><span data-stu-id="86638-145">This method is called from <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86638-146"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> und <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> werden nicht tatsächlich Ursache des Threads zu beenden.</span><span class="sxs-lookup"><span data-stu-id="86638-146"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="86638-147">Diese Methoden lösen die <xref:System.Windows.Forms.Application.ThreadExit> Ereignis, auf das die <xref:System.Windows.Forms.Application> -Objekt überwacht.</span><span class="sxs-lookup"><span data-stu-id="86638-147">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="86638-148">Die <xref:System.Windows.Forms.Application> Objekt wird dann der Thread beendet.</span><span class="sxs-lookup"><span data-stu-id="86638-148">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ApplicationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="applicationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="86638-149">Versucht, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor der Anwendungskontext von der Garbage Collection freigegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-149">Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-150">Diese Methode überschreibt <xref:System.Object.Finalize%2A?displayProperty=nameWithType> und bereinigt Ressourcen durch Aufrufen von `Dispose(false)`.</span><span class="sxs-lookup"><span data-stu-id="86638-150">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="86638-151">Überschreiben Sie `Dispose(Boolean)`, um die Bereinigung anzupassen.</span><span class="sxs-lookup"><span data-stu-id="86638-151">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="86638-152">Diese Methode sollte nicht von Anwendungscode aufgerufen werden. ein Objekt `Finalize` Methode wird automatisch während der Garbagecollection aufgerufen, durch einen Aufruf von seiner Finalisierung verfolgt, durch den Garbage Collector deaktiviert wurde die <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="86638-152">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="86638-153">Weitere Informationen finden Sie unter [Finalize-Methoden und Destruktoren](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md), und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="86638-153">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberSignature Language="VB.NET" Value="Public Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainForm : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86638-154">Ruft das als Kontext zu verwendende <see cref="T:System.Windows.Forms.Form" /> ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-154">Gets or sets the <see cref="T:System.Windows.Forms.Form" /> to use as context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86638-155">Das als Kontext zu verwendende <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-155">The <see cref="T:System.Windows.Forms.Form" /> to use as context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-156">Diese Eigenschaft bestimmt den Hauptknoten <xref:System.Windows.Forms.Form> für diesen Kontext.</span><span class="sxs-lookup"><span data-stu-id="86638-156">This property determines the main <xref:System.Windows.Forms.Form> for this context.</span></span> <span data-ttu-id="86638-157">Diese Eigenschaft kann jedoch jederzeit ändern.</span><span class="sxs-lookup"><span data-stu-id="86638-157">This property can change at any time.</span></span> <span data-ttu-id="86638-158">Wenn <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> wird nicht überschrieben, das die Meldungsschleife des Threads beendet, wenn die `mainForm` -Parameter geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="86638-158">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when the `mainForm` parameter closes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMainFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnMainFormClosed (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMainFormClosed(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMainFormClosed (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMainFormClosed(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMainFormClosed : obj * EventArgs -&gt; unit&#xA;override this.OnMainFormClosed : obj * EventArgs -&gt; unit" Usage="applicationContext.OnMainFormClosed (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="86638-159">Das Objekt, das das Ereignis ausgelöst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-159">The object that raised the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="86638-160">Das <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-160">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86638-161">Ruft <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" /> auf und löst dadurch das <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-161">Calls <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, which raises the <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-162">Ruft die standardmäßige Implementierung dieser Methode <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="86638-162">The default implementation of this method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ApplicationContext.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86638-163">Ruft ein Objekt ab, das Daten bezüglich des Steuerelements enthält, oder legt dieses Objekt fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-163">Gets or sets an object that contains data about the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86638-164">Ein <see cref="T:System.Object" />, das Daten über das Steuerelement enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-164">An <see cref="T:System.Object" /> that contains data about the control.</span>
          </span>
          <span data-ttu-id="86638-165">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-165">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86638-166">Jeder Typ abgeleitet wurde. die <xref:System.Object> Klasse kann diese Eigenschaft zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="86638-166">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="86638-167">Wenn die <xref:System.Windows.Forms.ApplicationContext.Tag%2A> Eigenschaft mit dem Windows Forms-Designer festgelegt wird, kann nur Text zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="86638-167">If the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="86638-168">Eine übliche Verwendung für die <xref:System.Windows.Forms.ApplicationContext.Tag%2A> Eigenschaft besteht darin, Daten zu speichern, die eng mit dem Steuerelement zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="86638-168">A common use for the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="86638-169">Z. B. Wenn Sie ein Steuerelement, das Informationen zu einem Kunden anzeigt, Sie können Speichern einer <xref:System.Data.DataSet> , enthält die kundenbestellungsverlauf in diesem Steuerelement <xref:System.Windows.Forms.ApplicationContext.Tag%2A> Eigenschaft, sodass die Daten schnell zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="86638-169">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadExit">
      <MemberSignature Language="C#" Value="public event EventHandler ThreadExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadExit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ApplicationContext.ThreadExit" />
      <MemberSignature Language="VB.NET" Value="Public Event ThreadExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ThreadExit;" />
      <MemberSignature Language="F#" Value="member this.ThreadExit : EventHandler " Usage="member this.ThreadExit : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86638-170">Tritt durch Aufrufen von <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" /> ein, wenn die Nachrichtenschleife des Threads beendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86638-170">Occurs when the message loop of the thread should be terminated, by calling <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86638-171">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="86638-171">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="86638-172">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ApplicationContext.ThreadExit> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="86638-172">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span> <span data-ttu-id="86638-173">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="86638-173">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="86638-174">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="86638-174">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="86638-175">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ApplicationContext> mit dem Namen `ApplicationContext1`.</span><span class="sxs-lookup"><span data-stu-id="86638-175">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`.</span></span> <span data-ttu-id="86638-176">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ApplicationContext.ThreadExit> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="86638-176">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#75)]
 [!code-vb[System.Windows.Forms.EventExamples#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>