<Type Name="TextBoxBase" FullName="System.Windows.Forms.TextBoxBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f306d0b5795c9908bdd1afe36884db0c2cec0b17" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52590724" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b4e38-101">Implementiert die für Textsteuerelemente erforderlichen Grundfunktionen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4e38-101">Implements the basic functionality required by text controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-102">Diese Klasse implementiert die Kernfunktionen von Steuerelementen für die Textbearbeitung, z. B. <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-102">This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="b4e38-103">Dazu gehören die Textauswahl **Zwischenablage** Funktionalität, Unterstützung für mehrzeiligen Text-Steuerelement und viele Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-103">These include text selection, **Clipboard** functionality, multiline text control support, and many events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-104">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, ein mehrzeiliges <xref:System.Windows.Forms.TextBox> -Steuerelement mit der vertikalen Bildlaufleiste.</span><span class="sxs-lookup"><span data-stu-id="b4e38-104">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="b4e38-105">Dieses Beispiel verwendet auch die <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> Eigenschaften, die mehrzeiligen Textfeld-Steuerelement zum Erstellen von Textdokumenten nutzen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-105">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="b4e38-106">Sie in der Regel erben nicht von <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b4e38-106">You do not typically inherit from <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
        </span>
        <span data-ttu-id="b4e38-107">Um Ihren eigenen Text Control-Klasse zu erstellen, erben von <see cref="T:System.Windows.Forms.TextBox" /> oder <see cref="T:System.Windows.Forms.RichTextBox" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b4e38-107">To create your own text control class, inherit from <see cref="T:System.Windows.Forms.TextBox" /> or <see cref="T:System.Windows.Forms.RichTextBox" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Windows.Forms.TextBox" />
    <altmember cref="T:System.Windows.Forms.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-108">Ruft einen Wert ab, der angibt, ob in einem mehrzeiligen Textfeld-Steuerelement beim Drücken der TAB-TASTE ein Tabstoppzeichen in das Steuerelement eingegeben wird oder der Fokus auf das nächste Steuerelement in der Aktivierreihenfolge gesetzt wird, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-108">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-109">
            <see langword="true" />, damit Benutzer mit der TAB-TASTE ein Tabstoppzeichen in ein mehrzeiliges Textfeld eingeben können, <see langword="false" />, wenn das Drücken der TAB-TASTE den Fokus verschiebt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-109">
              <see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span>
          </span>
          <span data-ttu-id="b4e38-110">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-110">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-111">Die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> Eigenschaft zudem muss `true` um ein Tabstoppzeichen in das Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="b4e38-111">The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.</span></span>  
  
 <span data-ttu-id="b4e38-112">Wenn die <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> -Eigenschaftensatz auf `true`, der Benutzer drücken STRG + TAB, um den Fokus auf das nächste Steuerelement in der Aktivierreihenfolge verschieben.</span><span class="sxs-lookup"><span data-stu-id="b4e38-112">If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-113">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, ein mehrzeiliges <xref:System.Windows.Forms.TextBox> -Steuerelement mit der vertikalen Bildlaufleiste.</span><span class="sxs-lookup"><span data-stu-id="b4e38-113">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="b4e38-114">Dieses Beispiel verwendet auch die <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> Eigenschaften, die mehrzeiligen Textfeld-Steuerelement zum Erstellen von Textdokumenten nutzen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-114">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberSignature Language="F#" Value="member this.AcceptsTabChanged : EventHandler " Usage="member this.AcceptsTabChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-115">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />-Eigenschaft geändert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-115">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-116">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-116">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-117">Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-117">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b4e38-118">Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-118">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span> <span data-ttu-id="b4e38-119">In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-119">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="b4e38-120">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-120">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="b4e38-121">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz eines Typs, die enthält von erbt <xref:System.Windows.Forms.TextBoxBase>, z. B. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-121">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="b4e38-122">Geben Sie den Namen der Instanz `TextBoxBase1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-122">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]
 [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="b4e38-123">Der an den aktuellen Inhalt des Textfelds anzufügende Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-123">The text to append to the current contents of the text box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-124">Fügt Text an den aktuellen Text eines Textfelds an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-124">Appends text to the current text of a text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-125">Sie können diese Methode zum Hinzufügen von Text an den vorhandenen Text in das Steuerelement mit dem Verkettungsoperator (+) zum Verketten von Text verwenden, um die <xref:System.Windows.Forms.TextBoxBase.Text%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-125">You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-126">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> Methode und die <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> Eigenschaft, um Text aus einer kopieren <xref:System.Windows.Forms.TextBox> in einen anderen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-126">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="b4e38-127">Dieses Beispiel erfordert, dass zwei <xref:System.Windows.Forms.TextBox> Steuerelemente, die mit dem Namen `textBox1` und `textBox2`, wurde ein Formular, und dass `textBox1` Text zugewiesen seine <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-127">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-128">Ruft einen Wert ab, der angibt, ob die Höhe des Steuerelements automatisch angepasst wird, wenn die dem Steuerelement zugewiesene Schriftart geändert wird, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-128">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-129">
            <see langword="true" />, wenn die Höhe des Steuerelements bei Änderung der Schriftart automatisch angepasst wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-129">
              <see langword="true" /> if the height of the control automatically adjusts when the font is changed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b4e38-130">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-130">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-131">Beim Festlegen der <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> Eigenschaft `true` für eine <xref:System.Windows.Forms.TextBox>, wenn die <xref:System.Windows.Forms.Control.Font%2A> Änderungen, die <xref:System.Windows.Forms.TextBox> erweitert oder reduziert die <xref:System.Windows.Forms.Control.Height%2A> an den größeren oder kleineren Text.</span><span class="sxs-lookup"><span data-stu-id="b4e38-131">When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text.</span></span> <span data-ttu-id="b4e38-132">Die <xref:System.Windows.Forms.Control.Width%2A> von der <xref:System.Windows.Forms.TextBox> wird nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="b4e38-132">The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.</span></span>  
  
 <span data-ttu-id="b4e38-133">Sollten Sie die Größe des Steuerelements zu ändern, wie der Benutzer Text eingibt, können Sie eine <xref:System.Windows.Forms.RichTextBox> steuern und verwenden dessen <xref:System.Windows.Forms.RichTextBox.ContentsResized> Ereignis, um dessen Größe zu ändern.</span><span class="sxs-lookup"><span data-stu-id="b4e38-133">If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-134">In diesem Beispiel wird davon ausgegangen, dass Sie ein Formular mit zwei Textfeldern, zwei Schaltflächen, und klicken Sie auf Ereignisse für die einzelnen Schaltflächen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-134">This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</span></span> <span data-ttu-id="b4e38-135">Das Beispiel veranschaulicht die <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> Eigenschaft durch Festlegung auf `true` für ein Textfeld und `false` für die anderen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-135">The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other.</span></span> <span data-ttu-id="b4e38-136">Wenn Sie eine Schaltfläche klicken, werden die Textfelder mit einem kleineren Text gefüllt, und wenn Sie auf die anderen Schaltfläche klicken werden die Textfelder mit größerem Text gefüllt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-136">When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</span></span> <span data-ttu-id="b4e38-137">Das Textfeld, hat das <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> festgelegt `true` Erweitert auf der Höhe der größeren Text aufzunehmen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-137">The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text.</span></span> <span data-ttu-id="b4e38-138">Die Breite wird nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-138">The width does not change.</span></span>  
  
 [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-139">Dieses Ereignis ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-139">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-140">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-140">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-141">Ruft die Hintergrundfarbe des Steuerelements ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-141">Gets or sets the background color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-142">Eine <see cref="T:System.Drawing.Color" />, die den Hintergrund des Steuerelements darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-142">A <see cref="T:System.Drawing.Color" /> that represents the background of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-143">Sie können die <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> Eigenschaft, um die Hintergrundfarbe des Textsteuerelements in das Farbschema Formulare in blend zu ändern.</span><span class="sxs-lookup"><span data-stu-id="b4e38-143">You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.</span></span>  
  
 <span data-ttu-id="b4e38-144">Um die Farbe des Texts innerhalb des Steuerelements zu ändern, verwenden die <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-144">To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property.</span></span> <span data-ttu-id="b4e38-145">Beim Festlegen der <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> Eigenschaft für das Textsteuerelement, stellen Sie sicher, dass die Farbe, die Sie auswählen, nicht den Text des Steuerelements ausgeblendet kann.</span><span class="sxs-lookup"><span data-stu-id="b4e38-145">When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="b4e38-146">Z. B. wenn die <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> und <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> Eigenschaften auf festlegen `Color.Black`, der Text im Textfeld-Steuerelement werden nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-146">For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="b4e38-147">Diese Eigenschaft möglicherweise überschrieben, wenn die <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> Eigenschaft der <xref:System.Windows.Forms.TextBoxBase> nastaven NA hodnotu `true`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-147">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-148">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-148">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-149">Das Hintergrundbild für das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-149">The background image for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-150">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-150">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-151">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />-Eigenschaft ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-151">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span>
          </span>
          <span data-ttu-id="b4e38-152">Dieses Ereignis ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-152">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-153">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-153">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-154">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-154">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-155">Einer der <see cref="T:System.Windows.Forms.ImageLayout" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-155">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-156">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-156">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-157">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />-Eigenschaft ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-157">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span>
          </span>
          <span data-ttu-id="b4e38-158">Dieses Ereignis ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-158">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-159">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-159">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-160">Ruft den Rahmentyp des Textfeld-Steuerelements ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-160">Gets or sets the border type of the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-161">Ein <see cref="T:System.Windows.Forms.BorderStyle" />, der den Rahmentyp des Textfeld-Steuerelements darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-161">A <see cref="T:System.Windows.Forms.BorderStyle" /> that represents the border type of the text box control.</span>
          </span>
          <span data-ttu-id="b4e38-162">Der Standardwert ist <see langword="Fixed3D" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-162">The default is <see langword="Fixed3D" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-163">Sie können die <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> Eigenschaft, um die randlose und Flatfile-Format-Steuerelemente, zusätzlich zur vorgegebenen dreidimensionalen Steuerelement zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-163">You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-164">Der abgeleiteten Klasse <xref:System.Windows.Forms.RichTextBox>, unterstützt nicht die `BorderStyle.FixedSingle` Stil.</span><span class="sxs-lookup"><span data-stu-id="b4e38-164">The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style.</span></span> <span data-ttu-id="b4e38-165">Bewirkt, dass diese Art der <xref:System.Windows.Forms.BorderStyle> verwenden die `BorderStyle.Fixed3D` stattdessen formatieren.</span><span class="sxs-lookup"><span data-stu-id="b4e38-165">This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-166">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, um ein Textfeld zu erstellen, die Text mit 20 Punkt Arial mit einem einfachen Rahmen korrekt angezeigt werden kann.</span><span class="sxs-lookup"><span data-stu-id="b4e38-166">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</span></span> <span data-ttu-id="b4e38-167">Dieses Beispiel verwendet die <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> Eigenschaft, um zu bestimmen, die entsprechenden Höhe des Steuerelements nach der die Schriftart und <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> des Steuerelements zugewiesen wurden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-167">This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="b4e38-168">Der Eigenschaft wurde ein Wert außerhalb des gültigen Wertebereichs der Enumeration zugewiesen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-168">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-169">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />-Eigenschaft geändert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-169">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-170">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-170">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-171">Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-171">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b4e38-172">Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-172">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span> <span data-ttu-id="b4e38-173">In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-173">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="b4e38-174">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-174">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="b4e38-175">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz eines Typs, die enthält von erbt <xref:System.Windows.Forms.TextBoxBase>, z. B. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-175">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="b4e38-176">Geben Sie den Namen der Instanz `TextBoxBase1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-176">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]
 [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-177">Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Windows.Forms.Control.ImeMode" />-Eigenschaft auf einen aktiven Wert festgelegt werden kann, um IME-Unterstützung zu aktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-177">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-178">
            <see langword="false" />, wenn die <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />-Eigenschaft gleich <see langword="true" /> ist oder für diese <see cref="T:System.Windows.Forms.TextBoxBase" />-Klasse festgelegt ist, dass ein Zeichen zum Maskieren von Kennwörtern verwendet werden soll, andernfalls <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-178">
              <see langword="false" /> if the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property is <see langword="true" /> or if this <see cref="T:System.Windows.Forms.TextBoxBase" /> class is set to use a password mask character; otherwise, <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-179">Ruft einen Wert ab, der angibt, ob Benutzer den vorhergehenden Vorgang in einem Textfeld-Steuerelement rückgängig machen können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-179">Gets a value indicating whether the user can undo the previous operation in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-180">
            <see langword="true" />, wenn Benutzer den vorhergehenden Vorgang in einem Textfeld-Steuerelement rückgängig machen können, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-180">
              <see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-181">Wenn diese Methode zurückgibt `true`, rufen Sie die <xref:System.Windows.Forms.TextBoxBase.Undo%2A> Methode, um in einem Textfeld, das den letzten Vorgang rückgängig zu machen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-181">If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box.</span></span> <span data-ttu-id="b4e38-182">Können Sie diese Methode in der <xref:System.Windows.Forms.MenuItem.Popup> Ereignis eine <xref:System.Windows.Forms.MenuItem>, oder in Code, der den Zustand der Schaltflächen auf verwaltet eine <xref:System.Windows.Forms.ToolBar> aktivieren oder deaktivieren die Möglichkeit, den vorhergehenden Vorgang in einem Textfeld-Steuerelement rückgängig zu machen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-182">You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-183">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-183">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="b4e38-184">Es bietet <xref:System.Windows.Forms.MenuItem.Click> -Ereignishandlern für <xref:System.Windows.Forms.MenuItem> Objekte, die ausführen Ausschneiden, kopieren, einfügen und Rückgängig-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-184">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="b4e38-185">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-185">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBoxBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-186">Löscht den gesamten Text aus dem Textfeld-Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-186">Clears all text from the text box control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-187">Sie können diese Methode verwenden, um den Inhalt des Steuerelements anstatt Löschen der <xref:System.Windows.Forms.TextBoxBase.Text%2A> Eigenschaft eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-187">You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-188">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, erstellen Sie einen Ereignishandler für die <xref:System.Windows.Forms.Control.TextChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-188">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span> <span data-ttu-id="b4e38-189">Der Code innerhalb des ereignishandlers schränkt die Daten in Zahlen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-189">The code within the event handler restricts data to numbers.</span></span> <span data-ttu-id="b4e38-190">Nach dem Text im Steuerelement eingegeben wurde, ermittelt der Code auf, wenn der eingegebene Text eine Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="b4e38-190">After text has been entered in the control, the code determines if the text entered is a number.</span></span> <span data-ttu-id="b4e38-191">Wenn der Text keine Zahl ist, löscht der Code den Text aus dem Steuerelement und ein <xref:System.Windows.Forms.MessageBox> wird angezeigt, um den Benutzer darauf aufmerksam, dass nur Zahlen akzeptiert werden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-191">If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted.</span></span> <span data-ttu-id="b4e38-192">Im Beispiel erfordert, dass eine `Boolean` Variable mit dem Namen `flag` und <xref:System.Windows.Forms.TextBox> Steuerelement namens `textBox1` außerhalb dieser Methode definiert sind.</span><span class="sxs-lookup"><span data-stu-id="b4e38-192">The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method.</span></span> <span data-ttu-id="b4e38-193">In diesem Beispiel wird veranschaulicht, wie eine Flagvariable zu verwenden, um eine Ereigniskette im Vermeiden der <xref:System.Windows.Forms.Control.TextChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-193">This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberSignature Language="F#" Value="member this.ClearUndo : unit -&gt; unit" Usage="textBoxBase.ClearUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-194">Löscht alle Informationen über den letzten Vorgang aus dem Rückgängig-Puffer für das Textfeld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-194">Clears information about the most recent operation from the undo buffer of the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-195">Diese Methode können zu verhindern, dass einen Rückgängig-Vorgang wiederholt wird, abhängig vom Status der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="b4e38-195">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-196">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-196">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="b4e38-197">Es bietet <xref:System.Windows.Forms.MenuItem.Click> -Ereignishandlern für <xref:System.Windows.Forms.MenuItem> Objekte, die ausführen Ausschneiden, kopieren, einfügen und Rückgängig-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-197">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="b4e38-198">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-198">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-199">Tritt ein, wenn auf das Textfeld geklickt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-199">Occurs when the text box is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-200">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-200">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-201">Im folgenden Codebeispiel wird veranschaulicht, wie behandelt die <xref:System.Windows.Forms.TextBoxBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-201">The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span> <span data-ttu-id="b4e38-202">Um das Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular mit einem <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen TextBox1.</span><span class="sxs-lookup"><span data-stu-id="b4e38-202">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1.</span></span> <span data-ttu-id="b4e38-203">Dieses Beispiel erfordert, dass die Methode zur Verarbeitung von Ereignissen zugeordnet wurde die <xref:System.Windows.Forms.TextBoxBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-203">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-204">Kopiert die aktuelle Auswahl im Textfeld in die **Zwischenablage**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-204">Copies the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-205">Können Sie anstelle dieser Methode die <xref:System.Windows.Forms.Clipboard> -Klasse, zum Kopieren von Text in das Textfeld ein, und versetzen Sie ihn in das **Zwischenablage**.</span><span class="sxs-lookup"><span data-stu-id="b4e38-205">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-206">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-206">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="b4e38-207">Es bietet <xref:System.Windows.Forms.MenuItem.Click> -Ereignishandlern für <xref:System.Windows.Forms.MenuItem> Objekte, die ausführen Ausschneiden, kopieren, einfügen und Rückgängig-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-207">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="b4e38-208">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-208">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="textBoxBase.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-209">Erstellt ein Handle für das Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-209">Creates a handle for the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b4e38-210">für den Betrieb mit nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-210">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b4e38-211">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-211">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-212">Ruft die benötigten Erstellungsparameter ab, wenn das Steuerelementhandle erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-212">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-213">Eine <see cref="T:System.Windows.Forms.CreateParams" />-Eigenschaft, die die erforderlichen Erstellungsparameter enthält, wenn das Handle für das Steuerelement erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-213">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-214">Verschiebt die aktuelle Auswahl im Textfeld in die **Zwischenablage**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-214">Moves the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-215">Diese Methode wird nur Text aus dem Textfeld Ausschneiden, wenn Text im Steuerelement ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="b4e38-215">This method will only cut text from the text box if text is selected in the control.</span></span> <span data-ttu-id="b4e38-216">Können Sie anstelle dieser Methode die <xref:System.Windows.Forms.Clipboard> -Klasse, zum Kopieren von Text in das Textfeld ein, und verschieben sie Sie der **Zwischenablage**.</span><span class="sxs-lookup"><span data-stu-id="b4e38-216">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-217">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-217">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="b4e38-218">Es bietet <xref:System.Windows.Forms.MenuItem.Click> -Ereignishandlern für <xref:System.Windows.Forms.MenuItem> Objekte, die ausführen Ausschneiden, kopieren, einfügen und Rückgängig-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-218">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="b4e38-219">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-219">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-220">Ruft den Standardcursor für das Steuerelement ab oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-220">Gets or sets the default cursor for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-221">Ein Objekt vom Typ <see cref="T:System.Windows.Forms.Cursor" />, das den aktuellen Standardcursor darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-221">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-222">Außer Kraft setzen <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> so konfigurieren Sie einen Standardcursor für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="b4e38-222">Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="b4e38-223">Dies ist effizienter als das Festlegen des Cursors im Konstruktor des Steuerelements, und erhalten automatische Unterstützung für bestimmte cursorspezifischen Designer-Funktionen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-223">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-224">Ruft die Standardgröße des Steuerelements ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-224">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-225">Die Standard-<see cref="T:System.Drawing.Size" /> des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-225">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberSignature Language="F#" Value="member this.DeselectAll : unit -&gt; unit" Usage="textBoxBase.DeselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-226">Gibt an, dass der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />-Eigenschaft 0 (null) ist. Demzufolge werden im Steuerelement keine Zeichen ausgewählt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-226">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-227">Ruft einen Wert ab, der angibt, ob ein Steuerelement in einem Puffer gezeichnet wird, bevor es angezeigt wird, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-227">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span>
          </span>
          <span data-ttu-id="b4e38-228">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-228">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-229">
            <see langword="true" />, um doppelte Pufferung im Steuerelement zu implementieren, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-229">
              <see langword="true" /> to implement double buffering on the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-230">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-230">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-231">Ruft die Vordergrundfarbe des Steuerelements ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-231">Gets or sets the foreground color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-232">Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe des Steuerelements darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-232">A <see cref="T:System.Drawing.Color" /> that represents the control's foreground color.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-233">Sie können die <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> Eigenschaft, die die Farbe des Texts im Steuerelement den Text der andere Steuerelemente auf dem Formular entsprechend geändert.</span><span class="sxs-lookup"><span data-stu-id="b4e38-233">You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form.</span></span> <span data-ttu-id="b4e38-234">Sie können diese Eigenschaft auch verwenden, um ein bestimmtes Textfeld hervorzuheben, das einen ungültigen Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="b4e38-234">You can also use this property to highlight a specific text box that contains an invalid value.</span></span>  
  
 <span data-ttu-id="b4e38-235">Um die Hintergrundfarbe des Steuerelements zu ändern, verwenden die <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-235">To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property.</span></span> <span data-ttu-id="b4e38-236">Beim Festlegen der <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> Eigenschaft für das Textsteuerelement, stellen Sie sicher, dass die Farbe, die Sie auswählen, nicht den Text des Steuerelements ausgeblendet kann.</span><span class="sxs-lookup"><span data-stu-id="b4e38-236">When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="b4e38-237">Z. B. wenn die <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> und <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> Eigenschaften auf festlegen `Color.Black`, der Text im Textfeld-Steuerelement werden nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-237">For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="b4e38-238">Diese Eigenschaft möglicherweise überschrieben, wenn die <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> Eigenschaft der <xref:System.Windows.Forms.TextBoxBase> nastaven NA hodnotu `true`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-238">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public virtual char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharFromPosition : System.Drawing.Point -&gt; char&#xA;override this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="textBoxBase.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="b4e38-239">Die Position, von der aus das nächststehende Zeichen gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-239">The location from which to seek the nearest character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-240">Ruft das Zeichen ab, das der angegebenen Position im Steuerelement am nächsten liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-240">Retrieves the character that is closest to the specified location within the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-241">Das Zeichen an der angegebenen Position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-241">The character at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-242">Wenn der Ort angegeben die `pt` -Parameter ist außerhalb des Clientbereichs des Steuerelements, das erste Zeichen der Zeichenfolge, die im angegebenen Punkt am nächsten `pt` zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="b4e38-242">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="b4e38-243">Sie können diese Methode verwenden, um zu bestimmen, welche Zeichen in der Nähe von einem bestimmten Zeitpunkt innerhalb des Steuerelements befinden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-243">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="b4e38-244">Sie können dann diesen Wert verwenden, zum Ausführen von Vorgängen für den Text an diesem Speicherort.</span><span class="sxs-lookup"><span data-stu-id="b4e38-244">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-245">Wenn der angegebenen Position in der `pt` Parameter befindet sich auf der rechten Seite des Clientbereichs des Steuerelements, das letzte Zeichen der Zeichenfolge, die im angegebenen Punkt am nächsten `pt` zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="b4e38-245">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharIndexFromPosition : System.Drawing.Point -&gt; int&#xA;override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="textBoxBase.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="b4e38-246">Die zu suchende Position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-246">The location to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-247">Ruft den Index des Zeichens ab, das sich am nächsten zur angegebenen Position befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-247">Retrieves the index of the character nearest to the specified location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-248">Der nullbasierte Zeichenindex an der angegebenen Position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-248">The zero-based character index at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-249">Diese Methode gibt den Zeichenindex, die im angegebenen Position am nächsten liegt die `pt` Parameter.</span><span class="sxs-lookup"><span data-stu-id="b4e38-249">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="b4e38-250">Der Zeichenindex ist ein nullbasierter Index des Texts im Steuerelement, einschließlich Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-250">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="b4e38-251">Sie können diese Methode verwenden, um zu bestimmen, in dem im Text der Benutzer die Maus durch die Maus Koordinaten an diese Methode übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-251">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="b4e38-252">Dies kann nützlich sein, wenn Aufgaben auszuführen, wenn der Benutzer den Mauszeiger auf ein Wort im Text des Steuerelements gezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4e38-252">This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b4e38-253">Wenn am angegebene Speicherort nicht im Clientrechteck des Steuerelements liegt oder hinter dem letzten Zeichen in das Steuerelement ist, ist der zurückgegebene Wert den Index des letzten Zeichens.</span><span class="sxs-lookup"><span data-stu-id="b4e38-253">If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexFromLine : int -&gt; int" Usage="textBoxBase.GetFirstCharIndexFromLine lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="b4e38-254">Die Zeile, für die der Index des ersten Zeichens abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-254">The line for which to get the index of its first character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-255">Ruft den Index des ersten Zeichens einer bestimmten Zeile ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-255">Retrieves the index of the first character of a given line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-256">Der nullbasierte Zeichenindex des ersten Zeichens in der angegebenen Zeile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-256">The zero-based index of the first character in the specified line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-257">In das Textfeld zeilennummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="b4e38-257">Line numbering in the text box starts at zero.</span></span> <span data-ttu-id="b4e38-258">Wenn die `lineNumber` -Parameter ist größer als die letzte Zeile in das Textfeld ein <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> gibt-1 zurück.</span><span class="sxs-lookup"><span data-stu-id="b4e38-258">If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.</span></span>  
  
 <span data-ttu-id="b4e38-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> Gibt den ersten Zeichenindex einer physischen Zeile zurück.</span><span class="sxs-lookup"><span data-stu-id="b4e38-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="b4e38-260">Die physische Zeile ist die angezeigte Zeile ist, nicht die zugewiesene Zeile.</span><span class="sxs-lookup"><span data-stu-id="b4e38-260">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="b4e38-261">Die Anzahl der angezeigten Zeilen kann größer als die Anzahl der zugewiesenen Zeilen aufgrund von Zeilenumbruch sein.</span><span class="sxs-lookup"><span data-stu-id="b4e38-261">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="b4e38-262">Z. B., wenn Sie zwei lange Zeilen zum Zuweisen einer <xref:System.Windows.Forms.RichTextBox> steuern, und legen Sie <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> zu `true`, führen Sie die langen zugewiesenen zwei Zeilen in vier physische (oder Zeilen angezeigt).</span><span class="sxs-lookup"><span data-stu-id="b4e38-262">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b4e38-263">Der Wert des <paramref name="lineNumber" />-Parameters ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-263">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexOfCurrentLine : unit -&gt; int" Usage="textBoxBase.GetFirstCharIndexOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-264">Ruft den Index des ersten Zeichens der aktuellen Zeile ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-264">Retrieves the index of the first character of the current line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-265">Der nullbasierte Zeichenindex in der aktuellen Zeile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-265">The zero-based character index in the current line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetLineFromCharIndex : int -&gt; int&#xA;override this.GetLineFromCharIndex : int -&gt; int" Usage="textBoxBase.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b4e38-266">Die zu suchende Zeichenindexposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-266">The character index position to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-267">Ruft die Zeilennummer der angegebenen Zeichenposition innerhalb des Steuerelementtexts ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-267">Retrieves the line number from the specified character position within the text of the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-268">Die nullbasierte Nummer der Zeile, in der sich der Zeichenindex befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-268">The zero-based line number in which the character index is located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-269">Dieser Methode können Sie die Nummer der Zeile, die basierend auf den in angegebenen Zeichenindex bestimmen die `index` Parameters der Methode.</span><span class="sxs-lookup"><span data-stu-id="b4e38-269">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="b4e38-270">Die erste Zeile des Texts im Steuerelement gibt den Wert 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="b4e38-270">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="b4e38-271">Die <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> Methode gibt die Anzahl der physischen Zeile zurück, in denen befindet sich des indizierten Zeichens innerhalb des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-271">The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="b4e38-272">Z. B. wenn ein Teil des Texts in der ersten logischen Zeile umbrochen wird die nächste Zeile, die <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> -Methode gibt 1 zurück, wenn das Zeichen am angegebenen Zeichenindex auf die zweite physische Zeile umbrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-272">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="b4e38-273">Wenn <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> nastaven NA hodnotu `false`, kein Teil der Zeile zur nächsten umschließt und die Methode gibt 0 für den angegebenen Zeichenindex zurück.</span><span class="sxs-lookup"><span data-stu-id="b4e38-273">If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="b4e38-274">Sie können diese Methode verwenden, um zu bestimmen, welche Zeile ein bestimmte Zeichenindex in enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="b4e38-274">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="b4e38-275">Z. B. nach dem Aufruf der <xref:System.Windows.Forms.RichTextBox.Find%2A> Methode zum Suchen nach Text, Sie erhalten den Zeichenindex an dem die Ergebnisse der Suche gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-275">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="b4e38-276">Sie können diese Methode aufrufen, mit der Zeichenindex zurückgegebenes der <xref:System.Windows.Forms.RichTextBox.Find%2A> Methode, um zu bestimmen, welcher Zeile das Wort gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-276">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-277">Wenn der Zeichenindex in angegeben die `index` Parameter über die verfügbare Anzahl der Zeilen im Steuerelement enthalten ist, Nummer der letzte Zeile zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="b4e38-277">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetPositionFromCharIndex : int -&gt; System.Drawing.Point&#xA;override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="textBoxBase.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b4e38-278">Der Index des Zeichens, für das die Position abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-278">The index of the character for which to retrieve the location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-279">Ruft die Position innerhalb des Steuerelements am angegebenen Zeichenindex ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-279">Retrieves the location within the control at the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-280">Die Position des angegebenen Zeichens im Clientrechteck des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-280">The location of the specified character within the client rectangle of the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-281">Diese Methode können Sie bestimmen, in dem sich ein bestimmter Zeichenindex in das Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="b4e38-281">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="b4e38-282">Sie können diese Methode für Aufgaben wie das Anzeigen von Elementen oder Help Informationen zum Kontextmenü nach einem Wort im Steuerelement verwenden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-282">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="b4e38-283">Z. B. Falls gewünscht, können Sie ein Menü mit Optionen für den Benutzer angezeigt wird, wenn der Benutzer der rechten Maustaste auf ein Wort in das Steuerelement klickt, können diese Methode bestimmt die Position des Wortes, um die ordnungsgemäße Darstellung einer <xref:System.Windows.Forms.ContextMenu> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="b4e38-283">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-284">Ruft einen Wert ab, der angibt, ob der markierte Text im Textfeld-Steuerelement hervorgehoben bleibt, nachdem das Steuerelement den Fokus verloren hat, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-284">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-285">
            <see langword="true" />, wenn der markierte Text nicht hervorgehoben ist, wenn das Textfeld-Steuerelement den Fokus verliert, <see langword="false" />, wenn der markierte Text hervorgehoben bleibt, nachdem das Textfeld-Steuerelement den Fokus verloren hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-285">
              <see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span>
          </span>
          <span data-ttu-id="b4e38-286">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-286">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-287">Sie können diese Eigenschaft verwenden, zu Text in ein Textfeld-Steuerelement hervorgehoben werden, während ein Dialogfeld oder eine andere Form den Fokus besitzt, z. B. ein Dialogfeld für die Rechtschreibprüfung hat.</span><span class="sxs-lookup"><span data-stu-id="b4e38-287">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-288">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-288">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property.</span></span> <span data-ttu-id="b4e38-289">Um das Beispiel auszuführen, fügen Sie den folgenden Code in einem Formular ein.</span><span class="sxs-lookup"><span data-stu-id="b4e38-289">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="b4e38-290">Rufen Sie die `InitializeTextBox` -Methode in den Konstruktor des Formulars oder `Load` Methode.</span><span class="sxs-lookup"><span data-stu-id="b4e38-290">Call the `InitializeTextBox` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.HideSelectionChanged : EventHandler " Usage="member this.HideSelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-291">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />-Eigenschaft geändert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-291">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-292">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-292">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-293">Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-293">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b4e38-294">Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-294">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span> <span data-ttu-id="b4e38-295">In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-295">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="b4e38-296">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-296">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="b4e38-297">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz eines Typs, die enthält von erbt <xref:System.Windows.Forms.TextBoxBase>, z. B. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-297">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="b4e38-298">Geben Sie den Namen der Instanz `TextBoxBase1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-298">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]
 [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-299">Ruft den IME (Input Method Editor)-Modus eines Steuerelements ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-299">Gets or sets the Input Method Editor (IME) mode of a control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-300">Der IME-Modus des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-300">The IME mode of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="b4e38-301">Einer der Tastenwerte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-301">One of the Keys value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-302">Bestimmt, ob es sich bei der angegebenen Taste um eine normale Eingabetaste handelt oder um eine Sondertaste, für die eine Vorverarbeitung erforderlich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-302">Determines whether the specified key is an input key or a special key that requires preprocessing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-303">
            <see langword="true" />, wenn die angegebene Taste eine normale Eingabetaste ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-303">
              <see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-304">Die <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> Methodenrückgabe `true` bei der `keyData` Parameter enthält die <xref:System.Windows.Forms.Keys.Tab> Wert und die <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> -Eigenschaft ist `true`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-304">The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`.</span></span> <span data-ttu-id="b4e38-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> Gibt `false` Wenn `keyData` enthält <xref:System.Windows.Forms.Keys.Tab> und <xref:System.Windows.Forms.Keys.Control>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lines : string[] with get, set" Usage="System.Windows.Forms.TextBoxBase.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-306">Ruft die Textzeilen in einem Textfeld-Steuerelement ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-306">Gets or sets the lines of text in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-307">Ein Array mit Zeichenfolgen, das den Text in einem Textfeld-Steuerelement enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-307">An array of strings that contains the text in a text box control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-308">Jedes Element im Array wird eine Zeile mit Text in das Textfeld-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="b4e38-308">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="b4e38-309">Wenn die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> -Eigenschaft des Textfeld-Steuerelements nastaven NA hodnotu `true` und ein neue Zeilenumbruchzeichen, die im Text angezeigt wird, wird der Text, der das neue Zeilenumbruchzeichen folgt ein neues Element im Array hinzugefügt und in einer separaten Zeile angezeigt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-309">If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-310">Die Auflistung der Zeilen wird standardmäßig eine schreibgeschützte Kopie der Zeilen in der <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-310">By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="b4e38-311">Rufen Sie eine nicht schreibgeschützte Auflistung von Zeilen mit Code wie den folgenden: `textBox1.Lines = new string[] { "abcd" };`</span><span class="sxs-lookup"><span data-stu-id="b4e38-311">To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { "abcd" };`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-312">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, um alle Textzeichenfolgen aus einem mehrzeiligen Textfeld-Steuerelement zu extrahieren und zeigt sie mithilfe der <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="b4e38-312">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b4e38-313">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement erstellt wurde, mit dem Namen `textBox1`, und die sie mit Textzeilen gefüllt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-313">This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-314">Ruft die maximale Anzahl an Zeichen ab, die Benutzer in das Textfeld-Steuerelement eingeben oder einfügen können, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-314">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-315">Die Anzahl der Zeichen, die in das Steuerelement eingegeben werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-315">The number of characters that can be entered into the control.</span>
          </span>
          <span data-ttu-id="b4e38-316">Der Standardwert ist 32767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-316">The default is 32767.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-317">Sie können diese Eigenschaft verwenden, um die Länge des Texts im Steuerelement eingegeben wird, für die Werte wie Postleitzahlen und Telefonnummern einzuschränken oder beschränken die Länge des Texts, die eingegeben werden, wenn die Daten in einer Datenbank eingegeben werden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-317">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="b4e38-318">Sie können den Text in das Steuerelement eingegeben wird, auf die maximale Länge des entsprechenden Felds in der Datenbank einschränken.</span><span class="sxs-lookup"><span data-stu-id="b4e38-318">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-319">Im Code können Sie den Wert der Festlegen der <xref:System.Windows.Forms.TextBoxBase.Text%2A> Eigenschaft ein Wert, der eine Länge größer als der angegebene Wert ist die <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-319">In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property.</span></span> <span data-ttu-id="b4e38-320">Diese Eigenschaft wirkt sich nur auf Text in das Steuerelement zur Laufzeit eingegeben werden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-320">This property only affects text entered into the control at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-321">Im folgenden Codebeispiel wird verwendet, die abgeleitete Klasse <xref:System.Windows.Forms.TextBox>, um ein Textfeld zu erstellen, die Eingabe eines Kennworts verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b4e38-321">The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password.</span></span> <span data-ttu-id="b4e38-322">Dieses Beispiel verwendet die <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> Eigenschaft so ändern Sie alle Zeichen in Großbuchstaben eingegeben und die <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> Eigenschaft, um die Länge des Kennworts auf acht Zeichen beschränkt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-322">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="b4e38-323">Dieses Beispiel verwendet auch die <xref:System.Windows.Forms.TextBox.TextAlign%2A> Eigenschaft zentrieren Sie das Kennwort in die <xref:System.Windows.Forms.TextBox> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="b4e38-323">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b4e38-324">Der zugewiesene Eigenschaftswert ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-324">The value assigned to the property is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-325">Ruft einen Wert ab, der angibt, dass das Textfeld-Steuerelement seit dem Erstellen oder der letzten Festlegung des Inhalts von Benutzern geändert wurde, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-325">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-326">
            <see langword="true" />, wenn der Inhalt des Steuerelements geändert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-326">
              <see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b4e38-327">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-327">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-328">Sie können diese Eigenschaft verwenden, um festzustellen, ob der Benutzer den Inhalt des Textfeld-Steuerelements geändert hat.</span><span class="sxs-lookup"><span data-stu-id="b4e38-328">You can use this property to determine if the user has modified the contents of the text box control.</span></span> <span data-ttu-id="b4e38-329">Sie können auch diese Eigenschaft festlegen, im Code, um anzugeben, dass das Textfeld-Steuerelement von der Anwendung geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-329">You can also set this property in code to indicate that changes were made to the text box control by the application.</span></span> <span data-ttu-id="b4e38-330">Diese Eigenschaft kann durch Überprüfung und Speichern von Daten-Methoden verwendet werden, um festzustellen, ob Änderungen in einem Textfeld-Steuerelement vorgenommen wurden, damit der geänderte Inhalt überprüft oder gespeichert werden können.</span><span class="sxs-lookup"><span data-stu-id="b4e38-330">This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</span></span>  
  
 <span data-ttu-id="b4e38-331">Wenn Sie ändern die <xref:System.Windows.Forms.TextBoxBase.Text%2A> Eigenschaft programmgesteuert die <xref:System.Windows.Forms.TextBoxBase.Modified%2A> Eigenschaft wird auf `false`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-331">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="b4e38-332">Dies wird nicht ausgelöst. die <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-332">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-333">Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.Control.TextChanged> -Ereignis für eine <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, um zu bestimmen, ob den Inhalt des der <xref:System.Windows.Forms.TextBox> -Steuerelement geändert haben, da das Steuerelement mit Daten gefüllt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-333">The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data.</span></span> <span data-ttu-id="b4e38-334">Im Beispiel verwendet eine Zeichenfolge, um den ursprünglichen Inhalt des Steuerelements zu speichern, und vergleicht ihn mit den Inhalt der <xref:System.Windows.Forms.TextBox> zu bestimmen, ob der Inhalt geändert hat.</span><span class="sxs-lookup"><span data-stu-id="b4e38-334">The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed.</span></span> <span data-ttu-id="b4e38-335">Wenn der Inhalt geändert haben, die <xref:System.Windows.Forms.TextBoxBase.Modified%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-335">If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`.</span></span> <span data-ttu-id="b4e38-336">Andernfalls wird zurückgesetzt, um `false`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-336">Otherwise, it is reset to `false`.</span></span> <span data-ttu-id="b4e38-337">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde und dass eine `String` Variable mit dem Namen `originalText` wurde zum Speichern von des ursprünglichen Texts für die <xref:System.Windows.Forms.TextBox> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="b4e38-337">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberSignature Language="F#" Value="member this.ModifiedChanged : EventHandler " Usage="member this.ModifiedChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-338">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.Modified" />-Eigenschaft geändert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-338">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-339">Wenn Sie ändern die <xref:System.Windows.Forms.TextBoxBase.Text%2A> Eigenschaft programmgesteuert die <xref:System.Windows.Forms.TextBoxBase.Modified%2A> Eigenschaft wird auf `false`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-339">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="b4e38-340">Dies wird nicht ausgelöst. die <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-340">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 <span data-ttu-id="b4e38-341">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-341">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-342">Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-342">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b4e38-343">Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-343">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span> <span data-ttu-id="b4e38-344">In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-344">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="b4e38-345">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-345">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="b4e38-346">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz eines Typs, die enthält von erbt <xref:System.Windows.Forms.TextBoxBase>, z. B. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-346">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="b4e38-347">Geben Sie den Namen der Instanz `TextBoxBase1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-347">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]
 [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-348">Tritt ein, wenn mit der Maus auf das Steuerelement geklickt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-348">Occurs when the control is clicked by the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-349">Die <xref:System.Windows.Forms.RichTextBox> Steuerelement löst keine <xref:System.Windows.Forms.TextBoxBase.Click> -Ereignis für der rechten Maustaste klickt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-349">The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks.</span></span> <span data-ttu-id="b4e38-350">Die <xref:System.Windows.Forms.TextBoxBase.MouseClick> Ereignis bietet die funktionale Entsprechung.</span><span class="sxs-lookup"><span data-stu-id="b4e38-350">The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.</span></span>  
  
 <span data-ttu-id="b4e38-351">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-351">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-352">Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-352">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b4e38-353">Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.TextBoxBase.MouseClick> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-353">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span> <span data-ttu-id="b4e38-354">In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-354">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="b4e38-355">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-355">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="b4e38-356">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz eines Typs, die enthält von erbt <xref:System.Windows.Forms.TextBoxBase>, z. B. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-356">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="b4e38-357">Geben Sie den Namen der Instanz `TextBoxBase1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.TextBoxBase.MouseClick> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-357">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]
 [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public virtual bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-358">Ruft einen Wert ab, der angibt, ob dies ein mehrzeiliges Textfeld-Steuerelement ist, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-358">Gets or sets a value indicating whether this is a multiline text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-359">
            <see langword="true" />, wenn es sich um ein mehrzeiliges Steuerelement handelt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-359">
              <see langword="true" /> if the control is a multiline text box control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b4e38-360">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-360">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-361">Ein mehrzeiliges Textfeld können Sie mehr als eine Textzeile im Steuerelement angezeigt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-361">A multiline text box allows you to display more than one line of text in the control.</span></span> <span data-ttu-id="b4e38-362">Wenn die <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> -Eigenschaftensatz auf `true`, in mehrzeiligen Textfeld eingegebene Text in die nächste Zeile im Steuerelement umbrochen wird.</span><span class="sxs-lookup"><span data-stu-id="b4e38-362">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control.</span></span> <span data-ttu-id="b4e38-363">Wenn die <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> -Eigenschaftensatz auf `false`, in dem mehrzeiligen Textfeld-Steuerelement eingegebene Text wird in der gleichen Zeile angezeigt werden, bis ein neue Zeilenumbruchzeichen eingegeben wird.</span><span class="sxs-lookup"><span data-stu-id="b4e38-363">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</span></span>  
  
 <span data-ttu-id="b4e38-364">Im folgenden können als neue Zeilenumbruchzeichen verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="b4e38-364">The following can be used as newline characters:</span></span>  
  
-   <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>  
  
-   <span data-ttu-id="b4e38-365">ControlChars.CrLf</span><span class="sxs-lookup"><span data-stu-id="b4e38-365">ControlChars.CrLf</span></span>  
  
-   <span data-ttu-id="b4e38-366">VbCrLf (nur Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b4e38-366">vbCrLf (Visual Basic only)</span></span>  
  
 <span data-ttu-id="b4e38-367">Sie können die Bildlaufleisten hinzufügen, ein Feld mithilfe der <xref:System.Windows.Forms.TextBox.ScrollBars%2A> Eigenschaft horizontale bzw. vertikale Schiebeleisten angezeigt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-367">You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars.</span></span> <span data-ttu-id="b4e38-368">Dadurch wird den Benutzer einen Bildlauf durch den Text durchführen, die über die Abmessungen des Steuerelements hinausgeht.</span><span class="sxs-lookup"><span data-stu-id="b4e38-368">This allows the user to scroll through the text that extends beyond the dimensions of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-369">Da der Standardwert der <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> -Eigenschaft ist `false`, die Standardgröße des eine <xref:System.Windows.Forms.TextBox> werden in Übereinstimmung mit den Schriftgrad, auch wenn Sie die Größe der <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-369">Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="b4e38-370">Zum Abrufen einer einheitlichen Größe für Ihre <xref:System.Windows.Forms.TextBox>legen die <xref:System.Windows.Forms.TextBox.Multiline%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-370">To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-371">In der japanischen Version-Betriebssystemen die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> -Eigenschaftensatz auf `true`wird durch das Festlegen der <xref:System.Windows.Forms.TextBox.PasswordChar%2A> Eigenschaft zeigt den Text des Kennworts verwendet, daher beeinträchtigen die Systemsicherheit.</span><span class="sxs-lookup"><span data-stu-id="b4e38-371">On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security.</span></span> <span data-ttu-id="b4e38-372">Legen Sie daher auf japanische Betriebssysteme, die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> Eigenschaft `false` setzen Sie die <xref:System.Windows.Forms.TextBox.PasswordChar%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-372">Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-373">Diese Eigenschaft wird festgelegt, um `false` abgeleitete Sie standardmäßig für alle Klassen, mit Ausnahme von der <xref:System.Windows.Forms.RichTextBox> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="b4e38-373">This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 <span data-ttu-id="b4e38-374">Für eine <xref:System.Windows.Forms.RichTextBox> -Steuerelement, das <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> Eigenschaft wirkt sich auf, und zwar unabhängig davon, ob das Steuerelement automatisch angepasst werden, wie folgt:</span><span class="sxs-lookup"><span data-stu-id="b4e38-374">For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> property affects whether or not the control will automatically resize, as follows:</span></span>  
  
-   <span data-ttu-id="b4e38-375">Wenn <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> nastaven NA hodnotu `true` und <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> nastaven NA hodnotu `true`, <xref:System.Windows.Forms.RichTextBox> wird nicht automatisch angepasst.</span><span class="sxs-lookup"><span data-stu-id="b4e38-375">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.</span></span>  
  
-   <span data-ttu-id="b4e38-376">Wenn <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> nastaven NA hodnotu `true` und <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> nastaven NA hodnotu `false`, <xref:System.Windows.Forms.RichTextBox> automatisch angepasst wird.</span><span class="sxs-lookup"><span data-stu-id="b4e38-376">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-377">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, ein mehrzeiliges <xref:System.Windows.Forms.TextBox> -Steuerelement mit der vertikalen Bildlaufleiste.</span><span class="sxs-lookup"><span data-stu-id="b4e38-377">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="b4e38-378">Dieses Beispiel verwendet auch die <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> Eigenschaften, die mehrzeiligen Textfeld-Steuerelement zum Erstellen von Textdokumenten nutzen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-378">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
        <altmember cref="P:System.Windows.Forms.TextBox.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberSignature Language="F#" Value="member this.MultilineChanged : EventHandler " Usage="member this.MultilineChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-379">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" />-Eigenschaft geändert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-379">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-380">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-380">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-381">Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-381">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b4e38-382">Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-382">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span> <span data-ttu-id="b4e38-383">In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-383">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="b4e38-384">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-384">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="b4e38-385">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz eines Typs, die enthält von erbt <xref:System.Windows.Forms.TextBoxBase>, z. B. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-385">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="b4e38-386">Geben Sie den Namen der Instanz `TextBoxBase1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-386">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]
 [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAcceptsTabChanged : EventArgs -&gt; unit&#xA;override this.OnAcceptsTabChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAcceptsTabChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-387">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-387">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-388">Löst das <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-388">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-389">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-389">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b4e38-390">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-390">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b4e38-391">Mit der <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="b4e38-391">The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b4e38-392">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-392">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b4e38-393">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b4e38-393">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-394">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-394">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-395">Löst das <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-395">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-396">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-396">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b4e38-397">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-397">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b4e38-398">Mit der <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="b4e38-398">The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b4e38-399">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-399">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b4e38-400">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b4e38-400">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-401">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-401">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-402">Löst das <see cref="E:System.Windows.Forms.Control.FontChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-402">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-403">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-403">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-404">Löst das <see cref="E:System.Windows.Forms.Control.HandleCreated" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-404">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-405">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-405">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-406">Löst das <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-406">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHideSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnHideSelectionChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnHideSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-407">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-408">Lösen Sie das <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-408">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-409">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-409">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b4e38-410">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-410">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b4e38-411">Mit der <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="b4e38-411">The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b4e38-412">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-412">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b4e38-413">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b4e38-413">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModifiedChanged : EventArgs -&gt; unit&#xA;override this.OnModifiedChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnModifiedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-414">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-414">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-415">Löst das <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-415">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-416">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-416">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b4e38-417">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-417">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b4e38-418">Mit der <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="b4e38-418">The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b4e38-419">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-419">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b4e38-420">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b4e38-420">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="b4e38-421">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-421">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-422">Löst das <see cref="E:System.Windows.Forms.Control.MouseUp" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-422">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultilineChanged : EventArgs -&gt; unit&#xA;override this.OnMultilineChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnMultilineChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-423">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-423">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-424">Löst das <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-424">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-425">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-425">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b4e38-426">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-426">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b4e38-427">Mit der <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="b4e38-427">The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b4e38-428">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-428">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b4e38-429">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b4e38-429">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-430">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-430">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-431">Diese Methode ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-431">This method is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-432">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-432">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-433">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-433">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-434">Löst das <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-434">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-435">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-435">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b4e38-436">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-436">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="b4e38-437">Mit der <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="b4e38-437">The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b4e38-438">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-438">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b4e38-439">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b4e38-439">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="b4e38-440">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-440">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-441">Löst das <see cref="E:System.Windows.Forms.Control.TextChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-441">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.TextBoxBase.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-442">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-442">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-443">Ein <see cref="T:System.Windows.Forms.Padding" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-443">A <see cref="T:System.Windows.Forms.Padding" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-444">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-444">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-445">Dieses Ereignis ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-445">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-446">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-446">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-447">Tritt ein, wenn das Steuerelement neu gezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-447">Occurs when the control is redrawn.</span>
          </span>
          <span data-ttu-id="b4e38-448">Dieses Ereignis ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-448">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-449">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="b4e38-449">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-450">Ersetzt die aktuelle Markierung im Textfeld durch den Inhalt der **Zwischenablage**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-450">Replaces the current selection in the text box with the contents of the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-451">Die <xref:System.Windows.Forms.TextBoxBase.Paste%2A> Methode wird nur fügen Sie Text in das Steuerelement, wenn Text in gespeichert ist die **Zwischenablage**.</span><span class="sxs-lookup"><span data-stu-id="b4e38-451">The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-452">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-452">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="b4e38-453">Es bietet <xref:System.Windows.Forms.MenuItem.Click> -Ereignishandlern für <xref:System.Windows.Forms.MenuItem> Objekte, die ausführen Ausschneiden, kopieren, einfügen und Rückgängig-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-453">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="b4e38-454">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-454">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="b4e38-455">zum Lesen aus der **Zwischenablage**.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-455">for reading from the **Clipboard**.</span>
          </span>
          <span data-ttu-id="b4e38-456">Zugeordnete Enumeration: die <see langword="AllClipboard" /> Wert <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-456">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-457">Ruft die bevorzugte Höhe für ein Textfeld ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-457">Gets the preferred height for a text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-458">Die bevorzugte Höhe eines Textfelds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-458">The preferred height of a text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-459">Die von dieser Eigenschaft zurückgegebene Größe basiert auf den Schriftschnitt Höhe und Rand des Textfelds.</span><span class="sxs-lookup"><span data-stu-id="b4e38-459">The size returned by this property is based on the font height and border style of the text box.</span></span> <span data-ttu-id="b4e38-460">Sie können diese Eigenschaft verwenden, um zu bestimmen, die entsprechende Größe des im Textfeld aus, um sicherzustellen, dass der Text im Steuerelement ordnungsgemäß angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="b4e38-460">You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</span></span> <span data-ttu-id="b4e38-461">Der von dieser Eigenschaft zurückgegebene Wert in Pixel.</span><span class="sxs-lookup"><span data-stu-id="b4e38-461">The value returned by this property is in pixels.</span></span>  
  
 <span data-ttu-id="b4e38-462">Der Wert des <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> stellt dar, die minimale Höhe, die das Textfeld aufweisen muss, um eine einzelne Textzeile ohne Text oben oder unten angezeigt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-462">The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</span></span> <span data-ttu-id="b4e38-463">Dieser Wert ist gleich, ob die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> -Eigenschaftensatz auf `true` oder `false`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-463">This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="b4e38-464">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-464">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="b4e38-465">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Tastenkombination darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-465">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-466">Verarbeitet eine Befehlstaste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-466">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-467">
            <see langword="true" />, wenn die Befehlstaste vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-467">
              <see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="b4e38-468">für den Betrieb mit nicht verwaltetem Code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-468">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="b4e38-469">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-469">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="b4e38-470">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-470">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-471">Verarbeitet eine Tastatureingabe im Dialogfeld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-471">Processes a dialog key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-472">
            <see langword="true" />, wenn die Taste vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-472">
              <see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-473">Ruft einen Wert ab, der angibt, ob der im Textfeld enthaltene Text schreibgeschützt ist, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-473">Gets or sets a value indicating whether text in the text box is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-474">
            <see langword="true" />, wenn das Textfeld schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-474">
              <see langword="true" /> if the text box is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b4e38-475">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-475">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-476">Wenn diese Eigenschaft auf festgelegt ist `true`, den Inhalt des Steuerelements können nicht durch den Benutzer zur Laufzeit geändert werden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-476">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime.</span></span> <span data-ttu-id="b4e38-477">Mit dieser Eigenschaft auf festgelegt `true`, Sie können immer noch den Wert der Festlegen der <xref:System.Windows.Forms.TextBoxBase.Text%2A> Eigenschaft im Code.</span><span class="sxs-lookup"><span data-stu-id="b4e38-477">With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code.</span></span> <span data-ttu-id="b4e38-478">Sie können dieses Feature verwenden, anstatt deaktivieren das Steuerelement mit dem <xref:System.Windows.Forms.Control.Enabled%2A> Eigenschaft, damit der Inhalt kopiert werden kann und QuickInfos angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-478">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-479">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />-Eigenschaft geändert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-479">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-480">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="b4e38-480">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-481">Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-481">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="b4e38-482">Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-482">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span> <span data-ttu-id="b4e38-483">In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-483">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="b4e38-484">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-484">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="b4e38-485">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz eines Typs, die enthält von erbt <xref:System.Windows.Forms.TextBoxBase>, z. B. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-485">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="b4e38-486">Geben Sie den Namen der Instanz `TextBoxBase1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-486">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]
 [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberSignature Language="F#" Value="member this.ScrollToCaret : unit -&gt; unit" Usage="textBoxBase.ScrollToCaret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-487">Führt einen Bildlauf durch den Inhalt des Steuerelements bis zur aktuellen Caretposition durch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-487">Scrolls the contents of the control to the current caret position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-488">Diese Methode können Sie den Inhalt des Steuerelements einen Bildlauf durchführen, bis die Einfügemarke im sichtbaren Bereich des Steuerelements angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="b4e38-488">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="b4e38-489">Wenn die Einfügemarke sich unten den sichtbaren Bereich des Steuerelements befindet, das <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> -Methode wird der Inhalt des Steuerelements einen Bildlauf durch, bis die Einfügemarke am unteren Rand des Steuerelements sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="b4e38-489">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="b4e38-490">Wenn die Einfügemarke über den sichtbaren Bereich des Steuerelements positioniert ist, scrollt diese Methode den Inhalt des Steuerelements, bis die Einfügemarke am oberen Rand des Steuerelements sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="b4e38-490">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="b4e38-491">Sie können diese Methode in einem mehrzeiligen Textfeld verwenden, um sicherzustellen, dass der Einstiegspunkt für den aktuellen Text im sichtbaren Bereich des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-491">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-492">Diese Methode hat keine Auswirkungen, wenn das Steuerelement keinen Fokus besitzt, oder wenn die Einfügemarke bereits in den sichtbaren Bereich des Steuerelements positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="b4e38-492">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-493">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.Keys> Enumeration und die <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> Methode, um sicherzustellen, dass die Einfügemarke, dargestellt durch das Caretzeichen immer auf dem Bildschirm sichtbar ist, nachdem Sie die EINGABETASTE gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-493">The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</span></span> <span data-ttu-id="b4e38-494">Um das Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular mit einem <xref:System.Windows.Forms.TextBox> Steuerelement namens `TextBox1` und ein <xref:System.Windows.Forms.RichTextBox> Steuerelement mit dem Namen `RichTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-494">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="b4e38-495">Dieses Beispiel erfordert, dass die Methode zur Verarbeitung von Ereignissen zugeordnet wurde die <xref:System.Windows.Forms.Control.KeyDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b4e38-495">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="override this.Select : int * int -&gt; unit" Usage="textBoxBase.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="b4e38-496">Die Position des ersten Zeichens in der aktuellen Textmarkierung im Textfeld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-496">The position of the first character in the current text selection within the text box.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="b4e38-497">Die Anzahl der zu markierenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-497">The number of characters to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-498">Wählt einen Textbereich im Textfeld aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-498">Selects a range of text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-499">Wenn der Anfangs-bis auf das erste Zeichen im Text des Steuerelements festgelegt werden sollen, legen Sie die `start` Parameter auf 0.</span><span class="sxs-lookup"><span data-stu-id="b4e38-499">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="b4e38-500">Sie können diese Methode verwenden, eine Teilzeichenfolge des Texts an, z. B. beim Auswählen der Text des Steuerelements zu durchsuchen, und ersetzen die Informationen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-500">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-501">Sie können die Einfügemarke innerhalb des Textfelds programmgesteuert verschieben, durch Festlegen der `start` Parameter, um die Position innerhalb des Textfelds, möchten Sie die Einfügemarke zu verschieben, und legen Sie, die `length` auf einen Wert von 0 (null).</span><span class="sxs-lookup"><span data-stu-id="b4e38-501">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="b4e38-502">Das Textfeld müssen den Fokus in der Reihenfolge für die Einfügemarke verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4e38-502">The text box must have focus in order for the caret to be moved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-503">Wenn diese Methode ohne Parameter aufgerufen wird, wird eine alternative Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="b4e38-503">If this method is called without any parameters, an alternative method is used.</span></span> <span data-ttu-id="b4e38-504">Diese alternative Methode erbt von der <xref:System.Windows.Forms.Control> Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-504">This alternative method inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="b4e38-505">Wenn aufgerufen, wird auf das Steuerelement den Eingabefokus, und wählt den Inhalt des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="b4e38-505">When called, it sets the input focus to the control and selects the contents of the control.</span></span> <span data-ttu-id="b4e38-506">Weitere Informationen finden Sie unter der Methode <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-506">For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-507">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, um den Inhalt des Steuerelements für die Instanz des Worts "Fox" zu suchen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-507">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word "fox".</span></span> <span data-ttu-id="b4e38-508">Wenn gefunden, der Code das Wort in das Steuerelement mit wählt die <xref:System.Windows.Forms.TextBoxBase.Select%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="b4e38-508">If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span> <span data-ttu-id="b4e38-509">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> mit dem Namen `textBox1` erstellt wurde und die zugehörige <xref:System.Windows.Forms.TextBoxBase.Text%2A> Eigenschaft enthält den Satz "der schnelle braune Hund springt über den faulen Fuchs."</span><span class="sxs-lookup"><span data-stu-id="b4e38-509">This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence "The quick brown fox jumps over the lazy dog."</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b4e38-510">Der Wert des <paramref name="start" />-Parameters ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-510">The value of the <paramref name="start" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.SelectAll" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-511">Markiert den gesamten Text im Textfeld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-511">Selects all text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-512">Diese Methode ermöglicht Ihnen die Auswahl der gesamte Text im Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="b4e38-512">This method enables you to select all text within the control.</span></span> <span data-ttu-id="b4e38-513">Sie können diese Methode verwenden, in Verbindung mit der <xref:System.Windows.Forms.TextBoxBase.Cut%2A> -Methode, die Text im Steuerelement, um den gesamten Inhalt des Steuerelements auszuschneiden und in markiert werden muss die **Zwischenablage**.</span><span class="sxs-lookup"><span data-stu-id="b4e38-513">You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-514">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, um festzustellen, ob der Text im Steuerelement ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="b4e38-514">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control.</span></span> <span data-ttu-id="b4e38-515">Wenn kein Text ausgewählt ist, wird ein Aufruf ausgelöst, um die <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> Methode vor dem Kopieren der Inhalte des Steuerelements, das die **Zwischenablage**.</span><span class="sxs-lookup"><span data-stu-id="b4e38-515">If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**.</span></span> <span data-ttu-id="b4e38-516">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> wurde benannte `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-516">This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public virtual string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-517">Ruft einen Wert ab, der den derzeitig markierten Text im Steuerelement angibt, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-517">Gets or sets a value indicating the currently selected text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-518">Eine Zeichenfolge, die den derzeitig markierten Text im Textfeld darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-518">A string that represents the currently selected text in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-519">Sie können diese Eigenschaft zum Ändern des Texts, die derzeit ausgewählt, in das Textfeld Text zuweisen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-519">You can assign text to this property to change the text currently selected in the text box.</span></span> <span data-ttu-id="b4e38-520">Wenn Sie im Textfeld derzeit kein Text markiert ist, gibt diese Eigenschaft eine Zeichenfolge der Länge 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="b4e38-520">If no text is currently selected in the text box, this property returns a zero-length string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-521">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-521">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="b4e38-522">Es bietet <xref:System.Windows.Forms.MenuItem.Click> -Ereignishandlern für <xref:System.Windows.Forms.MenuItem> Objekte, die ausführen Ausschneiden, kopieren, einfügen und Rückgängig-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-522">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="b4e38-523">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-523">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public virtual int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-524">Ruft die Anzahl der im Textfeld markierten Zeichen ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-524">Gets or sets the number of characters selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-525">Die Anzahl der markierten Zeichen im Textfeld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-525">The number of characters selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-526">Sie können diese Eigenschaft verwenden, um festzustellen, ob alle Zeichen in das Textfeld-Steuerelement derzeit ausgewählt sind, vor dem Ausführen von Vorgängen für den ausgewählten Text.</span><span class="sxs-lookup"><span data-stu-id="b4e38-526">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="b4e38-527">Bei der der Wert des der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> -Eigenschaftensatz auf einen Wert, der größer als die Anzahl der Zeichen im Text des Steuerelements den Wert des der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> -Eigenschaftensatz auf die gesamte Länge des Texts im Steuerelement minus dem Wert von der <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>Eigenschaft (wenn ein Wert, für angegeben wird die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="b4e38-527">When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-528">Sie können die Einfügemarke innerhalb des Textfelds programmgesteuert verschieben, durch Festlegen der <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> an die Position innerhalb des Textfelds, möchten Sie die Einfügemarke zu verschieben, und legen Sie, die <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> Eigenschaft mit einem Wert von 0 (null).</span><span class="sxs-lookup"><span data-stu-id="b4e38-528">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="b4e38-529">Das Textfeld müssen den Fokus in der Reihenfolge für die Einfügemarke verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4e38-529">The text box must have focus in order for the caret to be moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-530">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-530">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="b4e38-531">Es bietet <xref:System.Windows.Forms.MenuItem.Click> -Ereignishandlern für <xref:System.Windows.Forms.MenuItem> Objekte, die ausführen Ausschneiden, kopieren, einfügen und Rückgängig-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-531">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="b4e38-532">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-532">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b4e38-533">Der zugewiesene Wert ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-533">The assigned value is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-534">Ruft den Anfangspunkt des im Textfeld markierten Texts ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-534">Gets or sets the starting point of text selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-535">Die Anfangsposition des im Textfeld markierten Texts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-535">The starting position of text selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-536">Wenn kein Text im Steuerelement ausgewählt ist, gibt diese Eigenschaft an der Einfügemarke oder ein Caretzeichen für den neuen Text.</span><span class="sxs-lookup"><span data-stu-id="b4e38-536">If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</span></span> <span data-ttu-id="b4e38-537">Wenn Sie diese Eigenschaft auf eine Position hinter der Länge des Texts im Steuerelement festlegen, wird die Startposition der Bereichsauswahl hinter dem letzten Zeichen platziert werden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-537">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="b4e38-538">Wenn Text in das Textfeld-Steuerelement ausgewählt ist, das Ändern dieser Eigenschaft möglicherweise verringern Sie den Wert von der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-538">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span> <span data-ttu-id="b4e38-539">Wenn es sich bei der restlichen Text im Steuerelement nach der Position angegeben die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> -Eigenschaft ist kleiner als der Wert des der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> -Eigenschaft wird der Wert des der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> Eigenschaft wird automatisch verringert.</span><span class="sxs-lookup"><span data-stu-id="b4e38-539">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="b4e38-540">Der Wert des der <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> Eigenschaft löst nie eine Zunahme der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-540">The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span>  
  
 <span data-ttu-id="b4e38-541">Sie können die Auswahl im Textfeld programmgesteuert verschieben, durch Festlegen der <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> und <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="b4e38-541">You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.</span></span>  
  
 <span data-ttu-id="b4e38-542">Sie können die Einfügemarke innerhalb des Textfelds programmgesteuert verschieben, durch Festlegen der <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> an die Position innerhalb des Textfelds, möchten Sie die Einfügemarke zu verschieben, und legen Sie, die <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> Eigenschaft mit einem Wert von 0 (null).</span><span class="sxs-lookup"><span data-stu-id="b4e38-542">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span>  
  
 <span data-ttu-id="b4e38-543">Die <xref:System.Windows.Forms.TextBox> muss markiert sein, damit für die Auswahl oder Einfügemarke verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="b4e38-543">The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved.</span></span> <span data-ttu-id="b4e38-544">Sie können festlegen, die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> Eigenschaft eine <xref:System.Windows.Forms.TextBox> , <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> indem Sie Ihren der <xref:System.Windows.Forms.Control.Focus%2A> erste.</span><span class="sxs-lookup"><span data-stu-id="b4e38-544">You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-545">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="b4e38-545">**Example 1**</span></span>  
  
 <span data-ttu-id="b4e38-546">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-546">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="b4e38-547">Es bietet <xref:System.Windows.Forms.MenuItem.Click> -Ereignishandlern für <xref:System.Windows.Forms.MenuItem> Objekte, die ausführen Ausschneiden, kopieren, einfügen und Rückgängig-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-547">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="b4e38-548">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-548">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 <span data-ttu-id="b4e38-549">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="b4e38-549">**Example 2**</span></span>  
  
 <span data-ttu-id="b4e38-550">Im folgenden Beispiel wird die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> Eigenschaft eine <xref:System.Windows.Forms.TextBox> , <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> ermöglicht es der <xref:System.Windows.Forms.Control.Focus%2A> erste.</span><span class="sxs-lookup"><span data-stu-id="b4e38-550">The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
 [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b4e38-551">Der zugewiesene Wert ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-551">The assigned value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="textBoxBase.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="b4e38-552">Der neue <see cref="P:System.Windows.Forms.Control.Left" />-Eigenschaftswert des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-552">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="b4e38-553">Der neue <see cref="P:System.Windows.Forms.Control.Top" />-Eigenschaftswert des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-553">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="b4e38-554">Der neue <see cref="P:System.Windows.Forms.Control.Width" />-Eigenschaftswert des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-554">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="b4e38-555">Nicht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-555">Not used.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="b4e38-556">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.BoundsSpecified" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-556">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-557">Legt die angegebenen Begrenzungen des <see cref="T:System.Windows.Forms.TextBoxBase" />-Steuerelements fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-557">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-558">Die <xref:System.Windows.Forms.TextBoxBase> -Steuerelement verwendet die <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> Eigenschaft, um die Grenzen festzulegen, wenn die <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> -Eigenschaft ist `true` und die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-558">The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="b4e38-559">In der Regel die Parameter, die die Grenzen, die nicht im enthalten entsprechen, den `specified` Parameter übergeben werden, sich mit den aktuellen Werten.</span><span class="sxs-lookup"><span data-stu-id="b4e38-559">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="b4e38-560">Z. B. die <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, oder die <xref:System.Drawing.Point.X%2A> oder <xref:System.Drawing.Point.Y%2A> Eigenschaften der <xref:System.Windows.Forms.Control.Location%2A> Eigenschaft mit einem Verweis auf die aktuelle Instanz des Steuerelements übergeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="b4e38-560">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="b4e38-561">Jedoch sind alle übergebenen Werte berücksichtigt und auf das Steuerelement angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="b4e38-561">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="b4e38-562">Die `specified` Parameter darstellt, die Elemente der Steuerelemente <xref:System.Windows.Forms.Control.Bounds%2A> von Ihrer Anwendung geändert.</span><span class="sxs-lookup"><span data-stu-id="b4e38-562">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="b4e38-563">Angenommen, Sie ändern die <xref:System.Windows.Forms.Control.Size%2A> des Steuerelements die `specified` Parameter den Wert der `Size` Wert <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-563">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="b4e38-564">Jedoch wenn die <xref:System.Windows.Forms.Control.Size%2A> wird angepasst, als Reaktion auf die <xref:System.Windows.Forms.Control.Dock%2A> -Eigenschaft festgelegt wird, die `specified` Parameterwert ist die `None` Wert <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="b4e38-564">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b4e38-565">Beim Überschreiben von <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> Methode, um die Begrenzungen des Steuerelements ändern zu erzwingen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b4e38-565">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span>
            </span>
            <span data-ttu-id="b4e38-566">Abgeleitete Klassen können größeneinschränkungen zum Hinzufügen der <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b4e38-566">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-567">Ruft einen Wert ab, der angibt, ob die definierten Tastenkombinationen aktiviert sind, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-567">Gets or sets a value indicating whether the defined shortcuts are enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-568">
            <see langword="true" />, um die Tastenkombinationen zu aktivieren, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-568">
              <see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-569">Verwenden der <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> Eigenschaft zum Aktivieren oder deaktivieren die folgenden Tastenkombinationen und das Kontextmenü des Steuerelements:</span><span class="sxs-lookup"><span data-stu-id="b4e38-569">Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control's shortcut menu:</span></span>  
  
-   <span data-ttu-id="b4e38-570">STRG+Z</span><span class="sxs-lookup"><span data-stu-id="b4e38-570">CTRL+Z</span></span>  
  
-   <span data-ttu-id="b4e38-571">STRG+E</span><span class="sxs-lookup"><span data-stu-id="b4e38-571">CTRL+E</span></span>  
  
-   <span data-ttu-id="b4e38-572">STRG+C</span><span class="sxs-lookup"><span data-stu-id="b4e38-572">CTRL+C</span></span>  
  
-   <span data-ttu-id="b4e38-573">STRG+Y </span><span class="sxs-lookup"><span data-stu-id="b4e38-573">CTRL+Y</span></span>  
  
-   <span data-ttu-id="b4e38-574">STRG+X</span><span class="sxs-lookup"><span data-stu-id="b4e38-574">CTRL+X</span></span>  
  
-   <span data-ttu-id="b4e38-575">STRG+RÜCKTASTE</span><span class="sxs-lookup"><span data-stu-id="b4e38-575">CTRL+BACKSPACE</span></span>  
  
-   <span data-ttu-id="b4e38-576">STRG+V</span><span class="sxs-lookup"><span data-stu-id="b4e38-576">CTRL+V</span></span>  
  
-   <span data-ttu-id="b4e38-577">STRG+ENTF</span><span class="sxs-lookup"><span data-stu-id="b4e38-577">CTRL+DELETE</span></span>  
  
-   <span data-ttu-id="b4e38-578">STRG+A</span><span class="sxs-lookup"><span data-stu-id="b4e38-578">CTRL+A</span></span>  
  
-   <span data-ttu-id="b4e38-579">UMSCHALT + ENTF</span><span class="sxs-lookup"><span data-stu-id="b4e38-579">SHIFT+DELETE</span></span>  
  
-   <span data-ttu-id="b4e38-580">STRG+L</span><span class="sxs-lookup"><span data-stu-id="b4e38-580">CTRL+L</span></span>  
  
-   <span data-ttu-id="b4e38-581">UMSCHALT + EINFG</span><span class="sxs-lookup"><span data-stu-id="b4e38-581">SHIFT+INSERT</span></span>  
  
-   <span data-ttu-id="b4e38-582">STRG+R</span><span class="sxs-lookup"><span data-stu-id="b4e38-582">CTRL+R</span></span>  
  
 <span data-ttu-id="b4e38-583">Sie können diese Eigenschaft zum Angeben von anderen Tastenkombinationen überschreiben.</span><span class="sxs-lookup"><span data-stu-id="b4e38-583">You can override this property to specify other shortcut keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBoxBase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-584">Ruft den aktuellen Text im Textfeld ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-584">Gets or sets the current text in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-585">Der im Steuerelement angezeigte Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-585">The text displayed in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-586">Um mehrere Textzeilen in einem Textfeld anzuzeigen, legen die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-586">To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`.</span></span> <span data-ttu-id="b4e38-587">Verwenden Sie zum Lesen oder Festlegen des Texts von einem mehrzeiligen Textfeld, das <xref:System.Windows.Forms.TextBoxBase.Lines%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-587">To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property.</span></span> <span data-ttu-id="b4e38-588">Die Größe des Texts, die in eingegeben werden, können die <xref:System.Windows.Forms.RichTextBox> Steuerelement wird nur durch den verfügbaren Arbeitsspeicher des Systems beschränkt.</span><span class="sxs-lookup"><span data-stu-id="b4e38-588">The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-589">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, ein mehrzeiliges <xref:System.Windows.Forms.TextBox> -Steuerelement mit der vertikalen Bildlaufleiste.</span><span class="sxs-lookup"><span data-stu-id="b4e38-589">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="b4e38-590">Dieses Beispiel verwendet auch die <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> Eigenschaften, die mehrzeiligen Textfeld-Steuerelement zum Erstellen von Textdokumenten nutzen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-590">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public virtual int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-591">Ruft die Länge des Texts im Steuerelement ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-591">Gets the length of text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-592">Die Anzahl der Zeichen im Text des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-592">The number of characters contained in the text of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-593">Sie können diese Eigenschaft verwenden, zum Bestimmen der Anzahl von Zeichen in einer Zeichenfolge für Aufgaben wie das Suchen nach bestimmten Zeichenfolgen von Text in den Text des Steuerelements, in dem wissen, der die Gesamtzahl der Zeichen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="b4e38-593">You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-594">Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> Methode und die <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> Eigenschaft, um Text aus einer kopieren <xref:System.Windows.Forms.TextBox> in einen anderen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-594">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="b4e38-595">Dieses Beispiel erfordert, dass zwei <xref:System.Windows.Forms.TextBox> Steuerelemente, die mit dem Namen `textBox1` und `textBox2`, wurde ein Formular, und dass `textBox1` Text zugewiesen seine <xref:System.Windows.Forms.Control.Text%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-595">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="textBoxBase.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-596">Gibt eine Zeichenfolge zurück, die das <see cref="T:System.Windows.Forms.TextBoxBase" />-Steuerelement darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-596">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4e38-597">Eine Zeichenfolge, die das aktuelle <see cref="T:System.Windows.Forms.TextBoxBase" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-597">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
          </span>
          <span data-ttu-id="b4e38-598">Die Zeichenfolge enthält den Typ und die <see cref="T:System.Windows.Forms.TextBoxBase" />-Eigenschaft des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-598">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-599">Macht die letzte Bearbeitung des Textfelds rückgängig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-599">Undoes the last edit operation in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-600">Diese Methode wird die letzte Rückgängig **Zwischenablage** oder Text Änderung in das Textfeld-Steuerelement ausgeführt werden, wenn die <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> -Eigenschaft gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-600">This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-601">Die <xref:System.Windows.Forms.TextBoxBase.Undo%2A> Methode funktioniert nicht mit der <xref:System.Windows.Forms.Control.KeyPress> oder <xref:System.Windows.Forms.Control.TextChanged> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-601">The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-602">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse.</span><span class="sxs-lookup"><span data-stu-id="b4e38-602">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="b4e38-603">Es bietet <xref:System.Windows.Forms.MenuItem.Click> -Ereignishandlern für <xref:System.Windows.Forms.MenuItem> Objekte, die ausführen Ausschneiden, kopieren, einfügen und Rückgängig-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="b4e38-603">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="b4e38-604">In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.TextBox> Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4e38-604">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="textBoxBase.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="b4e38-605">Die zu verarbeitende Windows-<see cref="T:System.Windows.Forms.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-605">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4e38-606">Verarbeitet Windows-Meldungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-606">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WordWrap : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4e38-607">Gibt an, ob im Steuerelement für ein mehrzeiliges Textfeld bei Bedarf automatisch ein Zeilenumbruch durchgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-607">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4e38-608">
            <see langword="true" />, wenn in die Zeilen in dem mehrzeiligen Textfeld-Steuerelement umbrochen werden, <see langword="false" />, wenn das Textfeld-Steuerelement automatisch einen horizontalen Bildlauf durchführt, wenn der Benutzer über den rechten Rand des Steuerelement hinaus schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-608">
              <see langword="true" /> if the multiline text box control wraps words; <see langword="false" /> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</span>
          </span>
          <span data-ttu-id="b4e38-609">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4e38-609">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4e38-610">Wenn diese Eigenschaft, um festgelegt wird `true`, horizontale Scrollleisten werden nicht angezeigt, unabhängig von der <xref:System.Windows.Forms.TextBox.ScrollBars%2A> Einstellung der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4e38-610">If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4e38-611">In der abgeleiteten Klasse <xref:System.Windows.Forms.TextBox>, Text innerhalb des Steuerelements wird unabhängig von der eigenschaftseinstellung dieser Eigenschaft immer umbrochen, es sei denn, die <xref:System.Windows.Forms.TextBox.TextAlign%2A> -Eigenschaftensatz auf `HorizontalAlignment.Left`.</span><span class="sxs-lookup"><span data-stu-id="b4e38-611">In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4e38-612">Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse sein, ein mehrzeiliges <xref:System.Windows.Forms.TextBox> -Steuerelement mit der vertikalen Bildlaufleiste.</span><span class="sxs-lookup"><span data-stu-id="b4e38-612">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="b4e38-613">Dieses Beispiel verwendet auch die <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> Eigenschaften, die mehrzeiligen Textfeld-Steuerelement zum Erstellen von Textdokumenten nutzen.</span><span class="sxs-lookup"><span data-stu-id="b4e38-613">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>