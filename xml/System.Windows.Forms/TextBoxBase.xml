<Type Name="TextBoxBase" FullName="System.Windows.Forms.TextBoxBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c8cde13d0fdbe10d9a158c3696402ddb5a9cd4e3" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75177743" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="79d66-101">Implementiert die für Textsteuerelemente erforderlichen Grundfunktionen.</span><span class="sxs-lookup"><span data-stu-id="79d66-101">Implements the basic functionality required by text controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-102">Diese Klasse implementiert die Kernfunktionen der Steuerelemente zur Textbearbeitung, z. b. <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="79d66-102">This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="79d66-103">Hierzu gehören die Textauswahl, die **Zwischenablage** Funktionalität, die Unterstützung für mehrzeilige Text Steuerelemente und viele Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="79d66-103">These include text selection, **Clipboard** functionality, multiline text control support, and many events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-104">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um eine mehrzeilige <xref:System.Windows.Forms.TextBox> Steuerelement mit vertikalen Schiebe leisten zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="79d66-104">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="79d66-105">Dieses Beispiel verwendet auch die Eigenschaften <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>, damit das mehrzeilige Textfeld-Steuerelement für das Erstellen von Textdokumenten nützlich ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-105">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="79d66-106">Sie erben in der Regel nicht von <see cref="T:System.Windows.Forms.TextBoxBase" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-106">You do not typically inherit from <see cref="T:System.Windows.Forms.TextBoxBase" />.</span></span> <span data-ttu-id="79d66-107">Um eine eigene Text Steuerelement Klasse zu erstellen, erben Sie von <see cref="T:System.Windows.Forms.TextBox" /> oder <see cref="T:System.Windows.Forms.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-107">To create your own text control class, inherit from <see cref="T:System.Windows.Forms.TextBox" /> or <see cref="T:System.Windows.Forms.RichTextBox" />.</span></span></para></block>
    <altmember cref="T:System.Windows.Forms.TextBox" />
    <altmember cref="T:System.Windows.Forms.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-108">Ruft einen Wert ab, der angibt, ob in einem mehrzeiligen Textfeld-Steuerelement beim Drücken der TAB-TASTE ein Tabstoppzeichen in das Steuerelement eingegeben wird oder der Fokus auf das nächste Steuerelement in der Aktivierreihenfolge gesetzt wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-108">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span></span></summary>
        <value><span data-ttu-id="79d66-109"><see langword="true" />, damit Benutzer mit der TAB-TASTE ein Tabstoppzeichen in ein mehrzeiliges Textfeld eingeben können, <see langword="false" />, wenn das Drücken der TAB-TASTE den Fokus verschiebt.</span><span class="sxs-lookup"><span data-stu-id="79d66-109"><see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span></span> <span data-ttu-id="79d66-110">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-110">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-111">Die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>-Eigenschaft muss ebenfalls `true` werden, um ein Tabstopp Zeichen im-Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="79d66-111">The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.</span></span>  
  
 <span data-ttu-id="79d66-112">Wenn die <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>-Eigenschaft auf `true`festgelegt ist, muss der Benutzer STRG + TAB drücken, um den Fokus auf das nächste Steuerelement in der Aktivier Reihenfolge zu verschieben.</span><span class="sxs-lookup"><span data-stu-id="79d66-112">If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-113">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um eine mehrzeilige <xref:System.Windows.Forms.TextBox> Steuerelement mit vertikalen Schiebe leisten zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="79d66-113">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="79d66-114">Dieses Beispiel verwendet auch die Eigenschaften <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>, damit das mehrzeilige Textfeld-Steuerelement für das Erstellen von Textdokumenten nützlich ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-114">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberSignature Language="F#" Value="member this.AcceptsTabChanged : EventHandler " Usage="member this.AcceptsTabChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-115">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />-Eigenschaft geändert hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-115">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-116">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-116">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-117">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-117">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="79d66-118">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="79d66-118">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span> <span data-ttu-id="79d66-119">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="79d66-119">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="79d66-120">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.</span><span class="sxs-lookup"><span data-stu-id="79d66-120">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="79d66-121">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von <xref:System.Windows.Forms.TextBoxBase>erbt, z. b. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="79d66-121">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="79d66-122">Benennen Sie dann die Instanz `TextBoxBase1`, und stellen Sie sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-122">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]
 [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="79d66-123">Der an den aktuellen Inhalt des Textfelds anzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="79d66-123">The text to append to the current contents of the text box.</span></span></param>
        <summary><span data-ttu-id="79d66-124">Fügt Text an den aktuellen Text eines Textfelds an.</span><span class="sxs-lookup"><span data-stu-id="79d66-124">Appends text to the current text of a text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-125">Mit dieser Methode können Sie dem vorhandenen Text im Steuerelement Text hinzufügen, anstatt den Verkettungs Operator (+) zu verwenden, um Text mit der <xref:System.Windows.Forms.TextBoxBase.Text%2A>-Eigenschaft zu verketten.</span><span class="sxs-lookup"><span data-stu-id="79d66-125">You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-126">Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Windows.Forms.TextBoxBase.AppendText%2A>-Methode und die <xref:System.Windows.Forms.TextBoxBase.TextLength%2A>-Eigenschaft verwenden, um Text von einem <xref:System.Windows.Forms.TextBox> in einen anderen zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="79d66-126">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="79d66-127">In diesem Beispiel ist es erforderlich, dass zwei <xref:System.Windows.Forms.TextBox> Steuerelemente mit dem Namen `textBox1` und `textBox2`zu einem Formular hinzugefügt wurden und dass `textBox1` Text der <xref:System.Windows.Forms.Control.Text%2A>-Eigenschaft zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-127">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="C#" Value="public virtual bool AutoSize { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoSize As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-128">Ruft einen Wert ab, der angibt, ob die Höhe des Steuerelements automatisch angepasst wird, wenn die dem Steuerelement zugewiesene Schriftart geändert wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-128">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span></span></summary>
        <value><span data-ttu-id="79d66-129"><see langword="true" />, wenn die Höhe des Steuerelements bei Änderung der Schriftart automatisch angepasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-129"><see langword="true" /> if the height of the control automatically adjusts when the font is changed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="79d66-130">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-130">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-131">Wenn Sie die <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>-Eigenschaft für einen <xref:System.Windows.Forms.TextBox>auf `true` festlegen und der <xref:System.Windows.Forms.Control.Font%2A> sich ändert, erweitert oder verkleinert der <xref:System.Windows.Forms.TextBox> den <xref:System.Windows.Forms.Control.Height%2A>, um dem größeren oder kleineren Text Rechnung zu tragen.</span><span class="sxs-lookup"><span data-stu-id="79d66-131">When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text.</span></span> <span data-ttu-id="79d66-132">Die <xref:System.Windows.Forms.Control.Width%2A> des <xref:System.Windows.Forms.TextBox> ändert sich nicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-132">The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.</span></span>  
  
 <span data-ttu-id="79d66-133">Wenn Sie die Größe des Steuer Elements ändern möchten, während der Benutzer Text eingibt, können Sie ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement verwenden und dessen <xref:System.Windows.Forms.RichTextBox.ContentsResized>-Ereignis verwenden, um seine Größe zu ändern.</span><span class="sxs-lookup"><span data-stu-id="79d66-133">If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-134">In diesem Beispiel wird davon ausgegangen, dass Sie ein Formular mit zwei Textfeldern, zwei Schaltflächen und Click-Ereignissen für jede Schaltfläche haben.</span><span class="sxs-lookup"><span data-stu-id="79d66-134">This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</span></span> <span data-ttu-id="79d66-135">Im Beispiel wird die <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>-Eigenschaft veranschaulicht, indem für ein Textfeld `true` und `false` für das andere festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-135">The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other.</span></span> <span data-ttu-id="79d66-136">Wenn Sie auf eine Schaltfläche klicken, werden die Textfelder mit einem kleineren Text gefüllt, und wenn Sie auf die Schaltfläche "andere" klicken, werden die Textfelder mit größerem Text aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="79d66-136">When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</span></span> <span data-ttu-id="79d66-137">Das Textfeld, für das <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> festgelegt ist `true` vergrößert sich um den größeren Text.</span><span class="sxs-lookup"><span data-stu-id="79d66-137">The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text.</span></span> <span data-ttu-id="79d66-138">Die Breite ändert sich nicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-138">The width does not change.</span></span>  
  
 [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-139">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-139">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-140">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-140">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-141">Ruft die Hintergrundfarbe des Steuerelements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-141">Gets or sets the background color of the control.</span></span></summary>
        <value><span data-ttu-id="79d66-142">Eine <see cref="T:System.Drawing.Color" />, die den Hintergrund des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="79d66-142">A <see cref="T:System.Drawing.Color" /> that represents the background of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-143">Sie können die <xref:System.Windows.Forms.TextBoxBase.BackColor%2A>-Eigenschaft verwenden, um die Hintergrundfarbe des Text-Steuer Elements so zu ändern, dass es in das Farbschema Ihrer Formulare integriert wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-143">You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.</span></span>  
  
 <span data-ttu-id="79d66-144">Verwenden Sie die <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>-Eigenschaft, um die Farbe des Texts im Steuerelement zu ändern.</span><span class="sxs-lookup"><span data-stu-id="79d66-144">To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property.</span></span> <span data-ttu-id="79d66-145">Wenn Sie die <xref:System.Windows.Forms.TextBoxBase.BackColor%2A>-Eigenschaft des Text-Steuer Elements festlegen, stellen Sie sicher, dass die von Ihnen gewählte Farbe nicht dazu führt, dass der Text des Steuer Elements ausgeblendet wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-145">When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="79d66-146">Wenn z. b. die Eigenschaften <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> und <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> beide auf `Color.Black`festgelegt sind, ist der Text im Textfeld-Steuerelement nicht sichtbar.</span><span class="sxs-lookup"><span data-stu-id="79d66-146">For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="79d66-147">Diese Eigenschaft kann überschrieben werden, wenn die <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>-Eigenschaft des <xref:System.Windows.Forms.TextBoxBase> auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-147">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-148">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-148">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="79d66-149">Das Hintergrundbild für das Objekt.</span><span class="sxs-lookup"><span data-stu-id="79d66-149">The background image for the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-150">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-150">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-151">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="79d66-151">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span></span> <span data-ttu-id="79d66-152">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-152">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-153">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-153">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-154">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-154">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="79d66-155">Einer der <see cref="T:System.Windows.Forms.ImageLayout" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="79d66-155">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-156">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-156">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-157">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="79d66-157">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span></span> <span data-ttu-id="79d66-158">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-158">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-159">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-159">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-160">Ruft den Rahmentyp des Textfeld-Steuerelements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-160">Gets or sets the border type of the text box control.</span></span></summary>
        <value><span data-ttu-id="79d66-161">Ein <see cref="T:System.Windows.Forms.BorderStyle" />, der den Rahmentyp des Textfeld-Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="79d66-161">A <see cref="T:System.Windows.Forms.BorderStyle" /> that represents the border type of the text box control.</span></span> <span data-ttu-id="79d66-162">Der Standardwert ist <see langword="Fixed3D" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-162">The default is <see langword="Fixed3D" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-163">Sie können die <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A>-Eigenschaft verwenden, um neben dem dreidimensionalen Standard Steuerelement auch Grenz lose und flache Steuerelemente zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="79d66-163">You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-164">Die abgeleitete Klasse, <xref:System.Windows.Forms.RichTextBox>, unterstützt den `BorderStyle.FixedSingle`-Stil nicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-164">The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style.</span></span> <span data-ttu-id="79d66-165">Dieser Stil bewirkt, dass der <xref:System.Windows.Forms.BorderStyle> stattdessen den `BorderStyle.Fixed3D` Stil verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-165">This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-166">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um ein Textfeld zu erstellen, in dem Text mit 20-Punkt-Arial mit einem einzelnen Rahmen ordnungsgemäß angezeigt werden kann.</span><span class="sxs-lookup"><span data-stu-id="79d66-166">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</span></span> <span data-ttu-id="79d66-167">In diesem Beispiel wird die <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>-Eigenschaft verwendet, um die entsprechende Höhe des Steuer Elements zu bestimmen, nachdem die Schriftart und <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> dem Steuerelement zugewiesen wurden.</span><span class="sxs-lookup"><span data-stu-id="79d66-167">This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="79d66-168">Der Eigenschaft wurde ein Wert außerhalb des gültigen Wertebereichs der Enumeration zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="79d66-168">A value that is not within the range of valid values for the enumeration was assigned to the property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-169">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />-Eigenschaft geändert hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-169">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-170">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-170">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-171">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-171">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="79d66-172">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="79d66-172">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span> <span data-ttu-id="79d66-173">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="79d66-173">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="79d66-174">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.</span><span class="sxs-lookup"><span data-stu-id="79d66-174">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="79d66-175">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von <xref:System.Windows.Forms.TextBoxBase>erbt, z. b. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="79d66-175">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="79d66-176">Benennen Sie dann die Instanz `TextBoxBase1`, und stellen Sie sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-176">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]
 [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-177">Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Windows.Forms.Control.ImeMode" />-Eigenschaft auf einen aktiven Wert festgelegt werden kann, um IME-Unterstützung zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="79d66-177">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span></span></summary>
        <value><span data-ttu-id="79d66-178"><see langword="false" />, wenn die <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />-Eigenschaft gleich <see langword="true" /> ist oder für diese <see cref="T:System.Windows.Forms.TextBoxBase" />-Klasse festgelegt ist, dass ein Zeichen zum Maskieren von Kennwörtern verwendet werden soll, andernfalls <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-178"><see langword="false" /> if the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property is <see langword="true" /> or if this <see cref="T:System.Windows.Forms.TextBoxBase" /> class is set to use a password mask character; otherwise, <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-179">Ruft einen Wert ab, der angibt, ob Benutzer den vorhergehenden Vorgang in einem Textfeld-Steuerelement rückgängig machen können.</span><span class="sxs-lookup"><span data-stu-id="79d66-179">Gets a value indicating whether the user can undo the previous operation in a text box control.</span></span></summary>
        <value><span data-ttu-id="79d66-180"><see langword="true" />, wenn Benutzer den vorhergehenden Vorgang in einem Textfeld-Steuerelement rückgängig machen können, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-180"><see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-181">Wenn diese Methode `true`zurückgibt, können Sie die <xref:System.Windows.Forms.TextBoxBase.Undo%2A>-Methode zum Rückgängigmachen des letzten Vorgangs in einem Textfeld aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d66-181">If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box.</span></span> <span data-ttu-id="79d66-182">Sie können diese Methode im <xref:System.Windows.Forms.MenuItem.Popup>-Ereignis einer <xref:System.Windows.Forms.MenuItem>oder in Code verwenden, der den Zustand von Schaltflächen in einem <xref:System.Windows.Forms.ToolBar> verwaltet, um die Möglichkeit zum Rückgängigmachen des vorherigen Vorgangs in einem Textfeld-Steuerelement zu aktivieren oder zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="79d66-182">You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-183">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-183">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="79d66-184">Es stellt <xref:System.Windows.Forms.MenuItem.Click> Ereignishandler für <xref:System.Windows.Forms.MenuItem> Objekte bereit, die Ausschneide-, Kopier-, Einfüge-und rückgängig-Vorgänge ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-184">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="79d66-185">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-185">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBoxBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-186">Löscht den gesamten Text aus dem Textfeld-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="79d66-186">Clears all text from the text box control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-187">Sie können diese Methode verwenden, um den Inhalt des Steuer Elements zu löschen, anstatt der <xref:System.Windows.Forms.TextBoxBase.Text%2A>-Eigenschaft eine leere Zeichenfolge zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="79d66-187">You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-188">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um einen Ereignishandler für das <xref:System.Windows.Forms.Control.TextChanged>-Ereignis zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="79d66-188">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span> <span data-ttu-id="79d66-189">Der Code im-Ereignishandler schränkt Daten auf Zahlen ein.</span><span class="sxs-lookup"><span data-stu-id="79d66-189">The code within the event handler restricts data to numbers.</span></span> <span data-ttu-id="79d66-190">Nachdem Text im-Steuerelement eingegeben wurde, bestimmt der Code, ob der eingegebene Text eine Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-190">After text has been entered in the control, the code determines if the text entered is a number.</span></span> <span data-ttu-id="79d66-191">Wenn der Text keine Zahl ist, löscht der Code den Text aus dem-Steuerelement, und ein <xref:System.Windows.Forms.MessageBox> wird angezeigt, um den Benutzer zu warnen, dass nur Zahlen akzeptiert werden.</span><span class="sxs-lookup"><span data-stu-id="79d66-191">If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted.</span></span> <span data-ttu-id="79d66-192">Das Beispiel setzt voraus, dass eine `Boolean` Variable mit dem Namen `flag` und ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` außerhalb dieser Methode definiert sind.</span><span class="sxs-lookup"><span data-stu-id="79d66-192">The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method.</span></span> <span data-ttu-id="79d66-193">In diesem Beispiel wird veranschaulicht, wie eine Flag-Variable verwendet wird, um ein kaskadierungsereignis im <xref:System.Windows.Forms.Control.TextChanged> Ereignis zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="79d66-193">This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberSignature Language="F#" Value="member this.ClearUndo : unit -&gt; unit" Usage="textBoxBase.ClearUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-194">Löscht alle Informationen über den letzten Vorgang aus dem Rückgängig-Puffer für das Textfeld.</span><span class="sxs-lookup"><span data-stu-id="79d66-194">Clears information about the most recent operation from the undo buffer of the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-195">Sie können diese Methode verwenden, um zu verhindern, dass ein Rückgängig-Vorgang basierend auf dem Zustand der Anwendung wiederholt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-195">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-196">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-196">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="79d66-197">Es stellt <xref:System.Windows.Forms.MenuItem.Click> Ereignishandler für <xref:System.Windows.Forms.MenuItem> Objekte bereit, die Ausschneide-, Kopier-, Einfüge-und rückgängig-Vorgänge ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-197">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="79d66-198">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-198">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-199">Tritt ein, wenn auf das Textfeld geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-199">Occurs when the text box is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-200">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-200">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-201">Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Windows.Forms.TextBoxBase.Click>-Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-201">The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span> <span data-ttu-id="79d66-202">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen TextBox1 enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-202">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1.</span></span> <span data-ttu-id="79d66-203">Für dieses Beispiel ist es erforderlich, dass die Ereignis Behandlungsmethode dem <xref:System.Windows.Forms.TextBoxBase.Click>-Ereignis zugeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-203">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-204">Kopiert die aktuelle Auswahl im Textfeld in die **Zwischenablage**.</span><span class="sxs-lookup"><span data-stu-id="79d66-204">Copies the current selection in the text box to the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-205">Sie können diese Methode verwenden, anstatt die <xref:System.Windows.Forms.Clipboard>-Klasse zu verwenden, um Text in das Textfeld zu kopieren und in die **Zwischenablage einzufügen**.</span><span class="sxs-lookup"><span data-stu-id="79d66-205">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-206">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-206">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="79d66-207">Es stellt <xref:System.Windows.Forms.MenuItem.Click> Ereignishandler für <xref:System.Windows.Forms.MenuItem> Objekte bereit, die Ausschneide-, Kopier-, Einfüge-und rückgängig-Vorgänge ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-207">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="79d66-208">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-208">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="textBoxBase.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-209">Erstellt ein Handle für das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="79d66-209">Creates a handle for the control.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="79d66-210">für den Betrieb mit nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="79d66-210">for operating with unmanaged code.</span></span> <span data-ttu-id="79d66-211">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="79d66-211">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-212">Ruft die benötigten Erstellungsparameter ab, wenn das Steuerelementhandle erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-212">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="79d66-213">Eine <see cref="T:System.Windows.Forms.CreateParams" />-Eigenschaft, die die erforderlichen Erstellungsparameter enthält, wenn das Handle für das Steuerelement erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-213">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-214">Verschiebt die aktuelle Auswahl im Textfeld in die **Zwischenablage**.</span><span class="sxs-lookup"><span data-stu-id="79d66-214">Moves the current selection in the text box to the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-215">Diese Methode schneidet Text nur aus dem Textfeld aus, wenn im-Steuerelement Text ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-215">This method will only cut text from the text box if text is selected in the control.</span></span> <span data-ttu-id="79d66-216">Sie können diese Methode verwenden, anstatt die <xref:System.Windows.Forms.Clipboard>-Klasse zu verwenden, um Text in das Textfeld zu kopieren und in die **Zwischenablage**zu verschieben.</span><span class="sxs-lookup"><span data-stu-id="79d66-216">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-217">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-217">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="79d66-218">Es stellt <xref:System.Windows.Forms.MenuItem.Click> Ereignishandler für <xref:System.Windows.Forms.MenuItem> Objekte bereit, die Ausschneide-, Kopier-, Einfüge-und rückgängig-Vorgänge ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-218">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="79d66-219">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-219">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-220">Ruft den Standardcursor für das Steuerelement ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-220">Gets or sets the default cursor for the control.</span></span></summary>
        <value><span data-ttu-id="79d66-221">Ein Objekt vom Typ <see cref="T:System.Windows.Forms.Cursor" />, das den aktuellen Standardcursor darstellt.</span><span class="sxs-lookup"><span data-stu-id="79d66-221">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-222">Überschreiben Sie <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A>, um einen Standard Cursor für das Steuerelement zu konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="79d66-222">Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="79d66-223">Dies ist effizienter als das Festlegen des Cursors im Konstruktor des Steuer Elements und ermöglicht die automatische Unterstützung bestimmter Cursor bezogener Designer Funktionen.</span><span class="sxs-lookup"><span data-stu-id="79d66-223">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-224">Ruft die Standardgröße des Steuerelements ab.</span><span class="sxs-lookup"><span data-stu-id="79d66-224">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="79d66-225">Die Standard-<see cref="T:System.Drawing.Size" /> des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="79d66-225">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberSignature Language="F#" Value="member this.DeselectAll : unit -&gt; unit" Usage="textBoxBase.DeselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-226">Gibt an, dass der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />-Eigenschaft 0 (null) ist. Demzufolge werden im Steuerelement keine Zeichen ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="79d66-226">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-227">Ruft einen Wert ab, der angibt, ob ein Steuerelement in einem Puffer gezeichnet wird, bevor es angezeigt wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-227">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span></span> <span data-ttu-id="79d66-228">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-228">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="79d66-229"><see langword="true" />, um doppelte Pufferung im Steuerelement zu implementieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-229"><see langword="true" /> to implement double buffering on the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-230">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-230">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-231">Ruft die Vordergrundfarbe des Steuerelements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-231">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="79d66-232">Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe des Steuerelements darstellt.</span><span class="sxs-lookup"><span data-stu-id="79d66-232">A <see cref="T:System.Drawing.Color" /> that represents the control's foreground color.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-233">Sie können die <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>-Eigenschaft verwenden, um die Farbe des Texts im-Steuerelement so zu ändern, dass er dem Text von anderen Steuerelementen auf dem Formular entspricht.</span><span class="sxs-lookup"><span data-stu-id="79d66-233">You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form.</span></span> <span data-ttu-id="79d66-234">Sie können diese Eigenschaft auch verwenden, um ein bestimmtes Textfeld hervorzuheben, das einen ungültigen Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-234">You can also use this property to highlight a specific text box that contains an invalid value.</span></span>  
  
 <span data-ttu-id="79d66-235">Um die Hintergrundfarbe des Steuer Elements zu ändern, verwenden Sie die <xref:System.Windows.Forms.TextBoxBase.BackColor%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="79d66-235">To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property.</span></span> <span data-ttu-id="79d66-236">Wenn Sie die <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>-Eigenschaft des Text-Steuer Elements festlegen, stellen Sie sicher, dass die von Ihnen gewählte Farbe nicht dazu führt, dass der Text des Steuer Elements ausgeblendet wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-236">When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="79d66-237">Wenn z. b. die Eigenschaften <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> und <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> beide auf `Color.Black`festgelegt sind, ist der Text im Textfeld-Steuerelement nicht sichtbar.</span><span class="sxs-lookup"><span data-stu-id="79d66-237">For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="79d66-238">Diese Eigenschaft kann überschrieben werden, wenn die <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>-Eigenschaft des <xref:System.Windows.Forms.TextBoxBase> auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-238">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public virtual char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharFromPosition : System.Drawing.Point -&gt; char&#xA;override this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="textBoxBase.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="79d66-239">Die Position, von der aus das nächststehende Zeichen gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="79d66-239">The location from which to seek the nearest character.</span></span></param>
        <summary><span data-ttu-id="79d66-240">Ruft das Zeichen ab, das der angegebenen Position im Steuerelement am nächsten liegt.</span><span class="sxs-lookup"><span data-stu-id="79d66-240">Retrieves the character that is closest to the specified location within the control.</span></span></summary>
        <returns><span data-ttu-id="79d66-241">Das Zeichen an der angegebenen Position.</span><span class="sxs-lookup"><span data-stu-id="79d66-241">The character at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-242">Wenn sich der im `pt`-Parameter angegebene Speicherort außerhalb des Client Bereichs des Steuer Elements befindet, wird das erste Zeichen der Zeichenfolge zurückgegeben, das dem in `pt` angegebenen Punkt am nächsten liegt.</span><span class="sxs-lookup"><span data-stu-id="79d66-242">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="79d66-243">Mit dieser Methode können Sie bestimmen, welche Zeichen sich in der Nähe eines bestimmten Punkts im Steuerelement befinden.</span><span class="sxs-lookup"><span data-stu-id="79d66-243">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="79d66-244">Sie können diesen Wert dann verwenden, um Vorgänge für den Text an diesem Speicherort auszuführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-244">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-245">Wenn sich die angegebene Position im `pt`-Parameter auf der rechten Seite des Client Bereichs des Steuer Elements befindet, wird das letzte Zeichen der Zeichenfolge zurückgegeben, das dem in `pt` angegebenen Punkt am nächsten liegt.</span><span class="sxs-lookup"><span data-stu-id="79d66-245">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharIndexFromPosition : System.Drawing.Point -&gt; int&#xA;override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="textBoxBase.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="79d66-246">Die zu suchende Position.</span><span class="sxs-lookup"><span data-stu-id="79d66-246">The location to search.</span></span></param>
        <summary><span data-ttu-id="79d66-247">Ruft den Index des Zeichens ab, das sich am nächsten zur angegebenen Position befindet.</span><span class="sxs-lookup"><span data-stu-id="79d66-247">Retrieves the index of the character nearest to the specified location.</span></span></summary>
        <returns><span data-ttu-id="79d66-248">Der nullbasierte Zeichenindex an der angegebenen Position.</span><span class="sxs-lookup"><span data-stu-id="79d66-248">The zero-based character index at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-249">Diese Methode gibt den Zeichen Index zurück, der der im `pt`-Parameter angegebenen Position am nächsten liegt.</span><span class="sxs-lookup"><span data-stu-id="79d66-249">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="79d66-250">Der Zeichen Index ist ein NULL basierter Text Index im-Steuerelement, einschließlich Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="79d66-250">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="79d66-251">Sie können diese Methode verwenden, um zu bestimmen, wo sich der Benutzer mit dem Mauszeiger befindet, indem Sie die Maus Koordinaten an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="79d66-251">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="79d66-252">Dies kann hilfreich sein, wenn Sie Aufgaben ausführen möchten, wenn der Benutzer mit dem Mauszeiger auf ein Wort im Text des Steuer Elements bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-252">This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="79d66-253">Wenn die angegebene Position nicht innerhalb des Client Rechtecks des Steuer Elements liegt oder außerhalb des letzten Zeichens im Steuerelement liegt, ist der Rückgabewert der Index des letzten Zeichens.</span><span class="sxs-lookup"><span data-stu-id="79d66-253">If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexFromLine : int -&gt; int" Usage="textBoxBase.GetFirstCharIndexFromLine lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="79d66-254">Die Zeile, für die der Index des ersten Zeichens abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="79d66-254">The line for which to get the index of its first character.</span></span></param>
        <summary><span data-ttu-id="79d66-255">Ruft den Index des ersten Zeichens einer bestimmten Zeile ab.</span><span class="sxs-lookup"><span data-stu-id="79d66-255">Retrieves the index of the first character of a given line.</span></span></summary>
        <returns><span data-ttu-id="79d66-256">Der nullbasierte Zeichenindex des ersten Zeichens in der angegebenen Zeile.</span><span class="sxs-lookup"><span data-stu-id="79d66-256">The zero-based index of the first character in the specified line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-257">Die Zeilennummerierung im Textfeld beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="79d66-257">Line numbering in the text box starts at zero.</span></span> <span data-ttu-id="79d66-258">Wenn der `lineNumber`-Parameter größer als die letzte Zeile im Textfeld ist, gibt <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A>-1 zurück.</span><span class="sxs-lookup"><span data-stu-id="79d66-258">If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.</span></span>  
  
 <span data-ttu-id="79d66-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> gibt den ersten Zeichen Index einer physischen Zeile zurück.</span><span class="sxs-lookup"><span data-stu-id="79d66-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="79d66-260">Die physische Zeile ist die angezeigte Zeile, nicht die zugewiesene Zeile.</span><span class="sxs-lookup"><span data-stu-id="79d66-260">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="79d66-261">Die Anzahl der angezeigten Zeilen kann aufgrund der Zeilenumbrüche größer als die Anzahl der zugewiesenen Zeilen sein.</span><span class="sxs-lookup"><span data-stu-id="79d66-261">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="79d66-262">Wenn Sie z. b. zwei lange Zeilen zu einem <xref:System.Windows.Forms.RichTextBox>-Steuerelement zuweisen und <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> auf `true`festlegen, führen die beiden langen zugewiesenen Zeilen zu vier physischen (oder angezeigten Zeilen).</span><span class="sxs-lookup"><span data-stu-id="79d66-262">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="79d66-263">Der Wert des <paramref name="lineNumber" />-Parameters ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="79d66-263">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexOfCurrentLine : unit -&gt; int" Usage="textBoxBase.GetFirstCharIndexOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-264">Ruft den Index des ersten Zeichens der aktuellen Zeile ab.</span><span class="sxs-lookup"><span data-stu-id="79d66-264">Retrieves the index of the first character of the current line.</span></span></summary>
        <returns><span data-ttu-id="79d66-265">Der nullbasierte Zeichenindex in der aktuellen Zeile.</span><span class="sxs-lookup"><span data-stu-id="79d66-265">The zero-based character index in the current line.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetLineFromCharIndex : int -&gt; int&#xA;override this.GetLineFromCharIndex : int -&gt; int" Usage="textBoxBase.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="79d66-266">Die zu suchende Zeichenindexposition.</span><span class="sxs-lookup"><span data-stu-id="79d66-266">The character index position to search.</span></span></param>
        <summary><span data-ttu-id="79d66-267">Ruft die Zeilennummer der angegebenen Zeichenposition innerhalb des Steuerelementtexts ab.</span><span class="sxs-lookup"><span data-stu-id="79d66-267">Retrieves the line number from the specified character position within the text of the control.</span></span></summary>
        <returns><span data-ttu-id="79d66-268">Die nullbasierte Nummer der Zeile, in der sich der Zeichenindex befindet.</span><span class="sxs-lookup"><span data-stu-id="79d66-268">The zero-based line number in which the character index is located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-269">Mit dieser Methode können Sie die Zeilennummer auf Grundlage des Zeichen Indexes ermitteln, der im `index`-Parameter der-Methode angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-269">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="79d66-270">Die erste Textzeile im-Steuerelement gibt den Wert 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="79d66-270">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="79d66-271">Die <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A>-Methode gibt die physische Zeilennummer zurück, in der sich das indizierte Zeichen im-Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="79d66-271">The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="79d66-272">Wenn z. b. ein Teil der ersten logischen Textzeile im-Steuerelement in die nächste Zeile umbrochen wird, gibt die <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A>-Methode 1 zurück, wenn das Zeichen am angegebenen Zeichen Index in die zweite physische Zeile umschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-272">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="79d66-273">Wenn <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> auf `false`festgelegt ist, wird kein Teil der Zeile zum nächsten umschlossen, und die Methode gibt 0 für den angegebenen Zeichen Index zurück.</span><span class="sxs-lookup"><span data-stu-id="79d66-273">If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="79d66-274">Sie können diese Methode verwenden, um zu bestimmen, in welcher Zeile sich ein bestimmter Zeichen Index befindet.</span><span class="sxs-lookup"><span data-stu-id="79d66-274">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="79d66-275">Wenn Sie z. b. die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode aufrufen, um nach Text zu suchen, können Sie den Zeichen Index abrufen, in dem die Suchergebnisse gefunden werden.</span><span class="sxs-lookup"><span data-stu-id="79d66-275">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="79d66-276">Sie können diese Methode mit dem von der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode zurückgegebenen Zeichen Index aufgerufen werden, um zu bestimmen, welche Zeile das Wort gefunden hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-276">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-277">Wenn der im `index`-Parameter angegebene Zeichen Index die verfügbare Anzahl der im Steuerelement enthaltenen Zeilen überschreitet, wird die letzte Zeilennummer zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="79d66-277">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetPositionFromCharIndex : int -&gt; System.Drawing.Point&#xA;override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="textBoxBase.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="79d66-278">Der Index des Zeichens, für das die Position abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="79d66-278">The index of the character for which to retrieve the location.</span></span></param>
        <summary><span data-ttu-id="79d66-279">Ruft die Position innerhalb des Steuerelements am angegebenen Zeichenindex ab.</span><span class="sxs-lookup"><span data-stu-id="79d66-279">Retrieves the location within the control at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="79d66-280">Die Position des angegebenen Zeichens im Clientrechteck des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="79d66-280">The location of the specified character within the client rectangle of the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-281">Mit dieser Methode können Sie bestimmen, wo sich ein bestimmter Zeichen Index im-Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="79d66-281">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="79d66-282">Sie können diese Methode für Aufgaben wie das Anzeigen von Kontextmenü Elementen oder Hilfe Informationen für ein Wort im-Steuerelement verwenden.</span><span class="sxs-lookup"><span data-stu-id="79d66-282">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="79d66-283">Wenn Sie z. b. ein Menü der Optionen für den Benutzer anzeigen möchten, wenn der Benutzer mit der rechten Maustaste auf ein Wort im-Steuerelement klickt, können Sie diese Methode verwenden, um die Position des Worts zu bestimmen, um ein <xref:System.Windows.Forms.ContextMenu> Steuerelement ordnungsgemäß anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="79d66-283">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-284">Ruft einen Wert ab, der angibt, ob der markierte Text im Textfeld-Steuerelement hervorgehoben bleibt, nachdem das Steuerelement den Fokus verloren hat, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-284">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span></span></summary>
        <value><span data-ttu-id="79d66-285"><see langword="true" />, wenn der markierte Text nicht hervorgehoben ist, wenn das Textfeld-Steuerelement den Fokus verliert, <see langword="false" />, wenn der markierte Text hervorgehoben bleibt, nachdem das Textfeld-Steuerelement den Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-285"><see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span></span> <span data-ttu-id="79d66-286">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-286">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-287">Sie können diese Eigenschaft verwenden, um Text in einem Textfeld-Steuerelement zu speichern, während ein anderes Formular oder ein Dialogfeld den Fokus besitzt, z. b. das Dialogfeld Rechtschreibprüfung.</span><span class="sxs-lookup"><span data-stu-id="79d66-287">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-288">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-288">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property.</span></span> <span data-ttu-id="79d66-289">Fügen Sie den folgenden Code in ein Formular ein, um das Beispiel auszuführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-289">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="79d66-290">Ruft die `InitializeTextBox`-Methode im Konstruktor des Formulars oder `Load` Methode auf.</span><span class="sxs-lookup"><span data-stu-id="79d66-290">Call the `InitializeTextBox` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.HideSelectionChanged : EventHandler " Usage="member this.HideSelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-291">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />-Eigenschaft geändert hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-291">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-292">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-292">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-293">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-293">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="79d66-294">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="79d66-294">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span> <span data-ttu-id="79d66-295">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="79d66-295">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="79d66-296">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.</span><span class="sxs-lookup"><span data-stu-id="79d66-296">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="79d66-297">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von <xref:System.Windows.Forms.TextBoxBase>erbt, z. b. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="79d66-297">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="79d66-298">Benennen Sie dann die Instanz `TextBoxBase1`, und stellen Sie sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-298">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]
 [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-299">Ruft den IME (Input Method Editor)-Modus eines Steuerelements ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-299">Gets or sets the Input Method Editor (IME) mode of a control.</span></span></summary>
        <value><span data-ttu-id="79d66-300">Der IME-Modus des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="79d66-300">The IME mode of the control.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="79d66-301">Einer der Tastenwerte.</span><span class="sxs-lookup"><span data-stu-id="79d66-301">One of the Keys value.</span></span></param>
        <summary><span data-ttu-id="79d66-302">Bestimmt, ob es sich bei der angegebenen Taste um eine normale Eingabetaste handelt oder um eine Sondertaste, für die eine Vorverarbeitung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-302">Determines whether the specified key is an input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="79d66-303"><see langword="true" />, wenn die angegebene Taste eine normale Eingabetaste ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-303"><see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-304">Die <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A>-Methode gibt `true` zurück, wenn der `keyData`-Parameter den <xref:System.Windows.Forms.Keys.Tab> Wert enthält und die <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>-Eigenschaft `true`ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-304">The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`.</span></span> <span data-ttu-id="79d66-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> gibt `false` zurück, wenn `keyData` sowohl <xref:System.Windows.Forms.Keys.Tab> als auch <xref:System.Windows.Forms.Keys.Control>enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lines : string[] with get, set" Usage="System.Windows.Forms.TextBoxBase.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-306">Ruft die Textzeilen in einem Textfeld-Steuerelement ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-306">Gets or sets the lines of text in a text box control.</span></span></summary>
        <value><span data-ttu-id="79d66-307">Ein Array mit Zeichenfolgen, das den Text in einem Textfeld-Steuerelement enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-307">An array of strings that contains the text in a text box control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-308">Jedes Element im Array wird zu einer Textzeile im Textfeld-Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="79d66-308">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="79d66-309">Wenn die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>-Eigenschaft des Textfeld-Steuer Elements auf `true` festgelegt ist und im Text ein Zeilen Trennzeichen angezeigt wird, wird der Text, der auf das Zeilen Zeilenzeichen folgt, einem neuen Element im-Array hinzugefügt und in einer separaten Zeile angezeigt.</span><span class="sxs-lookup"><span data-stu-id="79d66-309">If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-310">Standardmäßig handelt es sich bei der Auflistung von Zeilen um eine schreibgeschützte Kopie der Zeilen in der <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="79d66-310">By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="79d66-311">Um eine beschreibbare Auflistung von Zeilen zu erhalten, verwenden Sie Code, der dem folgenden ähnelt: `textBox1.Lines = new string[] { "abcd" };`</span><span class="sxs-lookup"><span data-stu-id="79d66-311">To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { "abcd" };`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-312">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um alle Text Zeichenfolgen aus einem mehrzeiligen Textfeld-Steuerelement zu extrahieren und mit der <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType>-Methode angezeigt.</span><span class="sxs-lookup"><span data-stu-id="79d66-312">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="79d66-313">Für dieses Beispiel ist es erforderlich, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1`erstellt und mit Textzeilen gefüllt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-313">This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-314">Ruft die maximale Anzahl an Zeichen ab, die Benutzer in das Textfeld-Steuerelement eingeben oder einfügen können, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-314">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span></span></summary>
        <value><span data-ttu-id="79d66-315">Die Anzahl der Zeichen, die in das Steuerelement eingegeben werden können.</span><span class="sxs-lookup"><span data-stu-id="79d66-315">The number of characters that can be entered into the control.</span></span> <span data-ttu-id="79d66-316">Der Standardwert ist 32767.</span><span class="sxs-lookup"><span data-stu-id="79d66-316">The default is 32767.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-317">Sie können diese Eigenschaft verwenden, um die im Steuerelement eingegebene Textlänge für Werte wie Postleitzahlen und Telefonnummern einzuschränken oder um die Länge des Texts einzuschränken, der eingegeben wird, wenn die Daten in eine Datenbank eingegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="79d66-317">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="79d66-318">Sie können den in das-Steuerelement eingegebenen Text auf die maximale Länge des entsprechenden Felds in der Datenbank beschränken.</span><span class="sxs-lookup"><span data-stu-id="79d66-318">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-319">Im Code können Sie den Wert der <xref:System.Windows.Forms.TextBoxBase.Text%2A>-Eigenschaft auf einen Wert festlegen, dessen Länge größer ist als der Wert, der von der <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>-Eigenschaft angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-319">In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property.</span></span> <span data-ttu-id="79d66-320">Diese Eigenschaft wirkt sich nur auf Text aus, der zur Laufzeit in das Steuerelement eingegeben wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-320">This property only affects text entered into the control at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-321">Im folgenden Codebeispiel wird die abgeleitete-Klasse (<xref:System.Windows.Forms.TextBox>) verwendet, um ein Textfeld zu erstellen, das verwendet wird, um ein Kennwort zu akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="79d66-321">The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password.</span></span> <span data-ttu-id="79d66-322">In diesem Beispiel wird die <xref:System.Windows.Forms.TextBox.CharacterCasing%2A>-Eigenschaft verwendet, um alle Zeichen, die in Großbuchstaben eingegeben werden, und die <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>-Eigenschaft zu ändern, um die Kenn Wort Länge auf acht</span><span class="sxs-lookup"><span data-stu-id="79d66-322">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="79d66-323">In diesem Beispiel wird auch die <xref:System.Windows.Forms.TextBox.TextAlign%2A>-Eigenschaft verwendet, um das Kennwort im <xref:System.Windows.Forms.TextBox> Steuerelement zu zentrieren.</span><span class="sxs-lookup"><span data-stu-id="79d66-323">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="79d66-324">Der zugewiesene Eigenschaftswert ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="79d66-324">The value assigned to the property is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-325">Ruft einen Wert ab, der angibt, dass das Textfeld-Steuerelement seit dem Erstellen oder der letzten Festlegung des Inhalts von Benutzern geändert wurde, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-325">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span></span></summary>
        <value><span data-ttu-id="79d66-326"><see langword="true" />, wenn der Inhalt des Steuerelements geändert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-326"><see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="79d66-327">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-327">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-328">Sie können diese Eigenschaft verwenden, um zu bestimmen, ob der Benutzer den Inhalt des Textfeld-Steuer Elements geändert hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-328">You can use this property to determine if the user has modified the contents of the text box control.</span></span> <span data-ttu-id="79d66-329">Sie können diese Eigenschaft auch im Code festlegen, um anzugeben, dass von der Anwendung Änderungen am Textfeld-Steuerelement vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="79d66-329">You can also set this property in code to indicate that changes were made to the text box control by the application.</span></span> <span data-ttu-id="79d66-330">Diese Eigenschaft kann von Validierungs-und Daten speichernden Methoden verwendet werden, um zu bestimmen, ob Änderungen in einem Textfeld-Steuerelement vorgenommen wurden, sodass der geänderte Inhalt überprüft oder gespeichert werden kann.</span><span class="sxs-lookup"><span data-stu-id="79d66-330">This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</span></span>  
  
 <span data-ttu-id="79d66-331">Wenn Sie die <xref:System.Windows.Forms.TextBoxBase.Text%2A>-Eigenschaft Programm gesteuert ändern, wird die <xref:System.Windows.Forms.TextBoxBase.Modified%2A>-Eigenschaft auf `false`zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="79d66-331">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="79d66-332">Dadurch wird das <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>-Ereignis nicht angehoben.</span><span class="sxs-lookup"><span data-stu-id="79d66-332">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-333">Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.Control.TextChanged>-Ereignis für eine <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um zu bestimmen, ob sich der Inhalt des <xref:System.Windows.Forms.TextBox> Steuer Elements geändert hat, seit das Steuerelement mit Daten gefüllt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-333">The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data.</span></span> <span data-ttu-id="79d66-334">Im Beispiel wird eine Zeichenfolge verwendet, um den ursprünglichen Inhalt des Steuer Elements zu speichern und mit dem Inhalt des <xref:System.Windows.Forms.TextBox> zu vergleichen, um festzustellen, ob sich der Inhalt geändert hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-334">The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed.</span></span> <span data-ttu-id="79d66-335">Wenn sich der Inhalt geändert hat, wird die <xref:System.Windows.Forms.TextBoxBase.Modified%2A>-Eigenschaft auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="79d66-335">If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`.</span></span> <span data-ttu-id="79d66-336">Andernfalls wird Sie auf `false`zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="79d66-336">Otherwise, it is reset to `false`.</span></span> <span data-ttu-id="79d66-337">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde und dass eine `String`-Variable mit dem Namen `originalText` erstellt wurde, um den ursprünglichen Text für das <xref:System.Windows.Forms.TextBox> Steuerelement zu speichern.</span><span class="sxs-lookup"><span data-stu-id="79d66-337">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberSignature Language="F#" Value="member this.ModifiedChanged : EventHandler " Usage="member this.ModifiedChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-338">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.Modified" />-Eigenschaft geändert hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-338">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-339">Wenn Sie die <xref:System.Windows.Forms.TextBoxBase.Text%2A>-Eigenschaft Programm gesteuert ändern, wird die <xref:System.Windows.Forms.TextBoxBase.Modified%2A>-Eigenschaft auf `false`zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="79d66-339">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="79d66-340">Dadurch wird das <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>-Ereignis nicht angehoben.</span><span class="sxs-lookup"><span data-stu-id="79d66-340">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 <span data-ttu-id="79d66-341">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-341">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-342">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-342">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="79d66-343">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="79d66-343">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span> <span data-ttu-id="79d66-344">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="79d66-344">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="79d66-345">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.</span><span class="sxs-lookup"><span data-stu-id="79d66-345">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="79d66-346">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von <xref:System.Windows.Forms.TextBoxBase>erbt, z. b. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="79d66-346">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="79d66-347">Benennen Sie dann die Instanz `TextBoxBase1`, und stellen Sie sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-347">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]
 [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-348">Tritt ein, wenn mit der Maus auf das Steuerelement geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-348">Occurs when the control is clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-349">Das <xref:System.Windows.Forms.RichTextBox> Steuerelement wirft kein <xref:System.Windows.Forms.TextBoxBase.Click> Ereignis für die Rechte Maustaste.</span><span class="sxs-lookup"><span data-stu-id="79d66-349">The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks.</span></span> <span data-ttu-id="79d66-350">Das <xref:System.Windows.Forms.TextBoxBase.MouseClick>-Ereignis stellt das funktionale Äquivalent bereit.</span><span class="sxs-lookup"><span data-stu-id="79d66-350">The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.</span></span>  
  
 <span data-ttu-id="79d66-351">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-351">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-352">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-352">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="79d66-353">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TextBoxBase.MouseClick> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="79d66-353">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span> <span data-ttu-id="79d66-354">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="79d66-354">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="79d66-355">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.</span><span class="sxs-lookup"><span data-stu-id="79d66-355">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="79d66-356">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von <xref:System.Windows.Forms.TextBoxBase>erbt, z. b. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="79d66-356">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="79d66-357">Benennen Sie dann die Instanz `TextBoxBase1`, und stellen Sie sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TextBoxBase.MouseClick> Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-357">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]
 [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public virtual bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-358">Ruft einen Wert ab, der angibt, ob dies ein mehrzeiliges Textfeld-Steuerelement ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-358">Gets or sets a value indicating whether this is a multiline text box control.</span></span></summary>
        <value><span data-ttu-id="79d66-359"><see langword="true" />, wenn es sich um ein mehrzeiliges Steuerelement handelt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-359"><see langword="true" /> if the control is a multiline text box control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="79d66-360">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-361">Mit einem mehrzeiligen Textfeld können Sie mehr als eine Textzeile im Steuerelement anzeigen.</span><span class="sxs-lookup"><span data-stu-id="79d66-361">A multiline text box allows you to display more than one line of text in the control.</span></span> <span data-ttu-id="79d66-362">Wenn die <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>-Eigenschaft auf `true`festgelegt ist, wird der in das mehrzeilige Textfeld eingegebene Text in die nächste Zeile im-Steuerelement gepackt.</span><span class="sxs-lookup"><span data-stu-id="79d66-362">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control.</span></span> <span data-ttu-id="79d66-363">Wenn die <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>-Eigenschaft auf `false`festgelegt ist, wird der in das mehrzeilige Textfeld-Steuerelement eingegebene Text in der gleichen Zeile angezeigt, bis ein Zeilen Trennzeichen eingegeben wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-363">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</span></span>  
  
 <span data-ttu-id="79d66-364">Folgendes kann als Zeilen zeiligen Zeichen verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="79d66-364">The following can be used as newline characters:</span></span>  
  
-   <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>  
  
-   <span data-ttu-id="79d66-365">ControlChars.CrLf</span><span class="sxs-lookup"><span data-stu-id="79d66-365">ControlChars.CrLf</span></span>  
  
-   <span data-ttu-id="79d66-366">vbCrLf (nur Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="79d66-366">vbCrLf (Visual Basic only)</span></span>  
  
 <span data-ttu-id="79d66-367">Sie können einem Textfeld Schiebe leisten hinzufügen, indem Sie die <xref:System.Windows.Forms.TextBox.ScrollBars%2A>-Eigenschaft verwenden, um horizontale und/oder vertikale Bild Lauf leisten anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="79d66-367">You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars.</span></span> <span data-ttu-id="79d66-368">Dadurch kann der Benutzer einen Bildlauf durch den Text durchführen, der über die Abmessungen des Steuer Elements hinausgeht.</span><span class="sxs-lookup"><span data-stu-id="79d66-368">This allows the user to scroll through the text that extends beyond the dimensions of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-369">Da der Standardwert der <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>-Eigenschaft `false`ist, wird die Standardgröße eines <xref:System.Windows.Forms.TextBox> in Übereinstimmung mit dem Schrift Grad angezeigt, auch wenn Sie die Größe der <xref:System.Windows.Forms.TextBox>ändern.</span><span class="sxs-lookup"><span data-stu-id="79d66-369">Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="79d66-370">Um eine konsistente Größe für Ihre <xref:System.Windows.Forms.TextBox>zu erhalten, legen Sie die Eigenschaft <xref:System.Windows.Forms.TextBox.Multiline%2A> auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-370">To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-371">Wenn für japanische Betriebssysteme die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>-Eigenschaft auf `true`festgelegt ist, wird beim Festlegen der <xref:System.Windows.Forms.TextBox.PasswordChar%2A>-Eigenschaft der Text des Kennworts angezeigt, wodurch die Systemsicherheit beeinträchtigt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-371">On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security.</span></span> <span data-ttu-id="79d66-372">Legen Sie daher auf einem japanischen Betriebssystem die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>-Eigenschaft auf `false` fest, wenn Sie die <xref:System.Windows.Forms.TextBox.PasswordChar%2A>-Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="79d66-372">Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-373">Diese Eigenschaft wird standardmäßig auf `false` für alle abgeleiteten Klassen festgelegt, mit Ausnahme des <xref:System.Windows.Forms.RichTextBox> Steuer Elements.</span><span class="sxs-lookup"><span data-stu-id="79d66-373">This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 <span data-ttu-id="79d66-374">Bei einem <xref:System.Windows.Forms.RichTextBox> Steuerelement wirkt sich die Eigenschaft <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> darauf aus, ob die Größe des Steuer Elements automatisch geändert wird, und zwar wie folgt:</span><span class="sxs-lookup"><span data-stu-id="79d66-374">For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> property affects whether or not the control will automatically resize, as follows:</span></span>  
  
-   <span data-ttu-id="79d66-375">Wenn <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> auf `true` festgelegt ist und <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> auf `true`festgelegt ist, wird die Größe <xref:System.Windows.Forms.RichTextBox> nicht automatisch geändert.</span><span class="sxs-lookup"><span data-stu-id="79d66-375">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.</span></span>  
  
-   <span data-ttu-id="79d66-376">Wenn <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> auf `true` festgelegt ist und <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> auf `false`festgelegt ist, wird die Größe <xref:System.Windows.Forms.RichTextBox> automatisch geändert.</span><span class="sxs-lookup"><span data-stu-id="79d66-376">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-377">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um eine mehrzeilige <xref:System.Windows.Forms.TextBox> Steuerelement mit vertikalen Schiebe leisten zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="79d66-377">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="79d66-378">Dieses Beispiel verwendet auch die Eigenschaften <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>, damit das mehrzeilige Textfeld-Steuerelement für das Erstellen von Textdokumenten nützlich ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-378">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
        <altmember cref="P:System.Windows.Forms.TextBox.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberSignature Language="F#" Value="member this.MultilineChanged : EventHandler " Usage="member this.MultilineChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-379">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" />-Eigenschaft geändert hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-379">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-380">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-380">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-381">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-381">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="79d66-382">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="79d66-382">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span> <span data-ttu-id="79d66-383">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="79d66-383">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="79d66-384">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.</span><span class="sxs-lookup"><span data-stu-id="79d66-384">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="79d66-385">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von <xref:System.Windows.Forms.TextBoxBase>erbt, z. b. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="79d66-385">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="79d66-386">Benennen Sie dann die Instanz `TextBoxBase1`, und stellen Sie sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-386">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]
 [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAcceptsTabChanged : EventArgs -&gt; unit&#xA;override this.OnAcceptsTabChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAcceptsTabChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-387">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-387">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-388">Löst das Ereignis <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-388">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-389">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="79d66-389">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="79d66-390">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-390">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="79d66-391">Mit der <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="79d66-391">The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="79d66-392">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="79d66-392">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d66-393">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="79d66-393">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-394">Ein Objekt, das Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-394">An object that contains event data.</span></span></param>
        <summary><span data-ttu-id="79d66-395">Löst das Ereignis <see cref="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-395">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-396">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-396">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-397">Löst das Ereignis <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-397">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-398">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="79d66-398">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="79d66-399">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-399">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="79d66-400">Mit der <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="79d66-400">The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="79d66-401">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="79d66-401">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d66-402">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="79d66-402">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-403">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-403">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-404">Löst das Ereignis <see cref="E:System.Windows.Forms.Control.FontChanged" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-404">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-405">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-405">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-406">Löst das Ereignis <see cref="E:System.Windows.Forms.Control.HandleCreated" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-406">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-407">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-408">Löst das Ereignis <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-408">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHideSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnHideSelectionChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnHideSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-409">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-409">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-410">Lösen Sie das <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-410">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-411">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="79d66-411">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="79d66-412">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-412">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="79d66-413">Mit der <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="79d66-413">The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="79d66-414">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="79d66-414">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d66-415">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="79d66-415">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModifiedChanged : EventArgs -&gt; unit&#xA;override this.OnModifiedChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnModifiedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-416">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-416">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-417">Löst das Ereignis <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-417">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-418">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="79d66-418">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="79d66-419">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-419">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="79d66-420">Mit der <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="79d66-420">The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="79d66-421">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="79d66-421">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d66-422">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="79d66-422">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="mevent"><span data-ttu-id="79d66-423">Die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="79d66-423">The event data.</span></span></param>
        <summary><span data-ttu-id="79d66-424">Löst das Ereignis <see cref="E:System.Windows.Forms.Control.MouseUp" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-424">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultilineChanged : EventArgs -&gt; unit&#xA;override this.OnMultilineChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnMultilineChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-425">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-425">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-426">Löst das Ereignis <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-426">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-427">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="79d66-427">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="79d66-428">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-428">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="79d66-429">Mit der <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="79d66-429">The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="79d66-430">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="79d66-430">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d66-431">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="79d66-431">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-432">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-432">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-433">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-433">This method is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-434">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-434">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-435">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-435">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-436">Löst das Ereignis <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-436">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-437">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="79d66-437">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="79d66-438">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-438">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="79d66-439">Mit der <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="79d66-439">The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="79d66-440">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="79d66-440">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d66-441">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="79d66-441">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d66-442">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-442">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="79d66-443">Löst das Ereignis <see cref="E:System.Windows.Forms.Control.TextChanged" /> aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-443">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.TextBoxBase.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-444">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-444">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="79d66-445">Ein <see cref="T:System.Windows.Forms.Padding" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="79d66-445">A <see cref="T:System.Windows.Forms.Padding" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-446">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-446">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-447">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-447">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-448">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-448">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-449">Tritt ein, wenn das Steuerelement neu gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-449">Occurs when the control is redrawn.</span></span> <span data-ttu-id="79d66-450">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-450">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-451">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="79d66-451">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-452">Ersetzt die aktuelle Markierung im Textfeld durch den Inhalt der **Zwischenablage**.</span><span class="sxs-lookup"><span data-stu-id="79d66-452">Replaces the current selection in the text box with the contents of the **Clipboard**.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-453">Die <xref:System.Windows.Forms.TextBoxBase.Paste%2A>-Methode fügt Text nur in das-Steuerelement ein, wenn aktuell Text in der **Zwischenablage**gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-453">The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-454">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-454">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="79d66-455">Es stellt <xref:System.Windows.Forms.MenuItem.Click> Ereignishandler für <xref:System.Windows.Forms.MenuItem> Objekte bereit, die Ausschneide-, Kopier-, Einfüge-und rückgängig-Vorgänge ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-455">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="79d66-456">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-456">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="79d66-457">zum Lesen aus der **Zwischenablage**.</span><span class="sxs-lookup"><span data-stu-id="79d66-457">for reading from the **Clipboard**.</span></span> <span data-ttu-id="79d66-458">Zugeordnete Enumeration: der <see langword="AllClipboard" /> Wert <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-458">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-459">Ruft die bevorzugte Höhe für ein Textfeld ab.</span><span class="sxs-lookup"><span data-stu-id="79d66-459">Gets the preferred height for a text box.</span></span></summary>
        <value><span data-ttu-id="79d66-460">Die bevorzugte Höhe eines Textfelds.</span><span class="sxs-lookup"><span data-stu-id="79d66-460">The preferred height of a text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-461">Die von dieser Eigenschaft zurückgegebene Größe basiert auf der Schrift Höhe und der Rahmenart des Textfelds.</span><span class="sxs-lookup"><span data-stu-id="79d66-461">The size returned by this property is based on the font height and border style of the text box.</span></span> <span data-ttu-id="79d66-462">Mit dieser Eigenschaft können Sie die entsprechende Größe des Textfelds ermitteln, um sicherzustellen, dass der Text im Steuerelement ordnungsgemäß angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-462">You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</span></span> <span data-ttu-id="79d66-463">Der von dieser Eigenschaft zurückgegebene Wert ist in Pixel.</span><span class="sxs-lookup"><span data-stu-id="79d66-463">The value returned by this property is in pixels.</span></span>  
  
 <span data-ttu-id="79d66-464">Der Wert <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> stellt die Mindesthöhe dar, die das Textfeld aufweisen muss, um eine einzelne Textzeile anzuzeigen, ohne den Text oben oder unten zu schneiden.</span><span class="sxs-lookup"><span data-stu-id="79d66-464">The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</span></span> <span data-ttu-id="79d66-465">Dieser Wert ist identisch, unabhängig davon, ob die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>-Eigenschaft auf `true` oder `false`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-465">This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="79d66-466">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</span><span class="sxs-lookup"><span data-stu-id="79d66-466">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="79d66-467">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Tastenkombination darstellen.</span><span class="sxs-lookup"><span data-stu-id="79d66-467">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span></span></param>
        <summary><span data-ttu-id="79d66-468">Verarbeitet eine Befehlstaste.</span><span class="sxs-lookup"><span data-stu-id="79d66-468">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="79d66-469"><see langword="true" />, wenn die Befehlstaste vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-469"><see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="79d66-470">für den Betrieb mit nicht verwaltetem Code.</span><span class="sxs-lookup"><span data-stu-id="79d66-470">for operating with unmanaged code.</span></span> <span data-ttu-id="79d66-471">Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="79d66-471">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="79d66-472">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</span><span class="sxs-lookup"><span data-stu-id="79d66-472">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="79d66-473">Verarbeitet eine Tastatureingabe im Dialogfeld.</span><span class="sxs-lookup"><span data-stu-id="79d66-473">Processes a dialog key.</span></span></summary>
        <returns><span data-ttu-id="79d66-474"><see langword="true" />, wenn die Taste vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-474"><see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-475">Ruft einen Wert ab, der angibt, ob der im Textfeld enthaltene Text schreibgeschützt ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-475">Gets or sets a value indicating whether text in the text box is read-only.</span></span></summary>
        <value><span data-ttu-id="79d66-476"><see langword="true" />, wenn das Textfeld schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-476"><see langword="true" /> if the text box is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="79d66-477">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-477">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-478">Wenn diese Eigenschaft auf `true`festgelegt ist, kann der Inhalt des Steuer Elements zur Laufzeit vom Benutzer nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="79d66-478">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime.</span></span> <span data-ttu-id="79d66-479">Wenn diese Eigenschaft auf `true`festgelegt ist, können Sie weiterhin den Wert der <xref:System.Windows.Forms.TextBoxBase.Text%2A>-Eigenschaft im Code festlegen.</span><span class="sxs-lookup"><span data-stu-id="79d66-479">With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code.</span></span> <span data-ttu-id="79d66-480">Sie können diese Funktion verwenden, anstatt das Steuerelement mit der <xref:System.Windows.Forms.Control.Enabled%2A>-Eigenschaft zu deaktivieren, damit der Inhalt kopiert und Quick Infos angezeigt werden können.</span><span class="sxs-lookup"><span data-stu-id="79d66-480">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-481">Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />-Eigenschaft geändert hat.</span><span class="sxs-lookup"><span data-stu-id="79d66-481">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-482">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="79d66-482">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-483">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="79d66-483">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="79d66-484">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="79d66-484">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span> <span data-ttu-id="79d66-485">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="79d66-485">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="79d66-486">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.</span><span class="sxs-lookup"><span data-stu-id="79d66-486">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="79d66-487">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von <xref:System.Windows.Forms.TextBoxBase>erbt, z. b. eine <xref:System.Windows.Forms.TextBox> oder <xref:System.Windows.Forms.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="79d66-487">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="79d66-488">Benennen Sie dann die Instanz `TextBoxBase1`, und stellen Sie sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-488">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]
 [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberSignature Language="F#" Value="member this.ScrollToCaret : unit -&gt; unit" Usage="textBoxBase.ScrollToCaret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-489">Führt einen Bildlauf durch den Inhalt des Steuerelements bis zur aktuellen Caretposition durch.</span><span class="sxs-lookup"><span data-stu-id="79d66-489">Scrolls the contents of the control to the current caret position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-490">Mit dieser Methode können Sie den Inhalt des Steuer Elements scrollen, bis sich die Einfügemarke im sichtbaren Bereich des Steuer Elements befindet.</span><span class="sxs-lookup"><span data-stu-id="79d66-490">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="79d66-491">Wenn die Einfügemarke unter dem sichtbaren Bereich des Steuer Elements positioniert ist, führt die <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> Methode einen Bildlauf durch den Inhalt des Steuer Elements aus, bis die Einfügemarke am unteren Rand des Steuer Elements sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-491">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="79d66-492">Wenn sich die Einfügemarke über dem sichtbaren Bereich des Steuer Elements befindet, führt diese Methode einen Bildlauf durch den Inhalt des Steuer Elements aus, bis die Einfügemarke am oberen Rand des Steuer Elements sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-492">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="79d66-493">Sie können diese Methode in einem mehrzeiligen Textfeld verwenden, um sicherzustellen, dass sich der aktuelle Text Einstiegspunkt innerhalb des sichtbaren Bereichs des Steuer Elements befindet.</span><span class="sxs-lookup"><span data-stu-id="79d66-493">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-494">Diese Methode hat keine Auswirkung, wenn das Steuerelement keinen Fokus hat oder wenn die Einfügemarke bereits im sichtbaren Bereich des Steuer Elements positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-494">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-495">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Keys> Enumeration und die <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A>-Methode verwendet werden, um sicherzustellen, dass die durch die Einfügemarke dargestellte Text Einfügemarke immer auf dem Bildschirm sichtbar ist, nachdem die EINGABETASTE gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-495">The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</span></span> <span data-ttu-id="79d66-496">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.TextBox>-Steuerelement namens `TextBox1` und ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement namens `RichTextBox1`enthält.</span><span class="sxs-lookup"><span data-stu-id="79d66-496">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="79d66-497">Für dieses Beispiel ist es erforderlich, dass die Ereignis Behandlungsmethode dem <xref:System.Windows.Forms.Control.KeyDown>-Ereignis zugeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-497">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="override this.Select : int * int -&gt; unit" Usage="textBoxBase.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="79d66-498">Die Position des ersten Zeichens in der aktuellen Textmarkierung im Textfeld.</span><span class="sxs-lookup"><span data-stu-id="79d66-498">The position of the first character in the current text selection within the text box.</span></span></param>
        <param name="length"><span data-ttu-id="79d66-499">Die Anzahl der zu markierenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="79d66-499">The number of characters to select.</span></span></param>
        <summary><span data-ttu-id="79d66-500">Wählt einen Textbereich im Textfeld aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-500">Selects a range of text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-501">Wenn Sie die Startposition auf das erste Zeichen im Text des Steuer Elements festlegen möchten, legen Sie den `start`-Parameter auf 0 fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-501">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="79d66-502">Mit dieser Methode können Sie eine Teil Zeichenfolge von Text auswählen, z. b. Wenn Sie den Text des Steuer Elements durchsuchen und Informationen austauschen.</span><span class="sxs-lookup"><span data-stu-id="79d66-502">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-503">Sie können die Einfügemarke Programm gesteuert in das Textfeld verschieben, indem Sie den `start`-Parameter auf die Position innerhalb des Textfelds festlegen, in die die Einfügemarke verschoben werden soll, und den `length`-Parameter auf den Wert 0 (null) festlegen.</span><span class="sxs-lookup"><span data-stu-id="79d66-503">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="79d66-504">Das Textfeld muss den Fokus haben, damit die Einfügemarke verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="79d66-504">The text box must have focus in order for the caret to be moved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-505">Wenn diese Methode ohne Parameter aufgerufen wird, wird eine alternative Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-505">If this method is called without any parameters, an alternative method is used.</span></span> <span data-ttu-id="79d66-506">Diese alternative Methode erbt von der <xref:System.Windows.Forms.Control>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="79d66-506">This alternative method inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="79d66-507">Beim Aufruf wird der Eingabefokus auf das Steuerelement festgelegt, und der Inhalt des Steuer Elements wird ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="79d66-507">When called, it sets the input focus to the control and selects the contents of the control.</span></span> <span data-ttu-id="79d66-508">Weitere Informationen finden Sie unter der Methode <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="79d66-508">For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-509">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um den Inhalt des-Steuer Elements nach der Instanz des Worts "Fox" zu durchsuchen.</span><span class="sxs-lookup"><span data-stu-id="79d66-509">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word "fox".</span></span> <span data-ttu-id="79d66-510">Wenn Sie gefunden wird, wählt der Code das Wort im-Steuerelement mithilfe der <xref:System.Windows.Forms.TextBoxBase.Select%2A>-Methode aus.</span><span class="sxs-lookup"><span data-stu-id="79d66-510">If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span> <span data-ttu-id="79d66-511">Für dieses Beispiel ist es erforderlich, dass eine <xref:System.Windows.Forms.TextBox> mit dem Namen `textBox1` erstellt wurde, und die zugehörige <xref:System.Windows.Forms.TextBoxBase.Text%2A>-Eigenschaft enthält den Satz "der schnell braune Fuchs springt über den Lazy Dog".</span><span class="sxs-lookup"><span data-stu-id="79d66-511">This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence "The quick brown fox jumps over the lazy dog."</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="79d66-512">Der Wert des <paramref name="start" />-Parameters ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="79d66-512">The value of the <paramref name="start" /> parameter is less than zero.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.SelectAll" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-513">Markiert den gesamten Text im Textfeld.</span><span class="sxs-lookup"><span data-stu-id="79d66-513">Selects all text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-514">Mit dieser Methode können Sie den gesamten Text im-Steuerelement auswählen.</span><span class="sxs-lookup"><span data-stu-id="79d66-514">This method enables you to select all text within the control.</span></span> <span data-ttu-id="79d66-515">Sie können diese Methode in Verbindung mit der <xref:System.Windows.Forms.TextBoxBase.Cut%2A>-Methode verwenden, die erfordert, dass Text im-Steuerelement ausgewählt wird, um den gesamten Inhalt des Steuer Elements auszuschneiden und in die **Zwischenablage**einzufügen.</span><span class="sxs-lookup"><span data-stu-id="79d66-515">You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-516">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um zu bestimmen, ob im-Steuerelement Text ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-516">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control.</span></span> <span data-ttu-id="79d66-517">Wenn kein Text ausgewählt ist, wird der <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A>-Methode aufgerufen, bevor der Inhalt des Steuer Elements in die **Zwischenablage**kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-517">If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**.</span></span> <span data-ttu-id="79d66-518">Für dieses Beispiel ist es erforderlich, dass eine <xref:System.Windows.Forms.TextBox> mit dem Namen `textBox1`erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-518">This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public virtual string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-519">Ruft einen Wert ab, der den derzeitig markierten Text im Steuerelement angibt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-519">Gets or sets a value indicating the currently selected text in the control.</span></span></summary>
        <value><span data-ttu-id="79d66-520">Eine Zeichenfolge, die den derzeitig markierten Text im Textfeld darstellt.</span><span class="sxs-lookup"><span data-stu-id="79d66-520">A string that represents the currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-521">Sie können dieser Eigenschaft Text zuweisen, um den derzeit im Textfeld ausgewählten Text zu ändern.</span><span class="sxs-lookup"><span data-stu-id="79d66-521">You can assign text to this property to change the text currently selected in the text box.</span></span> <span data-ttu-id="79d66-522">Wenn derzeit kein Text im Textfeld ausgewählt ist, gibt diese Eigenschaft eine Zeichenfolge der Länge 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="79d66-522">If no text is currently selected in the text box, this property returns a zero-length string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-523">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-523">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="79d66-524">Es stellt <xref:System.Windows.Forms.MenuItem.Click> Ereignishandler für <xref:System.Windows.Forms.MenuItem> Objekte bereit, die Ausschneide-, Kopier-, Einfüge-und rückgängig-Vorgänge ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-524">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="79d66-525">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-525">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public virtual int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-526">Ruft die Anzahl der im Textfeld markierten Zeichen ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-526">Gets or sets the number of characters selected in the text box.</span></span></summary>
        <value><span data-ttu-id="79d66-527">Die Anzahl der markierten Zeichen im Textfeld.</span><span class="sxs-lookup"><span data-stu-id="79d66-527">The number of characters selected in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-528">Mit dieser Eigenschaft können Sie feststellen, ob im Textfeld-Steuerelement momentan Zeichen ausgewählt sind, bevor Sie Vorgänge für den ausgewählten Text ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-528">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="79d66-529">Wenn der Wert der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>-Eigenschaft auf einen Wert festgelegt ist, der größer als die Anzahl der Zeichen im Text des Steuer Elements ist, wird der Wert der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>-Eigenschaft auf die gesamte Textlänge im Steuerelement abzüglich des Werts der <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>-Eigenschaft festgelegt (wenn ein beliebiger Wert für die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>-Eigenschaft angegeben ist).</span><span class="sxs-lookup"><span data-stu-id="79d66-529">When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-530">Sie können die Einfügemarke Programm gesteuert in das Textfeld verschieben, indem Sie die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> auf die Position innerhalb des Textfelds festlegen, in die die Einfügemarke verschoben werden soll, und die <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>-Eigenschaft auf den Wert 0 (null) festlegen.</span><span class="sxs-lookup"><span data-stu-id="79d66-530">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="79d66-531">Das Textfeld muss den Fokus haben, damit die Einfügemarke verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="79d66-531">The text box must have focus in order for the caret to be moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-532">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-532">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="79d66-533">Es stellt <xref:System.Windows.Forms.MenuItem.Click> Ereignishandler für <xref:System.Windows.Forms.MenuItem> Objekte bereit, die Ausschneide-, Kopier-, Einfüge-und rückgängig-Vorgänge ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-533">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="79d66-534">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-534">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="79d66-535">Der zugewiesene Wert ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="79d66-535">The assigned value is less than zero.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-536">Ruft den Anfangspunkt des im Textfeld markierten Texts ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-536">Gets or sets the starting point of text selected in the text box.</span></span></summary>
        <value><span data-ttu-id="79d66-537">Die Anfangsposition des im Textfeld markierten Texts.</span><span class="sxs-lookup"><span data-stu-id="79d66-537">The starting position of text selected in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-538">Wenn im-Steuerelement kein Text ausgewählt ist, gibt diese Eigenschaft die Einfügemarke oder die Einfügemarke für neuen Text an.</span><span class="sxs-lookup"><span data-stu-id="79d66-538">If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</span></span> <span data-ttu-id="79d66-539">Wenn Sie diese Eigenschaft auf einen Speicherort festlegen, der hinter der Länge des Texts im Steuerelement liegt, wird die Startposition der Auswahl nach dem letzten Zeichen platziert.</span><span class="sxs-lookup"><span data-stu-id="79d66-539">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="79d66-540">Wenn im Textfeld-Steuerelement Text ausgewählt ist, kann das Ändern dieser Eigenschaft den Wert der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>-Eigenschaft verringern.</span><span class="sxs-lookup"><span data-stu-id="79d66-540">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span> <span data-ttu-id="79d66-541">Wenn der verbleibende Text im Steuerelement nach der durch die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>-Eigenschaft gekennzeichneten Position kleiner ist als der Wert der Eigenschaft <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>, wird der Wert der Eigenschaft <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> automatisch verringert.</span><span class="sxs-lookup"><span data-stu-id="79d66-541">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="79d66-542">Der Wert der <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>-Eigenschaft verursacht nie eine Erhöhung der <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="79d66-542">The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span>  
  
 <span data-ttu-id="79d66-543">Sie können die Auswahlprogramm gesteuert in das Textfeld verschieben, indem Sie die Eigenschaften <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> und <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> festlegen.</span><span class="sxs-lookup"><span data-stu-id="79d66-543">You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.</span></span>  
  
 <span data-ttu-id="79d66-544">Sie können die Einfügemarke Programm gesteuert in das Textfeld verschieben, indem Sie die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> auf die Position innerhalb des Textfelds festlegen, in die die Einfügemarke verschoben werden soll, und die <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>-Eigenschaft auf den Wert 0 (null) festlegen.</span><span class="sxs-lookup"><span data-stu-id="79d66-544">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span>  
  
 <span data-ttu-id="79d66-545">Der <xref:System.Windows.Forms.TextBox> muss den Fokus haben, damit die Auswahl oder die Einfügemarke verschoben werden können.</span><span class="sxs-lookup"><span data-stu-id="79d66-545">The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved.</span></span> <span data-ttu-id="79d66-546">Sie können die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>-Eigenschaft einer <xref:System.Windows.Forms.TextBox> festlegen, die <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> ist, indem Sie Ihr zuerst die <xref:System.Windows.Forms.Control.Focus%2A> geben.</span><span class="sxs-lookup"><span data-stu-id="79d66-546">You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-547">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="79d66-547">**Example 1**</span></span>  
  
 <span data-ttu-id="79d66-548">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-548">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="79d66-549">Es stellt <xref:System.Windows.Forms.MenuItem.Click> Ereignishandler für <xref:System.Windows.Forms.MenuItem> Objekte bereit, die Ausschneide-, Kopier-, Einfüge-und rückgängig-Vorgänge ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-549">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="79d66-550">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-550">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 <span data-ttu-id="79d66-551">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="79d66-551">**Example 2**</span></span>  
  
 <span data-ttu-id="79d66-552">Im folgenden Beispiel wird die <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>-Eigenschaft einer <xref:System.Windows.Forms.TextBox> festgelegt, die <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> wird, indem der <xref:System.Windows.Forms.Control.Focus%2A> zuerst die-erteilt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-552">The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
 [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="79d66-553">Der zugewiesene Wert ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="79d66-553">The assigned value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="textBoxBase.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="79d66-554">Der neue <see cref="P:System.Windows.Forms.Control.Left" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="79d66-554">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="79d66-555">Der neue <see cref="P:System.Windows.Forms.Control.Top" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="79d66-555">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="79d66-556">Der neue <see cref="P:System.Windows.Forms.Control.Width" />-Eigenschaftswert des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="79d66-556">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="79d66-557">Nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-557">Not used.</span></span></param>
        <param name="specified"><span data-ttu-id="79d66-558">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.BoundsSpecified" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="79d66-558">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="79d66-559">Legt die angegebenen Begrenzungen des <see cref="T:System.Windows.Forms.TextBoxBase" />-Steuerelements fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-559">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-560">Das <xref:System.Windows.Forms.TextBoxBase>-Steuerelement verwendet die <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>-Eigenschaft, um die Begrenzungen festzulegen, wenn die <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>-Eigenschaft `true` und die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>-Eigenschaft `false`ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-560">The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="79d66-561">In der Regel werden die Parameter, die den Begrenzungen entsprechen, die nicht im `specified`-Parameter enthalten sind, mit ihren aktuellen Werten übergeben.</span><span class="sxs-lookup"><span data-stu-id="79d66-561">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="79d66-562">Beispielsweise können die Eigenschaften <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>oder <xref:System.Drawing.Point.X%2A> oder <xref:System.Drawing.Point.Y%2A> der <xref:System.Windows.Forms.Control.Location%2A>-Eigenschaft mit einem Verweis auf die aktuelle Instanz des Steuer Elements übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="79d66-562">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="79d66-563">Alle übergebenen Werte werden jedoch berücksichtigt und auf das Steuerelement angewendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-563">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="79d66-564">Der `specified`-Parameter stellt die Elemente der Steuerelemente dar <xref:System.Windows.Forms.Control.Bounds%2A> die von Ihrer Anwendung geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="79d66-564">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="79d66-565">Wenn Sie z. b. den <xref:System.Windows.Forms.Control.Size%2A> des Steuer Elements ändern, ist der Wert des `specified`-Parameters der `Size` Wert <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="79d66-565">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="79d66-566">Wenn die <xref:System.Windows.Forms.Control.Size%2A> jedoch in Reaktion auf die festgelegte <xref:System.Windows.Forms.Control.Dock%2A> Eigenschaft angepasst wird, ist der `specified` Parameterwert der `None` Wert <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="79d66-566">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d66-567">Wenn Sie <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass Sie die <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />-Methode der Basisklasse aufzurufen, damit die Begrenzungen des Steuer Elements geändert werden.</span><span class="sxs-lookup"><span data-stu-id="79d66-567">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span></span> <span data-ttu-id="79d66-568">Abgeleitete Klassen können der <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />-Methode Größenbeschränkungen hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="79d66-568">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-569">Ruft einen Wert ab, der angibt, ob die definierten Tastenkombinationen aktiviert sind, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-569">Gets or sets a value indicating whether the defined shortcuts are enabled.</span></span></summary>
        <value><span data-ttu-id="79d66-570"><see langword="true" />, um die Tastenkombinationen zu aktivieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-570"><see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-571">Verwenden Sie die <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A>-Eigenschaft, um die folgenden Tastenkombinationen und das Kontextmenü des-Steuer Elements zu aktivieren bzw. zu deaktivieren:</span><span class="sxs-lookup"><span data-stu-id="79d66-571">Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control's shortcut menu:</span></span>  
  
-   <span data-ttu-id="79d66-572">STRG+Z</span><span class="sxs-lookup"><span data-stu-id="79d66-572">CTRL+Z</span></span>  
  
-   <span data-ttu-id="79d66-573">STRG+E</span><span class="sxs-lookup"><span data-stu-id="79d66-573">CTRL+E</span></span>  
  
-   <span data-ttu-id="79d66-574">STRG+C</span><span class="sxs-lookup"><span data-stu-id="79d66-574">CTRL+C</span></span>  
  
-   <span data-ttu-id="79d66-575">STRG+Y</span><span class="sxs-lookup"><span data-stu-id="79d66-575">CTRL+Y</span></span>  
  
-   <span data-ttu-id="79d66-576">STRG+X</span><span class="sxs-lookup"><span data-stu-id="79d66-576">CTRL+X</span></span>  
  
-   <span data-ttu-id="79d66-577">STRG+RÜCKTASTE</span><span class="sxs-lookup"><span data-stu-id="79d66-577">CTRL+BACKSPACE</span></span>  
  
-   <span data-ttu-id="79d66-578">STRG+V</span><span class="sxs-lookup"><span data-stu-id="79d66-578">CTRL+V</span></span>  
  
-   <span data-ttu-id="79d66-579">STRG+ENTF</span><span class="sxs-lookup"><span data-stu-id="79d66-579">CTRL+DELETE</span></span>  
  
-   <span data-ttu-id="79d66-580">STRG+A</span><span class="sxs-lookup"><span data-stu-id="79d66-580">CTRL+A</span></span>  
  
-   <span data-ttu-id="79d66-581">UMSCHALT + ENTF</span><span class="sxs-lookup"><span data-stu-id="79d66-581">SHIFT+DELETE</span></span>  
  
-   <span data-ttu-id="79d66-582">STRG+L</span><span class="sxs-lookup"><span data-stu-id="79d66-582">CTRL+L</span></span>  
  
-   <span data-ttu-id="79d66-583">UMSCHALT + Einfügung</span><span class="sxs-lookup"><span data-stu-id="79d66-583">SHIFT+INSERT</span></span>  
  
-   <span data-ttu-id="79d66-584">STRG+R</span><span class="sxs-lookup"><span data-stu-id="79d66-584">CTRL+R</span></span>  
  
 <span data-ttu-id="79d66-585">Sie können diese Eigenschaft überschreiben, um andere Tastenkombinationen anzugeben.</span><span class="sxs-lookup"><span data-stu-id="79d66-585">You can override this property to specify other shortcut keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBoxBase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-586">Ruft den aktuellen Text im Textfeld ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-586">Gets or sets the current text in the text box.</span></span></summary>
        <value><span data-ttu-id="79d66-587">Der im Steuerelement angezeigte Text.</span><span class="sxs-lookup"><span data-stu-id="79d66-587">The text displayed in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-588">Wenn Sie mehrere Textzeilen in einem Textfeld anzeigen möchten, legen Sie die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>-Eigenschaft auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="79d66-588">To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`.</span></span> <span data-ttu-id="79d66-589">Um den Text eines mehrzeiligen Textfelds zu lesen oder festzulegen, verwenden Sie die <xref:System.Windows.Forms.TextBoxBase.Lines%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="79d66-589">To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property.</span></span> <span data-ttu-id="79d66-590">Der Text, der im <xref:System.Windows.Forms.RichTextBox> Steuerelement eingegeben werden kann, ist nur durch den verfügbaren System Arbeitsspeicher beschränkt.</span><span class="sxs-lookup"><span data-stu-id="79d66-590">The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-591">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um eine mehrzeilige <xref:System.Windows.Forms.TextBox> Steuerelement mit vertikalen Schiebe leisten zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="79d66-591">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="79d66-592">Dieses Beispiel verwendet auch die Eigenschaften <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>, damit das mehrzeilige Textfeld-Steuerelement für das Erstellen von Textdokumenten nützlich ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-592">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public virtual int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-593">Ruft die Länge des Texts im Steuerelement ab.</span><span class="sxs-lookup"><span data-stu-id="79d66-593">Gets the length of text in the control.</span></span></summary>
        <value><span data-ttu-id="79d66-594">Die Anzahl der Zeichen im Text des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="79d66-594">The number of characters contained in the text of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-595">Sie können diese Eigenschaft verwenden, um die Anzahl von Zeichen in einer Zeichenfolge für Aufgaben zu bestimmen, wie z. b. das Suchen nach bestimmten Text Zeichenfolgen im Text des Steuer Elements, bei dem die Gesamtzahl der Zeichen benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-595">You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-596">Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Windows.Forms.TextBoxBase.AppendText%2A>-Methode und die <xref:System.Windows.Forms.TextBoxBase.TextLength%2A>-Eigenschaft verwenden, um Text von einem <xref:System.Windows.Forms.TextBox> in einen anderen zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="79d66-596">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="79d66-597">In diesem Beispiel ist es erforderlich, dass zwei <xref:System.Windows.Forms.TextBox> Steuerelemente mit dem Namen `textBox1` und `textBox2`zu einem Formular hinzugefügt wurden und dass `textBox1` Text der <xref:System.Windows.Forms.Control.Text%2A>-Eigenschaft zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-597">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textBoxBase.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-598">Gibt eine Zeichenfolge zurück, die das <see cref="T:System.Windows.Forms.TextBoxBase" />-Steuerelement darstellt.</span><span class="sxs-lookup"><span data-stu-id="79d66-598">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span></span></summary>
        <returns><span data-ttu-id="79d66-599">Eine Zeichenfolge, die das aktuelle <see cref="T:System.Windows.Forms.TextBoxBase" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="79d66-599">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span></span> <span data-ttu-id="79d66-600">Die Zeichenfolge enthält den Typ und die <see cref="T:System.Windows.Forms.TextBoxBase" />-Eigenschaft des Steuerelements.</span><span class="sxs-lookup"><span data-stu-id="79d66-600">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d66-601">Macht die letzte Bearbeitung des Textfelds rückgängig.</span><span class="sxs-lookup"><span data-stu-id="79d66-601">Undoes the last edit operation in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-602">Mit dieser Methode wird der letzte **Zwischenablage** -oder Text Änderungs Vorgang im Textfeld-Steuerelement rückgängig gemacht, wenn die <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A>-Eigenschaft `true`zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="79d66-602">This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-603">Die <xref:System.Windows.Forms.TextBoxBase.Undo%2A>-Methode funktioniert nicht mit den <xref:System.Windows.Forms.Control.KeyPress>-oder <xref:System.Windows.Forms.Control.TextChanged>-Ereignissen.</span><span class="sxs-lookup"><span data-stu-id="79d66-603">The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-604">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d66-604">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="79d66-605">Es stellt <xref:System.Windows.Forms.MenuItem.Click> Ereignishandler für <xref:System.Windows.Forms.MenuItem> Objekte bereit, die Ausschneide-, Kopier-, Einfüge-und rückgängig-Vorgänge ausführen.</span><span class="sxs-lookup"><span data-stu-id="79d66-605">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="79d66-606">Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.TextBox>-Steuerelement mit dem Namen `textBox1` erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="79d66-606">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="textBoxBase.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="79d66-607">Die zu verarbeitende Windows-<see cref="T:System.Windows.Forms.Message" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-607">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="79d66-608">Verarbeitet Windows-Meldungen.</span><span class="sxs-lookup"><span data-stu-id="79d66-608">Processes Windows messages.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WordWrap : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d66-609">Gibt an, ob im Steuerelement für ein mehrzeiliges Textfeld bei Bedarf automatisch ein Zeilenumbruch durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="79d66-609">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span></span></summary>
        <value><span data-ttu-id="79d66-610"><see langword="true" />, wenn in die Zeilen in dem mehrzeiligen Textfeld-Steuerelement umbrochen werden, <see langword="false" />, wenn das Textfeld-Steuerelement automatisch einen horizontalen Bildlauf durchführt, wenn der Benutzer über den rechten Rand des Steuerelement hinaus schreibt.</span><span class="sxs-lookup"><span data-stu-id="79d66-610"><see langword="true" /> if the multiline text box control wraps words; <see langword="false" /> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</span></span> <span data-ttu-id="79d66-611">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="79d66-611">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d66-612">Wenn diese Eigenschaft auf `true`festgelegt ist, werden horizontale Schiebe leisten unabhängig von der <xref:System.Windows.Forms.TextBox.ScrollBars%2A>-Eigenschafts Einstellung nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="79d66-612">If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79d66-613">In der abgeleiteten Klasse wird <xref:System.Windows.Forms.TextBox>Text innerhalb des Steuer Elements unabhängig von der Eigenschafts Einstellung dieser Eigenschaft immer eingebunden, es sei denn, die Eigenschaft <xref:System.Windows.Forms.TextBox.TextAlign%2A> ist auf `HorizontalAlignment.Left`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="79d66-613">In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79d66-614">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.TextBox>, eine abgeleitete Klasse, verwendet, um eine mehrzeilige <xref:System.Windows.Forms.TextBox> Steuerelement mit vertikalen Schiebe leisten zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="79d66-614">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="79d66-615">Dieses Beispiel verwendet auch die Eigenschaften <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>und <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>, damit das mehrzeilige Textfeld-Steuerelement für das Erstellen von Textdokumenten nützlich ist.</span><span class="sxs-lookup"><span data-stu-id="79d66-615">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
