<Type Name="ListViewInsertionMark" FullName="System.Windows.Forms.ListViewInsertionMark">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a61975b23db9a9756736bca43a498230e4496bd6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86727911" /></Metadata><TypeSignature Language="C#" Value="public sealed class ListViewInsertionMark" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ListViewInsertionMark extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewInsertionMark" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ListViewInsertionMark" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertionMark sealed" />
  <TypeSignature Language="F#" Value="type ListViewInsertionMark = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wird verwendet, um die erwartete Position für das Ablegen eines Elements anzugeben, wenn dieses zu einer neuen Position in einem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement gezogen wird. Diese Funktionalität steht nur unter Windows XP oder und höher zur Verfügung.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen <xref:System.Windows.Forms.ListViewInsertionMark> aus der <xref:System.Windows.Forms.ListView.InsertionMark%2A> -Eigenschaft eines <xref:System.Windows.Forms.ListView> -Steuer Elements abrufen und ihn zum visuellen angeben der erwarteten Ablage Position in einem Drag & Drop-Vorgang verwenden, wenn ein Element an eine neue Position gezogen wird.  
  
 Diese Funktion funktioniert nur, wenn die <xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=nameWithType> -Eigenschaft auf festgelegt ist `true` und das-Steuerelement <xref:System.Windows.Forms.ListView> die Elemente nicht automatisch sortiert. Um die automatische Sortierung zu verhindern, <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> muss die-Eigenschaft auf <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> und die- <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> Eigenschaft auf, oder festgelegt werden <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType> <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType> <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> . Darüber hinaus kann die Funktion "Einfügemarke" nicht mit der <xref:System.Windows.Forms.ListView> Gruppierungs Funktion verwendet werden, da die Gruppierungs Funktion die Elemente nach Gruppenmitgliedschaft sortiert.  
  
 Die- <xref:System.Windows.Forms.ListViewInsertionMark> Klasse wird in der Regel in einem Handler für das- <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> Ereignis oder das-Ereignis verwendet <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> , um die Position der Einfügemarke beim Ziehen eines Elements zu aktualisieren. Sie wird auch in einem-Handler für das- <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> Ereignis oder das- <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> Ereignis verwendet, um ein gezogene Element an der richtigen Position einzufügen.  
  
 Um die Position der Einfügemarke zu aktualisieren, führen Sie die folgenden Schritte aus:  
  
1.  Verwenden Sie in einem Handler für das- <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> Ereignis oder das- <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> Ereignis die- <xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=nameWithType> Eigenschaft, um auf das dem Steuerelement zugeordnete <xref:System.Windows.Forms.ListViewInsertionMark> Objekt zuzugreifen <xref:System.Windows.Forms.ListView> .  
  
2.  Verwenden Sie die- <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> Methode, um den Index des Elements abzurufen, das dem Mauszeiger am nächsten liegt.  
  
3.  Übergeben Sie den Indexwert an die- <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> Methode, um das umgebende Rechteck des Elements abzurufen.  
  
4.  Wenn sich der Mauszeiger auf der linken Seite des Mittelpunkts des umgebenden Rechtecks befindet, legen Sie die-Eigenschaft auf fest, und <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> `false` legen Sie Sie andernfalls auf fest `true` .  
  
5.  Legen Sie die- <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> Eigenschaft auf den von der-Methode abgerufenen Indexwert fest <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> . Die Einfügemarke wird neben dem Element mit dem angegebenen Index angezeigt, und zwar entweder Links oder rechts, abhängig vom <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> Eigenschafts Wert. Wenn ein Element auf sich selbst gezogen wird, ist der Index-1, und die Einfügemarke ist ausgeblendet.  
  
 Um das gezogene Element am richtigen Speicherort einzufügen, führen Sie die folgenden Schritte aus:  
  
1.  Verwenden Sie in einem Handler für das- <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> Ereignis oder das- <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> Ereignis die- <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> Eigenschaft, um die aktuelle Position der Einfügemarke zu bestimmen. Speichern Sie diesen Wert, der später als Einfügeindex verwendet werden soll.  
  
2.  Wenn die- <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> Eigenschaft auf festgelegt ist `true` , erhöhen Sie den gespeicherten Einfügeindexwert.  
  
3.  Verwenden Sie die- <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=nameWithType> Methode, um einen Klon des gezogenen Elements <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> am gespeicherten Einfügeindex in die Auflistung einzufügen.  
  
4.  Verwenden Sie die- <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=nameWithType> Methode, um die ursprüngliche Kopie des gezogenen Elements zu entfernen.  
  
 Sie müssen einen Klon des gezogenen Elements einfügen, bevor die ursprüngliche Kopie entfernt wird, sodass die Indexwerte in der Auflistung <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> vor dem Einfügen nicht geändert werden.  
  
 Um sicherzustellen, dass die Elemente in derselben Reihenfolge wie ihre Indexwerte angezeigt werden, müssen Sie die- <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=nameWithType> Eigenschaft auf eine Implementierung der-Schnittstelle festlegen, die <xref:System.Collections.IComparer> Elemente nach Indexwert sortiert. Weitere Informationen finden Sie im Abschnitt Beispiel.  
  
 Sie können die Farbe der Einfügemarke ändern, indem Sie die- <xref:System.Windows.Forms.ListViewInsertionMark.Color%2A> Eigenschaft verwenden. Wenn Sie die Größe oder Position der Einfügemarke benötigen, können Sie das umgebende Rechteck durch die- <xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A> Eigenschaft erhalten.  
  
> [!NOTE]
>  Die Funktion "Einfügemarke" ist nur unter Windows XP und der Windows Server 2003-Produktfamilie verfügbar, wenn die Anwendung die- <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode aufruft. Unter früheren Betriebssystemen wird jeglicher Code, der sich auf die Einfügemarke bezieht, ignoriert, und die Einfügemarke wird nicht angezeigt. Der Code, der von der Einfügemarke abhängt, funktioniert daher möglicherweise nicht ordnungsgemäß. Möglicherweise möchten Sie einen Test einschließen, der bestimmt, ob die Funktion für die Einfügemarke verfügbar ist, und alternative Funktionen bereitstellen, wenn Sie nicht verfügbar sind. Beispielsweise können Sie den gesamten Code umgehen, der die Neupositionierung von Drag & Drop-Elementen implementiert, wenn diese auf Betriebssystemen ausgeführt werden, die keine Einfügemarkierungen unterstützen.  
>   
>  Die Funktion "Einfügemarke" wird von derselben Bibliothek bereitgestellt, die das Feature "Betriebssystem Designs" enthält. Um die Verfügbarkeit dieser Bibliothek zu überprüfen, müssen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> -Methoden Überladung aufrufen und den- <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> Wert übergeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView> Einfügemarke verwendet wird und wie die Neuanordnung von Drag & Drop-Elementen mithilfe der Standard Zieh Ereignisse implementiert wird. Die Position der Einfügemarke wird in einem Handler für das- <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> Ereignis aktualisiert. In diesem Handler wird die Position des Mauszeigers mit dem Mittelpunkt des nächsten Elements verglichen, und das Ergebnis wird verwendet, um zu bestimmen, ob die Einfügemarke links oder rechts vom Element angezeigt wird.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName="AppearsAfterItem">
      <MemberSignature Language="C#" Value="public bool AppearsAfterItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppearsAfterItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem" />
      <MemberSignature Language="VB.NET" Value="Public Property AppearsAfterItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppearsAfterItem { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AppearsAfterItem : bool with get, set" Usage="System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Einfügemarke rechts neben dem Element mit dem in der <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" />-Eigenschaft angegebenen Index angezeigt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Einfügemarke rechts neben dem Elemente mit dem in der <see cref="P:System.Windows.Forms.ListViewInsertionMark.Index" />-Eigenschaft angegebenen Index angezeigt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der- <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> Methode können Sie das Element suchen, das dem Mauszeiger am nächsten ist, aber Sie müssen eigene Berechnungen durchführen, um zu bestimmen, ob die Einfügemarke vor oder nach diesem Element angezeigt werden soll.  
  
 Führen Sie die folgenden Schritte aus, um den für die Eigenschaft benötigten Wert zu berechnen <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> :  
  
1.  Verwenden Sie die- <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> Methode, um den Index des Elements abzurufen, das dem Mauszeiger am nächsten liegt.  
  
2.  Übergeben Sie den Indexwert an die- <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=nameWithType> Methode, um das umgebende Rechteck des Elements abzurufen.  
  
3.  Wenn sich der Mauszeiger auf der linken Seite des Mittelpunkts des umgebenden Rechtecks befindet, legen Sie die-Eigenschaft auf fest, und <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> `false` legen Sie Sie andernfalls auf fest `true` .  
  
 Weitere Informationen finden Sie im <xref:System.Windows.Forms.ListViewInsertionMark> Übersichts Referenz Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView> Einfügemarke verwendet wird und wie die Neuanordnung von Drag & Drop-Elementen mithilfe der Standard Zieh Ereignisse implementiert wird. Die Position der Einfügemarke wird in einem Handler für das- <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> Ereignis aktualisiert. In diesem Handler wird die Position des Mauszeigers mit dem Mittelpunkt des nächsten Elements verglichen, und das Ergebnis wird verwendet, um zu bestimmen, ob die Einfügemarke links oder rechts vom Element angezeigt wird.  
  
 Das komplette Beispiel finden Sie im <xref:System.Windows.Forms.ListViewInsertionMark> Übersichts Referenz Thema.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.ListViewInsertionMark.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das umschließende Rechteck der Einfügemarke ab.</summary>
        <value>Ein <see cref="T:System.Drawing.Rectangle" />, das die Position und die Größe der Einfügemarke darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Koordinaten im umgebenden Rechteck des einfügezeichens sind relativ zur linken oberen Ecke des Steuer Elements <xref:System.Windows.Forms.ListView> .  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListViewInsertionMark.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Farbe der Einfügemarke ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Color" />-Wert, der die Farbe der Einfügemarke darstellt. Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.ListView.ForeColor" />-Eigenschaft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um die Farbe der Einfügemarke auf einen anderen Wert als die Vordergrundfarbe des Steuer Elements festzulegen <xref:System.Windows.Forms.ListView> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView> Einfügemarke verwendet wird und wie die Neuanordnung von Drag & Drop-Elementen mithilfe der Standard Zieh Ereignisse implementiert wird. Die Position der Einfügemarke wird in einem Handler für das- <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> Ereignis aktualisiert. In diesem Handler wird die Position des Mauszeigers mit dem Mittelpunkt des nächsten Elements verglichen, und das Ergebnis wird verwendet, um zu bestimmen, ob die Einfügemarke links oder rechts vom Element angezeigt wird.  
  
 Das komplette Beispiel finden Sie im <xref:System.Windows.Forms.ListViewInsertionMark> Übersichts Referenz Thema.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewInsertionMark.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Index : int with get, set" Usage="System.Windows.Forms.ListViewInsertionMark.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index des Elements ab, neben dem die Einfügemarke angezeigt wird, oder legt diesen fest.</summary>
        <value>Der Index des nächstgelegenen Elements, neben dem die Einfügemarke angezeigt wird, oder -1, wenn die Einfügemarke ausgeblendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Einfügemarke wird auf der linken Seite des Elements mit dem angegebenen Index angezeigt, wenn die- <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> Eigenschaft auf festgelegt ist `false` . andernfalls wird Sie rechts neben dem Element angezeigt. Die Einfügemarke verschwindet automatisch, wenn ein gezogenes Element in die Auflistung eingefügt wird <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> . Wenn Sie die Einfügemarke manuell entfernen möchten, z. b. Wenn ein Element auf sich selbst gezogen oder außerhalb des Steuer Elements gezogen wird, legen <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> Sie den Wert auf-1 fest.  
  
 Verwenden Sie die- <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> Methode, um den Index des Elements abzurufen, das der angegebenen Position am nächsten ist, z. b. die Position des Mauszeigers, wenn ein Element in einem Drag & Drop-Vorgang positioniert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView> Einfügemarke verwendet wird und wie die Neuanordnung von Drag & Drop-Elementen mithilfe der Standard Zieh Ereignisse implementiert wird. Die Position der Einfügemarke wird in einem Handler für das- <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> Ereignis aktualisiert. In diesem Handler wird die Position des Mauszeigers mit dem Mittelpunkt des nächsten Elements verglichen, und das Ergebnis wird verwendet, um zu bestimmen, ob die Einfügemarke links oder rechts vom Element angezeigt wird.  
  
 Das komplette Beispiel finden Sie im <xref:System.Windows.Forms.ListViewInsertionMark> Übersichts Referenz Thema.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
    <Member MemberName="NearestIndex">
      <MemberSignature Language="C#" Value="public int NearestIndex (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NearestIndex(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function NearestIndex (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NearestIndex(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.NearestIndex : System.Drawing.Point -&gt; int" Usage="listViewInsertionMark.NearestIndex pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Ein <see cref="T:System.Drawing.Point" />, der die Position darstellt, von der das nächstgelegene Element gesucht werden soll.</param>
        <summary>Ruft den Index des dem angegebenen Punkt am nächsten liegenden Elements ab.</summary>
        <returns>Der Index des dem angegebenen Punkt am nächsten liegenden Elements oder -1, wenn das nächstgelegene Element derzeit gezogen wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie das Element suchen, das dem Mauszeiger am nächsten ist, wenn Sie einen Drag & Drop-Vorgang durchgeführt haben. Verwenden Sie den zurückgegebenen Indexwert, um die Eigenschaft festzulegen <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> . Wenn das Element, das dem Mauszeiger am nächsten liegt, das Element ist, das gezogen wird, ist der Rückgabewert dieser Methode-1. Wenn Sie die- <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> Eigenschaft auf diesen Wert festlegen, wird die Einfügemarke ausgeblendet.  
  
 Diese Methode sucht das nächstgelegene Element, unabhängig davon, wo sich der Mauszeiger befindet, während die <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> Methode das Element nur an der angegebenen Position zurückgibt, oder, `null` Wenn es kein Element an dieser Position gibt. Die- <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=nameWithType> Methode gibt z. b. zurück, `null` Wenn sich der Mauszeiger zwischen zwei Elementen befindet. Aus diesem Grund sollten Sie immer die-Methode verwenden, <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> Wenn Sie einen Drag & Drop-Vorgang zum Positionieren von Elementen verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView> Einfügemarke verwendet wird und wie die Neuanordnung von Drag & Drop-Elementen mithilfe der Standard Zieh Ereignisse implementiert wird. Die Position der Einfügemarke wird in einem Handler für das- <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> Ereignis aktualisiert. In diesem Handler wird die Position des Mauszeigers mit dem Mittelpunkt des nächsten Elements verglichen, und das Ergebnis wird verwendet, um zu bestimmen, ob die Einfügemarke links oder rechts vom Element angezeigt wird.  
  
 Das komplette Beispiel finden Sie im <xref:System.Windows.Forms.ListViewInsertionMark> Übersichts Referenz Thema.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#3)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
      </Docs>
    </Member>
  </Members>
</Type>
