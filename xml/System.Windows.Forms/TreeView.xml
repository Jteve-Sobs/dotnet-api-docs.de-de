<Type Name="TreeView" FullName="System.Windows.Forms.TreeView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d130c5f95cc9685cddd143b996e86b93a2d98502" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70369415" /></Metadata><TypeSignature Language="C#" Value="public class TreeView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("AfterSelect")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Nodes")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TreeViewDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TreeViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt eine hierarchische Auflistung bezeichneter Elemente an, von denen jedes durch einen <see cref="T:System.Windows.Forms.TreeNode" /> dargestellt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeView.Nodes%2A> -Auflistung enthält <xref:System.Windows.Forms.TreeNode> alle-Objekte, die dem <xref:System.Windows.Forms.TreeView> -Steuerelement zugewiesen sind. Die Struktur Knoten in dieser Sammlung werden als Stamm Struktur Knoten bezeichnet. Jeder Struktur Knoten, der anschließend einem Stamm Struktur Knoten hinzugefügt wird, wird als untergeordneter Knoten bezeichnet. Da jede <xref:System.Windows.Forms.TreeNode> Sammlung andere <xref:System.Windows.Forms.TreeNode> Objekte enthalten kann, ist es möglicherweise schwierig, ihre Position in der Struktur zu ermitteln, wenn Sie die Auflistung durchlaufen. Sie können die <xref:System.Windows.Forms.TreeNode.FullPath%2A?displayProperty=nameWithType> Zeichenfolge analysieren, indem Sie <xref:System.Windows.Forms.TreeView.PathSeparator%2A> den Zeichen folgen Wert verwenden, <xref:System.Windows.Forms.TreeNode> um zu bestimmen, wo eine Bezeichnung beginnt und endet.  
  
 Sie können Bilder neben den Struktur Knoten anzeigen, indem Sie der <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView.ImageList%2A> -Eigenschaft ein zuweisen und auf <xref:System.Drawing.Image> den Indexwert eines in der <xref:System.Windows.Forms.ImageList> verweisen, um <xref:System.Drawing.Image>dieses zuzuweisen. Verwenden Sie die folgenden Eigenschaften, um Bilder zuzuweisen:  
  
-   Legen Sie <xref:System.Windows.Forms.TreeView.ImageIndex%2A> die-Eigenschaft auf den Indexwert <xref:System.Drawing.Image> des fest, den Sie anzeigen möchten, wenn ein Struktur Knoten nicht ausgewählt ist.  
  
-   Legen Sie <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> die-Eigenschaft auf den Indexwert <xref:System.Drawing.Image> des fest, den Sie anzeigen möchten, wenn ein Struktur Knoten ausgewählt wird.  
  
 Die Bilder, auf die <xref:System.Windows.Forms.TreeView.ImageIndex%2A> von <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> den Eigenschafts Werten und verwiesen wird, sind die Standardbilder, die von allen Struktur <xref:System.Windows.Forms.TreeView.Nodes%2A> Knoten angezeigt werden, die der Auflistung zugewiesen sind. Einzelne Struktur Knoten können die Standardbilder überschreiben, indem <xref:System.Windows.Forms.TreeNode.ImageIndex%2A?displayProperty=nameWithType> Sie <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A?displayProperty=nameWithType> die Eigenschaften und festlegen.  
  
 Die in <xref:System.Windows.Forms.TreeView> angezeigten Zustands Bilder sind standardmäßig 16 x 16 Pixel. Das Festlegen <xref:System.Windows.Forms.ImageList.ImageSize%2A> der-Eigenschaft <xref:System.Windows.Forms.TreeView.StateImageList%2A> von hat keine Auswirkung darauf, wie die Bilder angezeigt werden. Die Größe der Zustands Images wird jedoch entsprechend der System-dpi-Einstellung geändert, wenn die Datei "App. config" den folgenden Eintrag enthält:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 Struktur Knoten können erweitert werden, um die nächste Ebene von untergeordneten Struktur Knoten anzuzeigen. Der <xref:System.Windows.Forms.TreeNode> Benutzer kann die durch Klicken auf die Schaltfläche Pluszeichen (+) erweitern, wenn eine neben dem <xref:System.Windows.Forms.TreeNode>angezeigt wird, oder Sie können das <xref:System.Windows.Forms.TreeNode> erweitern, indem Sie <xref:System.Windows.Forms.TreeNode.Expand%2A?displayProperty=nameWithType> die-Methode aufrufen. Um alle untergeordneten Struktur Knoten Ebenen in der <xref:System.Windows.Forms.TreeNode.Nodes%2A> Auflistung zu erweitern, wird die <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> -Methode aufgerufen. Sie können die unter <xref:System.Windows.Forms.TreeNode> geordnete Ebene ausblenden, indem Sie die <xref:System.Windows.Forms.TreeNode.Collapse%2A?displayProperty=nameWithType> -Methode aufrufen, oder der Benutzer kann die Schaltfläche Minuszeichen (-) drücken, wenn eine neben <xref:System.Windows.Forms.TreeNode>dem angezeigt wird. Sie können auch die <xref:System.Windows.Forms.TreeNode.Toggle%2A?displayProperty=nameWithType> -Methode aufzurufen, um zwischen den erweiterten und reduzierten Zuständen zu wechseln.  
  
 In den Struktur Knoten können optional Kontrollkästchen angezeigt werden. Um die Kontrollkästchen anzuzeigen, legen Sie <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> die-Eigenschaft <xref:System.Windows.Forms.TreeView> von `true`auf fest. Die <xref:System.Windows.Forms.TreeNode.Checked%2A> -Eigenschaft wird `true` für Struktur Knoten festgelegt, die sich im aktivierten Zustand befinden.  
  
> [!NOTE]
>  Das Festlegen <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=nameWithType> der-Eigenschaft aus <xref:System.Windows.Forms.TreeView.BeforeCheck> dem <xref:System.Windows.Forms.TreeView.AfterCheck> -Ereignis oder dem-Ereignis bewirkt, dass das-Ereignis mehrmals ausgelöst wird und zu unerwartetem Verhalten führen kann. Beispielsweise können Sie die <xref:System.Windows.Forms.TreeNode.Checked%2A> -Eigenschaft im-Ereignishandler festlegen, wenn Sie die untergeordneten Knoten rekursiv aktualisieren, sodass der Benutzer diese nicht einzeln erweitern und prüfen muss. Um zu verhindern, dass das Ereignis mehrmals ausgelöst wird, fügen Sie dem Ereignishandler Logik hinzu, die nur den rekursiven <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> Code ausführt, <xref:System.Windows.Forms.TreeViewEventArgs> wenn die-Eigenschaft <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=nameWithType>von nicht auf festgelegt ist. Ein Beispiel hierfür finden Sie im Beispiel Abschnitt des-Ereignisses <xref:System.Windows.Forms.TreeView.AfterCheck> oder <xref:System.Windows.Forms.TreeView.BeforeCheck> des-Ereignisses.  
  
 Sie können die Darstellung des <xref:System.Windows.Forms.TreeView> Steuer Elements ändern, indem Sie einige seiner Anzeige-und Stileigenschaften festlegen. Wenn <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> Sie `true` auf festlegen, wird eine Plus-oder Minuszeichen-Schaltfläche <xref:System.Windows.Forms.TreeNode> neben jeder angezeigt, die erweitert bzw. reduziert werden kann. Das `true` <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> festlegen<xref:System.Windows.Forms.TreeView> der-Eigenschaft auf bewirkt, dass Zeilen anzeigt, die alle Stamm Struktur Knoten verbinden. Sie können Linien anzeigen, die untergeordnete Struktur Knoten mit ihren Stamm Knoten verbinden, <xref:System.Windows.Forms.TreeView.ShowLines%2A> indem Sie `true`die-Eigenschaft auf festlegen. Wenn Sie <xref:System.Windows.Forms.TreeView.HotTracking%2A> die- `true` Eigenschaft auf festlegen, wird die Darstellung der Struktur Knoten Bezeichnungen geändert, wenn der Mauszeiger darüber bewegt wird. Bei einer Hot-Nachverfolgung übernehmen die Struktur Knoten Bezeichnungen das Aussehen eines Links. Sie können die Darstellung des <xref:System.Windows.Forms.TreeView> Steuer Elements auch vollständig anpassen. Legen Sie hierzu die <xref:System.Windows.Forms.TreeView.DrawMode%2A> -Eigenschaft auf einen anderen Wert als <xref:System.Windows.Forms.TreeViewDrawMode.Normal?displayProperty=nameWithType> fest, und behandeln <xref:System.Windows.Forms.TreeView.DrawNode> Sie das-Ereignis.  
  
> [!NOTE]
>  Beim Festlegen der <xref:System.Windows.Forms.TreeView.CheckBoxes%2A>Eigenschaften <xref:System.Windows.Forms.TreeView.Scrollable%2A> <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> ,, und zur Laufzeit wird das <xref:System.Windows.Forms.TreeView> Handle neu erstellt (siehe <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>), um die Darstellung des Steuer Elements zu aktualisieren. <xref:System.Windows.Forms.TreeView.ImageIndex%2A> Dies bewirkt, dass alle Struktur Knoten reduziert werden, mit Ausnahme der <xref:System.Windows.Forms.TreeNode>ausgewählten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Windows.Forms.TreeView> -Steuer Elements veranschaulicht.  
  
 [!code-csharp[TreeViewMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewMisc/cs/form1.cs#10)]
 [!code-vb[TreeViewMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewMisc/vb/form1.vb#10)]  
  
 Das folgende, komplexere Codebeispiel zeigt Kundeninformationen in einem <xref:System.Windows.Forms.TreeView> -Steuerelement an. In den Stamm Struktur Knoten werden Kundennamen angezeigt, und die untergeordneten Struktur Knoten zeigen die Bestellnummern an, die den einzelnen Kunden zugewiesen sind. In diesem Beispiel werden 1.000-Kunden mit jeweils 15 Bestellungen angezeigt. Das erneute <xref:System.Windows.Forms.TreeView> Zeichnen von wird mithilfe der <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode und der <xref:System.Windows.Forms.TreeView.EndUpdate%2A> -Methode unterdrückt <xref:System.Windows.Forms.TreeView> , <xref:System.Windows.Forms.Cursor> und ein warte Vorgang wird angezeigt, während <xref:System.Windows.Forms.TreeNode> die Objekte erstellt und zeichnet. Dieses Beispiel erfordert, dass Sie über `Customer` ein-Objekt verfügen, das eine `Order` Auflistung von-Objekten enthalten kann. Außerdem ist es erforderlich, dass Sie über `MyWait.cur` <xref:System.Windows.Forms.Form>eine Cursor Datei verfügen, die im Anwendungsverzeichnis benannt ist und in der Sie eine Instanz <xref:System.Windows.Forms.TreeView> eines-Steuer Elements erstellt haben.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeNode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TreeView" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Reduzierungs Zustand eines <xref:System.Windows.Forms.TreeView> geändert wird, sodass alle aktivierten Knoten sichtbar sind. Zuerst werden alle Knoten erweitert, und es wird ein Handler für das <xref:System.Windows.Forms.TreeView.BeforeCollapse> -Ereignis hinzugefügt. Anschließend werden alle Knoten reduziert. Der <xref:System.Windows.Forms.TreeView.BeforeCollapse> Ereignishandler bestimmt, ob ein bestimmter Knoten über untergeordnete Knoten verfügt, die überprüft werden. Wenn ein Knoten überprüfte untergeordnete Elemente verfügt, wird der Reduzierungs Wert für diesen Knoten abgebrochen. Um die Standard Knoten zuklappen zuzulassen, wenn auf das Minuszeichen neben einem Knoten geklickt wird, <xref:System.Windows.Forms.TreeView.BeforeCollapse> wird der Ereignishandler entfernt.  
  
 Dieses Verhalten kann auch durch Behandeln des <xref:System.Windows.Forms.TreeView.BeforeExpand> -Ereignisses implementiert werden, wie im Beispiel für dieses Thema veranschaulicht.  
  
 [!code-cpp[TreeViewShowCheckedNodes2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CPP/treeviewshowcheckednodes2.cpp#1)]
 [!code-csharp[TreeViewShowCheckedNodes2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CS/treeviewshowcheckednodes2.cs#1)]
 [!code-vb[TreeViewShowCheckedNodes2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/VB/treeviewshowcheckednodes2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="AfterCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterCheck As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterCheck;" />
      <MemberSignature Language="F#" Value="member this.AfterCheck : System.Windows.Forms.TreeViewEventHandler " Usage="member this.AfterCheck : System.Windows.Forms.TreeViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das Kontrollkästchen des Strukturknotens aktiviert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Festlegen <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=nameWithType> der-Eigenschaft von <xref:System.Windows.Forms.TreeView.BeforeCheck> innerhalb <xref:System.Windows.Forms.TreeView.AfterCheck> eines-oder-Ereignis Handlers bewirkt, dass das-Ereignis mehrmals ausgelöst wird und zu unerwartetem Verhalten führen kann. Um zu verhindern, dass das Ereignis mehrmals ausgelöst wird, fügen Sie dem Ereignishandler Logik hinzu, die nur den rekursiven <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> Code ausführt, <xref:System.Windows.Forms.TreeViewEventArgs> wenn die-Eigenschaft <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=nameWithType>von nicht auf festgelegt ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden alle untergeordneten Struktur Knoten eines <xref:System.Windows.Forms.TreeNode> aktualisiert, wenn der Benutzer seinen aktivierten Zustand ändert. Dieser Code erfordert, dass Sie über <xref:System.Windows.Forms.Form> eine mit <xref:System.Windows.Forms.TreeView> einem verfügen <xref:System.Windows.Forms.TreeNode> , das über <xref:System.Windows.Forms.TreeNodeCollection>-Objekte in seiner verfügt. Der <xref:System.Windows.Forms.TreeNodeCollection> sollte über Struktur Knoten mit untergeordneten Knoten verfügen.  
  
 [!code-cpp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterCollapse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterCollapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterCollapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterCollapse As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterCollapse;" />
      <MemberSignature Language="F#" Value="member this.AfterCollapse : System.Windows.Forms.TreeViewEventHandler " Usage="member this.AfterCollapse : System.Windows.Forms.TreeViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Strukturknoten reduziert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden alle untergeordneten Struktur Knoten eines <xref:System.Windows.Forms.TreeNode> aktualisiert, wenn der Benutzer seinen aktivierten Zustand ändert. Dieser Code erfordert, dass Sie über <xref:System.Windows.Forms.Form> eine mit <xref:System.Windows.Forms.TreeView> einem verfügen <xref:System.Windows.Forms.TreeNode> , das über <xref:System.Windows.Forms.TreeNodeCollection>-Objekte in seiner verfügt. Der <xref:System.Windows.Forms.TreeNodeCollection> sollte über Struktur Knoten mit untergeordneten Knoten verfügen.  
  
 [!code-cpp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterExpand">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterExpand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterExpand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterExpand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterExpand As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterExpand;" />
      <MemberSignature Language="F#" Value="member this.AfterExpand : System.Windows.Forms.TreeViewEventHandler " Usage="member this.AfterExpand : System.Windows.Forms.TreeViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Strukturknoten erweitert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TreeView.AfterExpand> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.TreeView> des `TreeView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TreeView.AfterExpand> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#631](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#631)]
 [!code-vb[System.Windows.Forms.EventExamples#631](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#631)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NodeLabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NodeLabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As NodeLabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::NodeLabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.AfterLabelEdit : System.Windows.Forms.NodeLabelEditEventHandler " Usage="member this.AfterLabelEdit : System.Windows.Forms.NodeLabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NodeLabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Text der Strukturknotenbezeichnung bearbeitet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann der Benutzer nicht Stamm Struktur Knoten mithilfe eines <xref:System.Windows.Forms.ContextMenu>bearbeiten. Wenn der Benutzer mit der rechten Maustaste auf die <xref:System.Windows.Forms.TreeNode> Maus klickt, wird der an dieser Position bestimmt und in `mySelectedNode`einer Variablen mit dem Namen gespeichert. Wenn ein nicht Stamm Struktur Knoten ausgewählt wurde, wird er in einen bearbeitbaren Zustand versetzt, der es dem Benutzer ermöglicht, die Knoten Bezeichnung zu bearbeiten. Nachdem der Benutzer die Bearbeitung der Struktur Knoten Bezeichnung beendet hat, wird der neue Beschriftungs Text ausgewertet und gespeichert. In diesem Beispiel werden mehrere Zeichen im Bezeichnungs Text als ungültig eingestuft. Wenn eines der ungültigen Zeichen in der Bezeichnungs Zeichenfolge enthalten ist oder die Zeichenfolge leer ist, wird der Benutzer über den Fehler benachrichtigt, und die Bezeichnung wird an den vorherigen Text zurückgegeben.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterSelect">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterSelect;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterSelect" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterSelect" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterSelect As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterSelect;" />
      <MemberSignature Language="F#" Value="member this.AfterSelect : System.Windows.Forms.TreeViewEventHandler " Usage="member this.AfterSelect : System.Windows.Forms.TreeViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Strukturknoten ausgewählt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt nicht auf, wenn der Knoten nicht ausgewählt ist. Um zu ermitteln, ob die Auswahl gelöscht wurde, können Sie <xref:System.Windows.Forms.TreeNode.IsSelected%2A?displayProperty=nameWithType> die-Eigenschaft testen.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.TreeViewAction> -Enumeration veranschaulicht. Fügen Sie den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.TreeView> -Steuerelement mit dem Namen `TreeView1`enthält, um dieses Beispiel auszuführen. Dieses Beispiel erfordert, `TreeView1` dass mit-Elementen aufgefüllt wird <xref:System.Windows.Forms.TreeView.AfterSelect> und das-Ereignis mit dem im Beispiel definierten Ereignishandler verbunden ist.  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsSelected" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe für das Steuerelement ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe des Steuerelements darstellt. Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />-Eigenschaft.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.TreeView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Hintergrundbild für das <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement ab oder legt dieses fest.</summary>
        <value>Das <see cref="T:System.Drawing.Image" />, das das Hintergrundbild für das <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.TreeView.BackgroundImage" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.TreeView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Layout für das Hintergrundbild des <see cref="T:System.Windows.Forms.TreeView" />-Steuerelements ab oder legt dieses fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ImageLayout" />-Werte. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft/Methode/dieses Ereignis ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.TreeView.BackgroundImageLayout" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeCheck As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeCheck;" />
      <MemberSignature Language="F#" Value="member this.BeforeCheck : System.Windows.Forms.TreeViewCancelEventHandler " Usage="member this.BeforeCheck : System.Windows.Forms.TreeViewCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor das Kontrollkästchen des Strukturknotens aktiviert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Das Festlegen <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=nameWithType> der-Eigenschaft aus <xref:System.Windows.Forms.TreeView.BeforeCheck> dem <xref:System.Windows.Forms.TreeView.AfterCheck> -Ereignis oder dem-Ereignis bewirkt, dass das-Ereignis mehrmals ausgelöst wird und zu unerwartetem Verhalten führen kann. Beispielsweise können Sie die <xref:System.Windows.Forms.TreeNode.Checked%2A> -Eigenschaft im-Ereignishandler festlegen, wenn Sie die untergeordneten Knoten rekursiv aktualisieren, sodass der Benutzer diese nicht einzeln erweitern und prüfen muss. Um zu verhindern, dass das Ereignis mehrmals ausgelöst wird, fügen Sie dem Ereignishandler Logik hinzu, die nur den rekursiven <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> Code ausführt, <xref:System.Windows.Forms.TreeViewEventArgs> wenn die-Eigenschaft <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=nameWithType>von nicht auf festgelegt ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden alle untergeordneten Struktur Knoten eines <xref:System.Windows.Forms.TreeNode> aktualisiert, wenn der Benutzer seinen aktivierten Zustand ändert. Dieser Code erfordert, dass Sie über <xref:System.Windows.Forms.Form> eine mit <xref:System.Windows.Forms.TreeView> einem verfügen <xref:System.Windows.Forms.TreeNode> , das über <xref:System.Windows.Forms.TreeNodeCollection>-Objekte in seiner verfügt. Der <xref:System.Windows.Forms.TreeNodeCollection> sollte über Struktur Knoten mit untergeordneten Knoten verfügen.  
  
 [!code-cpp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeCollapse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeCollapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeCollapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeCollapse As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeCollapse;" />
      <MemberSignature Language="F#" Value="member this.BeforeCollapse : System.Windows.Forms.TreeViewCancelEventHandler " Usage="member this.BeforeCollapse : System.Windows.Forms.TreeViewCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor der Strukturknoten reduziert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Reduzierungs Zustand eines <xref:System.Windows.Forms.TreeView> geändert wird, sodass alle aktivierten Knoten sichtbar sind. Zuerst werden alle Knoten erweitert, und es wird ein Handler für das <xref:System.Windows.Forms.TreeView.BeforeCollapse> -Ereignis hinzugefügt. Anschließend werden alle Knoten reduziert. Der <xref:System.Windows.Forms.TreeView.BeforeCollapse> Ereignishandler bestimmt, ob ein bestimmter Knoten über untergeordnete Knoten verfügt, die überprüft werden. Wenn ein Knoten überprüfte untergeordnete Elemente verfügt, wird der Reduzierungs Wert für diesen Knoten abgebrochen. Um die Standard Knoten zuklappen zuzulassen, wenn auf das Minuszeichen neben einem Knoten geklickt wird, <xref:System.Windows.Forms.TreeView.BeforeCollapse> wird der Ereignishandler entfernt.  
  
 Dieses Verhalten kann auch durch Behandeln des <xref:System.Windows.Forms.TreeView.BeforeExpand> -Ereignisses implementiert werden, wie im Beispiel für dieses Thema veranschaulicht.  
  
 Das komplette Beispiel finden Sie im Thema <xref:System.Windows.Forms.TreeView.%23ctor%2A> zum konstruktorverweis.  
  
 [!code-cpp[TreeViewShowCheckedNodes2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CPP/treeviewshowcheckednodes2.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CS/treeviewshowcheckednodes2.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/VB/treeviewshowcheckednodes2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeExpand">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeExpand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeExpand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeExpand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeExpand As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeExpand;" />
      <MemberSignature Language="F#" Value="member this.BeforeExpand : System.Windows.Forms.TreeViewCancelEventHandler " Usage="member this.BeforeExpand : System.Windows.Forms.TreeViewCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor der Strukturknoten erweitert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Reduzierungs Zustand eines <xref:System.Windows.Forms.TreeView> geändert wird, sodass alle aktivierten Knoten sichtbar sind. Zuerst werden alle Knoten reduziert, und es wird ein Handler für das <xref:System.Windows.Forms.TreeView.BeforeExpand> -Ereignis hinzugefügt. Anschließend werden alle Knoten erweitert. Der <xref:System.Windows.Forms.TreeView.BeforeExpand> Ereignishandler bestimmt, ob ein bestimmter Knoten über untergeordnete Knoten verfügt, die überprüft werden. Wenn ein Knoten nicht überprüfte untergeordnete Elemente verfügt, wird die Erweiterung für diesen Knoten abgebrochen. Um die Standard Knoten Erweiterung zu ermöglichen, wenn auf das Pluszeichen neben einem Knoten geklickt wird, <xref:System.Windows.Forms.TreeView.BeforeExpand> wird der Ereignishandler entfernt.  
  
 Dieses Verhalten kann auch durch Behandeln des <xref:System.Windows.Forms.TreeView.BeforeCollapse> -Ereignisses implementiert werden, wie im Beispiel für dieses Thema veranschaulicht.  
  
 Das komplette Beispiel finden Sie im <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> Referenz Thema.  
  
 [!code-cpp[TreeViewShowCheckedNodes1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NodeLabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NodeLabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As NodeLabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::NodeLabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.BeforeLabelEdit : System.Windows.Forms.NodeLabelEditEventHandler " Usage="member this.BeforeLabelEdit : System.Windows.Forms.NodeLabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NodeLabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor der Text der Strukturknotenbezeichnung bearbeitet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> <xref:System.Windows.Forms.TreeView.AfterSelect> -Members <xref:System.Windows.Forms.TreeView.TopNode%2A> und des-Members veranschaulicht. Fügen Sie den folgenden Code in ein Formular ein, das ein `TreeView` -Steuerelement mit dem Namen `TreeView1`enthält, um dieses Beispiel auszuführen. Ruft die `InitializeTreeView` -Methode im Konstruktor oder `Load` in der-Methode des Formulars auf.  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeSelect">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeSelect;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeSelect" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeSelect" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeSelect As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeSelect;" />
      <MemberSignature Language="F#" Value="member this.BeforeSelect : System.Windows.Forms.TreeViewCancelEventHandler " Usage="member this.BeforeSelect : System.Windows.Forms.TreeViewCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor der Strukturknoten ausgewählt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TreeView.BeforeSelect> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.TreeView> des `TreeView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TreeView.BeforeSelect> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#635](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#635)]
 [!code-vb[System.Windows.Forms.EventExamples#635](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#635)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="treeView.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deaktiviert ein Neuzeichnen der Strukturansicht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die <xref:System.Windows.Forms.TreeView>Leistung aufrechtzuerhalten, während Elemente nacheinander zu hinzugefügt werden, wird die <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode aufgerufen. Die <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode verhindert, dass das Steuerelement <xref:System.Windows.Forms.TreeView.EndUpdate%2A> gezeichnet wird, bis die-Methode aufgerufen wird.  
  
 Die bevorzugte Methode zum Hinzufügen von Elementen zu einem Strukturansicht-Steuerelement <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> ist die Verwendung der-Methode zum Hinzufügen eines Arrays von Struktur Knoten Elementen zu einer Strukturansicht. Wenn Sie jedoch Elemente einzeln hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode, um zu verhindern, dass das <xref:System.Windows.Forms.TreeView> Steuerelement während der Add-Vorgänge gezeichnet wird. Damit das-Steuerelement das Zeichnen fortsetzen kann <xref:System.Windows.Forms.TreeView.EndUpdate%2A> , wird die-Methode aufgerufen, wenn alle Struktur Knoten der Strukturansicht hinzugefügt wurden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Kundeninformationen in einem <xref:System.Windows.Forms.TreeView> -Steuerelement an. In den Stamm Struktur Knoten werden Kundennamen angezeigt, und die untergeordneten Struktur Knoten zeigen die Bestellnummern an, die den einzelnen Kunden zugewiesen sind. In diesem Beispiel werden 1.000-Kunden mit jeweils 15 Bestellungen angezeigt. Das erneute <xref:System.Windows.Forms.TreeView> Zeichnen von wird mithilfe der <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode und der <xref:System.Windows.Forms.TreeView.EndUpdate%2A> -Methode unterdrückt <xref:System.Windows.Forms.TreeView> , <xref:System.Windows.Forms.Cursor> und ein warte Vorgang wird angezeigt, während <xref:System.Windows.Forms.TreeNode> die Objekte erstellt und zeichnet. Dieses Beispiel erfordert, dass Sie über `Customer` ein-Objekt verfügen, das eine `Order` Auflistung von-Objekten enthalten kann. Außerdem ist es erforderlich, dass Sie über `MyWait.cur` <xref:System.Windows.Forms.Form>eine Cursor Datei verfügen, die im Anwendungsverzeichnis benannt ist und in der Sie eine Instanz <xref:System.Windows.Forms.TreeView> eines-Steuer Elements erstellt haben.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.EndUpdate" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TreeView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart des Strukturansicht-Steuerelements ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.BorderStyle" />-Werte. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.TreeView.BorderStyle%2A> -Eigenschaft auf <xref:System.Windows.Forms.BorderStyle.Fixed3D>festgelegt ist <xref:System.Windows.Forms.TreeView> , hat das eine abgesenkten, dreidimensionalen Darstellung. Legen Sie die <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.BorderStyle> -Eigenschaft auf <xref:System.Windows.Forms.BorderStyle.FixedSingle>fest, um einen flachen, dünnen Rahmen um das-Steuerelement anzuzeigen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.BorderStyle> -Enumeration und <xref:System.Windows.Forms.TreeView.BorderStyle%2A>die <xref:System.Windows.Forms.TreeView.ShowLines%2A>Eigenschaften <xref:System.Windows.Forms.TreeView.Scrollable%2A>, <xref:System.Windows.Forms.TreeView.HideSelection%2A> , <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> und verwendet werden. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, und `InitializeTreeView` nennen Sie die-Methode im Konstruktor `Load` oder in der-Methode des Formulars.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der zugewiesene Wert ist keiner der <see cref="T:System.Windows.Forms.BorderStyle" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxes : bool with get, set" Usage="System.Windows.Forms.TreeView.CheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob neben den Strukturknoten im Strukturansicht-Steuerelement Kontrollkästchen angezeigt werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn neben jedem Strukturknoten im Strukturansicht-Steuerelement ein Kontrollkästchen angezeigt wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Auf der linken Seite der Struktur Knoten Bezeichnung und des Struktur Knotens <xref:System.Drawing.Image>wird ein Kontrollkästchen angezeigt. Mit Kontrollkästchen kann der Benutzer mehr als einen Struktur Knoten gleichzeitig auswählen.  
  
 Wenn die <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> -Eigenschaft <xref:System.Windows.Forms.TreeView> von auf `true`festgelegt ist und die <xref:System.Windows.Forms.TreeView.StateImageList%2A> -Eigenschaft festgelegt ist <xref:System.Windows.Forms.TreeNode> , <xref:System.Windows.Forms.TreeView> zeigt jede, die in enthalten ist, das erste und zweite <xref:System.Windows.Forms.TreeView.StateImageList%2A> Bild aus der an, um anzugeben, dass der Status "deaktiviert" bzw. "aktiviert". Die angezeigten Bilder können sich jedoch unterscheiden, wenn Folgendes zutrifft: <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> `false`Wenn für den Knoten ein anderer Wert als 0 oder 1 festgelegt ist und die-Eigenschaft des übergeordneten Elements auf festgelegt ist, wird der nicht automatisch auf-1 zurückgesetzt, um anzugeben, dass er nicht festgelegt ist. <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> In diesem Fall wird das Zustands Bild an der angegebenen Indexposition angezeigt. Wenn <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> wieder auf `true` festgelegt ist, <xref:System.Windows.Forms.TreeView.StateImageList%2A> werden das erste und das zweite Bild von angezeigt, um einen aktivierten bzw. nicht aktivierten Zustand anzugeben.  
  
> [!NOTE]
>  Beim Festlegen der <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> -Eigenschaft zur Laufzeit wird das <xref:System.Windows.Forms.TreeView> Handle neu erstellt (siehe <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>), um die Darstellung des Steuer Elements zu aktualisieren. Dies bewirkt, dass alle Struktur Knoten reduziert werden, mit Ausnahme der ausgewählten <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Reduzierungs Zustand eines <xref:System.Windows.Forms.TreeView> geändert wird, sodass alle aktivierten Knoten sichtbar sind. Zuerst werden alle Knoten reduziert, und es wird ein Handler für das <xref:System.Windows.Forms.TreeView.BeforeExpand> -Ereignis hinzugefügt. Anschließend werden alle Knoten erweitert. Der <xref:System.Windows.Forms.TreeView.BeforeExpand> Ereignishandler bestimmt, ob ein bestimmter Knoten über untergeordnete Knoten verfügt, die überprüft werden. Wenn ein Knoten nicht überprüfte untergeordnete Elemente verfügt, wird die Erweiterung für diesen Knoten abgebrochen. Um die Standard Knoten Erweiterung zu ermöglichen, wenn auf das Pluszeichen neben einem Knoten geklickt wird, <xref:System.Windows.Forms.TreeView.BeforeExpand> wird der Ereignishandler entfernt.  
  
 Dieses Verhalten kann auch durch Behandeln des <xref:System.Windows.Forms.TreeView.BeforeCollapse> -Ereignisses implementiert werden, wie im Beispiel für dieses Thema veranschaulicht.  
  
 [!code-cpp[TreeViewShowCheckedNodes1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#1)]
 [!code-csharp[TreeViewShowCheckedNodes1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#1)]
 [!code-vb[TreeViewShowCheckedNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Checked" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeView.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reduziert alle Strukturknoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeView.CollapseAll%2A> -Methode reduziert <xref:System.Windows.Forms.TreeNode> alle-Objekte, die alle untergeordneten Struktur Knoten enthalten <xref:System.Windows.Forms.TreeView> , die im-Steuerelement enthalten sind.  
  
> [!NOTE]
>  Der Status einer <xref:System.Windows.Forms.TreeNode> bleibt bestehen. Nehmen Sie beispielsweise an, dass Sie <xref:System.Windows.Forms.TreeNode.Expand%2A> die-Methode für einen Stamm Struktur Knoten aufzurufen. Wenn die untergeordneten Struktur Knoten zuvor nicht reduziert waren, werden Sie in Ihrem zuvor erweiterten Zustand angezeigt. Durch Aufrufen <xref:System.Windows.Forms.TreeView.CollapseAll%2A> der-Methode wird sichergestellt, dass alle Struktur Knoten im reduzierten Zustand angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Reduzierungs Zustand eines <xref:System.Windows.Forms.TreeView> geändert wird, sodass alle aktivierten Knoten sichtbar sind. Zuerst werden alle Knoten reduziert, und es wird ein Handler für das <xref:System.Windows.Forms.TreeView.BeforeExpand> -Ereignis hinzugefügt. Anschließend werden alle Knoten erweitert. Der <xref:System.Windows.Forms.TreeView.BeforeExpand> Ereignishandler bestimmt, ob ein bestimmter Knoten über untergeordnete Knoten verfügt, die überprüft werden. Wenn ein Knoten nicht überprüfte untergeordnete Elemente verfügt, wird die Erweiterung für diesen Knoten abgebrochen. Um die Standard Knoten Erweiterung zu ermöglichen, wenn auf das Pluszeichen neben einem Knoten geklickt wird, <xref:System.Windows.Forms.TreeView.BeforeExpand> wird der Ereignishandler entfernt.  
  
 Dieses Verhalten kann auch durch Behandeln des <xref:System.Windows.Forms.TreeView.BeforeCollapse> -Ereignisses implementiert werden, wie im Beispiel für dieses Thema veranschaulicht.  
  
 Das komplette Beispiel finden Sie im <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> Referenz Thema.  
  
 [!code-cpp[TreeViewShowCheckedNodes1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="treeView.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Handle für das Steuerelement.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TreeView.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benötigten Erstellungsparameter ab, wenn das Steuerelementhandle erstellt wird.</summary>
        <value>Die Erstellungsparameter.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">für den Zugriff auf nicht verwalteten Code beim Abrufen des Eigenschafts Werts. Zugehörige Enumeration:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.TreeView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardgröße des Steuerelements ab.</summary>
        <value>Die Standard-<see cref="T:System.Drawing.Size" /> des Steuerelements.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="treeView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Windows.Forms.TreeView" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der öffentlichen `Dispose` -Methode und der <xref:System.Object.Finalize%2A> -Methode aufgerufen. `Dispose`Ruft die geschützte `Dispose(Boolean)` Methode auf, `disposing` wobei der- `true`Parameter auf festgelegt ist. <xref:System.Object.Finalize%2A>Ruft `Dispose` auf `disposing` , wobei `false`auf gesetzt ist.  
  
 Wenn der `disposing` -Parameter auf true festgelegt ist, gibt diese Methode alle Ressourcen frei, die <xref:System.Windows.Forms.TreeView> von den verwalteten Objekten, auf die dieser verweist, Diese Methode ruft die `Dispose`-Methode aller Objekte auf, auf die verwiesen wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Wenn Sie überschreiben, sollten Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in <see langword="Dispose" />einem früheren-Aufrufpunkt verworfen wurden. <see langword="Dispose(Boolean)" /> Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />von finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.  
  
Weitere Informationen zu und <see langword="Dispose" /> <see cref="M:System.Object.Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.TreeView.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Oberfläche des Steuerelements unter Verwendung eines sekundären Puffers neu gezeichnet werden soll, oder legt diesen fest. Die <see cref="P:System.Windows.Forms.TreeView.DoubleBuffered" />-Eigenschaft wirkt sich nicht auf das <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement aus.</summary>
        <value><see langword="true" />, wenn das Steuerelement über einen sekundären Puffer verfügt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Festlegen <xref:System.Windows.Forms.TreeView.DoubleBuffered%2A> der-Eigenschaft hat keine <xref:System.Windows.Forms.TreeView> Auswirkung auf das-Steuerelement. Wenn Sie Flimmern verringern möchten, wenn <xref:System.Windows.Forms.TreeView> gezeichnet wird, verwenden Sie die-Methode und die <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> - <xref:System.Windows.Forms.TreeView.EndUpdate%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewDrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeViewDrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawMode As TreeViewDrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeViewDrawMode DrawMode { System::Windows::Forms::TreeViewDrawMode get(); void set(System::Windows::Forms::TreeViewDrawMode value); };" />
      <MemberSignature Language="F#" Value="member this.DrawMode : System.Windows.Forms.TreeViewDrawMode with get, set" Usage="System.Windows.Forms.TreeView.DrawMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewDrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Modus ab, in dem das Steuerelement gezeichnet wird, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.TreeViewDrawMode" />-Werte. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Knoten eines <xref:System.Windows.Forms.TreeView> werden normalerweise vom Betriebssystem gezeichnet. Mit <xref:System.Windows.Forms.TreeView.DrawMode%2A> der-Eigenschaft können Sie das Erscheinungsbild der Knoten anpassen. Legen Sie zu diesem Zweck <xref:System.Windows.Forms.TreeView.DrawMode%2A> auf <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType> oder <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType> fest, und stellen Sie einen <xref:System.Windows.Forms.TreeView.DrawNode> Handler für das-Ereignis bereit. Dies wird als Besitzer Zeichnung bezeichnet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.TreeView> Steuerelement mithilfe der Besitzer Zeichnung angepasst wird. Das <xref:System.Windows.Forms.TreeView> -Steuerelement im Beispiel zeigt optionale Knoten Tags neben den Standard Knoten Bezeichnungen an. Knoten Tags werden mithilfe der <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> -Eigenschaft angegeben. Das <xref:System.Windows.Forms.TreeView> -Steuerelement verwendet auch benutzerdefinierte Farben, die eine benutzerdefinierte Hervorhebungs Farbe enthalten.  
  
 Sie können die meisten <xref:System.Windows.Forms.TreeView> Farben anpassen, indem Sie Farbeigenschaften festlegen, aber die Auswahl Hervorhebungs Farbe ist nicht als Eigenschaft verfügbar. Außerdem erweitert das standardmäßige Auswahl Rechteck für die Auswahl nur die Knoten Bezeichnung. Besitzer Zeichnung muss zum Zeichnen der Knoten Tags und zum Zeichnen eines angepassten Hervorhebungs Rechtecks verwendet werden, das groß genug ist, um ein Knotentag einzuschließen.  
  
 Das komplette Beispiel finden Sie im <xref:System.Windows.Forms.TreeView.DrawNode> Referenz Thema.  
  
 [!code-cpp[TreeViewOwnerDraw#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#2)]
 [!code-csharp[TreeViewOwnerDraw#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#2)]
 [!code-vb[TreeViewOwnerDraw#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Eigenschaftswert ist kein gültiger <see cref="T:System.Windows.Forms.TreeViewDrawMode" />-Wert.</exception>
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
        <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
      </Docs>
    </Member>
    <Member MemberName="DrawNode">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawTreeNodeEventHandler DrawNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawTreeNodeEventHandler DrawNode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.DrawNode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawNode As DrawTreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawTreeNodeEventHandler ^ DrawNode;" />
      <MemberSignature Language="F#" Value="member this.DrawNode : System.Windows.Forms.DrawTreeNodeEventHandler " Usage="member this.DrawNode : System.Windows.Forms.DrawTreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawTreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein <see cref="T:System.Windows.Forms.TreeView" /> gezeichnet wird und die <see cref="P:System.Windows.Forms.TreeView.DrawMode" />-Eigenschaft auf einen anderen <see cref="T:System.Windows.Forms.TreeViewDrawMode" />-Wert als <see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie dieses Ereignis, um die Darstellung von Knoten in <xref:System.Windows.Forms.TreeView> einem-Steuerelement mithilfe der Besitzer Zeichnung anzupassen.  
  
 Dieses Ereignis wird nur ausgelöst, wenn <xref:System.Windows.Forms.TreeView.DrawMode%2A> die-Eigenschaft auf <xref:System.Windows.Forms.TreeViewDrawMode> Werte von <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll> oder <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>festgelegt ist. In der folgenden Tabelle wird angegeben <xref:System.Windows.Forms.TreeNode> , wie die angepasst werden <xref:System.Windows.Forms.TreeView.DrawMode%2A> kann, wenn die-Eigenschaft auf diese Werte festgelegt ist.  
  
|DrawMode-Eigenschafts Wert|Treumode-Anpassung|  
|-----------------------------|----------------------------|  
|<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>|Der <xref:System.Windows.Forms.TreeNode> Bezeichnungs Bereich kann angepasst werden. Alle anderen <xref:System.Windows.Forms.TreeNode> Elemente werden automatisch gezeichnet.|  
|<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>|Die Darstellung des gesamten <xref:System.Windows.Forms.TreeNode> kann angepasst werden. Symbole, Kontrollkästchen, plus-und Minuszeichen und Zeilen, die die Knoten verbinden, müssen bei Bedarf manuell gezeichnet werden.|  
  
 Der Bereich, den <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=nameWithType> der Wert einnimmt, wenn er mit der von der- <xref:System.Windows.Forms.Control.Font%2A> Eigenschaft des <xref:System.Windows.Forms.TreeView> -Steuer Elements angegebenen Schriftart gezeichnet wurde, ist der Bereich, in dem auf einen Knoten geklickt werden kann, um ihn auszuwählen. Dies wird als Treffer Testbereich bezeichnet. Wenn Sie außerhalb dieses Bereichs zeichnen, sollten Sie Ihren eigenen Code bereitstellen, der einen Knoten auswählt, wenn auf seinen sichtbaren Bereich geklickt wird.  
  
 Der Treffer Testbereich entspricht der <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=nameWithType> -Eigenschaft, wenn verwendet <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>wird. Bei Verwendung <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>von umfasst die <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=nameWithType> -Eigenschaft jedoch <xref:System.Windows.Forms.TreeView>die gesamte Breite von. In diesem Fall können Sie auf den Treffer Testbereich zugreifen, indem Sie <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A?displayProperty=nameWithType> den Wert abrufen und <xref:System.Windows.Forms.TreeNode.Bounds%2A?displayProperty=nameWithType> auf seine-Eigenschaft zugreifen. Anschließend können Sie den Treffer Testbereich des Knotens innerhalb dieser Grenzen zeichnen, oder Sie können Ihren eigenen Treffer Testcode bereitstellen. Beachten Sie, dass <xref:System.Windows.Forms.TreeNode.NodeFont%2A?displayProperty=nameWithType> durch Festlegen der-Eigenschaft nicht die Größe des Treffer Testbereichs geändert wird, der mit der für den gesamten <xref:System.Windows.Forms.TreeView>angegebenen Schriftart berechnet wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.TreeView> Steuerelement mithilfe der Besitzer Zeichnung angepasst wird. Das <xref:System.Windows.Forms.TreeView> -Steuerelement im Beispiel zeigt optionale Knoten Tags neben den Standard Knoten Bezeichnungen an. Knoten Tags werden mithilfe der <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> -Eigenschaft angegeben. Das <xref:System.Windows.Forms.TreeView> -Steuerelement verwendet auch benutzerdefinierte Farben, die eine benutzerdefinierte Hervorhebungs Farbe enthalten.  
  
 Sie können die meisten <xref:System.Windows.Forms.TreeView> Farben anpassen, indem Sie Farbeigenschaften festlegen, aber die Auswahl Hervorhebungs Farbe ist nicht als Eigenschaft verfügbar. Außerdem erweitert das standardmäßige Auswahl Rechteck für die Auswahl nur die Knoten Bezeichnung. Besitzer Zeichnung muss zum Zeichnen der Knoten Tags und zum Zeichnen eines angepassten Hervorhebungs Rechtecks verwendet werden, das groß genug ist, um ein Knotentag einzuschließen.  
  
 Im Beispiel zeichnet ein Handler für das <xref:System.Windows.Forms.TreeView.DrawNode> -Ereignis die Knoten Tags und die benutzerdefinierte Auswahl Markierung manuell. Nicht ausgewählte Knoten müssen nicht angepasst werden. Hierzu wird die <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A?displayProperty=nameWithType> -Eigenschaft auf `true` festgelegt, sodass Sie vom Betriebssystem gezeichnet werden.  
  
 Außerdem bietet ein Handler für das <xref:System.Windows.Forms.Control.MouseDown> -Ereignis Treffer Tests. Standardmäßig kann ein Knoten nur ausgewählt werden, indem Sie auf den Bereich um die zugehörige Bezeichnung klicken. Der <xref:System.Windows.Forms.Control.MouseDown> Ereignishandler wählt einen Knoten aus, der auf eine beliebige Stelle in diesem Bereich oder innerhalb des Bereichs um ein Knotentag geklickt wird (sofern vorhanden).  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="treeView.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktiviert das Neuzeichnen der Strukturansicht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die <xref:System.Windows.Forms.TreeView>Leistung aufrechtzuerhalten, während Elemente nacheinander zu hinzugefügt werden, wird die <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode aufgerufen. Die <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode verhindert, dass das Steuerelement <xref:System.Windows.Forms.TreeView.EndUpdate%2A> gezeichnet wird, bis die-Methode aufgerufen wird.  
  
 Die bevorzugte Methode zum Hinzufügen von Elementen zu einem Strukturansicht-Steuerelement <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> ist die Verwendung der-Methode zum Hinzufügen eines Arrays von Struktur Knoten Elementen zu einer Strukturansicht. Wenn Sie jedoch Elemente einzeln hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode, um zu verhindern, dass das <xref:System.Windows.Forms.TreeView> Steuerelement während der Add-Vorgänge gezeichnet wird. Um zu steuern, dass das Steuerelement das Zeichnen des <xref:System.Windows.Forms.TreeView.EndUpdate%2A> Steuer Elements fortsetzen kann, wird die-Methode aufgerufen, wenn alle Struktur Knoten der Strukturansicht hinzugefügt wurden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Kundeninformationen in einem <xref:System.Windows.Forms.TreeView> -Steuerelement an. In den Stamm Struktur Knoten werden Kundennamen angezeigt, und die untergeordneten Struktur Knoten zeigen die Bestellnummern an, die den einzelnen Kunden zugewiesen sind. In diesem Beispiel werden 1.000-Kunden mit jeweils 15 Bestellungen angezeigt. Das erneute <xref:System.Windows.Forms.TreeView> Zeichnen von wird mithilfe der <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode und der <xref:System.Windows.Forms.TreeView.EndUpdate%2A> -Methode unterdrückt <xref:System.Windows.Forms.TreeView> , <xref:System.Windows.Forms.Cursor> und ein warte Vorgang wird angezeigt, während <xref:System.Windows.Forms.TreeNode> die Objekte erstellt und zeichnet. Dieses Beispiel erfordert, dass Sie über `Customer` ein-Objekt verfügen, das eine `Order` Auflistung von-Objekten enthalten kann. Außerdem ist es erforderlich, dass Sie über `MyWait.cur` <xref:System.Windows.Forms.Form>eine Cursor Datei verfügen, die im Anwendungsverzeichnis benannt ist und in der Sie eine Instanz <xref:System.Windows.Forms.TreeView> eines-Steuer Elements erstellt haben.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.BeginUpdate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeView.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert alle Strukturknoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeView.ExpandAll%2A> -Methode erweitert <xref:System.Windows.Forms.TreeNode> alle-Objekte, die alle untergeordneten Struktur Knoten enthalten <xref:System.Windows.Forms.TreeView> , die im-Steuerelement enthalten sind.  
  
> [!NOTE]
>  Der Status einer <xref:System.Windows.Forms.TreeNode> bleibt bestehen. Nehmen Sie beispielsweise an, dass Sie <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> die-Methode aufzurufen, und dann werden die einzelnen Stamm Struktur Knoten reduziert. Die untergeordneten Struktur Knoten wurden nicht reduziert und werden in Ihrem zuvor erweiterten Zustand angezeigt, wenn die Stamm Struktur Knoten erneut erweitert werden. Durch Aufrufen <xref:System.Windows.Forms.TreeView.CollapseAll%2A> der-Methode wird sichergestellt, dass alle Struktur Knoten im reduzierten Zustand angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden alle Struktur Knoten in <xref:System.Windows.Forms.TreeView> einem-Steuerelement erweitert, wenn eine <xref:System.Windows.Forms.CheckBox> aktiviert ist, <xref:System.Windows.Forms.TreeNode.FirstNode%2A> und die <xref:System.Windows.Forms.CheckBox> reduziert, wenn der gelöscht wird. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein <xref:System.Windows.Forms.CheckBox>mit einem und <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.TreeNodeCollection> Element mit einem <xref:System.Windows.Forms.TreeNode> vorhanden ist, das über mehrere-Objekte verfügt (vorzugsweise mit drei oder mehr Ebenen).  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe des Steuerelements ab oder legt diese fest.</summary>
        <value>Die Vordergrund-<see cref="T:System.Drawing.Color" /> des Steuerelements. Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultForeColor" />-Eigenschaft.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FullRowSelect : bool with get, set" Usage="System.Windows.Forms.TreeView.FullRowSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auswahlmarkierung die gesamte Breite des Strukturansicht-Steuerelements umfasst, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Auswahlmarkierung die gesamte Breite des Strukturansicht-Steuerelements umfasst, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.TreeView.FullRowSelect%2A>den Wert hat,wirdeineAuswahlMarkierungüberdiegesamteBreitederStrukturansichthinausangezeigt,anstellederBreitederStrukturKnotenBezeichnung.`true` Die <xref:System.Windows.Forms.TreeView.FullRowSelect%2A> -Eigenschaft wird ignoriert <xref:System.Windows.Forms.TreeView.ShowLines%2A> , wenn auf `true`festgelegt ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine angepasste <xref:System.Windows.Forms.TreeView>veranschaulicht. Durch das Erben der <xref:System.Windows.Forms.TreeView> -Klasse verfügt diese benutzerdefinierte Version über alle Funktionen eines typischen <xref:System.Windows.Forms.TreeView>. Das Ändern verschiedener Eigenschaftswerte im Konstruktor bietet eine eindeutige Darstellung. Da die <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> -Eigenschaft auf `false`festgelegt ist, überschreibt das angepasste Steuer <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> Element auch die-Methode, sodass Knoten erweitert und reduziert werden können, wenn auf Sie geklickt wird.  
  
 Ein Steuerelement, das auf diese Weise angepasst wird, kann in einer Organisation verwendet werden, sodass es einfach ist, eine konsistente Schnittstelle bereitzustellen, ohne dass die Steuerelement Eigenschaften in den einzelnen Projekten angegeben werden müssen.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemRenderStyles">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.OwnerDrawPropertyBag GetItemRenderStyles (System.Windows.Forms.TreeNode node, int state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Forms.OwnerDrawPropertyBag GetItemRenderStyles(class System.Windows.Forms.TreeNode node, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetItemRenderStyles(System.Windows.Forms.TreeNode,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetItemRenderStyles (node As TreeNode, state As Integer) As OwnerDrawPropertyBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::OwnerDrawPropertyBag ^ GetItemRenderStyles(System::Windows::Forms::TreeNode ^ node, int state);" />
      <MemberSignature Language="F#" Value="member this.GetItemRenderStyles : System.Windows.Forms.TreeNode * int -&gt; System.Windows.Forms.OwnerDrawPropertyBag" Usage="treeView.GetItemRenderStyles (node, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OwnerDrawPropertyBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="node">Das <see cref="T:System.Windows.Forms.TreeNode" />, für das <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> zurückgegeben werden soll.</param>
        <param name="state">Der sichtbare Zustand des <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <summary>Gibt eine <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> für den angegebenen <see cref="T:System.Windows.Forms.TreeNode" /> zurück.</summary>
        <returns>Eine <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> für den angegebenen <see cref="T:System.Windows.Forms.TreeNode" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNodeAt">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft den Strukturknoten ab, der sich an der angegebenen Position befindet.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNodeAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode GetNodeAt (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode GetNodeAt(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeAt(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeAt (pt As Point) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeNode ^ GetNodeAt(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.GetNodeAt : System.Drawing.Point -&gt; System.Windows.Forms.TreeNode" Usage="treeView.GetNodeAt pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Der <see cref="T:System.Drawing.Point" /> zum Auswerten und Abrufen des Knotens.</param>
        <summary>Ruft den Strukturknoten ab, der sich am angegebenen Punkt befindet.</summary>
        <returns>Der <see cref="T:System.Windows.Forms.TreeNode" /> am angegebenen Punkt in Koordinaten der (Client-)Strukturansicht, oder <see langword="null" />, wenn an dieser Position kein Knoten vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=nameWithType> Sie können die-und <xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=nameWithType> - <xref:System.Drawing.Point.X%2A> Koordinaten des <xref:System.Windows.Forms.Control.MouseDown> Ereignisses als-und <xref:System.Drawing.Point.Y%2A> -Werte eines neuen <xref:System.Drawing.Point>übergeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode GetNodeAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode GetNodeAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeAt (x As Integer, y As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeNode ^ GetNodeAt(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetNodeAt : int * int -&gt; System.Windows.Forms.TreeNode" Usage="treeView.GetNodeAt (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Die <see cref="P:System.Drawing.Point.X" />-Position zum Auswerten und Abrufen des Knotens.</param>
        <param name="y">Die <see cref="P:System.Drawing.Point.Y" />-Position zum Auswerten und Abrufen des Knotens.</param>
        <summary>Ruft den Strukturknoten an dem Punkt mit den angegebenen Koordinaten ab.</summary>
        <returns>Der <see cref="T:System.Windows.Forms.TreeNode" /> am angegebenen Punkt in Koordinaten der (Client-)Strukturansicht, oder <see langword="null" />, wenn an dieser Position kein Knoten vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=nameWithType> Sie können die-und <xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=nameWithType> -Koordinaten `x` des <xref:System.Windows.Forms.Control.MouseDown> Ereignisses als-und `y` -Parameter übergeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann der Benutzer nicht Stamm Struktur Knoten mithilfe eines <xref:System.Windows.Forms.ContextMenu>bearbeiten. Wenn der Benutzer mit der rechten Maustaste auf die <xref:System.Windows.Forms.TreeNode> Maus klickt, wird der an dieser Position bestimmt und in `mySelectedNode`einer Variablen mit dem Namen gespeichert. Wenn ein nicht Stamm Struktur Knoten ausgewählt wurde, wird er in einen bearbeitbaren Zustand versetzt, der es dem Benutzer ermöglicht, die Knoten Bezeichnung zu bearbeiten. Nachdem der Benutzer die Bearbeitung der Struktur Knoten Bezeichnung beendet hat, wird der neue Beschriftungs Text ausgewertet und gespeichert. In diesem Beispiel werden mehrere Zeichen im Bezeichnungs Text als ungültig eingestuft. Wenn eines der ungültigen Zeichen in der Bezeichnungs Zeichenfolge enthalten ist oder die Zeichenfolge leer ist, wird der Benutzer über den Fehler benachrichtigt, und die Bezeichnung wird an den vorherigen Text zurückgegeben.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberSignature Language="F#" Value="member this.GetNodeCount : bool -&gt; int" Usage="treeView.GetNodeCount includeSubTrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees"><see langword="true" />, um die in den Teilstrukturen enthaltenen <see cref="T:System.Windows.Forms.TreeNode" />-Elemente zu zählen, andernfalls <see langword="false" />.</param>
        <summary>Ruft die Anzahl der Strukturknoten ab und schließt optional die Strukturknoten in allen Teilstrukturen ein, die dem Strukturansicht-Steuerelement zugewiesen sind.</summary>
        <returns>Die Anzahl der Strukturknoten, optional einschließlich der Strukturknoten in allen Teilstrukturen, die dem Strukturansicht-Steuerelement zugewiesen sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `includeSubTrees`den Wert hat,istdasErgebnisdieAnzahlallerStrukturKnotenindergesamtenBaumstruktur.`true`  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.TreeView.PathSeparator%2A> <xref:System.Windows.Forms.TreeView> -Eigenschaft eines festgelegt und die Anzahl der untergeordneten Struktur Knoten angezeigt <xref:System.Windows.Forms.TreeNodeCollection> , die in der <xref:System.Windows.Forms.TreeView.SelectedNode%2A>des-Objekts enthalten sind. Der Prozentsatz des untergeordneten Struktur Knotens auf Gesamtstruktur Knoten im Strukturansicht-Steuerelement wird ebenfalls angezeigt. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein <xref:System.Windows.Forms.Button>mit einem und <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.TreeNodeCollection> Element mit einem <xref:System.Windows.Forms.TreeNode> vorhanden ist, das über mehrere-Objekte verfügt (vorzugsweise mit drei oder mehr Ebenen).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.TreeView.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der ausgewählte Strukturknoten auch dann markiert bleibt, wenn die Strukturansicht den Fokus verliert, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der ausgewählte Strukturknoten nicht markiert ist, wenn die Strukturansicht den Fokus verliert, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `false`festgelegt ist, bleiben ausgewählte Knoten <xref:System.Windows.Forms.TreeView> im-Steuerelement in einer anderen Farbe als die aktuelle Auswahl Farbe hervorgehoben, wenn das Steuerelement den <xref:System.Windows.Forms.TreeView> Fokus verliert. Sie können diese Eigenschaft verwenden, um vom Benutzer ausgewählte Elemente sichtbar zu machen, wenn der Benutzer auf ein anderes Steuerelement im Formular klickt oder zu einem anderen Fenster wechselt.  
  
> [!NOTE]
>  Wenn Sie sich mit der Barrierefreiheit Ihrer Anwendungen beschäftigen, empfiehlt es sich, die <xref:System.Windows.Forms.TreeView.HideSelection%2A> -Eigenschaft auf `false`festzulegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.TreeView.HideSelection%2A> -Eigenschaft veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, und `InitializeSelectedTreeView` nennen Sie die-Methode im Konstruktor <xref:System.Windows.Forms.Form.Load> oder Ereignishandler des Formulars.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stellt Knoteninformationen für einen bestimmten Punkt bereit.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewHitTestInfo HitTest (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeViewHitTestInfo HitTest(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (pt As Point) As TreeViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeViewHitTestInfo ^ HitTest(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Drawing.Point -&gt; System.Windows.Forms.TreeViewHitTestInfo" Usage="treeView.HitTest pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pt">Der <see cref="T:System.Drawing.Point" />, an dem Knoteninformationen abgerufen werden sollen.</param>
        <summary>Stellt Knoteninformationen für einen bestimmten Punkt bereit.</summary>
        <returns>Knoteninformationen</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob sich ein <xref:System.Windows.Forms.TreeNode> Punkt in einem befindet und wo sich der Punkt innerhalb des Knotens befindet, z. b. in der Bezeichnung oder im Bildbereich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As TreeViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.TreeViewHitTestInfo" Usage="treeView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="x">Die x-Koordinate, an der die Knoteninformationen abgerufen werden sollen.</param>
        <param name="y">Die y-Koordinate, an der die Knoteninformationen abgerufen werden sollen.</param>
        <summary>Stellt Knoteninformationen bereit, wenn x- und y-Koordinaten gegeben sind.</summary>
        <returns>Knoteninformationen</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um zu bestimmen, ob sich ein Satz von x-und y- <xref:System.Windows.Forms.TreeNode> Koordinaten in einem befindet und innerhalb des Knotens, auf dem sich der Punkt befindet, z. b. im Bezeichnungs-oder Bildbereich.  
  
   
  
## Examples  
 Der folgende Codebeispiel Code veranschaulicht, wie die <xref:System.Windows.Forms.TreeNode.Level%2A>Member, und <xref:System.Windows.Forms.TreeView.HitTest%2A> verwendet werden <xref:System.Windows.Forms.TreeViewHitTestInfo.Node%2A>. Um dieses Beispiel auszuführen, erstellen Sie ein Windows Form, das <xref:System.Windows.Forms.TreeView> einen `treeView1` mit dem Namen enthält und ihn mit mehreren Ebenen von Knoten füllt. Fügen Sie den folgenden Code in das Formular ein, <xref:System.Windows.Forms.Control.MouseDown> und ordnen `treeView1` Sie das `treeView1_MouseDown` -Ereignis von mit der-Methode in diesem Beispiel zu.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HotTracking : bool with get, set" Usage="System.Windows.Forms.TreeView.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine Strukturknotenbezeichnung als Link dargestellt wird, wenn der Mauszeiger darüber bewegt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn eine Strukturknotenbezeichnung als Link dargestellt wird, wenn der Mauszeiger darüber bewegt wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> -Eigenschaft auf `true`festgelegt ist <xref:System.Windows.Forms.TreeView.HotTracking%2A> , hat die-Eigenschaft keine Auswirkung.  
  
> [!NOTE]
>  Wenn die <xref:System.Windows.Forms.TreeView.HotTracking%2A> -Eigenschaft auf `true`festgelegt ist, übernimmt jede Struktur Knoten Bezeichnung die Darstellung eines Links, während der Mauszeiger darüber bewegt wird. Der <xref:System.Drawing.FontStyle.Underline> Schriftart Stil wird auf das <xref:System.Drawing.Font> angewendet, und <xref:System.Windows.Forms.Control.ForeColor%2A> wird auf Blau festgelegt, damit die Bezeichnung als Link angezeigt wird. Die Darstellung wird nicht von den Internet Einstellungen des Betriebssystems des Benutzers gesteuert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine angepasste <xref:System.Windows.Forms.TreeView>veranschaulicht. Durch das Erben der <xref:System.Windows.Forms.TreeView> -Klasse verfügt diese benutzerdefinierte Version über alle Funktionen eines typischen <xref:System.Windows.Forms.TreeView>. Das Ändern verschiedener Eigenschaftswerte im Konstruktor bietet eine eindeutige Darstellung. Da die <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> -Eigenschaft auf `false`festgelegt ist, überschreibt das angepasste Steuer <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> Element auch die-Methode, sodass Knoten beim Klicken erweitert und reduziert werden können.  
  
 Ein Steuerelement, das auf diese Weise angepasst wird, kann in einer Organisation verwendet werden, sodass es einfach ist, eine konsistente Schnittstelle bereitzustellen, ohne dass die Steuerelement Eigenschaften in den einzelnen Projekten angegeben werden müssen.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.TreeView.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Indexwert des Standardbilds in der Bildliste ab, das von den Strukturknoten angezeigt wird, oder legt diesen fest.</summary>
        <value>Ein nullbasierter Index, der die Position eines <see cref="T:System.Drawing.Image" /> in einer <see cref="T:System.Windows.Forms.ImageList" /> darstellt. Der Standardwert ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeView.ImageIndex%2A> Wert ist der Index <xref:System.Drawing.Image> von, der in der <xref:System.Windows.Forms.ImageList> -Eigenschaft gespeichert <xref:System.Windows.Forms.TreeView.ImageList%2A> ist, die der-Eigenschaft zugewiesen ist.  
  
 Die <xref:System.Windows.Forms.TreeView.ImageKey%2A> Eigenschaften <xref:System.Windows.Forms.TreeView.ImageIndex%2A> und schließen sich gegenseitig aus. Wenn ein Wert festgelegt ist, wird der andere ignoriert. Wenn Sie festlegen <xref:System.Windows.Forms.TreeView.ImageKey%2A>, <xref:System.Windows.Forms.TreeView.ImageIndex%2A> wird automatisch auf-1 festgelegt. Wenn Sie festlegen <xref:System.Windows.Forms.TreeView.ImageIndex%2A>, <xref:System.Windows.Forms.TreeView.ImageKey%2A> wird von automatisch eine leere Zeichenfolge ("") festgelegt.  
  
> [!NOTE]
>  Beim Festlegen der <xref:System.Windows.Forms.TreeView.ImageIndex%2A> -Eigenschaft zur Laufzeit wird das <xref:System.Windows.Forms.TreeView> Handle neu erstellt (siehe <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>), um die Darstellung des Steuer Elements zu aktualisieren. Dies bewirkt, dass alle Struktur Knoten reduziert werden, mit Ausnahme der ausgewählten <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein erstellt und <xref:System.Windows.Forms.ImageList> einem- <xref:System.Windows.Forms.TreeView> Steuerelement zugewiesen, <xref:System.Windows.Forms.TreeView> und das <xref:System.Windows.Forms.TreeNode> -Steuerelement wird mit-Objekten gefüllt. Den Struktur Knoten werden Bilder aus dem zugewiesen <xref:System.Windows.Forms.ImageList> , die angezeigt werden, wenn Sie in einem ausgewählten oder nicht ausgewählten Zustand angezeigt werden. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein enthält <xref:System.Windows.Forms.TreeView>, das eine <xref:System.Collections.ArrayList> enthält, `Customer` und eine, die `Order` -Objekte enthält, die jeweils-Objekte enthalten. Außerdem wird davon ausgegangen, dass `Customer` das `Order` -Objekt und das-Objekt definiert sind.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Index ist kleiner als 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.TreeView.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Taste des Standardbilds für jeden Knoten im <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement ab, wenn dieser nicht ausgewählt ist, oder ruft diese Taste ab.</summary>
        <value>Die Taste des Standardbilds, das für das <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement jedes Knotens angezeigt wird, wenn der Knoten nicht ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei <xref:System.Windows.Forms.TreeView.ImageKey%2A> der Eigenschaft wird die Groß-/Kleinschreibung nicht beachtet  
  
 Wenn für <xref:System.Windows.Forms.TreeNode> einen kein Bild festgelegt ist, wird das von der <xref:System.Windows.Forms.TreeView.ImageKey%2A> -Eigenschaft angegebene Bild angezeigt, wenn der Knoten nicht ausgewählt ist. Wenn der Knoten ausgewählt ist, wird das erste Element in <xref:System.Windows.Forms.ImageList> der angezeigt.  
  
 Die <xref:System.Windows.Forms.TreeView.ImageKey%2A> Eigenschaften <xref:System.Windows.Forms.TreeView.ImageIndex%2A> und schließen sich gegenseitig aus, d. h., wenn eine festgelegt ist, wird die andere ignoriert. Wenn Sie die <xref:System.Windows.Forms.TreeView.ImageKey%2A> -Eigenschaft festlegen, <xref:System.Windows.Forms.TreeView.ImageIndex%2A> wird die-Eigenschaft automatisch auf-1 festgelegt. Wenn Sie die <xref:System.Windows.Forms.TreeView.ImageIndex%2A> -Eigenschaft festlegen, wird die <xref:System.Windows.Forms.TreeView.ImageKey%2A> automatisch auf eine leere Zeichenfolge ("") festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ ImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.TreeView.ImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Forms.ImageList" /> ab, die die von den Strukturknoten verwendeten <see cref="T:System.Drawing.Image" />-Objekte enthält, oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Windows.Forms.ImageList" /> mit den von den Strukturknoten verwendeten <see cref="T:System.Drawing.Image" />-Objekten. Der Standardwert ist <see langword="null" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der <xref:System.Windows.Forms.ImageList> -Eigenschafts Wert etwas anderes `null`als ist, zeigen alle-Struktur Knoten <xref:System.Drawing.Image> den ersten an <xref:System.Windows.Forms.ImageList>, der in der gespeichert ist. Durch Festlegen der <xref:System.Windows.Forms.TreeView.ImageIndex%2A> -Eigenschaft und der- <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> Eigenschaft können Sie angeben, welche Bilder aus der Liste für ausgewählte und nicht ausgewählte Knoten angezeigt werden. Einzelne <xref:System.Windows.Forms.TreeNode> Objekte können angeben, welches Bild angezeigt wird, indem <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> Sie <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> die Eigenschaften und festlegen. Durch diese individuellen Einstellungen werden die Einstellungen in den entsprechenden <xref:System.Windows.Forms.TreeView> Eigenschaften überschrieben.  
  
> [!NOTE]
>  In der .NET Framework Version 1,1 gibt es ein Problem, das verhindert, dass Bilder auf <xref:System.Windows.Forms.TreeView> Knoten angezeigt werden, wenn <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>die Anwendung aufruft. Um dieses Problem zu umgehen, können <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> Sie in `Main` Ihrer- <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>Methode sofort nach dem-Befehl aufzurufen. Dieses Problem wurde in [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]behoben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein erstellt und <xref:System.Windows.Forms.ImageList> einem- <xref:System.Windows.Forms.TreeView> Steuerelement zugewiesen, <xref:System.Windows.Forms.TreeView> und das <xref:System.Windows.Forms.TreeNode> -Steuerelement wird mit-Objekten gefüllt. Den Struktur Knoten werden Bilder aus dem zugewiesen <xref:System.Windows.Forms.ImageList> , die angezeigt werden, wenn Sie in einem ausgewählten oder nicht ausgewählten Zustand angezeigt werden. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein enthält <xref:System.Windows.Forms.TreeView>, das eine <xref:System.Collections.ArrayList> enthält, `Customer` und eine, die `Order` -Objekte enthält, die jeweils-Objekte enthalten.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Windows.Forms.TreeView.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand für das Einrücken der einzelnen Ebenen von untergeordneten Strukturknoten ab oder legt diesen fest.</summary>
        <value>Der Abstand für das Einrücken der einzelnen Ebenen von untergeordneten Strukturknoten (in Pixel). Der Standardwert ist 19.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf den Wert-1 festgelegt wird, wird keine Ausnahme ausgelöst, wenn der Wert noch nicht geändert wurde. Dies liegt daran, dass das-Steuerelement den Wert-1 als internen Standardwert verwendet, bevor das Steuerelement Handle erstellt wurde. Dieser interne Standardwert bewirkt, dass das umschließende Steuerelement seinen eigenen Standardwert von 19 zurückgibt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine angepasste <xref:System.Windows.Forms.TreeView>veranschaulicht. Durch das Erben der <xref:System.Windows.Forms.TreeView> -Klasse verfügt diese benutzerdefinierte Version über alle Funktionen eines typischen <xref:System.Windows.Forms.TreeView>. Das Ändern verschiedener Eigenschaftswerte im Konstruktor bietet eine eindeutige Darstellung. Da die <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> -Eigenschaft auf false festgelegt ist, überschreibt das angepasste Steuer <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> Element auch die-Methode, sodass Knoten beim Klicken erweitert und reduziert werden können.  
  
 Ein Steuerelement, das auf diese Weise angepasst wird, kann in einer Organisation verwendet werden, sodass es einfach ist, eine konsistente Schnittstelle bereitzustellen, ohne dass die Steuerelement Eigenschaften in den einzelnen Projekten angegeben werden müssen.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der zugewiesene Wert ist kleiner als 0.  
  
 - oder -  
  
 Der zugewiesene Wert ist größer als 32.000.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="treeView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Einer der Tastenwerte.</param>
        <summary>Bestimmt, ob es sich bei der angegebenen Taste um eine normale Eingabetaste handelt oder um eine Sondertaste, für die eine Vorverarbeitung erforderlich ist.</summary>
        <returns><see langword="true" />, wenn die angegebene Taste eine normale Taste ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Benutzer einen Struktur Knoten bearbeitet, behandelt das <xref:System.Windows.Forms.TreeView> Steuerelement Schlüssel wie Enter, ESC, Home und End als EINGABETASTE.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberSignature Language="F#" Value="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " Usage="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer mit dem Ziehen eines Knotens beginnt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Drag & Drop-Vorgänge in einem <xref:System.Windows.Forms.TreeView> -Steuerelement aktiviert werden. In diesem Beispiel kann jeder Knoten auf einen anderen Knoten gezogen werden, der kein Nachfolger des gezogenen Knotens ist. Der gezogene Knoten, der alle untergeordneten Knoten enthält, wird zum untergeordneten Knoten des Ziel Knotens. Wenn die linke Maustaste verwendet wird, wird der gezogene Knoten auf den Zielknoten verschoben. Wenn die Rechte Maustaste verwendet wird, wird der gezogene Knoten auf den Zielknoten kopiert.  
  
 [!code-cpp[TreeViewDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewDragDrop/CPP/treeviewdragdrop.cpp#1)]
 [!code-csharp[TreeViewDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewDragDrop/CS/treeviewdragdrop.cs#1)]
 [!code-vb[TreeViewDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewDragDrop/VB/treeviewdragdrop.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ItemHeight : int with get, set" Usage="System.Windows.Forms.TreeView.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Höhe des jeweiligen Strukturknotens im Strukturansicht-Steuerelement ab oder legt diese fest.</summary>
        <value>Die Höhe des jeweiligen Strukturknotens in der Strukturansicht in Pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Elementhöhe auf einen Wert festgelegt ist, der größer ist als die Höhe des Strukturansicht- <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A?displayProperty=nameWithType> Steuer Elements, werden beim Aufrufen der-Methode unerwartete Ergebnisse ausgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Größe <xref:System.Windows.Forms.TreeNode.NodeFont%2A> auf die angegebene Größe geändert und der <xref:System.Windows.Forms.TreeView.ItemHeight%2A> des übergeordneten <xref:System.Windows.Forms.TreeView> Steuer Elements des Struktur Knotens angepasst. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein <xref:System.Windows.Forms.TreeView> -Steuerelement mit einem- <xref:System.Windows.Forms.TreeNode> Steuerelement mit einer <xref:System.Windows.Forms.ComboBox> Auflistung von-Objekten und eine-Schnittstelle mit Schrift Graden verfügen.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der zugewiesene Wert ist kleiner als 1.  
  
- oder - 
Der zugewiesene Wert ist größer als der <see cref="F:System.Int16.MaxValue" />-Wert.</exception>
        <altmember cref="F:System.Int16.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelEdit : bool with get, set" Usage="System.Windows.Forms.TreeView.LabelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Bezeichnungstext der Strukturknoten bearbeitet werden kann, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Bezeichnungstext der Strukturknoten bearbeitet werden kann, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeNode.BeginEdit%2A> -Methode funktioniert nur, <xref:System.Windows.Forms.TreeView.LabelEdit%2A> wenn die `true`-Eigenschaft ist. Wenn <xref:System.Windows.Forms.TreeView.LabelEdit%2A> der `false` Wert ist, wenn Sie versuchen, die Bezeichnung zu bearbeiten, wird eine Ausnahme ausgelöst, und der Struktur Knoten wird nicht in einen bearbeitbaren Zustand versetzt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann der Benutzer nicht Stamm Struktur Knoten mithilfe eines <xref:System.Windows.Forms.ContextMenu>bearbeiten. Wenn der Benutzer mit der rechten Maustaste auf die <xref:System.Windows.Forms.TreeNode> Maus klickt, wird der an dieser Position bestimmt und in `mySelectedNode`einer Variablen mit dem Namen gespeichert. Wenn ein nicht Stamm Struktur Knoten ausgewählt wurde, wird er in einen bearbeitbaren Zustand versetzt, der es dem Benutzer ermöglicht, die Knoten Bezeichnung zu bearbeiten. Nachdem der Benutzer die Bearbeitung der Struktur Knoten Bezeichnung beendet hat, wird der neue Beschriftungs Text ausgewertet und gespeichert. In diesem Beispiel werden mehrere Zeichen im Bezeichnungs Text als ungültig eingestuft. Wenn eines der ungültigen Zeichen in der Bezeichnungs Zeichenfolge enthalten ist oder die Zeichenfolge leer ist, wird der Benutzer über den Fehler benachrichtigt, und die Bezeichnung wird an den vorherigen Text zurückgegeben.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeView.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Farbe der Linien ab, die die Knoten des <see cref="T:System.Windows.Forms.TreeView" />-Steuerelements verbinden, oder legt die Farbe fest.</summary>
        <value>Die <see cref="T:System.Drawing.Color" /> der Verbindungslinien zwischen den Strukturknoten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird das Festlegen <xref:System.Windows.Forms.TreeNode> der Linien Farbe veranschaulicht. Fügen Sie den Code in ein Windows Form ein, um dieses Beispiel auszuführen. Ruft `InitializeLineTreeView` den-Konstruktor oder <xref:System.Windows.Forms.Form.Load> -Ereignishandler des Formulars auf.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeMouseClick As TreeNodeMouseClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeNodeMouseClickEventHandler ^ NodeMouseClick;" />
      <MemberSignature Language="F#" Value="member this.NodeMouseClick : System.Windows.Forms.TreeNodeMouseClickEventHandler " Usage="member this.NodeMouseClick : System.Windows.Forms.TreeNodeMouseClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer mit der Maus auf einen <see cref="T:System.Windows.Forms.TreeNode" /> klickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn der Benutzer mit der Maus auf einen Teil eines Struktur Knotens klickt, einschließlich des**+** Plus Zeichens () oder**-** Minuszeichens (), das angibt, ob der Knoten reduziert oder erweitert ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Windows.Forms.TreeView.NodeMouseClick> -Ereignis behandelt wird.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeMouseDoubleClick As TreeNodeMouseClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeNodeMouseClickEventHandler ^ NodeMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.NodeMouseDoubleClick : System.Windows.Forms.TreeNodeMouseClickEventHandler " Usage="member this.NodeMouseDoubleClick : System.Windows.Forms.TreeNodeMouseClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer mit der Maus auf einen <see cref="T:System.Windows.Forms.TreeNode" /> doppelklickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn der Benutzer mit der Maus auf einen beliebigen Teil eines Struktur Knotens doppelklickt, einschließlich des Plus Zeichens (+) oder Minuszeichens (-), das angibt, ob der Knoten reduziert oder erweitert ist.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Windows.Forms.TreeView.NodeMouseDoubleClick> -Ereignis behandelt wird und wie <xref:System.Windows.Forms.TreeNodeMouseClickEventArgs>verwendet wird. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Windows Form ein, <xref:System.Windows.Forms.TreeView> das `treeView1`einen mit dem Namen enthält. <xref:System.Windows.Forms.TreeView.NodeMouseDoubleClick> `c:\` `treeView1_NodeMouseDoubleClick` `treeView1` Füllen Sie die Namen der Dateien, die sich im Verzeichnis des Systems befinden, in dem das Beispiel ausgeführt wird, und ordnen Sie das-Ereignis von mit der-Methode in diesem Beispiel zu. `treeView1`  Dieses Beispiel erfordert, dass der Benutzer über Administratorrechte auf dem Computer verfügt, auf dem das Beispiel ausgeführt wird.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseHoverEventHandler NodeMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseHoverEventHandler NodeMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeMouseHover As TreeNodeMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeNodeMouseHoverEventHandler ^ NodeMouseHover;" />
      <MemberSignature Language="F#" Value="member this.NodeMouseHover : System.Windows.Forms.TreeNodeMouseHoverEventHandler " Usage="member this.NodeMouseHover : System.Windows.Forms.TreeNodeMouseHoverEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn mit dem Mauszeiger auf einen <see cref="T:System.Windows.Forms.TreeNode" /> gezeigt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn sich der Mauszeiger über einem <xref:System.Windows.Forms.TreeNode>befindet, <xref:System.Windows.Forms.TreeView.NodeMouseHover> tritt das Ereignis vor dem <xref:System.Windows.Forms.Control.MouseHover> -Ereignis auf.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TreeView.NodeMouseHover> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.TreeView> des `TreeView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TreeView.NodeMouseHover> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#634](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#634)]
 [!code-vb[System.Windows.Forms.EventExamples#634](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#634)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Windows.Forms.TreeNodeCollection" Usage="System.Windows.Forms.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der Strukturknoten ab, die dem Strukturansicht-Steuerelement zugewiesen sind, oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.TreeNodeCollection" />, die die Strukturknoten darstellt, die dem Strukturansicht-Steuerelement zugewiesen sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeView.Nodes%2A> -Eigenschaft enthält eine Auflistung <xref:System.Windows.Forms.TreeNode> von-Objekten, von denen jede <xref:System.Windows.Forms.TreeNode.Nodes%2A> über eine-Eigenschaft verfügt, <xref:System.Windows.Forms.TreeNodeCollection>die eine eigene-Eigenschaft enthalten kann. Diese Schachtelung von Struktur Knoten kann die Navigation in einer Baumstruktur erschweren, aber <xref:System.Windows.Forms.TreeNode.FullPath%2A> die-Eigenschaft erleichtert die Bestimmung ihrer Position innerhalb der Struktur.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Kundeninformationen in einem <xref:System.Windows.Forms.TreeView> -Steuerelement an. In den Stamm Struktur Knoten werden Kundennamen angezeigt, und die untergeordneten Struktur Knoten zeigen die Bestellnummern an, die den einzelnen Kunden zugewiesen sind. In diesem Beispiel werden 1.000-Kunden mit jeweils 15 Bestellungen angezeigt. Das erneute <xref:System.Windows.Forms.TreeView> Zeichnen von wird mithilfe der <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode und der <xref:System.Windows.Forms.TreeView.EndUpdate%2A> -Methode unterdrückt <xref:System.Windows.Forms.TreeView> , <xref:System.Windows.Forms.Cursor> und ein warte Vorgang wird angezeigt, während <xref:System.Windows.Forms.TreeNode> die Objekte erstellt und zeichnet. Dieses Beispiel erfordert, dass Sie über `Customer` ein-Objekt verfügen, das eine `Order` Auflistung von-Objekten enthalten kann. Außerdem ist es erforderlich, dass Sie eine Instanz eines <xref:System.Windows.Forms.TreeView> -Steuer Elements auf einem <xref:System.Windows.Forms.Form>erstellt haben.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterCheck (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterCheck(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterCheck (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterCheck(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterCheck : System.Windows.Forms.TreeViewEventArgs -&gt; unit&#xA;override this.OnAfterCheck : System.Windows.Forms.TreeViewEventArgs -&gt; unit" Usage="treeView.OnAfterCheck e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeViewEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.AfterCheck" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnAfterCheck%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnAfterCollapse (System.Windows.Forms.TreeViewEventArgs e);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnAfterCollapse(class System.Windows.Forms.TreeViewEventArgs e) cil managed" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnAfterCollapse (e As TreeViewEventArgs)" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnAfterCollapse(System::Windows::Forms::TreeViewEventArgs ^ e);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member OnAfterCollapse : System.Windows.Forms.TreeViewEventArgs -&gt; unit&#xA;override this.OnAfterCollapse : System.Windows.Forms.TreeViewEventArgs -&gt; unit" Usage="treeView.OnAfterCollapse e" />
      <MemberSignature Language="C#" Value="protected virtual void OnAfterCollapse (System.Windows.Forms.TreeViewEventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterCollapse(class System.Windows.Forms.TreeViewEventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterCollapse (e As TreeViewEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterCollapse(System::Windows::Forms::TreeViewEventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeViewEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.AfterCollapse" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnAfterCollapse%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterExpand">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterExpand (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterExpand(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterExpand (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterExpand(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterExpand : System.Windows.Forms.TreeViewEventArgs -&gt; unit&#xA;override this.OnAfterExpand : System.Windows.Forms.TreeViewEventArgs -&gt; unit" Usage="treeView.OnAfterExpand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeViewEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.AfterExpand" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnAfterExpand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.NodeLabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.NodeLabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As NodeLabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::NodeLabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterLabelEdit : System.Windows.Forms.NodeLabelEditEventArgs -&gt; unit&#xA;override this.OnAfterLabelEdit : System.Windows.Forms.NodeLabelEditEventArgs -&gt; unit" Usage="treeView.OnAfterLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NodeLabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnAfterLabelEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterSelect (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterSelect(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterSelect (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterSelect(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterSelect : System.Windows.Forms.TreeViewEventArgs -&gt; unit&#xA;override this.OnAfterSelect : System.Windows.Forms.TreeViewEventArgs -&gt; unit" Usage="treeView.OnAfterSelect e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeViewEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.AfterSelect" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeCheck (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeCheck(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeCheck (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeCheck(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeCheck : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit&#xA;override this.OnBeforeCheck : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit" Usage="treeView.OnBeforeCheck e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.BeforeCheck" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnBeforeCheck%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnBeforeCollapse (System.Windows.Forms.TreeViewCancelEventArgs e);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnBeforeCollapse(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnBeforeCollapse (e As TreeViewCancelEventArgs)" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnBeforeCollapse(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeCollapse : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit&#xA;override this.OnBeforeCollapse : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit" Usage="treeView.OnBeforeCollapse e" />
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeCollapse (System.Windows.Forms.TreeViewCancelEventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeCollapse(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeCollapse (e As TreeViewCancelEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeCollapse(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnBeforeCollapse%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeExpand">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeExpand (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeExpand(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeExpand (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeExpand(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeExpand : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit&#xA;override this.OnBeforeExpand : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit" Usage="treeView.OnBeforeExpand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.BeforeExpand" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnBeforeExpand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.NodeLabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.NodeLabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As NodeLabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::NodeLabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeLabelEdit : System.Windows.Forms.NodeLabelEditEventArgs -&gt; unit&#xA;override this.OnBeforeLabelEdit : System.Windows.Forms.NodeLabelEditEventArgs -&gt; unit" Usage="treeView.OnBeforeLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NodeLabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnBeforeLabelEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeSelect (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeSelect(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeSelect (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeSelect(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeSelect : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit&#xA;override this.OnBeforeSelect : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit" Usage="treeView.OnBeforeSelect e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.BeforeSelect" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnBeforeSelect%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawNode">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawNode (System.Windows.Forms.DrawTreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawNode(class System.Windows.Forms.DrawTreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawNode (e As DrawTreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawNode(System::Windows::Forms::DrawTreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawNode : System.Windows.Forms.DrawTreeNodeEventArgs -&gt; unit&#xA;override this.OnDrawNode : System.Windows.Forms.DrawTreeNodeEventArgs -&gt; unit" Usage="treeView.OnDrawNode e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawTreeNodeEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.DrawNode" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnDrawNode%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
        <altmember cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="treeView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Überschreibt <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnHandleCreated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" /></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="treeView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Überschreibt <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnHandleDestroyed%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" /></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit&#xA;override this.OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit" Usage="treeView.OnItemDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ItemDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.ItemDrag" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnItemDrag%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.ItemDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="treeView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> -Eigenschaft auf `true` festgelegt ist <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> und die-Eigenschaft `false`auf fest <xref:System.Windows.Forms.TreeView.OnKeyDown%2A> gelegt ist, wechselt die-Methode zwischen dem Aktivieren und Deaktivieren des Kontrollkästchens, wenn der Benutzer die LEERTASTE drückt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnKeyDown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="treeView.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyPressEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.KeyPress" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> -Eigenschaft auf `false`festgelegt ist <xref:System.Windows.Forms.TreeView> , wählt das Steuer <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Element das erste Element aus, das mit dem Wert der `e`-Eigenschaft von beginnt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnKeyPress%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="treeView.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Überschreibt <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnKeyUp%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="treeView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseHover" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeView.OnMouseHover%2A> Methode führt einen Treffer Test aus, um zu überprüfen, ob sich <xref:System.Windows.Forms.TreeNode>die Maus über einem befindet, und löst <xref:System.Windows.Forms.TreeView.NodeMouseHover> das-Ereignis aus, wenn dies der Fall ist.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnMouseHover%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="treeView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseLeave" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnMouseLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseClick (System.Windows.Forms.TreeNodeMouseClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseClick(class System.Windows.Forms.TreeNodeMouseClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNodeMouseClick (e As TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNodeMouseClick(System::Windows::Forms::TreeNodeMouseClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNodeMouseClick : System.Windows.Forms.TreeNodeMouseClickEventArgs -&gt; unit&#xA;override this.OnNodeMouseClick : System.Windows.Forms.TreeNodeMouseClickEventArgs -&gt; unit" Usage="treeView.OnNodeMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseClickEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.NodeMouseClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnNodeMouseClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseDoubleClick (System.Windows.Forms.TreeNodeMouseClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseDoubleClick(class System.Windows.Forms.TreeNodeMouseClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNodeMouseDoubleClick (e As TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNodeMouseDoubleClick(System::Windows::Forms::TreeNodeMouseClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNodeMouseDoubleClick : System.Windows.Forms.TreeNodeMouseClickEventArgs -&gt; unit&#xA;override this.OnNodeMouseDoubleClick : System.Windows.Forms.TreeNodeMouseClickEventArgs -&gt; unit" Usage="treeView.OnNodeMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseClickEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseHover (System.Windows.Forms.TreeNodeMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseHover(class System.Windows.Forms.TreeNodeMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNodeMouseHover (e As TreeNodeMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNodeMouseHover(System::Windows::Forms::TreeNodeMouseHoverEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNodeMouseHover : System.Windows.Forms.TreeNodeMouseHoverEventArgs -&gt; unit&#xA;override this.OnNodeMouseHover : System.Windows.Forms.TreeNodeMouseHoverEventArgs -&gt; unit" Usage="treeView.OnNodeMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseHoverEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Forms.TreeNodeMouseHoverEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.NodeMouseHover" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnNodeMouseHover%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="treeView.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.TreeView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen dem Inhalt des <see cref="T:System.Windows.Forms.TreeView" />-Steuerelements und seinen Rändern ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.Padding" />, das den Abstand zwischen den Rändern eines Steuerelements und seinem Inhalt angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.TreeView.Padding" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn <see cref="T:System.Windows.Forms.TreeView" /> gezeichnet wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : string with get, set" Usage="System.Windows.Forms.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("\")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die für den Pfad des Strukturknotens verwendete Trennzeichenfolge ab oder legt diese fest.</summary>
        <value>Die Trennzeichenfolge, die von der <see cref="P:System.Windows.Forms.TreeNode.FullPath" />-Eigenschaft des Strukturknotens verwendet wird. Der Standardwert ist der umgekehrte Schrägstrich\\().</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Struktur Knoten Pfad besteht aus einem Satz von Struktur Knoten Bezeichnungen, die <xref:System.Windows.Forms.TreeView.PathSeparator%2A> durch Trennzeichen folgen getrennt sind. Die Bezeichnungen liegen zwischen dem Stamm Struktur Knoten und dem gewünschten Struktur Knoten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.TreeView.PathSeparator%2A> <xref:System.Windows.Forms.TreeView> -Eigenschaft eines festgelegt und die Anzahl der untergeordneten Struktur Knoten angezeigt <xref:System.Windows.Forms.TreeNodeCollection> , die in der <xref:System.Windows.Forms.TreeView.SelectedNode%2A>des-Objekts enthalten sind. Der Prozentsatz des untergeordneten Struktur Knotens auf Gesamtstruktur Knoten im Strukturansicht-Steuerelement wird ebenfalls angezeigt. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein <xref:System.Windows.Forms.Button>mit einem und <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.TreeNodeCollection> Element mit einem <xref:System.Windows.Forms.TreeNode> vorhanden ist, das über mehrere-Objekte verfügt (vorzugsweise mit drei oder mehr Ebenen).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FullPath" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.TreeView.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Inhalt der <see cref="T:System.Windows.Forms.TreeView" /> von rechts nach links angeordnet wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn der Inhalt des Steuerelements von rechts nach links angeordnet werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A> -Eigenschaft ist für die Verwendung mit internationalen Anwendungen vorgesehen, in denen die Sprache von rechts nach links gelesen wird. Wenn Sie und <xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A> <xref:System.Windows.Forms.Control.RightToLeft%2A> auf`true` den Inhalt des Steuer Elements festgelegt haben und Text von rechts nach links angeordnet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.TreeView.RightToLeftLayout" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.TreeView.RightToLeftLayoutChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.TreeView> des `TreeView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.TreeView.RightToLeftLayoutChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#639](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#639)]
 [!code-vb[System.Windows.Forms.EventExamples#639](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#639)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scrollable : bool with get, set" Usage="System.Windows.Forms.TreeView.Scrollable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Strukturansicht-Steuerelement nach Bedarf Bildlaufleisten angezeigt werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn im Strukturansicht-Steuerelement bei Bedarf Bildlaufleisten angezeigt werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `true`festgelegt ist, werden Scrollleisten auf dem <xref:System.Windows.Forms.TreeView> angezeigt, wenn sich eine <xref:System.Windows.Forms.TreeNode> außerhalb des Client Bereichs des Steuer Elements befindet.  
  
> [!NOTE]
>  Beim Festlegen der <xref:System.Windows.Forms.TreeView.Scrollable%2A> -Eigenschaft zur Laufzeit wird das <xref:System.Windows.Forms.TreeView> Handle neu erstellt (siehe <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>), um die Darstellung des Steuer Elements zu aktualisieren. Dies bewirkt, dass alle Struktur Knoten reduziert werden, mit Ausnahme der ausgewählten <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.BorderStyle> -Enumeration und <xref:System.Windows.Forms.TreeView.BorderStyle%2A>die <xref:System.Windows.Forms.TreeView.ShowLines%2A>Eigenschaften <xref:System.Windows.Forms.TreeView.Scrollable%2A>, <xref:System.Windows.Forms.TreeView.HideSelection%2A> , <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> und verwendet werden. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, und `InitializeTreeView` nennen Sie die-Methode im Konstruktor `Load` oder in der-Methode des Formulars.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageIndex : int with get, set" Usage="System.Windows.Forms.TreeView.SelectedImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Indexwert des Bilds in der Bildliste ab, das für einen ausgewählten Strukturknoten angezeigt wird, oder legt diesen fest.</summary>
        <value>Ein nullbasierter Indexwert, der die Position eines <see cref="T:System.Drawing.Image" /> in einer <see cref="T:System.Windows.Forms.ImageList" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> Wert ist der Index <xref:System.Drawing.Image> von, der in der <xref:System.Windows.Forms.ImageList> -Eigenschaft gespeichert <xref:System.Windows.Forms.TreeView.ImageList%2A> ist, die der-Eigenschaft zugewiesen ist.  
  
> [!NOTE]
>  Beim Festlegen der <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> -Eigenschaft zur Laufzeit wird das <xref:System.Windows.Forms.TreeView> Handle neu erstellt (siehe <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>), um die Darstellung des Steuer Elements zu aktualisieren. Dies bewirkt, dass alle Struktur Knoten reduziert werden, mit Ausnahme der <xref:System.Windows.Forms.TreeNode>ausgewählten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein erstellt und <xref:System.Windows.Forms.ImageList> einem- <xref:System.Windows.Forms.TreeView> Steuerelement zugewiesen, <xref:System.Windows.Forms.TreeView> und das <xref:System.Windows.Forms.TreeNode> -Steuerelement wird mit-Objekten gefüllt. Den Struktur Knoten werden Bilder aus dem zugewiesen <xref:System.Windows.Forms.ImageList> , die angezeigt werden, wenn Sie in einem ausgewählten oder nicht ausgewählten Zustand angezeigt werden. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein enthält <xref:System.Windows.Forms.TreeView>, das eine <xref:System.Collections.ArrayList> enthält, `Customer` und eine, die `Order` -Objekte enthält, die jeweils-Objekte enthalten. Außerdem wird davon ausgegangen, dass `Customer` das `Order` -Objekt und das-Objekt definiert sind.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der dem Index zugewiesene Wert ist kleiner als 0.</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageKey : string with get, set" Usage="System.Windows.Forms.TreeView.SelectedImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Taste des Standardbilds ab, das angezeigt wird, wenn ein <see cref="T:System.Windows.Forms.TreeNode" /> ausgewählt ist.</summary>
        <value>Die Taste des Standardbilds, das angezeigt wird, wenn <see cref="T:System.Windows.Forms.TreeNode" /> ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn für <xref:System.Windows.Forms.TreeNode> einen kein ausgewähltes Bild festgelegt ist, wird das von der <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> -Eigenschaft angegebene Bild angezeigt, wenn der Knoten nicht ausgewählt ist.  
  
 Die <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> Eigenschaften <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> und schließen sich gegenseitig aus. Wenn ein Wert festgelegt ist, wird der andere ignoriert. Wenn Sie die <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> -Eigenschaft festlegen, <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> wird die-Eigenschaft automatisch auf-1 festgelegt. Wenn Sie die <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> -Eigenschaft festlegen, wird die <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> automatisch auf eine leere Zeichenfolge ("") festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode SelectedNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ SelectedNode { System::Windows::Forms::TreeNode ^ get(); void set(System::Windows::Forms::TreeNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNode : System.Windows.Forms.TreeNode with get, set" Usage="System.Windows.Forms.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den derzeit im Strukturansicht-Steuerelement ausgewählten Strukturknoten ab oder legt diesen fest.</summary>
        <value>Der derzeit im Strukturansicht-Steuerelement ausgewählte <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn derzeit <xref:System.Windows.Forms.TreeNode> kein ausgewählt ist, ist <xref:System.Windows.Forms.TreeView.SelectedNode%2A> `null`die-Eigenschaft.  
  
 Wenn Sie diese Eigenschaft festlegen, wird der angegebene Knoten in die Ansicht gescrollt, und alle übergeordneten Knoten werden so erweitert, dass der angegebene Knoten sichtbar ist.  
  
 Wenn der übergeordnete Knoten oder ein beliebiger Vorgänger Knoten des ausgewählten Knotens entweder Programm gesteuert oder durch eine Benutzeraktion reduziert wird, wird der reduzierte Knoten zum ausgewählten Knoten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.TreeView.PathSeparator%2A> <xref:System.Windows.Forms.TreeView> -Eigenschaft eines festgelegt und die Anzahl der untergeordneten Struktur Knoten angezeigt <xref:System.Windows.Forms.TreeNodeCollection> , die in der <xref:System.Windows.Forms.TreeView.SelectedNode%2A>des-Objekts enthalten sind. Der Prozentsatz des untergeordneten Struktur Knotens auf Gesamtstruktur Knoten im Strukturansicht-Steuerelement wird ebenfalls angezeigt. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein <xref:System.Windows.Forms.Button>mit einem und <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.TreeNodeCollection> Element mit einem <xref:System.Windows.Forms.TreeNode> vorhanden ist, das über mehrere-Objekte verfügt (vorzugsweise mit drei oder mehr Ebenen).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowLines : bool with get, set" Usage="System.Windows.Forms.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Strukturansicht-Steuerelement Linien zwischen Strukturknoten gezeichnet werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn im Strukturansicht-Steuerelement Linien zwischen Strukturknoten gezeichnet werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.TreeView.ShowLines%2A> <xref:System.Windows.Forms.TreeView.FullRowSelect%2A> auf `true`festgelegt ist, wird die-Eigenschaft ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine angepasste <xref:System.Windows.Forms.TreeView>veranschaulicht. Durch das Erben der <xref:System.Windows.Forms.TreeView> -Klasse verfügt diese benutzerdefinierte Version über alle Funktionen eines typischen <xref:System.Windows.Forms.TreeView>. Das Ändern verschiedener Eigenschaftswerte im Konstruktor bietet eine eindeutige Darstellung. Da die <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> -Eigenschaft auf false festgelegt ist, überschreibt das angepasste Steuer <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> Element auch die-Methode, sodass Knoten beim Klicken erweitert und reduziert werden können.  
  
 Ein Steuerelement, das auf diese Weise angepasst wird, kann in einer Organisation verwendet werden, sodass es einfach ist, eine konsistente Schnittstelle bereitzustellen, ohne dass die Steuerelement Eigenschaften in den einzelnen Projekten angegeben werden müssen.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowNodeToolTips">
      <MemberSignature Language="C#" Value="public bool ShowNodeToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowNodeToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowNodeToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowNodeToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowNodeToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowNodeToolTips : bool with get, set" Usage="System.Windows.Forms.TreeView.ShowNodeToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, dass QuickInfos angezeigt werden, wenn mit dem Mauszeiger auf einen <see cref="T:System.Windows.Forms.TreeNode" /> gezeigt wird.</summary>
        <value><see langword="true" />, wenn QuickInfos angezeigt werden, wenn mit dem Mauszeiger auf einen <see cref="T:System.Windows.Forms.TreeNode" /> gezeigt wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Damit Quick Infos sichtbar sind, müssen Sie <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> für einen <xref:System.Windows.Forms.TreeNode>festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> -Eigenschaft und der- <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> Eigenschaft veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Windows Form ein, `InitializeTreeViewWithToolTips` und nennen Sie ihn aus dem Konstruktor oder <xref:System.Windows.Forms.Form.Load> Ereignishandler des Formulars.  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ToolTipText" />
      </Docs>
    </Member>
    <Member MemberName="ShowPlusMinus">
      <MemberSignature Language="C#" Value="public bool ShowPlusMinus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPlusMinus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPlusMinus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPlusMinus { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowPlusMinus : bool with get, set" Usage="System.Windows.Forms.TreeView.ShowPlusMinus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob neben den Strukturknoten mit untergeordneten Strukturknoten Schaltflächen mit Pluszeichen (+) und Minuszeichen (-) angezeigt werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn neben den Strukturknoten mit untergeordneten Strukturknoten Schaltflächen mit Pluszeichen (+) und Minuszeichen (-) angezeigt werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Schaltflächen Pluszeichen und Minuszeichen werden nur dann neben den Stamm Struktur Knoten angezeigt <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> , wenn der `true`-Eigenschafts Wert ist. Wenn die Schaltflächen Pluszeichen und Minuszeichen nicht angezeigt werden, gibt es keinen visuellen Hinweis, um anzugeben, dass der Struktur Knoten untergeordnete Struktur Knoten enthält und erweiterbar ist. Der Benutzer muss dann auf einen Struktur Knoten doppelklicken, um zu bestimmen, ob er untergeordnete Struktur Knoten enthält, erweitert oder reduziert werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine angepasste <xref:System.Windows.Forms.TreeView>veranschaulicht. Durch das Erben der <xref:System.Windows.Forms.TreeView> -Klasse verfügt diese benutzerdefinierte Version über alle Funktionen eines typischen <xref:System.Windows.Forms.TreeView>. Das Ändern verschiedener Eigenschaftswerte im Konstruktor bietet eine eindeutige Darstellung. Da die <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> -Eigenschaft auf false festgelegt ist, überschreibt das angepasste Steuer <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> Element auch die-Methode, sodass Knoten beim Klicken erweitert und reduziert werden können.  
  
 Ein Steuerelement, das auf diese Weise angepasst wird, kann in einer Organisation verwendet werden, sodass es einfach ist, eine konsistente Schnittstelle bereitzustellen, ohne dass die Steuerelement Eigenschaften in den einzelnen Projekten angegeben werden müssen.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.ShowRootLines" />
      </Docs>
    </Member>
    <Member MemberName="ShowRootLines">
      <MemberSignature Language="C#" Value="public bool ShowRootLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRootLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowRootLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRootLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRootLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRootLines : bool with get, set" Usage="System.Windows.Forms.TreeView.ShowRootLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Strukturansicht-Steuerelement Linien zwischen Stammknoten der Strukturansicht gezeichnet werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Linien zwischen Stammknoten der Strukturansicht gezeichnet werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> - `false`Eigenschaft den Wert hat, werden die Schaltflächen Pluszeichen und Minuszeichen nicht neben den Stamm Struktur Knoten angezeigt, und <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> die-Eigenschaft hat keine Auswirkungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.BorderStyle> -Enumeration und <xref:System.Windows.Forms.TreeView.BorderStyle%2A>die <xref:System.Windows.Forms.TreeView.ShowLines%2A>Eigenschaften <xref:System.Windows.Forms.TreeView.Scrollable%2A>, <xref:System.Windows.Forms.TreeView.HideSelection%2A> , <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> und verwendet werden. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, und `InitializeTreeView` nennen Sie die-Methode im Konstruktor `Load` oder in der-Methode des Formulars.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="treeView.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sortiert die Elemente im <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wendet die Standardsortierung, die alphabetisch nach Knoten Text ist, oder eine benutzerdefinierte Sortierung, die <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> von der-Eigenschaft angegeben wird, erneut an. Sie können diese Methode verwenden, wenn der Text vorhandener Knoten geändert wird oder Knoten vom Benutzer verschoben werden und Sie die Elemente erneut sortieren möchten.  
  
> [!NOTE]
>  Der Standard Sortierer verwendet <xref:System.Globalization.CompareInfo.Compare%2A> die-Methode basierend <xref:System.Windows.Forms.Application.CurrentCulture%2A> auf dem, der von der Anwendung angegeben wird. Dies bedeutet, <xref:System.Windows.Forms.TreeNode> dass Objekte mit gleichem Wert in der Reihenfolge beibehalten werden, in der Sie dem <xref:System.Windows.Forms.TreeView> Steuerelement hinzugefügt wurden. Dieses Verhalten ist möglicherweise anders, wenn eine benutzerdefinierte Sortierung angewendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Sorted : bool with get, set" Usage="System.Windows.Forms.TreeView.Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Strukturknoten in der Strukturansicht sortiert sind, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Strukturknoten in der Strukturansicht sortiert sind, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNode.Text%2A> auf `true`festgelegt ist, werden die Objekte in alphabetischer Reihenfolge nach Ihren Eigenschafts Werten sortiert. Sie sollten immer und <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> <xref:System.Windows.Forms.TreeView.EndUpdate%2A> verwenden, um die Leistung zu gewährleisten, wenn Sie einer sortierten <xref:System.Windows.Forms.TreeView>eine große Menge von Elementen hinzufügen. Wenn der Text eines vorhandenen Knotens geändert wird, muss aufgerufen werden <xref:System.Windows.Forms.TreeView.Sort%2A> , um die Elemente in den Mittelpunkt zu stellen.  
  
> [!NOTE]
>  Der Standard Sortierer verwendet <xref:System.Globalization.CompareInfo.Compare%2A> die-Methode basierend <xref:System.Windows.Forms.Application.CurrentCulture%2A> auf dem, der von der Anwendung angegeben wird. Dies bedeutet, <xref:System.Windows.Forms.TreeNode> dass Objekte mit gleichem Wert in der Reihenfolge beibehalten werden, in der Sie dem <xref:System.Windows.Forms.TreeView> Steuerelement hinzugefügt wurden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.TreeView.StateImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Bildliste ab, mit der der Zustand der <see cref="T:System.Windows.Forms.TreeView" /> und ihrer Knoten angegeben wird.</summary>
        <value>Die <see cref="T:System.Windows.Forms.ImageList" />, die zum Angeben des Zustands der <see cref="T:System.Windows.Forms.TreeView" /> und ihrer Knoten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode>Um den Zustand einer anzugeben, legen Sie die <xref:System.Windows.Forms.TreeView.StateImageList%2A> -Eigenschaft fest, und legen Sie die-Eigenschaft oder <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> die <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> -Eigenschaft für jede <xref:System.Windows.Forms.TreeNode>fest.  
  
 Die in <xref:System.Windows.Forms.TreeView> angezeigten Zustands Bilder sind standardmäßig 16 x 16 Pixel. Das Festlegen <xref:System.Windows.Forms.ImageList.ImageSize%2A> der-Eigenschaft <xref:System.Windows.Forms.TreeView.StateImageList%2A> von hat keine Auswirkung darauf, wie die Bilder angezeigt werden. Die Größe der Zustands Images wird jedoch entsprechend der System-dpi-Einstellung geändert, wenn die Datei "App. config" den folgenden Eintrag enthält:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 Wenn die <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> -Eigenschaft <xref:System.Windows.Forms.TreeView> von auf `true` festgelegt ist und <xref:System.Windows.Forms.TreeView.StateImageList%2A> die-Eigenschaft festgelegt <xref:System.Windows.Forms.TreeNode> ist, <xref:System.Windows.Forms.TreeView> zeigt jede, die in enthalten ist, das erste und <xref:System.Windows.Forms.TreeView.StateImageList%2A> zweite Bild aus der an, um anzugeben, dass der Status "deaktiviert" bzw. "aktiviert". Sie sollten die <xref:System.Windows.Forms.TreeView.StateImageList%2A> -Eigenschaft festlegen, bevor Sie dem <xref:System.Windows.Forms.TreeView> Knoten hinzufügen, um zu verhindern, dass Zustands Bilder zur Entwurfszeit für Knoten angezeigt werden, für die kein Status Bild festgelegt ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.TreeView.StateImageList%2A> -Eigenschaft veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, `InitializeCheckTreeView` und nennen Sie ihn aus dem Konstruktor oder <xref:System.Windows.Forms.Form.Load> Ereignishandler des Formulars.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TreeView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text der <see cref="T:System.Windows.Forms.TreeView" /> ab oder legt diesen fest.</summary>
        <value><see langword="Null" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.TreeView.Text" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode TopNode { get; set; }" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode TopNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.TopNode" />
      <MemberSignature Language="VB.NET" Value="Public Property TopNode As TreeNode" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ TopNode { System::Windows::Forms::TreeNode ^ get(); void set(System::Windows::Forms::TreeNode ^ value); };" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.TopNode : System.Windows.Forms.TreeNode with get, set" Usage="System.Windows.Forms.TreeView.TopNode" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode TopNode { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopNode As TreeNode" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ TopNode { System::Windows::Forms::TreeNode ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.TopNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeView.TopNode" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den ersten vollständig sichtbaren Strukturknoten im Strukturansicht-Steuerelement ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.TreeNode" />, der den ersten vollständig sichtbaren Strukturknoten im Strukturansicht-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anfänglich <xref:System.Windows.Forms.TreeView>gibt den ersten Stamm Struktur Knoten zurück, der sich am oberen Rand von befindet. <xref:System.Windows.Forms.TreeView.TopNode%2A> Wenn der Benutzer jedoch einen Rollup der Inhalte durchgeführt hat, befindet sich möglicherweise ein anderer Struktur Knoten.  
  
> [!NOTE]
>  Das Festlegen dieser Eigenschaft hat keine Auswirkungen, <xref:System.Windows.Forms.TreeView.Scrollable%2A> wenn der- `false`Eigenschafts Wert ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> <xref:System.Windows.Forms.TreeView.AfterSelect> -Members <xref:System.Windows.Forms.TreeView.TopNode%2A> und des-Members veranschaulicht. Fügen Sie den folgenden Code in ein Formular ein, das ein `TreeView` -Steuerelement mit dem Namen `TreeView1`enthält, um dieses Beispiel auszuführen. Ruft die `InitializeTreeView` -Methode im Konstruktor oder `Load` in der-Methode des Formulars auf.  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="treeView.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen <see cref="T:System.String" /> zurück, der den Namen der <see cref="T:System.ComponentModel.Component" /> enthält (sofern vorhanden). Diese Methode darf nicht überschrieben werden.</summary>
        <returns>Eine <see cref="T:System.String" />, die den Namen der <see cref="T:System.ComponentModel.Component" /> enthält (sofern vorhanden), oder <see langword="null" />, wenn die <see cref="T:System.ComponentModel.Component" /> unbenannt ist.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeViewNodeSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer TreeViewNodeSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer TreeViewNodeSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.TreeViewNodeSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeViewNodeSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ TreeViewNodeSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TreeViewNodeSorter : System.Collections.IComparer with get, set" Usage="System.Windows.Forms.TreeView.TreeViewNodeSorter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Implementierung von <see cref="T:System.Collections.IComparer" /> ab oder legt sie fest, um eine benutzerdefinierte Sortierung der <see cref="T:System.Windows.Forms.TreeView" />-Knoten durchzuführen.</summary>
        <value>Der <see cref="T:System.Collections.IComparer" /> zum Ausführen der benutzerdefinierten Sortierung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die benutzerdefinierte Sortierung wird angewendet, <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> Wenn festgelegt wird.  
  
 Wenn eine <xref:System.Windows.Forms.TreeNode> Bezeichnung geändert wird, können Sie die <xref:System.Windows.Forms.TreeView.Sort%2A> -Methode zum erneuten Sortieren der Elemente mit dem durch die <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> -Eigenschaft angegebenen benutzerdefinierten Sortierer aufzurufen.  
  
> [!NOTE]
>  Der Standard Sortierer verwendet <xref:System.Globalization.CompareInfo.Compare%2A> die-Methode basierend <xref:System.Windows.Forms.Application.CurrentCulture%2A> auf dem, der von der Anwendung angegeben wird. Dies bedeutet, <xref:System.Windows.Forms.TreeNode> dass Objekte mit gleichem Wert in der Reihenfolge beibehalten werden, in der Sie dem <xref:System.Windows.Forms.TreeView> Steuerelement hinzugefügt wurden. Dieses Verhalten ist möglicherweise anders, wenn eine benutzerdefinierte Sortierung angewendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> -Eigenschaft verwendet wird, um Knoten vom kleinsten zum größten zu sortieren. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Windows Form ein, `InitializeTreeView1` und nennen Sie ihn aus dem Konstruktor oder <xref:System.Windows.Forms.Form.Load> Ereignishandler des Formulars.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="VisibleCount">
      <MemberSignature Language="C#" Value="public int VisibleCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.VisibleCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VisibleCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleCount : int" Usage="System.Windows.Forms.TreeView.VisibleCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Strukturknoten ab, die im Strukturansicht-Steuerelement vollständig sichtbar sein können, oder legt diese fest.</summary>
        <value>Die Anzahl der <see cref="T:System.Windows.Forms.TreeNode" />-Elemente, die im <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement vollständig sichtbar sein können.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeView.VisibleCount%2A> Wert kann größer als die Anzahl der Struktur Knoten in der Strukturansicht sein. Der Wert wird berechnet, indem die Höhe des Client Fensters durch die Höhe eines Struktur Knoten Elements dividiert wird. Das Ergebnis ist die Gesamtanzahl der <xref:System.Windows.Forms.TreeNode> Objekte, die <xref:System.Windows.Forms.TreeView> in den aktuellen Dimensionen angezeigt werden können.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="treeView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Die zu verarbeitende Windows-<see cref="T:System.Windows.Forms.Message" />.</param>
        <summary>Überschreibt <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">für den Zugriff auf nicht verwalteten Code beim Abrufen des Eigenschafts Werts. Zugehörige Enumeration:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
