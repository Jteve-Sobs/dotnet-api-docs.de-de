<Type Name="Timer" FullName="System.Windows.Forms.Timer">
  <TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0990a-101">Implementiert einen Timer, der ein Ereignis in benutzerdefinierten Intervallen auslöst.</span><span class="sxs-lookup"><span data-stu-id="0990a-101">Implements a timer that raises an event at user-defined intervals.</span></span> <span data-ttu-id="0990a-102">Dieser Timer ist für die Verwendung in Windows Forms-Anwendungen optimiert und muss in einem Fenster verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="0990a-102">This timer is optimized for use in Windows Forms applications and must be used in a window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-103">Ein <xref:System.Windows.Forms.Timer> wird verwendet, um ein Ereignis in benutzerdefinierten Intervallen auszulösen.</span><span class="sxs-lookup"><span data-stu-id="0990a-103">A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals.</span></span> <span data-ttu-id="0990a-104">Dieser Windows-Zeitgeber ist für eine Singlethread-Umgebung entwickelt, in dem UI-Threads verwendet werden, um Verarbeitungsvorgänge auszuführen.</span><span class="sxs-lookup"><span data-stu-id="0990a-104">This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</span></span> <span data-ttu-id="0990a-105">Es erfordert, dass der Benutzercode über ein UI-Nachrichtensystem zur Verfügung und immer aus dem gleichen Thread ausgeführt werden, oder den Aufruf auf einem anderen Thread zu marshallen.</span><span class="sxs-lookup"><span data-stu-id="0990a-105">It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</span></span>  
  
 <span data-ttu-id="0990a-106">Verwenden Sie bei Verwendung dieser Zeitgeber der <xref:System.Windows.Forms.Timer.Tick> Ereignis zum Abruf eines Vorgangs oder einen Begrüßungsbildschirm für einen angegebenen Zeitraum angezeigt.</span><span class="sxs-lookup"><span data-stu-id="0990a-106">When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time.</span></span> <span data-ttu-id="0990a-107">Bei jedem der <xref:System.Windows.Forms.Timer.Enabled%2A> -Eigenschaftensatz auf `true` und die <xref:System.Windows.Forms.Timer.Interval%2A> -Eigenschaft ist größer als 0 (null), die <xref:System.Windows.Forms.Timer.Tick> Ereignis wird ausgelöst, in Intervallen auf der Grundlage der <xref:System.Windows.Forms.Timer.Interval%2A> Einstellung der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0990a-107">Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.</span></span>  
  
 <span data-ttu-id="0990a-108">Diese Klasse stellt Methoden zum Festlegen des Zeitraums sowie zum Starten und beenden Sie den Zeitgeber.</span><span class="sxs-lookup"><span data-stu-id="0990a-108">This class provides methods to set the interval, and to start and stop the timer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0990a-109">Die Windows Forms-Timer-Komponente ist eine Singlethread und ist mit einer Genauigkeit von 55 Millisekunden beschränkt.</span><span class="sxs-lookup"><span data-stu-id="0990a-109">The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</span></span> <span data-ttu-id="0990a-110">Wenn Sie einen Multithread-Zeitgeber mit größerer Genauigkeit benötigen, verwenden die <xref:System.Timers.Timer> -Klasse in der <xref:System.Timers> Namespace.</span><span class="sxs-lookup"><span data-stu-id="0990a-110">If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0990a-111">Das folgende Beispiel implementiert einen einfachen Intervallzeitgeber, deaktiviert ein Alarm alle fünf Sekunden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0990a-111">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0990a-112">Wenn der Alarm auftritt, eine <xref:System.Windows.Forms.MessageBox> zeigt die Anzahl, wie oft der Alarm wurde gestartet, und fordert den Benutzer auf, ob der Zeitgeber weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0990a-112">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0990a-113">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Timer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0990a-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0990a-114">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Timer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0990a-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-115">Wenn Sie ein neuer Zeitgeber erstellt wird, wird es deaktiviert; d. h. <xref:System.Windows.Forms.Timer.Enabled%2A> festgelegt ist, um `false`.</span><span class="sxs-lookup"><span data-stu-id="0990a-115">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="0990a-116">Rufen Sie zum Aktivieren des Zeitgebers die <xref:System.Windows.Forms.Timer.Start%2A> Methode bzw. einer Gruppe <xref:System.Windows.Forms.Timer.Enabled%2A> auf `true`.</span><span class="sxs-lookup"><span data-stu-id="0990a-116">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="0990a-117">Wenn der Timer deaktiviert ist, und der Zeitgeber außerhalb des gültigen Bereichs wird, wird der Timer verworfen werden, bei der Garbagecollection erfolgt.</span><span class="sxs-lookup"><span data-stu-id="0990a-117">If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</span></span> <span data-ttu-id="0990a-118">Wenn der Zeitgeber aktiviert ist, auch wenn es außerhalb des Bereichs liegt, ist es nicht Garbage collection.</span><span class="sxs-lookup"><span data-stu-id="0990a-118">If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::ComponentModel::IContainer ^ container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="0990a-119">Ein <see cref="T:System.ComponentModel.IContainer" />, der den Container für den Zeitgeber darstellt.</span><span class="sxs-lookup"><span data-stu-id="0990a-119">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the timer.</span></span></param>
        <summary><span data-ttu-id="0990a-120">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Timer" />-Klasse gemeinsam mit einem angegebenen Container.</span><span class="sxs-lookup"><span data-stu-id="0990a-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class together with the specified container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-121">Die <xref:System.Windows.Forms.Timer> Konstruktor ermöglicht das Zuordnen einer <xref:System.Windows.Forms.Timer> mit <xref:System.ComponentModel.Container> Objekt.</span><span class="sxs-lookup"><span data-stu-id="0990a-121">The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object.</span></span> <span data-ttu-id="0990a-122">Durch das Zuordnen der <xref:System.Windows.Forms.Timer> übergeben, wie folgt, Kontrolle über die Lebensdauer der <xref:System.Windows.Forms.Timer> zu der <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="0990a-122">By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="0990a-123">Dies kann nützlich sein, wenn Sie eine Reihe von Komponenten in Ihrer Anwendung verwenden und alle gleichzeitig freigeben möchten.</span><span class="sxs-lookup"><span data-stu-id="0990a-123">This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</span></span> <span data-ttu-id="0990a-124">Angenommen, Sie ordnen eine <xref:System.Windows.Forms.ToolTip>, wird ein <xref:System.Windows.Forms.ImageList>, und ein <xref:System.Windows.Forms.Timer> mit eine <xref:System.ComponentModel.Container>wird beim Aufrufen <xref:System.ComponentModel.Container.Dispose%2A> auf die <xref:System.ComponentModel.Container> erzwingt eine Beseitigung der alle diese Komponenten auch.</span><span class="sxs-lookup"><span data-stu-id="0990a-124">For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.</span></span>  
  
 <span data-ttu-id="0990a-125">Wenn Sie ein neuer Zeitgeber erstellt wird, wird es deaktiviert; d. h. <xref:System.Windows.Forms.Timer.Enabled%2A> festgelegt ist, um `false`.</span><span class="sxs-lookup"><span data-stu-id="0990a-125">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="0990a-126">Rufen Sie zum Aktivieren des Zeitgebers die <xref:System.Windows.Forms.Timer.Start%2A> Methode bzw. einer Gruppe <xref:System.Windows.Forms.Timer.Enabled%2A> auf `true`.</span><span class="sxs-lookup"><span data-stu-id="0990a-126">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="0990a-127">Diese Instanz ist vorhanden, bis dessen Container in die Garbagecollection frei.</span><span class="sxs-lookup"><span data-stu-id="0990a-127">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0990a-128"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="0990a-128"><see langword="true" /> to release both managed and unmanaged resources.</span></span> <span data-ttu-id="0990a-129"><see langword="false" />, um nur die nicht verwalteten Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="0990a-129"><see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="0990a-130">Gibt außer den Speicherressourcen alle Ressourcen frei, die vom Timer verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="0990a-130">Disposes of the resources, other than memory, used by the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-131">Rufen Sie <xref:System.Windows.Forms.Timer.Dispose%2A> Wenn Sie mit der Timer fertig sind.</span><span class="sxs-lookup"><span data-stu-id="0990a-131">Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer.</span></span> <span data-ttu-id="0990a-132">Die <xref:System.Windows.Forms.Timer.Dispose%2A> Methode bewirkt, dass den Zeitgeber in einem nicht verwendbaren Zustand.</span><span class="sxs-lookup"><span data-stu-id="0990a-132">The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state.</span></span> <span data-ttu-id="0990a-133">Nach dem Aufruf <xref:System.Windows.Forms.Timer.Dispose%2A>, müssen Sie alle Verweise auf den Zeitgeber freigeben, damit der belegte Arbeitsspeicher von der Garbagecollection wieder zugänglich gemacht werden kann.</span><span class="sxs-lookup"><span data-stu-id="0990a-133">After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0990a-134">Rufen Sie immer <xref:System.Windows.Forms.Timer.Dispose%2A> , bevor Sie den letzten Verweis auf den Zeitgeber freigeben.</span><span class="sxs-lookup"><span data-stu-id="0990a-134">Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer.</span></span> <span data-ttu-id="0990a-135">Die Ressourcen an, die der Zeitgeber verwendet werden, andernfalls nicht reserviert, bis die Garbagecollection den Destruktor des Zeitgeberobjekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="0990a-135">Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0990a-136">Ruft ab oder legt fest, ob der Timer ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="0990a-136">Gets or sets whether the timer is running.</span></span></summary>
        <value>
          <span data-ttu-id="0990a-137"><see langword="true" />, wenn der Zeitgeber gegenwärtig aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0990a-137"><see langword="true" /> if the timer is currently enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0990a-138">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0990a-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-139">Der Zeitgeber unterliegt nicht der Garbagecollection auf, wenn der Wert ist `true`.</span><span class="sxs-lookup"><span data-stu-id="0990a-139">The timer is not subject to garbage collection when the value is `true`.</span></span>  
  
 <span data-ttu-id="0990a-140">Aufrufen der <xref:System.Windows.Forms.Timer.Start%2A> Methode entspricht der Einstellung <xref:System.Windows.Forms.Timer.Enabled%2A> auf `true`.</span><span class="sxs-lookup"><span data-stu-id="0990a-140">Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span> <span data-ttu-id="0990a-141">Ebenso ist der Aufruf der <xref:System.Windows.Forms.Timer.Stop%2A> Methode entspricht der Einstellung <xref:System.Windows.Forms.Timer.Enabled%2A> auf `false`.</span><span class="sxs-lookup"><span data-stu-id="0990a-141">Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0990a-142">Das folgende Beispiel implementiert einen einfachen Intervallzeitgeber, deaktiviert ein Alarm alle fünf Sekunden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0990a-142">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0990a-143">Wenn der Alarm auftritt, eine <xref:System.Windows.Forms.MessageBox> zeigt die Anzahl, wie oft der Alarm wurde gestartet und fragt, ob der Zeitgeber weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0990a-143">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0990a-144">Ruft den Zeitraum in Millisekunden vor dem Auslösen des <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignisses nach dem letzten Eintreten des <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignisses ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0990a-144">Gets or sets the time, in milliseconds, before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <value><span data-ttu-id="0990a-145"><see cref="T:System.Int32" /> gibt die Anzahl der Millisekunden vor dem Auslösen des <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignisses nach dem letzten Eintreten des <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignisses an.</span><span class="sxs-lookup"><span data-stu-id="0990a-145">An <see cref="T:System.Int32" /> specifying the number of milliseconds before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span> <span data-ttu-id="0990a-146">Der Wert kann nicht kleiner als eins sein.</span><span class="sxs-lookup"><span data-stu-id="0990a-146">The value cannot be less than one.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-147">Um die Anzahl der Sekunden im Intervall zu erhalten, teilen Sie diese Zahl durch 1000 ein.</span><span class="sxs-lookup"><span data-stu-id="0990a-147">To get the number of seconds in the interval, divide this number by 1,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0990a-148">Das folgende Codebeispiel implementiert einen einfache Intervallzeitgeber, deaktiviert ein Alarm alle fünf Sekunden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0990a-148">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0990a-149">Wenn der Alarm auftritt, eine <xref:System.Windows.Forms.MessageBox> zeigt die Anzahl, wie oft der Alarm wurde gestartet und fragt, ob der Zeitgeber weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0990a-149">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0990a-150">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="0990a-150">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span> <span data-ttu-id="0990a-151">Diese ist immer <see cref="F:System.EventArgs.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0990a-151">This is always <see cref="F:System.EventArgs.Empty" />.</span></span></param>
        <summary><span data-ttu-id="0990a-152">Löst das <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="0990a-152">Raises the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-153">Diese Methode wird bei jedem Zeitgebertick aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="0990a-153">This method is called for each timer tick.</span></span> <span data-ttu-id="0990a-154">Ruft alle Methoden, die über hinzugefügt werden <xref:System.Windows.Forms.Timer.Tick>.</span><span class="sxs-lookup"><span data-stu-id="0990a-154">It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>.</span></span> <span data-ttu-id="0990a-155">Wenn Sie ein von erben <xref:System.Windows.Forms.Timer>, können Sie diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="0990a-155">If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.</span></span>  
  
 <span data-ttu-id="0990a-156">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="0990a-156">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0990a-157">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0990a-157">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="0990a-158">Zum Überschreiben <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in einer abgeleiteten Klasse sicher, dass Sie der Basisklasse aufrufen, <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="0990a-158">When overriding <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in a derived class, make sure that you call the base class's <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0990a-159">Startet den Zeitgeber.</span><span class="sxs-lookup"><span data-stu-id="0990a-159">Starts the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-160">Sie können auch den Zeitgeber starten, durch Festlegen der <xref:System.Windows.Forms.Timer.Enabled%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="0990a-160">You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0990a-161">Das folgende Codebeispiel implementiert einen einfache Intervallzeitgeber, deaktiviert ein Alarm alle fünf Sekunden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0990a-161">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0990a-162">Wenn der Alarm auftritt, eine <xref:System.Windows.Forms.MessageBox> zeigt die Anzahl, wie oft der Alarm wurde gestartet und fragt, ob der Zeitgeber weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0990a-162">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0990a-163">Hält den Timer an.</span><span class="sxs-lookup"><span data-stu-id="0990a-163">Stops the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-164">Sie können auch den Zeitgeber beenden, durch Festlegen der <xref:System.Windows.Forms.Timer.Enabled%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="0990a-164">You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="0990a-165">Ein <xref:System.Windows.Forms.Timer> Objekt aktiviert und mehrere Male in derselben Anwendung Sitzung deaktiviert werden kann.</span><span class="sxs-lookup"><span data-stu-id="0990a-165">A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.</span></span>  
  
 <span data-ttu-id="0990a-166">Aufrufen von <xref:System.Windows.Forms.Timer.Start%2A> nach der Deaktivierung einer <xref:System.Windows.Forms.Timer> durch Aufrufen <xref:System.Windows.Forms.Timer.Stop%2A> führt dazu, dass die <xref:System.Windows.Forms.Timer> unterbrochene Intervall neu zu starten.</span><span class="sxs-lookup"><span data-stu-id="0990a-166">Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval.</span></span> <span data-ttu-id="0990a-167">Wenn Ihre <xref:System.Windows.Forms.Timer> für ein Intervall 5000 Millisekunden festgelegt ist, und rufen Sie <xref:System.Windows.Forms.Timer.Stop%2A> bei ungefähr 3000 Millisekunden, Aufrufen von <xref:System.Windows.Forms.Timer.Start%2A> führt dazu, dass die <xref:System.Windows.Forms.Timer> 5000 Millisekunden wartet, bevor durch das Auslösen der <xref:System.Windows.Forms.Timer.Tick> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0990a-167">If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0990a-168">Durch Aufrufen von Stop für ein beliebiges <xref:System.Windows.Forms.Timer> innerhalb einer Windows Forms Anwendung kann dazu führen, dass Nachrichten von anderen <xref:System.Windows.Forms.Timer> Komponenten in die Anwendung sofort verarbeitet werden, da alle <xref:System.Windows.Forms.Timer> Komponenten, die auf Thread der hauptanwendung ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="0990a-168">Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread.</span></span> <span data-ttu-id="0990a-169">Wenn Sie zwei <xref:System.Windows.Forms.Timer> Komponenten, eine auf 700 Millisekunden und einen Satz auf 500 Millisekunden festgelegt, und rufen Sie <xref:System.Windows.Forms.Timer.Stop%2A> auf der ersten <xref:System.Windows.Forms.Timer>, Ihre Anwendung möglicherweise zuerst einen Ereignisrückruf für die zweite Komponente.</span><span class="sxs-lookup"><span data-stu-id="0990a-169">If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first.</span></span> <span data-ttu-id="0990a-170">Wenn dies problematisch beweist, erwägen Sie die <xref:System.Threading.Timer> -Klasse in der <xref:System.Threading> Namespace stattdessen.</span><span class="sxs-lookup"><span data-stu-id="0990a-170">If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0990a-171">Das folgende Codebeispiel implementiert einen einfache Intervallzeitgeber, deaktiviert ein Alarm alle fünf Sekunden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0990a-171">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0990a-172">Wenn der Alarm auftritt, eine <xref:System.Windows.Forms.MessageBox> zeigt die Anzahl, wie oft der Alarm wurde gestartet und fragt, ob der Zeitgeber weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0990a-172">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0990a-173">Ruft eine beliebige Zeichenfolge ab, die einen Benutzerzustand darstellt, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="0990a-173">Gets or sets an arbitrary string representing some type of user state.</span></span></summary>
        <value><span data-ttu-id="0990a-174">Eine beliebige Zeichenfolge, die einen Benutzerzustand darstellt.</span><span class="sxs-lookup"><span data-stu-id="0990a-174">An arbitrary string representing some type of user state.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0990a-175">Tritt ein, wenn das angegebene Intervall für den Timer abgelaufen und der Timer aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="0990a-175">Occurs when the specified timer interval has elapsed and the timer is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-176">Aufrufen der <xref:System.Diagnostics.Debug.Assert%2A> Methode für die <xref:System.Diagnostics.Debug> Klasse innerhalb der <xref:System.Windows.Forms.Timer.Tick> Ereignis möglicherweise nicht wie erwartet verhält, als das Dialogfeld "Assertion" anzeigen Feld kann dazu führen, dass Windows zum Auslösen von der <xref:System.Windows.Forms.Timer.Tick> Ereignis wiederholt.</span><span class="sxs-lookup"><span data-stu-id="0990a-176">Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly.</span></span> <span data-ttu-id="0990a-177">Es wird empfohlen, Sie stellen sicher, dass Tests Assertionen innerhalb dieses Ereignisses und der <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, oder <xref:System.Diagnostics.Debug.WriteLineIf%2A> Methoden stattdessen.</span><span class="sxs-lookup"><span data-stu-id="0990a-177">We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.</span></span>  
  
 <span data-ttu-id="0990a-178">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0990a-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0990a-179">Das folgende Codebeispiel implementiert einen einfache Intervallzeitgeber, deaktiviert ein Alarm alle fünf Sekunden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0990a-179">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0990a-180">Wenn der Alarm auftritt, eine <xref:System.Windows.Forms.MessageBox> zeigt die Anzahl, wie oft der Alarm wurde gestartet und fragt, ob der Zeitgeber weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0990a-180">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0990a-181">Gibt eine Zeichenfolge zurück, die den <see cref="T:System.Windows.Forms.Timer" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="0990a-181">Returns a string that represents the <see cref="T:System.Windows.Forms.Timer" />.</span></span></summary>
        <returns><span data-ttu-id="0990a-182">Eine Zeichenfolge, die das aktuelle <see cref="T:System.Windows.Forms.Timer" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="0990a-182">A string that represents the current <see cref="T:System.Windows.Forms.Timer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0990a-183">Die <xref:System.Windows.Forms.Timer.ToString%2A> Methode gibt eine Zeichenfolge, die den Wert der enthält die <xref:System.Windows.Forms.Timer.Interval%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0990a-183">The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>