<Type Name="Timer" FullName="System.Windows.Forms.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="881447f9895e490ab3d967798d20effa8bf83ce7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86653341" /></Metadata><TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("Tick")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("Tick")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Interval")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Interval")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="03e05-101">Implementiert einen Zeitgeber, der ein Ereignis in benutzerdefinierten Intervallen auslöst.</span><span class="sxs-lookup"><span data-stu-id="03e05-101">Implements a timer that raises an event at user-defined intervals.</span></span> <span data-ttu-id="03e05-102">Dieser Zeitgeber ist für die Verwendung in Windows Forms-Anwendungen optimiert und muss in einem Fenster verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="03e05-102">This timer is optimized for use in Windows Forms applications and must be used in a window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-103">Eine <xref:System.Windows.Forms.Timer> wird verwendet, um ein Ereignis in benutzerdefinierten Intervallen zu erhöhen.</span><span class="sxs-lookup"><span data-stu-id="03e05-103">A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals.</span></span> <span data-ttu-id="03e05-104">Dieser Windows-Timer ist für eine Single Thread-Umgebung konzipiert, in der UI-Threads verwendet werden, um die Verarbeitung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="03e05-104">This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</span></span> <span data-ttu-id="03e05-105">Hierfür ist es erforderlich, dass der Benutzercode über ein UI-Meldungs-Pump verfügen muss</span><span class="sxs-lookup"><span data-stu-id="03e05-105">It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</span></span>  
  
 <span data-ttu-id="03e05-106">Wenn Sie diesen Timer verwenden, verwenden Sie das- <xref:System.Windows.Forms.Timer.Tick> Ereignis, um einen Abruf Vorgang auszuführen oder einen Begrüßungsbildschirm für einen angegebenen Zeitraum anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="03e05-106">When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time.</span></span> <span data-ttu-id="03e05-107">Wenn die <xref:System.Windows.Forms.Timer.Enabled%2A> -Eigenschaft auf festgelegt ist `true` und die- <xref:System.Windows.Forms.Timer.Interval%2A> Eigenschaft größer als 0 (null) ist, wird das- <xref:System.Windows.Forms.Timer.Tick> Ereignis in Intervallen basierend auf der- <xref:System.Windows.Forms.Timer.Interval%2A> Eigenschafts Einstellung ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="03e05-107">Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.</span></span>  
  
 <span data-ttu-id="03e05-108">Diese Klasse stellt Methoden zum Festlegen des Intervalls und zum Starten und Abbrechen des Timers bereit.</span><span class="sxs-lookup"><span data-stu-id="03e05-108">This class provides methods to set the interval, and to start and stop the timer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03e05-109">Bei der Windows Forms Timer-Komponente handelt es sich um einen Single Thread, der auf eine Genauigkeit von 55 Millisekunden beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="03e05-109">The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</span></span> <span data-ttu-id="03e05-110">Wenn Sie einen Multithread-Timer mit größerer Genauigkeit benötigen, verwenden Sie die- <xref:System.Timers.Timer> Klasse im- <xref:System.Timers> Namespace.</span><span class="sxs-lookup"><span data-stu-id="03e05-110">If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03e05-111">Im folgenden Beispiel wird ein einfacher Interval-Timer implementiert, der alle fünf Sekunden einen Alarm festlegt.</span><span class="sxs-lookup"><span data-stu-id="03e05-111">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="03e05-112">Wenn der Alarm auftritt, wird von ein die Anzahl der Versuche angezeigt, mit denen der <xref:System.Windows.Forms.MessageBox> Alarm gestartet wurde, und der Benutzer wird aufgefordert, ob der Timer weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="03e05-112">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03e05-113">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Timer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="03e05-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03e05-114">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Timer" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="03e05-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-115">Wenn ein neuer Timer erstellt wird, ist er deaktiviert. Das heißt, <xref:System.Windows.Forms.Timer.Enabled%2A> ist auf festgelegt `false` .</span><span class="sxs-lookup"><span data-stu-id="03e05-115">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="03e05-116">Um den Timer zu aktivieren, müssen Sie die-Methode aufzurufen <xref:System.Windows.Forms.Timer.Start%2A> oder <xref:System.Windows.Forms.Timer.Enabled%2A> auf festlegen `true` .</span><span class="sxs-lookup"><span data-stu-id="03e05-116">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="03e05-117">Wenn der Timer deaktiviert ist und der Timer außerhalb des Gültigkeits Bereichs liegt, wird der Timer verworfen, wenn Garbage Collection auftritt.</span><span class="sxs-lookup"><span data-stu-id="03e05-117">If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</span></span> <span data-ttu-id="03e05-118">Wenn der Timer aktiviert ist, und auch wenn er außerhalb des Gültigkeits Bereichs liegt, unterliegt er nicht Garbage Collection.</span><span class="sxs-lookup"><span data-stu-id="03e05-118">If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Timer : System.ComponentModel.IContainer -&gt; System.Windows.Forms.Timer" Usage="new System.Windows.Forms.Timer container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="03e05-119">Ein <see cref="T:System.ComponentModel.IContainer" />, der den Container für den Zeitgeber darstellt.</span><span class="sxs-lookup"><span data-stu-id="03e05-119">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the timer.</span></span></param>
        <summary><span data-ttu-id="03e05-120">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Timer" />-Klasse gemeinsam mit einem angegebenen Container.</span><span class="sxs-lookup"><span data-stu-id="03e05-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class together with the specified container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-121">Mit dem- <xref:System.Windows.Forms.Timer> Konstruktor können Sie einem <xref:System.Windows.Forms.Timer> beliebiges- <xref:System.ComponentModel.Container> Objekt zuordnen.</span><span class="sxs-lookup"><span data-stu-id="03e05-121">The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object.</span></span> <span data-ttu-id="03e05-122">Indem <xref:System.Windows.Forms.Timer> Sie den like dieser zuordnen, übergeben Sie die Steuerung der Lebensdauer von <xref:System.Windows.Forms.Timer> an die <xref:System.ComponentModel.Container> .</span><span class="sxs-lookup"><span data-stu-id="03e05-122">By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="03e05-123">Dies kann hilfreich sein, wenn Sie eine Reihe von Komponenten in der Anwendung verwenden und alle gleichzeitig verwerfen möchten.</span><span class="sxs-lookup"><span data-stu-id="03e05-123">This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</span></span> <span data-ttu-id="03e05-124">Wenn Sie z. b. ein <xref:System.Windows.Forms.ToolTip> -, ein <xref:System.Windows.Forms.ImageList> -und ein-Feld <xref:System.Windows.Forms.Timer> mit einem verknüpfen <xref:System.ComponentModel.Container> , <xref:System.ComponentModel.Container.Dispose%2A> wird durch den Aufruf von für das auch die <xref:System.ComponentModel.Container> Beseitigung all dieser Komponenten erzwungen.</span><span class="sxs-lookup"><span data-stu-id="03e05-124">For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.</span></span>  
  
 <span data-ttu-id="03e05-125">Wenn ein neuer Timer erstellt wird, ist er deaktiviert. Das heißt, <xref:System.Windows.Forms.Timer.Enabled%2A> ist auf festgelegt `false` .</span><span class="sxs-lookup"><span data-stu-id="03e05-125">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="03e05-126">Um den Timer zu aktivieren, müssen Sie die-Methode aufzurufen <xref:System.Windows.Forms.Timer.Start%2A> oder <xref:System.Windows.Forms.Timer.Enabled%2A> auf festlegen `true` .</span><span class="sxs-lookup"><span data-stu-id="03e05-126">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="03e05-127">Diese Instanz ist so lange vorhanden, bis Ihr Container Sie in Garbage Collection freigibt.</span><span class="sxs-lookup"><span data-stu-id="03e05-127">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="03e05-128"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="03e05-128"><see langword="true" /> to release both managed and unmanaged resources.</span></span> <span data-ttu-id="03e05-129"><see langword="false" />, um nur die nicht verwalteten Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="03e05-129"><see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="03e05-130">Gibt außer den Speicherressourcen alle Ressourcen frei, die vom Timer verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="03e05-130">Disposes of the resources, other than memory, used by the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-131">Wird aufgerufen, <xref:System.Windows.Forms.Timer.Dispose%2A> Wenn Sie mit der Verwendung des Timers fertig sind.</span><span class="sxs-lookup"><span data-stu-id="03e05-131">Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer.</span></span> <span data-ttu-id="03e05-132">Die- <xref:System.Windows.Forms.Timer.Dispose%2A> Methode versetzt den Timer in einen nicht verwendbaren Zustand.</span><span class="sxs-lookup"><span data-stu-id="03e05-132">The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state.</span></span> <span data-ttu-id="03e05-133">Nachdem Sie aufgerufen <xref:System.Windows.Forms.Timer.Dispose%2A> haben, müssen Sie alle Verweise auf den Timer freigeben, damit der Arbeitsspeicher, den Sie belegen, von Garbage Collection freigegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="03e05-133">After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03e05-134">Wird immer aufgerufen <xref:System.Windows.Forms.Timer.Dispose%2A> , bevor Sie den letzten Verweis auf den Timer freigeben.</span><span class="sxs-lookup"><span data-stu-id="03e05-134">Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer.</span></span> <span data-ttu-id="03e05-135">Andernfalls werden die Ressourcen, die der Timer verwendet, erst freigegeben, wenn Garbage Collection den Dekonstruktor des timerobjekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="03e05-135">Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03e05-136">Ruft ab oder legt fest, ob der Timer ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="03e05-136">Gets or sets whether the timer is running.</span></span></summary>
        <value><span data-ttu-id="03e05-137"><see langword="true" />, wenn der Zeitgeber gegenwärtig aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03e05-137"><see langword="true" /> if the timer is currently enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="03e05-138">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="03e05-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-139">Der Zeitgeber unterliegt nicht Garbage Collection, wenn der Wert ist `true` .</span><span class="sxs-lookup"><span data-stu-id="03e05-139">The timer is not subject to garbage collection when the value is `true`.</span></span>  
  
 <span data-ttu-id="03e05-140">Das Aufrufen der- <xref:System.Windows.Forms.Timer.Start%2A> Methode ist das gleiche wie das Festlegen <xref:System.Windows.Forms.Timer.Enabled%2A> von auf `true` .</span><span class="sxs-lookup"><span data-stu-id="03e05-140">Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span> <span data-ttu-id="03e05-141">Ebenso ist das Aufrufen der- <xref:System.Windows.Forms.Timer.Stop%2A> Methode identisch mit dem Festlegen <xref:System.Windows.Forms.Timer.Enabled%2A> von auf `false` .</span><span class="sxs-lookup"><span data-stu-id="03e05-141">Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03e05-142">Im folgenden Beispiel wird ein einfacher Interval-Timer implementiert, der alle fünf Sekunden einen Alarm festlegt.</span><span class="sxs-lookup"><span data-stu-id="03e05-142">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="03e05-143">Wenn der Alarm auftritt, wird von ein die Anzahl der Versuche angezeigt, mit denen der <xref:System.Windows.Forms.MessageBox> Alarm gestartet wurde, und der Benutzer wird aufgefordert, ob der Timer weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="03e05-143">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Windows.Forms.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(100)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(100)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03e05-144">Ruft den Zeitraum in Millisekunden vor dem Auslösen des <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignisses nach dem letzten Eintreten des <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignisses ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="03e05-144">Gets or sets the time, in milliseconds, before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <value><span data-ttu-id="03e05-145"><see cref="T:System.Int32" /> gibt die Anzahl der Millisekunden vor dem Auslösen des <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignisses nach dem letzten Eintreten des <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignisses an.</span><span class="sxs-lookup"><span data-stu-id="03e05-145">An <see cref="T:System.Int32" /> specifying the number of milliseconds before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span> <span data-ttu-id="03e05-146">Der Wert kann nicht kleiner als eins sein.</span><span class="sxs-lookup"><span data-stu-id="03e05-146">The value cannot be less than one.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-147">Um die Anzahl der Sekunden im Intervall zu erhalten, teilen Sie diese Zahl durch 1.000.</span><span class="sxs-lookup"><span data-stu-id="03e05-147">To get the number of seconds in the interval, divide this number by 1,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03e05-148">Im folgenden Codebeispiel wird ein einfacher Interval-Timer implementiert, der alle fünf Sekunden einen Alarm festlegt.</span><span class="sxs-lookup"><span data-stu-id="03e05-148">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="03e05-149">Wenn der Alarm auftritt, wird von ein die Anzahl der Versuche angezeigt, mit denen der <xref:System.Windows.Forms.MessageBox> Alarm gestartet wurde, und der Benutzer wird aufgefordert, ob der Timer weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="03e05-149">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="03e05-150">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="03e05-150">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span> <span data-ttu-id="03e05-151">Dies ist immer <see cref="F:System.EventArgs.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="03e05-151">This is always <see cref="F:System.EventArgs.Empty" />.</span></span></param>
        <summary><span data-ttu-id="03e05-152">Löst das <see cref="E:System.Windows.Forms.Timer.Tick" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="03e05-152">Raises the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-153">Diese Methode wird für jeden Zeit Geber Tick aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="03e05-153">This method is called for each timer tick.</span></span> <span data-ttu-id="03e05-154">Es werden alle Methoden aufgerufen, die über hinzugefügt werden <xref:System.Windows.Forms.Timer.Tick> .</span><span class="sxs-lookup"><span data-stu-id="03e05-154">It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>.</span></span> <span data-ttu-id="03e05-155">Wenn Sie von Erben <xref:System.Windows.Forms.Timer> , können Sie diese Methode überschreiben.</span><span class="sxs-lookup"><span data-stu-id="03e05-155">If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.</span></span>  
  
 <span data-ttu-id="03e05-156">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="03e05-156">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="03e05-157">Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="03e05-157">For more information, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="03e05-158">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in einer abgeleiteten Klasse sicher, dass Sie die-Methode der Basisklasse aufzurufen <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> .</span><span class="sxs-lookup"><span data-stu-id="03e05-158">When overriding <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in a derived class, make sure that you call the base class's <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03e05-159">Startet den Timer.</span><span class="sxs-lookup"><span data-stu-id="03e05-159">Starts the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-160">Sie können den Timer auch starten, indem Sie die- <xref:System.Windows.Forms.Timer.Enabled%2A> Eigenschaft auf festlegen `true` .</span><span class="sxs-lookup"><span data-stu-id="03e05-160">You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03e05-161">Im folgenden Codebeispiel wird ein einfacher Interval-Timer implementiert, der alle fünf Sekunden einen Alarm festlegt.</span><span class="sxs-lookup"><span data-stu-id="03e05-161">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="03e05-162">Wenn der Alarm auftritt, wird von ein die Anzahl der Versuche angezeigt, mit denen der <xref:System.Windows.Forms.MessageBox> Alarm gestartet wurde, und der Benutzer wird aufgefordert, ob der Timer weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="03e05-162">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03e05-163">Hält den Timer an.</span><span class="sxs-lookup"><span data-stu-id="03e05-163">Stops the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-164">Sie können den Timer auch abbrechen, indem Sie die- <xref:System.Windows.Forms.Timer.Enabled%2A> Eigenschaft auf festlegen `false` .</span><span class="sxs-lookup"><span data-stu-id="03e05-164">You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="03e05-165">Ein <xref:System.Windows.Forms.Timer> -Objekt kann innerhalb derselben Anwendungs Sitzung mehrmals aktiviert und deaktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="03e05-165">A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.</span></span>  
  
 <span data-ttu-id="03e05-166"><xref:System.Windows.Forms.Timer.Start%2A>Wenn Sie einen aufrufen, nachdem Sie <xref:System.Windows.Forms.Timer> durch Aufrufen von deaktiviert haben <xref:System.Windows.Forms.Timer.Stop%2A> , wird das <xref:System.Windows.Forms.Timer> unterbrochene Intervall von neu gestartet.</span><span class="sxs-lookup"><span data-stu-id="03e05-166">Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval.</span></span> <span data-ttu-id="03e05-167">Wenn Ihr <xref:System.Windows.Forms.Timer> für ein Intervall von 5000 Millisekunden festgelegt ist und Sie um <xref:System.Windows.Forms.Timer.Stop%2A> ungefähr 3000 Millisekunden aufrufen, bewirkt der Aufruf von, dass <xref:System.Windows.Forms.Timer.Start%2A> <xref:System.Windows.Forms.Timer> 5000 Millisekunden wartet, bevor das Ereignis ausgelöst wird <xref:System.Windows.Forms.Timer.Tick> .</span><span class="sxs-lookup"><span data-stu-id="03e05-167">If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03e05-168">Das Aufrufen von "Abbrechen" für beliebige <xref:System.Windows.Forms.Timer> innerhalb einer Windows Forms Anwendung kann dazu führen, dass Nachrichten von anderen <xref:System.Windows.Forms.Timer> Komponenten in der Anwendung sofort verarbeitet werden, da alle <xref:System.Windows.Forms.Timer> Komponenten auf dem Hauptanwendungs Thread ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="03e05-168">Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread.</span></span> <span data-ttu-id="03e05-169">Wenn Sie über zwei <xref:System.Windows.Forms.Timer> Komponenten verfügen, eine auf 700 Millisekunden und eine auf 500 Millisekunden festgelegt ist und Sie <xref:System.Windows.Forms.Timer.Stop%2A> für den ersten aufzurufen, <xref:System.Windows.Forms.Timer> empfängt Ihre Anwendung möglicherweise zuerst einen Ereignis Rückruf für die zweite Komponente.</span><span class="sxs-lookup"><span data-stu-id="03e05-169">If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first.</span></span> <span data-ttu-id="03e05-170">Wenn dies problematisch ist, sollten Sie stattdessen die- <xref:System.Threading.Timer> Klasse im- <xref:System.Threading> Namespace verwenden.</span><span class="sxs-lookup"><span data-stu-id="03e05-170">If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03e05-171">Im folgenden Codebeispiel wird ein einfacher Interval-Timer implementiert, der alle fünf Sekunden einen Alarm festlegt.</span><span class="sxs-lookup"><span data-stu-id="03e05-171">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="03e05-172">Wenn der Alarm auftritt, wird von ein die Anzahl der Versuche angezeigt, mit denen der <xref:System.Windows.Forms.MessageBox> Alarm gestartet wurde, und der Benutzer wird aufgefordert, ob der Timer weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="03e05-172">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Timer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03e05-173">Ruft eine beliebige Zeichenfolge ab, die einen Benutzerzustand darstellt, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="03e05-173">Gets or sets an arbitrary string representing some type of user state.</span></span></summary>
        <value><span data-ttu-id="03e05-174">Eine beliebige Zeichenfolge, die einen Benutzerzustand darstellt.</span><span class="sxs-lookup"><span data-stu-id="03e05-174">An arbitrary string representing some type of user state.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="03e05-175">Tritt ein, wenn das angegebene Intervall für den Timer abgelaufen und der Timer aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="03e05-175">Occurs when the specified timer interval has elapsed and the timer is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-176">Das Aufrufen der- <xref:System.Diagnostics.Debug.Assert%2A> Methode für die- <xref:System.Diagnostics.Debug> Klasse innerhalb des <xref:System.Windows.Forms.Timer.Tick> Ereignisses verhält sich möglicherweise nicht wie erwartet, da das Anzeigen des Dialog Felds "Assert" möglicherweise dazu führt, dass Windows das Ereignis mehrmals auslöst <xref:System.Windows.Forms.Timer.Tick> .</span><span class="sxs-lookup"><span data-stu-id="03e05-176">Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly.</span></span> <span data-ttu-id="03e05-177">Es wird empfohlen, dass Sie keine Assertionen innerhalb dieses Ereignisses testen und <xref:System.Diagnostics.Debug.Write%2A> stattdessen die <xref:System.Diagnostics.Debug.WriteIf%2A> Methoden,, <xref:System.Diagnostics.Debug.WriteLine%2A> oder verwenden <xref:System.Diagnostics.Debug.WriteLineIf%2A> .</span><span class="sxs-lookup"><span data-stu-id="03e05-177">We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.</span></span>  
  
 <span data-ttu-id="03e05-178">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="03e05-178">For more information about handling events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03e05-179">Im folgenden Codebeispiel wird ein einfacher Interval-Timer implementiert, der alle fünf Sekunden einen Alarm festlegt.</span><span class="sxs-lookup"><span data-stu-id="03e05-179">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="03e05-180">Wenn der Alarm auftritt, wird von ein die Anzahl der Versuche angezeigt, mit denen der <xref:System.Windows.Forms.MessageBox> Alarm gestartet wurde, und der Benutzer wird aufgefordert, ob der Timer weiterhin ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="03e05-180">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03e05-181">Gibt eine Zeichenfolge zurück, die den <see cref="T:System.Windows.Forms.Timer" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="03e05-181">Returns a string that represents the <see cref="T:System.Windows.Forms.Timer" />.</span></span></summary>
        <returns><span data-ttu-id="03e05-182">Eine Zeichenfolge, die das aktuelle <see cref="T:System.Windows.Forms.Timer" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="03e05-182">A string that represents the current <see cref="T:System.Windows.Forms.Timer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03e05-183">Die- <xref:System.Windows.Forms.Timer.ToString%2A> Methode gibt eine Zeichenfolge zurück, die den Wert der- <xref:System.Windows.Forms.Timer.Interval%2A> Eigenschaft enthält.</span><span class="sxs-lookup"><span data-stu-id="03e05-183">The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
