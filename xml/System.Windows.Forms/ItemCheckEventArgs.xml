<Type Name="ItemCheckEventArgs" FullName="System.Windows.Forms.ItemCheckEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4a10f3ff87e96ebda44f3e0df41e6948f65e5e5" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83479193" /></Metadata><TypeSignature Language="C#" Value="public class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ItemCheckEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ItemCheckEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ItemCheckEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ItemCheckEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" />-Ereignis des <see cref="T:System.Windows.Forms.CheckedListBox" />-Steuerelements und des <see cref="T:System.Windows.Forms.ListView" />-Steuerelements bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.CheckedListBox.ItemCheck>-Ereignis tritt auf, wenn sich der aktivierte Zustand eines Elements in einem aktivierten Listenfeld ändert. Die <xref:System.Windows.Forms.ItemCheckEventArgs> Klasse gibt den Index des zu ändernden Elements, den aktuellen Wert des Kontrollkästchens für das Element und den neuen Wert an, der für das Kontrollkästchen festgelegt werden soll.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein aktiviertes <xref:System.Windows.Forms.ListView> Steuerelement veranschaulicht, das das <xref:System.Windows.Forms.ListView.ItemCheck?displayProperty=nameWithType>-Ereignis behandelt. Die-Methode verwendet die Eigenschaften "<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A>" und "<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A>" des <xref:System.Windows.Forms.ItemCheckEventArgs>-Objekts, um den Preis der ausgewählten Menü Elemente abzurufen und abzugleichen. Zum Ausführen dieses Beispiels fügen Sie den folgenden Code in ein Formular ein, das eine <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> mit dem Namen `Textbox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf. Stellen Sie sicher, dass alle Ereignisse mit ihren Ereignis Behandlungsmethoden verknüpft sind.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CheckedListBox" />
    <altmember cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemCheckEventArgs (int index, System.Windows.Forms.CheckState newCheckValue, System.Windows.Forms.CheckState currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 index, valuetype System.Windows.Forms.CheckState newCheckValue, valuetype System.Windows.Forms.CheckState currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (index As Integer, newCheckValue As CheckState, currentValue As CheckState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ItemCheckEventArgs(int index, System::Windows::Forms::CheckState newCheckValue, System::Windows::Forms::CheckState currentValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ItemCheckEventArgs : int * System.Windows.Forms.CheckState * System.Windows.Forms.CheckState -&gt; System.Windows.Forms.ItemCheckEventArgs" Usage="new System.Windows.Forms.ItemCheckEventArgs (index, newCheckValue, currentValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="newCheckValue" Type="System.Windows.Forms.CheckState" />
        <Parameter Name="currentValue" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu ändernden Elements.</param>
        <param name="newCheckValue">Einer der <see cref="T:System.Windows.Forms.CheckState" />-Werte, der angibt, ob das Kontrollkästchen für das Element in einen aktivierten, deaktivierten oder unbestimmten Zustand geändert werden soll.</param>
        <param name="currentValue">Einer der <see cref="T:System.Windows.Forms.CheckState" />-Werte, der angibt, ob das Kontrollkästchen für das Element derzeit einen aktivierten, deaktivierten oder unbestimmten Zustand aufweist.</param>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CurrentValue { System::Windows::Forms::CheckState get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : System.Windows.Forms.CheckState" Usage="System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den aktuellen Zustand des Kontrollkästchens für das Element angibt.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.CheckState" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht es Ihnen, den Prüf Zustand des angegebenen Elements in der <xref:System.Windows.Forms.CheckedListBox> zu bestimmen, bevor die Überprüfung der Zustandsänderung vorgenommen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein aktiviertes <xref:System.Windows.Forms.ListView> Steuerelement veranschaulicht, das das <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType>-Ereignis behandelt. Die-Methode verwendet die Eigenschaften "<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A>" und "<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A>" des <xref:System.Windows.Forms.ItemCheckEventArgs>-Objekts, um den Preis der ausgewählten Menü Elemente abzurufen und abzugleichen. Zum Ausführen dieses Beispiels fügen Sie den folgenden Code in ein Formular ein, das eine <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> mit dem Namen `Textbox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf. Stellen Sie sicher, dass alle Ereignisse mit ihren Ereignis Behandlungsmethoden verknüpft sind.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den nullbasierten Index des zu ändernden Elements ab.</summary>
        <value>Der nullbasierte Index des zu ändernden Elements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um zu bestimmen, welches Kontrollkästchen des Elements im <xref:System.Windows.Forms.CheckedListBox> geändert wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein aktiviertes <xref:System.Windows.Forms.ListView> Steuerelement veranschaulicht, das das <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType>-Ereignis behandelt. Die-Methode verwendet die Eigenschaften "<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A>" und "<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A>" des <xref:System.Windows.Forms.ItemCheckEventArgs>-Objekts, um den Preis der ausgewählten Menü Elemente abzurufen und abzugleichen. Zum Ausführen dieses Beispiels fügen Sie den folgenden Code in ein Formular ein, das eine <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1` und eine <xref:System.Windows.Forms.TextBox> mit dem Namen `Textbox1`enthält. Ruft die `InitializeListView`-Methode aus dem Konstruktor des Formulars oder `Load` Methode auf. Stellen Sie sicher, dass alle Ereignisse mit ihren Ereignis Behandlungsmethoden verknüpft sind.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState NewValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NewValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState NewValue { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberSignature Language="F#" Value="member this.NewValue : System.Windows.Forms.CheckState with get, set" Usage="System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Kontrollkästchen für das Element auf einen aktivierten, deaktivierten oder einen unbestimmten Zustand festgelegt werden soll, oder legt den Wert fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.CheckState" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht es Ihnen, den neuen Prüf Zustand für das angegebene Element zu ermitteln, bevor der Prüf Zustand durch das <xref:System.Windows.Forms.CheckedListBox> Steuerelement geändert wird. Zusätzlich zum Ermitteln des neuen Prüf Zustands können Sie diese Eigenschaft in einem Ereignishandler für das <xref:System.Windows.Forms.CheckedListBox.ItemCheck>-Ereignis verwenden, um den Zustand in einen anderen als den angegebenen Zustand zu ändern. Wenn der Benutzer z. b. ein Häkchen neben einem Element in der <xref:System.Windows.Forms.CheckedListBox>, das Sie festgelegt haben, nicht auf der Grundlage des Anwendungs Zustands überprüft werden soll, können Sie die Änderung im Status des Häkchens überschreiben, indem Sie diese Eigenschaft auf die vorherige Einstellung oder einen anderen Aktivierungszustand festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.CheckedListBox> mit dem Namen `CheckedListBox1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      </Docs>
    </Member>
  </Members>
</Type>
