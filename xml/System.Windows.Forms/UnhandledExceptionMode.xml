<Type Name="UnhandledExceptionMode" FullName="System.Windows.Forms.UnhandledExceptionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5b835900e0bdf8c4c5b449221edca9c69715161" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69175648" /></Metadata><TypeSignature Language="C#" Value="public enum UnhandledExceptionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.UnhandledExceptionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnhandledExceptionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnhandledExceptionMode" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Definiert, wo eine Windows Forms-Anwendung nicht behandelte Ausnahmen senden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Enumeration wird von <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>verwendet.  
  
> [!NOTE]
>  In der .NET Framework Version 2,0 wurde das Common Language Runtime Verhalten geändert, sodass nicht behandelte Ausnahmen die aufzurufende aufrufsstapel übertragen können. Dieses Verhalten kann über die Anwendungs Konfigurationsdatei deaktiviert werden. Weitere Informationen finden Sie unter [Ausnahmen in verwalteten Threads](~/docs/standard/threading/exceptions-in-managed-threads.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden Ereignishandler für beide Fehler festgelegt, die bei Windows Forms Threads und Fehler auftreten, die in anderen Threads auftreten. Dadurch wird <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> festgelegt, dass alle Fehler von der Anwendung behandelt werden, unabhängig von den Einstellungen in der Benutzer Konfigurationsdatei der Anwendung. Dabei wird das <xref:System.Windows.Forms.Application.ThreadException> -Ereignis für das erste und das <xref:System.AppDomain.UnhandledException> -Ereignis für das letztere verwendet. Da <xref:System.AppDomain.UnhandledException> es nicht möglich ist, eine Anwendung zu beenden, protokolliert das Beispiel einfach den Fehler im System Ereignisprotokoll vor der Beendigung.  
  
 In diesem Beispiel wird davon ausgegangen, dass <xref:System.Windows.Forms.Button> Sie zwei `button1` - `button2`Steuerelemente, <xref:System.Windows.Forms.Form> und für die-Klasse definiert haben.  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode Automatic = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberSignature Language="F#" Value="Automatic = 0" Usage="System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Alle Ausnahmen werden an den <see cref="E:System.Windows.Forms.Application.ThreadException" />-Handler weitergeleitet, sofern die Konfigurationsdatei der Anwendung keine abweichende Angabe enthält.</summary>
      </Docs>
    </Member>
    <Member MemberName="CatchException">
      <MemberSignature Language="C#" Value="CatchException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode CatchException = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberSignature Language="VB.NET" Value="CatchException" />
      <MemberSignature Language="C++ CLI" Value="CatchException" />
      <MemberSignature Language="F#" Value="CatchException = 2" Usage="System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Ausnahmen werden immer an den <see cref="E:System.Windows.Forms.Application.ThreadException" />-Handler weitergeleitet. Die Anwendungskonfigurationsdatei wird ignoriert.</summary>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="ThrowException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode ThrowException = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberSignature Language="VB.NET" Value="ThrowException" />
      <MemberSignature Language="C++ CLI" Value="ThrowException" />
      <MemberSignature Language="F#" Value="ThrowException = 1" Usage="System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Ausnahmen werden nie an den <see cref="E:System.Windows.Forms.Application.ThreadException" />-Handler weitergeleitet. Die Anwendungskonfigurationsdatei wird ignoriert.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
