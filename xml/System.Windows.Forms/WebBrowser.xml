<Type Name="WebBrowser" FullName="System.Windows.Forms.WebBrowser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="45a5e2c644ddcfc5fa210e25521c812cbf3fce0c" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33660084" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebBrowser : System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBrowser extends System.Windows.Forms.WebBrowserBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WebBrowser" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBrowser&#xA;Inherits WebBrowserBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBrowser : System::Windows::Forms::WebBrowserBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.WebBrowserBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("DocumentCompleted")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Url")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.WebBrowserDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.AutoDock)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht dem Benutzer, zu Webseiten innerhalb eines Formulars zu navigieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> -Steuerelement können Sie den Host Webseiten und anderen Dokumenten-fähigen Browser in Windows Forms-Anwendungen. Sie können die <xref:System.Windows.Forms.WebBrowser> steuern, z. B. zum Bereitstellen von HTML-Benutzerhilfe oder Webbrowserfunktionen in Ihrer Anwendung. Darüber hinaus können Sie die <xref:System.Windows.Forms.WebBrowser> Steuerelement Ihren Windows Forms-Clientanwendungen Ihrer vorhandenen Web-based Steuerelemente hinzu.  
  
> [!IMPORTANT]
>  Die <xref:System.Windows.Forms.WebBrowser> Steuerelement ist ressourcenintensiv. Aufrufen der <xref:System.ComponentModel.Component.Dispose> -Methode auf, wenn Sie mithilfe des Steuerelements, um sicherzustellen, dass alle Ressourcen, rechtzeitig freigegeben werden fertig sind. Rufen Sie die <xref:System.ComponentModel.Component.Dispose> Methode auf dem gleichen Thread, der die Ereignisse angefügt werden, die immer die Nachricht ausgeführt werden oder die Benutzeroberfläche (UI)-Thread.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement kann nicht von teilweise vertrauenswürdigem Code verwendet werden. Weitere Informationen finden Sie unter [Verwenden von Bibliotheken aus teilweise vertrauenswürdigem Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement verfügt über verschiedene Eigenschaften, Methoden und Ereignisse für die Navigation. Die folgenden Elemente können Sie das Steuerelement an eine bestimmte URL navigieren, rückwärts und Vorwärts durch die Navigationsverlaufsliste und Laden Sie die Startseite und Suchseite des aktuellen Benutzers:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Wenn die Navigation nicht erfolgreich ist, wird eine Seite, der angibt, des Problems angezeigt. Navigation mit keines dieser Elemente verursacht die <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, und <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Ereignissen, die in verschiedenen Phasen der Navigation.  
  
 Diese und andere Elemente, wie z. B. die <xref:System.Windows.Forms.WebBrowser.Stop%2A> und <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methoden, können Sie die Implementierung von Benutzeroberflächen-Steuerelemente in der Anwendung, die in Internet Explorer vergleichbar. Einige Member sind nützlich, selbst wenn Sie nicht anzeigen möchten die <xref:System.Windows.Forms.WebBrowser> Steuerelement auf dem Formular. Beispielsweise können Sie die <xref:System.Windows.Forms.WebBrowser.Print%2A> Methode, um die neueste Version einer Webseite zu drucken, ohne die Seite für den Benutzer anzeigt.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement auch können Sie Inhalt anzeigen, die Sie in Ihrer Anwendung erstellen oder aus einer Datenbank oder einer Ressource abrufen. Verwenden der <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> oder <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> Eigenschaft zum Abrufen oder Festlegen der Inhalt des aktuellen Dokuments als eine Zeichenfolge oder ein Datenstream.  
  
 Können Sie auch den Inhalt einer Webseite durch Bearbeiten der <xref:System.Windows.Forms.WebBrowser.Document%2A> -Eigenschaft, die enthält ein <xref:System.Windows.Forms.HtmlDocument> Objekt, das verwalteten Zugriff auf das HTML-Dokumentobjektmodell (DOM) für die aktuelle Seite bereitstellt. Diese Eigenschaft ist nützlich, bei der Verwendung in Kombination mit der <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> -Eigenschaft, um die bidirektionalen Kommunikation zwischen dem Anwendungscode und dynamic HTML (DHTML)-Code in eine Webseite, sodass Websteuerelemente und Windows Forms-Steuerelemente in kombiniert implementieren eine einzelne Benutzeroberfläche. Sie können die <xref:System.Windows.Forms.WebBrowser.Document%2A> Eigenschaft scripting Codemethoden aus Ihrer Anwendung aufrufen. Der Skriptcode erreichen Ihrer Anwendung über die `window.external` Objekt, dies ist ein integriertes DOM-Objekt, das für den Hostzugriff bereitgestellt und die ordnet des Objekts, das Sie, für angeben die <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> Eigenschaft.  
  
 Die <xref:System.Windows.Forms.WebBrowser> -Steuerelement ist ein verwalteter Wrapper für das ActiveX- [WebBrowser-Steuerelement](http://go.microsoft.com/fwlink/?LinkId=198812), und verwendet, unabhängig davon, welche Version des Steuerelements auf dem Computer des Benutzers installiert ist.  
  
> [!NOTE]
>  Diese Klasse stellt von sicherheitsforderungen auf Klassenebene. Ein <xref:System.Security.SecurityException> wird ausgelöst, wenn eine abgeleitete Klasse oder einer der Aufrufer in der Aufrufliste keine Berechtigung volle Vertrauenswürdigkeit verfügt. Weitere Informationen zu sicherheitsforderungen, finden Sie unter [Verknüpfungsaufrufe](~/docs/framework/misc/link-demands.md) und [Vererbungsanforderungen](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.WebBrowser> Klasse kann nur verwendet werden, in Threads auf Singlethread-Apartment (STA) Modus festgelegt. Zum Verwenden dieser Klasse sicher, dass Ihre `Main` Methode markiert ist, mit der <xref:System.STAThreadAttribute> Attribut.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Adressleiste für die Verwendung mit implementieren die <xref:System.Windows.Forms.WebBrowser> Steuerelement. Dieses Beispiel benötigen Sie, dass Sie ein Formular mit einem <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`, eine <xref:System.Windows.Forms.TextBox> -Steuerelement namens `TextBoxAddress`, und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonGo`. Wenn Sie eine URL in das Textfeld eingeben und EINGABETASTE drücken oder auf die **Go** Schaltfläche, die <xref:System.Windows.Forms.WebBrowser> Steuerelement mit der angegebenen URL navigiert. Beim Navigieren durch Klicken auf einen Link, wird im Textfeld automatisch aktualisiert, um die aktuelle URL anzuzeigen.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">für abgeleitete Klassen erben von diesem Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBrowser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebBrowser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.WebBrowser" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird standardmäßig die <xref:System.Windows.Forms.WebBrowser> Steuerelement ist leer. Legen Sie es in einem ersten Dokument navigiert der <xref:System.Windows.Forms.WebBrowser.Url%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Für das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement fungiert Internet Explorer als Host.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowNavigation">
      <MemberSignature Language="C#" Value="public bool AllowNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNavigation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement nach dem Laden seiner Startseite zu einer anderen Seite navigieren kann, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement zu einer anderen Seite navigieren kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft verhindert nicht, dass Sie vor dem Laden einer Startseite durch Festlegen der <xref:System.Windows.Forms.WebBrowser.Url%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> oder <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> -Eigenschaft, jedoch wird verhindert, dass alle nachfolgenden Navigation.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowWebBrowserDrop">
      <MemberSignature Language="C#" Value="public bool AllowWebBrowserDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWebBrowserDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowWebBrowserDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowWebBrowserDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement zu Dokumenten navigiert, die auf diesem abgelegt werden, oder legt den Wert fest.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement Dokumente annimmt, die auf diesem abgelegt werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird standardmäßig die <xref:System.Windows.Forms.WebBrowser> -Steuerelement navigiert automatisch zu Dokumenten, die auf diesem abgelegt werden. Dieses Verhalten ist nützlich, wenn Sie das Steuerelement als generische Browser verwenden. Wenn Sie das Steuerelement zum Anzeigen von Inhalt, die speziell für Ihre Anwendung entworfen verwenden, wie z. B. HTML-basierte Benutzer um Unterstützung zu erhalten, legen Sie die <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> Eigenschaft `false` um die Anzeige von anderen Inhalt zu verhindern. Dies ist besonders nützlich, wenn Sie bemerkt, die Sie verwenden möchten die <xref:System.Windows.Forms.WebBrowser> Steuerelement, z. B. zum Erstellen einer Benutzeroberfläche, die Web-basierte Steuerelemente mit Windows Forms-Steuerelemente nahtlos kombiniert.  
  
 Sie können andere Standardbrowserfeatures deaktivieren, indem die <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> und <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> Eigenschaften `false`.  
  
> [!NOTE]
>  Diese Eigenschaft bezieht sich nicht auf die <xref:System.Windows.Forms.Control.AllowDrop%2A?displayProperty=nameWithType> Eigenschaft und löst keine Ereignisse für Drag & Drop wie z. B. die <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> Ereignis für das Steuerelement auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
      </Docs>
    </Member>
    <Member MemberName="AttachInterfaces">
      <MemberSignature Language="C#" Value="protected override void AttachInterfaces (object nativeActiveXObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AttachInterfaces(object nativeActiveXObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AttachInterfaces (nativeActiveXObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AttachInterfaces(System::Object ^ nativeActiveXObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeActiveXObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="nativeActiveXObject">Ein Objekt, das das zugrunde liegende ActiveX-Steuerelement darstellt.</param>
        <summary>Wird vom Steuerelement aufgerufen, wenn das zugrunde liegende ActiveX-Steuerelement erstellt wird.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Abgeleitete Klassen können diese Methode, um das zugrunde liegende ActiveX-Objekt in eine entsprechende Schnittstelle umgewandelt, und speichert sie in einer Membervariablen zwischen überschreiben. Dieser Wert muss dann in einer Überschreibung von freigegeben werden die <see cref="M:System.Windows.Forms.WebBrowserBase.DetachInterfaces" /> Methode.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Navigationsverlauf eine vorherige Seite verfügbar ist, sodass die <see cref="M:System.Windows.Forms.WebBrowser.GoBack" />-Methode erfolgreich ausgeführt werden kann.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement rückwärts navigieren kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Die <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode navigiert der <xref:System.Windows.Forms.WebBrowser> die Steuerung an die vorherige Seite im Verlauf, wenn eine verfügbar ist. Verwenden der <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> Eigenschaft, um zu bestimmen, ob Navigationsverlauf verfügbar ist und eine vorherige Seite enthält. Wenn diese Eigenschaft ist `true`die <xref:System.Windows.Forms.WebBrowser.GoBack%2A> -Methode erfolgreich ausgeführt werden. Andernfalls wird beim Aufrufen der <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode gibt den Wert der `false` und erfolgt keine Navigation.  
  
 Sie können auch behandeln die <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> Ereignis, um eine Benachrichtigung erhalten bei der <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> -Eigenschaft ändert. Behandlung dieses Ereignisses ist nützlich, z. B. so ändern Sie den Aktivierungszustand einer **wieder** Schaltfläche, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement navigiert oder verlässt den Anfang des Navigationsverlauf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> Eigenschaft implementieren eine **wieder** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement, das ähnlich wie die **zurück** Schaltfläche in Internet Explorer. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `backButton`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoBackChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoBackChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoBackChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoBackChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der <see cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />-Eigenschaftswert geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Die <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode navigiert der <xref:System.Windows.Forms.WebBrowser> die Steuerung an die vorherige Seite im Verlauf, wenn eine verfügbar ist. Die <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> Eigenschaft gibt an, ob Navigationsverlauf verfügbar ist und eine vorherige Seite enthält. Behandeln der <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> Ereignis, um eine Benachrichtigung bei der <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> -Eigenschaft ändert. Behandlung dieses Ereignisses ist nützlich, z. B. so ändern Sie den Aktivierungszustand einer **wieder** Schaltfläche, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement navigiert oder verlässt den Anfang des Navigationsverlauf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Handler für die <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> Ereignis implementiert eine **wieder** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement, das ähnlich wie die **zurück** Schaltfläche im Internet Explorer. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `backButton`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Navigationsverlauf eine nachfolgende Seite verfügbar ist, sodass die <see cref="M:System.Windows.Forms.WebBrowser.GoForward" />-Methode erfolgreich ausgeführt werden kann.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement vorwärts navigieren kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Die <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode navigiert der <xref:System.Windows.Forms.WebBrowser> zur nächsten Seite in dieser Verlauf steuern, wenn eine vorherige rückwärts navigiert verfügbar ist. Wenn diese Eigenschaft ist `true`die <xref:System.Windows.Forms.WebBrowser.GoForward%2A> -Methode erfolgreich ausgeführt werden. Andernfalls wird beim Aufrufen der <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode gibt den Wert der `false` und erfolgt keine Navigation.  
  
 Verwenden der <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> Eigenschaft, um zu bestimmen, ob Navigationsverlauf verfügbar ist und eine Seite enthält, befindet sich hinter der aktuellen Aktivität ermöglicht die <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode erfolgreich ausgeführt werden kann.  
  
 Sie können auch behandeln die <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> Ereignis, um eine Benachrichtigung erhalten bei der <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> -Eigenschaft ändert. Behandlung dieses Ereignisses ist nützlich, z. B. so ändern Sie den Aktivierungszustand einer **Vorwärts** Schaltfläche, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement navigiert oder am Ende der Navigationsverlauf verlässt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Handler für die <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> Ereignis implementiert eine **Vorwärts** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement, das ähnlich wie die **Vorwärts** Schaltfläche Internet Explorer. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonForward`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CanGoForwardChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CanGoForwardChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CanGoForwardChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CanGoForwardChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der <see cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />-Eigenschaftswert geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Die <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode navigiert der <xref:System.Windows.Forms.WebBrowser> zur nächsten Seite in dieser Verlauf steuern, wenn eine vorherige rückwärts navigiert verfügbar ist. Die <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> Eigenschaft gibt an, ob Navigationsverlauf verfügbar ist und eine Seite enthält, befindet sich hinter der aktuellen Aktivität ermöglicht die <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode erfolgreich ausgeführt werden kann. Behandeln der <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> Ereignis, um eine Benachrichtigung bei der <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> -Eigenschaft ändert. Behandlung dieses Ereignisses ist nützlich, z. B. so ändern Sie den Aktivierungszustand einer **Vorwärts** Schaltfläche, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement navigiert oder am Ende der Navigationsverlauf verlässt.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode für die Implementierung einer **Vorwärts** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement, das ähnlich wie der **Vorwärts** Schaltfläche im Internet Explorer. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonForward`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CreateSink">
      <MemberSignature Language="C#" Value="protected override void CreateSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateSink();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ordnet das zugrunde liegende ActiveX-Steuerelement einem Client zu, der Steuerelementereignisse behandeln kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie OLE-Entwicklung verwenden, die nicht verwaltete kennen `WebBrowser` ActiveX-Steuerelement, und Sie erweitern möchten, die Funktionalität eines Windows Forms <xref:System.Windows.Forms.WebBrowser> Steuerelement, das einen verwalteten Wrapper für das ActiveX-Steuerelement ist. Diese Erweiterungen können Sie Ereignisse aus dem ActiveX-Steuerelement implementieren, die nicht vom Wrappersteuerelement bereitgestellt werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Methode in einer abgeleiteten Klasse <xref:System.Windows.Forms.WebBrowser> , die als Ergänzung die normalen <xref:System.Windows.Forms.WebBrowser> Ereignisse mit der `NavigateError` Ereignis aus dem OLE `DWebBrowserEvents2` Schnittstelle.  
  
 [!code-csharp[WebBrowserExtensibility#00](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#00)]
 [!code-vb[WebBrowserExtensibility#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#00)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.DetachSink" />
      </Docs>
    </Member>
    <Member MemberName="CreateWebBrowserSiteBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.WebBrowserSiteBase CreateWebBrowserSiteBase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateWebBrowserSiteBase () As WebBrowserSiteBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::WebBrowserSiteBase ^ CreateWebBrowserSiteBase();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserSiteBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Verweis auf die nicht verwaltete Site für das <see langword="WebBrowser" />-ActiveX-Steuerelement zurück, die Sie zum Anpassen des verwalteten <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelements erweitern können.</summary>
        <returns>Eine <see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />, die die Site für das <see langword="WebBrowser" />-ActiveX-Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie OLE-Entwicklung verwenden, die nicht verwaltete kennen `WebBrowser` ActiveX-Steuerelement, und Sie erweitern möchten, die Funktionalität eines Windows Forms <xref:System.Windows.Forms.WebBrowser> Steuerelement, das einen verwalteten Wrapper für das ActiveX-Steuerelement ist. Sie können diese Erweiterungen, z. B. die Browser-Tastenkombinationen an Menüs und Tastenkombinationen anpassen oder geben Sie eine benutzerdefinierte Sicherheitskonfiguration für gehostete Dokumente verwenden.  
  
 Um dieses Feature verwenden zu können, implementieren Sie Klassen, die von erben die <xref:System.Windows.Forms.WebBrowser> und <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> Klassen. Die nicht verwaltete `WebBrowser` ActiveX-Steuerelement verwendet die geschützte <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> Methode, um die Erweiterungsschnittstellen implementiert durch den <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> Klasse. Überschreiben Sie die <xref:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase%2A> Methode, um eine Instanz Ihrer eigenen Klasse zurückzugeben, die von erben die <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> Klasse. Die <xref:System.Windows.Forms.WebBrowser.WebBrowserSite> -Klasse stellt standardimplementierungen für die OLE- `IDocHostUIHandler` Schnittstelle. Sie können eine eigene Implementierung dieser Schnittstelle bereitzustellen oder implementieren Sie jede andere `WebBrowser` ActiveX-Steuerelement-Schnittstelle vorzunehmen, um das Verhalten des Steuerelements anzupassen.  
  
> [!NOTE]
>  Wenn Sie eine eigene Implementierung für eine beliebige bereitstellen `IDocHostUIHandler` Mitglieder, müssen Sie alle Member dieser Schnittstelle implementieren.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardgröße des Steuerelements ab.</summary>
        <value>Ruft die Standardgröße des Steuerelements ab.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachInterfaces">
      <MemberSignature Language="C#" Value="protected override void DetachInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachInterfaces" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachInterfaces ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird vom Steuerelement aufgerufen, wenn das zugrunde liegende ActiveX-Steuerelement verworfen wird.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Abgeleitete Klassen können überschreiben diese Methode, um einen Verweis auf das zugrunde liegende ActiveX-Objekt freizugeben, die in einer Überschreibung von zwischengespeichert wurde die <see cref="M:System.Windows.Forms.WebBrowserBase.AttachInterfaces(System.Object)" /> Methode.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DetachSink">
      <MemberSignature Language="C#" Value="protected override void DetachSink ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DetachSink() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.DetachSink" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DetachSink ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DetachSink();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den in die <see cref="M:System.Windows.Forms.WebBrowser.CreateSink" />-Methode eingefügten Ereignisbehandlungsclient vom zugrunde liegenden ActiveX-Steuerelement frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie OLE-Entwicklung verwenden, die nicht verwaltete kennen `WebBrowser` ActiveX-Steuerelement, und Sie erweitern möchten, die Funktionalität eines Windows Forms <xref:System.Windows.Forms.WebBrowser> Steuerelement, das einen verwalteten Wrapper für das ActiveX-Steuerelement ist. Diese Erweiterungen können Sie Ereignisse aus dem ActiveX-Steuerelement implementieren, die nicht vom Wrappersteuerelement bereitgestellt werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Methode in einer abgeleiteten Klasse <xref:System.Windows.Forms.WebBrowser> , die den Standard ergänzt <xref:System.Windows.Forms.WebBrowser> Ereignisse mit der `NavigateError` Ereignis aus dem OLE `DWebBrowserEvents2` Schnittstelle.  
  
 Das vollständige Codebeispiel finden Sie unter <xref:System.Windows.Forms.WebBrowser.CreateSink%2A>.  
  
 [!code-csharp[WebBrowserExtensibility#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserExtensibility/CS/WB2.cs#10)]
 [!code-vb[WebBrowserExtensibility#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserExtensibility/VB/WB2.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.CreateSink" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Windows.Forms.WebBrowser" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HtmlDocument Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HtmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As HtmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HtmlDocument ^ Document { System::Windows::Forms::HtmlDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HtmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Windows.Forms.HtmlDocument" /> ab, das die gegenwärtig im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigte Webseite darstellt.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.HtmlDocument" />, das die aktuelle Seite darstellt, oder <see langword="null" />, wenn keine Seite geladen ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft beim Zugriff auf den Inhalt einer Webseite, die in angezeigt werden sollen die <xref:System.Windows.Forms.WebBrowser> Kontrolle über die HTML-Dokumentobjektmodell (DOM). Dies eignet sich z. B. Wenn Sie Web-based-Steuerelemente in Windows Forms-Anwendung verwenden möchten.  
  
 Können Sie diese Eigenschaft in Kombination mit der <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> -Eigenschaft, um die bidirektionalen Kommunikation zwischen einer angezeigten Webseite implementieren die <xref:System.Windows.Forms.WebBrowser> Steuerelement und Ihre Anwendung. Verwenden der <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> Methode, die auf einer Webseite aus Ihrem Clientanwendungscode implementierte Skriptmethoden aufgerufen. Der Skriptcode erreichen Ihrer Anwendung über die `window.external` Objekt, dies ist ein integriertes DOM-Objekt, das für den Hostzugriff bereitgestellt und wodurch eine Zuordnung zu einem Objekt an die von Ihnen für die <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> Eigenschaft.  
  
 Verwenden Sie den Inhalt einer Webseite als Zeichenfolge für den Zugriff auf die <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> Eigenschaft. Zugriff auf den Inhalt einer Webseite als eine <xref:System.IO.Stream>, verwenden Sie die <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.Document%2A> Eigenschaft in einem Ereignishandler für das <xref:System.Windows.Forms.WebBrowser.Navigating> Ereignis, um zu bestimmen, ob ein Formular Webseite gefüllt wurde. Wenn das Eingabefeld einen Wert nicht enthält, wird die Navigation abgebrochen.  
  
 Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`.  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.Windows.Forms.HtmlDocument" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
      </Docs>
    </Member>
    <Member MemberName="DocumentCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserDocumentCompletedEventHandler DocumentCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentCompleted As WebBrowserDocumentCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserDocumentCompletedEventHandler ^ DocumentCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserDocumentCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement das Laden eines Dokuments beendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> -Steuerelement zu einem neuen Dokument navigiert, wenn eine der folgenden Eigenschaften festgelegt ist, oder Methoden aufgerufen wird:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Behandeln der <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Ereignis, um die Benachrichtigung erhalten, wenn das neue Dokument Laden abgeschlossen ist. Wenn die <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Ereignis auftritt, das neue Dokument vollständig geladen ist, d. h. Sie können seinen Inhalt über zugreifen der <xref:System.Windows.Forms.WebBrowser.Document%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>, oder <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> Eigenschaft.  
  
 Um benachrichtigt zu werden, vor Beginn der Navigation, behandeln die <xref:System.Windows.Forms.WebBrowser.Navigating> Ereignis. Behandlung dieses Ereignisses können Sie die Navigation Abbrechen, wenn bestimmte Bedingungen nicht, z. B. erfüllt wurden, wenn der Benutzer ein Formular nicht vollständig aufgefüllt wurde. Behandeln der <xref:System.Windows.Forms.WebBrowser.Navigated> Ereignis benachrichtigt werden soll bei der <xref:System.Windows.Forms.WebBrowser> Steuerelement Navigation beendet, und laden das Dokument am neuen Speicherort begonnen wurde.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Ereignisses ein Dokument gedruckt werden soll, nachdem diese vollständig geladen wurde.  
  
 [!code-csharp[WebBrowserMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#10)]
 [!code-vb[WebBrowserMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream DocumentStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream DocumentStream" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentStream" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ DocumentStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Stream ab, der den Inhalt einer im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigten Webseite enthält, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.IO.Stream" /> mit dem Inhalt der aktuellen Webseite oder <see langword="null" />, wenn keine Seite geladen wurde. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft zum Laden einer Webseite in der <xref:System.Windows.Forms.WebBrowser> -Steuerelement aus einem <xref:System.IO.Stream> Objekt. Sie können diese Eigenschaft beispielsweise verwenden, zum Laden von Webseiten aus einer Datenbank oder einer Ressource. Beim Festlegen dieser Eigenschaft die <xref:System.Windows.Forms.WebBrowser> Steuerelement automatisch navigiert zu der zu: leere URL vor dem Laden der des angegebenen Texts. Dies bedeutet, dass die <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, und <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Ereignisse eintreten, wenn Sie diese Eigenschaft, und der Wert der Festlegen der <xref:System.Windows.Forms.WebBrowser.Url%2A> Eigenschaft nicht mehr sinnvoll ist.  
  
> [!NOTE]
>  Diese Eigenschaft enthält den Inhalt des aktuellen Dokuments, auch wenn ein anderes Dokument angefordert wurde. Wenn Sie den Wert dieser Eigenschaft festgelegt und sofort wieder abrufen, der abgerufene Wert ggf. anders als der Wert festgelegt, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement weist nicht genügend Zeit zum Laden des neuen Inhalts. Sie können in den neuen Wert Abrufen einer <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> -Ereignishandler.  
  
 Verwenden Sie den Inhalt einer Webseite als Zeichenfolge für den Zugriff auf die <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> Eigenschaft. Sie können auch den Inhalt der Seite mit den HTML-Dokumentobjektmodell (DOM) zugreifen, durch die <xref:System.Windows.Forms.WebBrowser.Document%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="DocumentText">
      <MemberSignature Language="C#" Value="public string DocumentText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentText" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den HTML-Inhalt der im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigten Seite ab oder legt diesen fest.</summary>
        <value>Der HTML-Text der angezeigten Seite oder eine leere Zeichenfolge (""), wenn kein Dokument geladen wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie den Inhalt einer HTML-Seite in bearbeiten möchten, verwenden Sie diese Eigenschaft die <xref:System.Windows.Forms.WebBrowser> -Steuerelements Zeichenfolge Verarbeitung Tools mit. Sie können diese Eigenschaft, z. B. beim Laden von Seiten aus einer Datenbank oder zum Analysieren der Seiten, die mithilfe von regulären Ausdrücken verwenden. Beim Festlegen dieser Eigenschaft die <xref:System.Windows.Forms.WebBrowser> Steuerelement automatisch navigiert zu der zu: leere URL vor dem Laden der des angegebenen Texts. Dies bedeutet, dass die <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, und <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Ereignisse eintreten, wenn Sie diese Eigenschaft, und der Wert der Festlegen der <xref:System.Windows.Forms.WebBrowser.Url%2A> Eigenschaft nicht mehr sinnvoll ist.  
  
> [!NOTE]
>  Diese Eigenschaft enthält den Text des aktuellen Dokuments, auch wenn ein anderes Dokument angefordert wurde. Wenn Sie den Wert dieser Eigenschaft festgelegt und sofort wieder abrufen, der abgerufene Wert ggf. anders als der Wert festgelegt, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement weist nicht genügend Zeit zum Laden des neuen Inhalts. Sie können in den neuen Wert Abrufen einer <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> -Ereignishandler. Alternativ können Sie den Thread blockieren, bis das Dokument, durch Aufrufen geladen ist der <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> Methode in einer Schleife, bis die <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> Eigenschaft gibt den Wert, der Sie ursprünglich wurde festgelegt.  
  
 Zugriff auf den Inhalt einer Webseite als eine <xref:System.IO.Stream>, verwenden Sie die <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> Eigenschaft. Sie können auch den Inhalt der Seite mit den HTML-Dokumentobjektmodell (DOM) zugreifen, durch die <xref:System.Windows.Forms.WebBrowser.Document%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.DocumentText%2A> Eigenschaft programmgesteuert Dokumentinhalt Ihrer Wahl anzeigen. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`.  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      </Docs>
    </Member>
    <Member MemberName="DocumentTitle">
      <MemberSignature Language="C#" Value="public string DocumentTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentTitle { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Titel des gegenwärtig im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigten Dokuments ab.</summary>
        <value>Der Titel des aktuellen Dokuments oder eine leere Zeichenfolge (""), wenn kein Dokument geladen wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist z. B. dann sinnvoll, wenn den Titel des Dokuments in der Titelleiste der Anwendung angezeigt werden soll. Wenn kein Titel für das aktuelle Dokument definiert wurde, wird diese Eigenschaft auf den Speicherort des Dokuments und einen Dateinamen festgelegt.  
  
 Behandeln der <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> Ereignis, um den Titel im Titel aktualisieren Leiste, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement zu einem neuen Dokument navigiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> -Eigenschaft auf die Titelleiste des Formulars mit dem Titel des aktuellen Dokuments zu aktualisieren. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      </Docs>
    </Member>
    <Member MemberName="DocumentTitleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DocumentTitleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DocumentTitleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DocumentTitleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DocumentTitleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der <see cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />-Eigenschaftswert geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis zum Aktualisieren der Titelleiste der Anwendung mit dem aktuellen Wert behandeln die <xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Handler für das <xref:System.Windows.Forms.WebBrowser.DocumentTitleChanged> Ereignis, um die Titelleiste des Formulars mit dem Titel des aktuellen Dokuments zu aktualisieren. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.WebBrowser#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.WebBrowser#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="C#" Value="public string DocumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.DocumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des gegenwärtig im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigten Dokuments ab.</summary>
        <value>Der Typ des aktuellen Dokuments.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert dieser Eigenschaft entspricht der Multipurpose Internet Mail Extensions (MIME)-Typ des Dokuments.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserEncryptionLevel EncryptionLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionLevel As WebBrowserEncryptionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserEncryptionLevel EncryptionLevel { System::Windows::Forms::WebBrowserEncryptionLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserEncryptionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Verschlüsselungsmethode angibt, die vom gegenwärtig im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigten Dokument verwendet wird.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft mit der <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> Ereignis so implementieren Sie einen Indikator in der Benutzeroberfläche der Anwendung das Schlosssymbol in Internet Explorer ähnelt. Wenn das aktuelle Dokument nicht verschlüsselt ist, wird der Wert dieser Eigenschaft <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Insecure?displayProperty=nameWithType>. Wenn die <xref:System.Windows.Forms.WebBrowser> -Steuerelement zeigt eine Webseite, die mehrere Frames mit Inhalt vom anderen Verschlüsselungsstufen enthält, wird des Werts dieser Eigenschaft <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Mixed?displayProperty=nameWithType>. Wenn die Verschlüsselungsstufe nicht bekannt ist, wird der Wert dieser Eigenschaft <xref:System.Windows.Forms.WebBrowserEncryptionLevel.Unknown?displayProperty=nameWithType>. Andere Werte deuten auf den Typ der Verschlüsselung vorhanden. Um das Verhalten von das Schlosssymbol in Internet Explorer zu imitieren, zeigen Sie den Verschlüsselungstyp in einer QuickInfo angezeigt, die angezeigt wird, wenn der Mauszeiger über dem Indikator befindet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionLevelChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EncryptionLevelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EncryptionLevelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event EncryptionLevelChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EncryptionLevelChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das  <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement zu oder von einer Website navigiert, in der Verschlüsselung verwendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis mit der <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> Eigenschaft so implementieren Sie einen Indikator in der Benutzeroberfläche der Anwendung das Schlosssymbol in Internet Explorer ähnelt. Überprüfen Sie den Wert der in einem Ereignishandler für dieses Ereignis, die <xref:System.Windows.Forms.WebBrowser.EncryptionLevel%2A> -Eigenschaft können Sie bestimmen, ob der Indikator angezeigt werden soll. Um das Verhalten von das Schlosssymbol in Internet Explorer zu imitieren, können Sie auch eine QuickInfo bereitstellen, die die Verschlüsselungsstufe anzeigt, wenn der Mauszeiger über dem Indikator befindet.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.WebBrowser> mit dem Namen `WebBrowser1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.WebBrowser.EncryptionLevelChanged> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#647](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#647)]
 [!code-vb[System.Windows.Forms.EventExamples#647](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#647)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="FileDownload">
      <MemberSignature Language="C#" Value="public event EventHandler FileDownload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FileDownload" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.FileDownload" />
      <MemberSignature Language="VB.NET" Value="Public Event FileDownload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FileDownload;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement eine Datei herunterlädt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.WebBrowser.FileDownload> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.WebBrowser> mit dem Namen `WebBrowser1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.WebBrowser.FileDownload> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#648](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#648)]
 [!code-vb[System.Windows.Forms.EventExamples#648](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#648)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public override bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement oder ein zugehöriges untergeordnetes Fenster den Eingabefokus besitzt.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement oder ein zugehöriges untergeordnetes Fenster den Eingabefokus besitzt, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben der <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> verwenden Sie Eigenschaft in einer abgeleiteten Klasse der Basisklasse <see cref="P:System.Windows.Forms.WebBrowser.Focused" /> Eigenschaft, um die grundlegende Implementierung zu erweitern. Andernfalls müssen Sie alle Implementierung bereitstellen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public bool GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Function GoBack () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoBack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Veranlasst, dass das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement zur vorherigen Seite (sofern vorhanden) im Navigationsverlauf navigiert.</summary>
        <returns>
          <see langword="true" />, wenn die Navigation erfolgreich ausgeführt wird, <see langword="false" />, wenn im Navigationsverlauf keine vorherige Seite verfügbar ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Können Sie die <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode für die Implementierung einer **wieder** Schaltfläche mit dem Umwandlungsoperator in Internet Explorer, der Ihre Benutzer zu einer vorherigen Seite im Navigationsverlauf zurückgegeben werden kann.  
  
 Verwenden der <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> Eigenschaft, um zu bestimmen, ob der Navigationsverlauf verfügbar ist und eine vorherige Seite enthält. Behandeln der <xref:System.Windows.Forms.WebBrowser.CanGoBackChanged> Ereignis, um eine Benachrichtigung bei der <xref:System.Windows.Forms.WebBrowser.CanGoBack%2A> Eigenschaftswert ändert. Behandlung dieses Ereignisses ist nützlich, z. B. so ändern Sie den Aktivierungszustand einer **wieder** Schaltfläche, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement navigiert oder verlässt den Anfang des Navigationsverlauf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode für die Implementierung einer **wieder** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement in Internet Explorer ähnelt. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `backButton`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.WebBrowser#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.WebBrowser#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public bool GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Function GoForward () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoForward();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Veranlasst, dass das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement zur nächsten Seite (sofern vorhanden) im Navigationsverlauf navigiert.</summary>
        <returns>
          <see langword="true" />, wenn die Navigation erfolgreich ausgeführt wird, <see langword="false" />, wenn im Navigationsverlauf keine nachfolgende Seite verfügbar ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Können Sie die <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode für die Implementierung einer **Vorwärts** Schaltfläche ähnelt in Internet Explorer, wodurch Benutzer mit der nächsten Seite im Navigationsverlauf zurück, nach dem rückwärts navigieren.  
  
 Verwenden der <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> Eigenschaft, um zu bestimmen, ob Navigationsverlauf verfügbar ist und eine Seite befindet sich hinter der aktuellen Aktivität enthält. Behandeln der <xref:System.Windows.Forms.WebBrowser.CanGoForwardChanged> Ereignis, um eine Benachrichtigung bei der <xref:System.Windows.Forms.WebBrowser.CanGoForward%2A> Eigenschaftswert ändert. Behandlung dieses Ereignisses ist nützlich, z. B. so ändern Sie den Aktivierungszustand einer **Vorwärts** Schaltfläche, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement navigiert oder am Ende der Navigationsverlauf verlässt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode für die Implementierung einer **Vorwärts** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement in Internet Explorer ähnelt. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonForward`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.WebBrowser#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.WebBrowser#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoHome">
      <MemberSignature Language="C#" Value="public void GoHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoHome();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Veranlasst, dass das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement zur Homepage des aktuellen Benutzers navigiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Implementieren einer **Home** Schaltfläche in Internet Explorer ähnelt. Der Benutzer kann eine Startseite im Angeben der **Internetoptionen** Dialogfeld verfügbar sind in der Systemsteuerung oder über die **Tools** in Internet Explorer im Menü.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.GoHome%2A> Methode für die Implementierung einer **Home** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement in Internet Explorer ähnelt. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonHome`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#11)]
 [!code-csharp[System.Windows.Forms.WebBrowser#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#11)]
 [!code-vb[System.Windows.Forms.WebBrowser#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="GoSearch">
      <MemberSignature Language="C#" Value="public void GoSearch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoSearch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.GoSearch" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoSearch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoSearch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Veranlasst, dass das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement zur Standardsuchseite des aktuellen Benutzers navigiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode können Sie eine Suchfunktion mit dem Umwandlungsoperator in Internet Explorer implementieren. Abhängig von der Version von Internet Explorer installiert ist, kann der Benutzer eine Standardsuchseite im Angeben der **Internetoptionen** Dialogfeld verfügbar sind in der Systemsteuerung oder über die **Tools** im Menü Internet Explorer.  
  
 Standardsuchseite befindet sich in der Registrierung unter dem `HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main\Search Page` Registrierungsschlüssel. Mit höheren Versionen von Internet Explorer muss dieser Registrierungsschlüssel geändert werden, um von dieser Methode verwendeten Standardsuchseite zu ändern. Rufen Sie zum Verwenden einer Suchseite außer dem Standardnamen der <xref:System.Windows.Forms.WebBrowser.Navigate%2A> Methode, oder geben Sie die <xref:System.Windows.Forms.WebBrowser.Url%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.GoSearch%2A> Methode für die Implementierung einer **Suche** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement in Internet Explorer ähnelt. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonSearch`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#12)]
 [!code-csharp[System.Windows.Forms.WebBrowser#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#12)]
 [!code-vb[System.Windows.Forms.WebBrowser#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsBusy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBusy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBusy { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement gegenwärtig ein neues Dokument lädt.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement gegenwärtig ein Dokument lädt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft ist `true`, können Sie die <xref:System.Windows.Forms.WebBrowser.Stop%2A> Methode, um die aktuelle Navigation anhalten, bevor das neue Dokument vollständig geladen ist. Verwenden der <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> -Eigenschaft können Sie den genauen Navigationszustand des bestimmen die <xref:System.Windows.Forms.WebBrowser> Steuerelement. Die <xref:System.Windows.Forms.WebBrowser.IsBusy%2A> Eigenschaftswert ist "false", wenn die <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> Eigenschaftswert ist <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.ReadyState" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="IsOffline">
      <MemberSignature Language="C#" Value="public bool IsOffline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsOffline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffline { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, mit dem angegeben wird, ob sich das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement im Offlinemodus befindet.</summary>
        <value>
          <see langword="true" />, wenn sich das <see cref="T:System.Windows.Forms.WebBrowser" /> im Offlinemodus befindet, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Offlinemodus befindet die <xref:System.Windows.Forms.WebBrowser> Steuerelement gezwungen, Laden von Webseiten aus dem lokalen Cache, anstatt sie herunterzuladen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsWebBrowserContextMenuEnabled">
      <MemberSignature Language="C#" Value="public bool IsWebBrowserContextMenuEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsWebBrowserContextMenuEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebBrowserContextMenuEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Kontextmenü des <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelements aktiviert ist, oder ruft diesen ab.</summary>
        <value>
          <see langword="true" />, wenn das Kontextmenü des <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelements aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wird standardmäßig die <xref:System.Windows.Forms.WebBrowser> Steuerelement wird ein Kontextmenü angezeigt, wenn ein Benutzer klickt. Dieses Verhalten ist nützlich, wenn Sie das Steuerelement als generische Browser verwenden. Wenn Sie bemerkt, die Sie verwenden möchten die <xref:System.Windows.Forms.WebBrowser> Steuerelementsatz, z. B. zum Erstellen einer Benutzeroberfläche, die Web-basierte Steuerelemente mit Windows Forms-Steuerelemente nahtlos kombiniert die <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> Eigenschaft auf "false".  
  
 Sie können andere Standardbrowserfeatures deaktivieren, indem die <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> und <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> Eigenschaften auf "false".  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt das Dokument am angegebenen Speicherort in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">Die URL des zu ladenden Dokuments.</param>
        <summary>Lädt das Dokument an der angegebenen URL (Uniform Resource Locator) in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement und ersetzt dabei das vorherige Dokument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Wenn Sie diese Überladung aufrufen der <xref:System.Windows.Forms.WebBrowser> Steuerelement an den angegebenen URI navigiert, und fügt es am Ende der Verlaufsliste. Verwenden der <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode, um das Steuerelement zu einer vorherigen Seite im Navigationsverlauf zurückzugeben. Verwenden der <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode nach rückwärts navigieren zu einer der folgenden Seiten im Navigationsverlauf zurückkehren.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert, speichert es Zeit durch eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist, anstatt die Seite erneut herunterzuladen. Verwenden der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode zum Erzwingen der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt.  
  
 Sie können die <xref:System.Windows.Forms.WebBrowser.Navigate%2A> Methode für die Implementierung einer Adressleiste in Internet Explorer ähnelt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="url">Ein <see cref="T:System.Uri" />, der die URL des zu ladenden Dokuments darstellt.</param>
        <summary>Lädt das Dokument, dessen Speicherort vom angegebenen <see cref="T:System.Uri" /> festgelegt wird, in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement und ersetzt dabei das vorherige Dokument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Wenn Sie diese Überladung aufrufen der <xref:System.Windows.Forms.WebBrowser> Steuerelement an den angegebenen URI navigiert, und fügt es am Ende der Verlaufsliste. Verwenden der <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode, um das Steuerelement zu einer vorherigen Seite im Navigationsverlauf zurückzugeben. Verwenden der <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode nach rückwärts navigieren zu einer der folgenden Seiten im Navigationsverlauf zurückkehren.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert, speichert es Zeit durch eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist, anstatt die Seite erneut herunterzuladen. Verwenden der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode zum Erzwingen der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt.  
  
 Sie können die <xref:System.Windows.Forms.WebBrowser.Navigate%2A> Methode für die Implementierung einer Adressleiste in Internet Explorer ähnelt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.Navigate%2A> Methode für die Implementierung für einer Adressleiste der <xref:System.Windows.Forms.WebBrowser> Steuerelement. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`, <xref:System.Windows.Forms.TextBox> -Steuerelement namens `TextBoxAddress`, und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonGo`. Wenn Sie eine URL in das Textfeld eingeben und EINGABETASTE drücken oder auf die **Go** Schaltfläche, die <xref:System.Windows.Forms.WebBrowser> Steuerelement mit der angegebenen URL navigiert. Beim Navigieren durch Klicken auf einen Link, wird im Textfeld automatisch aktualisiert, um die aktuelle URL anzuzeigen.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <exception cref="T:System.ArgumentException">Der Wert des <paramref name="url" />-Parameters stellt keinen absoluten URI dar. Weitere Informationen finden Sie unter <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, bool newWindow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="urlString">Die URL des zu ladenden Dokuments.</param>
        <param name="newWindow">
          <see langword="true" />, wenn das Dokument in ein neues Browserfenster geladen werden soll, <see langword="false" />, wenn es in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement geladen werden soll.</param>
        <summary>Lädt das Dokument an der angegebenen URL (Uniform Resource Locator) in ein neues Browserfenster oder in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Beim Aufrufen dieser Überladung mit einem `newWindow` -Parameterwert `false`, das Steuerelement normalerweise an den angegebenen URI navigiert, und fügt den URI an das Ende der Verlaufsliste. Beim Aufrufen dieser Überladung mit einem `newWindow` -Parameterwert `true`, die <xref:System.Windows.Forms.WebBrowser> Steuerelement lädt das Dokument am angegebenen URI in ein neues Internet Explorer-Fenster, die einen eigenen Navigationsverlauf verwaltet. Sie können behandeln die <xref:System.Windows.Forms.WebBrowser.NewWindow> Ereignis benachrichtigt werden soll, bevor ein neues Browserfenster geöffnet wird, sodass Sie zum Abbrechen der Aktion bei Bedarf.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert oder eine Seite in einem separaten Browserfenster geladen, speichert es Zeit, die Seite erneut herunterzuladen, anstatt eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist. Verwenden der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode zum Erzwingen der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt. Wenn eine Seite in einem separaten Fenster von Internet Explorer geladen wird, kann der Benutzer durch Klicken auf die neueste Version Abrufen der **aktualisieren** Schaltfläche.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">Die URL des zu ladenden Dokuments.</param>
        <param name="targetFrameName">Der Name des Frames, in den das Dokument geladen werden soll.</param>
        <summary>Lädt das Dokument an der angegebenen URL (Uniform Resource Locator) in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement und ersetzt dabei den Inhalt des Webseitenframes mit dem angegebenen Namen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Wenn Sie diese Überladung aufrufen der <xref:System.Windows.Forms.WebBrowser> Steuerelement lädt das Dokument am angegebenen URI in Webseitenframes mit dem angegebenen Namen und fügt den URI an das Ende der Verlaufsliste. Wenn angegebene Framename ungültig ist, wird das Dokument in ein neues Internet Explorer-Fenster geladen.  
  
 Verwenden der <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode, um das Steuerelement zu einer vorherigen Seite im Navigationsverlauf zurückzugeben. Verwenden der <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode nach rückwärts navigieren zu einer der folgenden Seiten im Navigationsverlauf zurückkehren.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert, speichert es Zeit durch eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist, anstatt die Seite erneut herunterzuladen. Verwenden der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode zum Erzwingen der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, bool newWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, bool newWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, newWindow As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, bool newWindow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="newWindow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url">Ein <see cref="T:System.Uri" />, der die URL des zu ladenden Dokuments darstellt.</param>
        <param name="newWindow">
          <see langword="true" />, wenn das Dokument in ein neues Browserfenster geladen werden soll, <see langword="false" />, wenn es in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement geladen werden soll.</param>
        <summary>Lädt das Dokument, dessen Speicherort vom angegebenen <see cref="T:System.Uri" /> festgelegt wird, in ein neues Browserfenster oder in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Beim Aufrufen dieser Überladung mit einem `newWindow` -Parameterwert `false`, das Steuerelement normalerweise an den angegebenen URI navigiert, und fügt den URI an das Ende der Verlaufsliste. Beim Aufrufen dieser Überladung mit einem `newWindow` -Parameterwert `true`, die <xref:System.Windows.Forms.WebBrowser> Steuerelement lädt das Dokument am angegebenen URI in ein neues Internet Explorer-Fenster, die einen eigenen Navigationsverlauf verwaltet. Sie können behandeln die <xref:System.Windows.Forms.WebBrowser.NewWindow> Ereignis benachrichtigt werden soll, bevor ein neues Browserfenster geöffnet wird, sodass Sie zum Abbrechen der Aktion bei Bedarf.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert oder eine Seite in einem separaten Browserfenster geladen, speichert es Zeit, die Seite erneut herunterzuladen, anstatt eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist. Verwenden der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode zum Erzwingen der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt. Wenn eine Seite in einem separaten Fenster von Internet Explorer geladen wird, kann der Benutzer durch Klicken auf die neueste Version Abrufen der **aktualisieren** Schaltfläche.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <exception cref="T:System.ArgumentException">Der Wert des <paramref name="url" />-Parameters stellt keinen absoluten URI dar. Weitere Informationen finden Sie unter <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Ein <see cref="T:System.Uri" />, der die URL des zu ladenden Dokuments darstellt.</param>
        <param name="targetFrameName">Der Name des Frames, in den das Dokument geladen werden soll.</param>
        <summary>Lädt das Dokument, dessen Speicherort vom angegebenen <see cref="T:System.Uri" /> festgelegt wird, in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement und ersetzt dabei den Inhalt des Webseitenframes mit dem angegebenen Namen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Wenn Sie diese Überladung aufrufen der <xref:System.Windows.Forms.WebBrowser> Steuerelement lädt das Dokument am angegebenen URI in Webseitenframes mit dem angegebenen Namen und fügt den URI an das Ende der Verlaufsliste. Wenn angegebene Framename ungültig ist, wird das Dokument in ein neues Internet Explorer-Fenster geladen.  
  
 Verwenden der <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode, um das Steuerelement zu einer vorherigen Seite im Navigationsverlauf zurückzugeben. Verwenden der <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode nach rückwärts navigieren zu einer der folgenden Seiten im Navigationsverlauf zurückkehren.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert, speichert es Zeit durch eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist, anstatt die Seite erneut herunterzuladen. Verwenden der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode zum Erzwingen der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <exception cref="T:System.ArgumentException">Der Wert des <paramref name="url" />-Parameters stellt keinen absoluten URI dar. Weitere Informationen finden Sie unter <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string urlString, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string urlString, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (urlString As String, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ urlString, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlString" Type="System.String" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlString">Die URL des zu ladenden Dokuments.</param>
        <param name="targetFrameName">Der Name des Frames, in den das Dokument geladen werden soll.</param>
        <param name="postData">HTTP-POST-Daten, z. B. Formulardaten.</param>
        <param name="additionalHeaders">HTTP-Header, die den Standardheadern hinzugefügt werden sollen.</param>
        <summary>Lädt das Dokument an der angegebenen URL (Uniform Resource Locator) anhand der angegebenen HTTP-Daten in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement und ersetzt dabei den Inhalt des Webseitenframes mit dem angegebenen Namen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Wenn Sie diese Überladung aufrufen der <xref:System.Windows.Forms.WebBrowser> Steuerelement lädt das Dokument am angegebenen URI in Webseitenframes mit dem angegebenen Namen und fügt den URI an das Ende der Verlaufsliste. Wenn angegebene Framename ungültig ist, wird das Dokument in ein neues Internet Explorer-Fenster geladen.  
  
 Verwenden der <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode, um das Steuerelement zu einer vorherigen Seite im Navigationsverlauf zurückzugeben. Verwenden der <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode nach rückwärts navigieren zu einer der folgenden Seiten im Navigationsverlauf zurückkehren.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert, speichert es Zeit durch eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist, anstatt die Seite erneut herunterzuladen. Verwenden der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode zum Erzwingen der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri url, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri url, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (url As Uri, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ url, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Ein <see cref="T:System.Uri" />, der die URL des zu ladenden Dokuments darstellt.</param>
        <param name="targetFrameName">Der Name des Frames, in den das Dokument geladen werden soll.</param>
        <param name="postData">HTTP-POST-Daten, z. B. Formulardaten.</param>
        <param name="additionalHeaders">HTTP-Header, die den Standardheadern hinzugefügt werden sollen.</param>
        <summary>Lädt das Dokument, dessen Speicherort vom angegebenen <see cref="T:System.Uri" /> festgelegt wird, anhand der angegebenen HTTP-Daten in das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement und ersetzt dabei den Inhalt des Webseitenframes mit dem angegebenen Namen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Wenn Sie diese Überladung aufrufen der <xref:System.Windows.Forms.WebBrowser> Steuerelement lädt das Dokument am angegebenen URI in Webseitenframes mit dem angegebenen Namen und fügt den URI an das Ende der Verlaufsliste. Wenn angegebene Framename ungültig ist, wird das Dokument in ein neues Internet Explorer-Fenster geladen.  
  
 Verwenden der <xref:System.Windows.Forms.WebBrowser.GoBack%2A> Methode, um das Steuerelement zu einer vorherigen Seite im Navigationsverlauf zurückzugeben. Verwenden der <xref:System.Windows.Forms.WebBrowser.GoForward%2A> Methode nach rückwärts navigieren zu einer der folgenden Seiten im Navigationsverlauf zurückkehren.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert, speichert es Zeit durch eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist, anstatt die Seite erneut herunterzuladen. Verwenden der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode zum Erzwingen der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <exception cref="T:System.ArgumentException">Der Wert des <paramref name="url" />-Parameters stellt keinen absoluten URI dar. Weitere Informationen finden Sie unter <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As WebBrowserNavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatedEventHandler ^ Navigated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement zu einem neuen Dokument navigiert ist und mit dem Laden des Dokuments begonnen hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> -Steuerelement zu einem neuen Dokument navigiert, wenn eine der folgenden Eigenschaften festgelegt ist, oder Methoden aufgerufen wird:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Behandeln der <xref:System.Windows.Forms.WebBrowser.Navigated> Ereignis benachrichtigt werden soll bei der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu einem neuen Dokument navigiert. Wenn die <xref:System.Windows.Forms.WebBrowser.Navigated> Ereignis auftritt, das neue Dokument begonnen wurde geladen, d. h., Sie erreichen den geladenen Inhalt über die <xref:System.Windows.Forms.WebBrowser.Document%2A>, <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>, und <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A> Eigenschaften. Behandeln der <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Ereignis benachrichtigt werden soll bei der <xref:System.Windows.Forms.WebBrowser> -Steuerelement das Laden des neuen Dokuments beendet.  
  
 Sie können auch Benachrichtigung empfangen, vor Beginn der Navigation durch Behandeln der <xref:System.Windows.Forms.WebBrowser.Navigating> Ereignis. Behandlung dieses Ereignisses können Sie die Navigation Abbrechen, wenn bestimmte Bedingungen nicht erfüllt wurden, z. B. der Benutzer wurde nicht vollständig ein Formular ausfüllt.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Handler für das <xref:System.Windows.Forms.WebBrowser.Navigated> -Ereignis implementieren eine Adressleiste der <xref:System.Windows.Forms.WebBrowser> Steuerelement. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`, <xref:System.Windows.Forms.TextBox> -Steuerelement namens `TextBoxAddress`, und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonGo`. Wenn Sie eine URL in das Textfeld eingeben und EINGABETASTE drücken oder auf die **Go** Schaltfläche, die <xref:System.Windows.Forms.WebBrowser> Steuerelement mit der angegebenen URL navigiert. Beim Navigieren durch Klicken auf einen Link, wird im Textfeld automatisch aktualisiert, um die aktuelle URL anzuzeigen.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserNavigatingEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As WebBrowserNavigatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserNavigatingEventHandler ^ Navigating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserNavigatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement zu einem neuen Dokument navigiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> -Steuerelement zu einem neuen Dokument navigiert, wenn eine der folgenden Eigenschaften festgelegt ist, oder Methoden aufgerufen wird:  
  
-   <xref:System.Windows.Forms.WebBrowser.Url%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentText%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.DocumentStream%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.Navigate%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoBack%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoForward%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoHome%2A>  
  
-   <xref:System.Windows.Forms.WebBrowser.GoSearch%2A>  
  
 Sie können behandeln die <xref:System.Windows.Forms.WebBrowser.Navigating> Ereignis, um die Navigation Abbrechen, wenn bestimmte Bedingungen nicht, z. B. erfüllt wurden, wenn der Benutzer ein Formular nicht vollständig aufgefüllt wurde. Legen Sie zum Abbrechen der Navigation die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs> an den Ereignishandler übergebene Objekt `true`. Sie können dieses Objekt auch verwenden, die URL des neuen Dokuments durch Abrufen der <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.Url%2A?displayProperty=nameWithType> Eigenschaft. Wenn das neue Dokument in einem Frame Webseite angezeigt wird, können Sie den Namen des Frames durch Abrufen der <xref:System.Windows.Forms.WebBrowserNavigatingEventArgs.TargetFrameName%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Behandeln der <xref:System.Windows.Forms.WebBrowser.Navigated> Ereignis benachrichtigt werden soll bei der <xref:System.Windows.Forms.WebBrowser> Steuerelement Navigation beendet, und laden das Dokument am neuen Speicherort begonnen wurde. Behandeln der <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Ereignis benachrichtigt werden soll bei der <xref:System.Windows.Forms.WebBrowser> -Steuerelement das Laden des neuen Dokuments beendet.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Handler für das <xref:System.Windows.Forms.WebBrowser.Navigating> Ereignis, um die Navigation "Abbrechen", wenn ein Formular für die Webseite nicht aufgefüllt wurden. Die <xref:System.Windows.Forms.WebBrowser.Document%2A> Eigenschaft wird verwendet, um zu bestimmen, ob das Formulareingabefeld einen Wert enthält.  
  
 Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und die Formular-Klasse verfügt über eine <xref:System.Runtime.InteropServices.ComVisibleAttribute> für COM verfügbar zu machen  
  
 Für eine gesamte Codebeispiel dargestellt, dass Sie den folgenden Code, finden Sie unter einfügen können [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-csharp[WebBrowserMisc#30](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#30)]
 [!code-vb[WebBrowserMisc#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#30)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentStream" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentText" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.Url" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler NewWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler NewWindow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Event NewWindow As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ NewWindow;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor dem Öffnen eines neuen Browserfensters ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> -Steuerelement geöffnet wird, ein separates Browserfenster beim die entsprechende Überladung der der <xref:System.Windows.Forms.WebBrowser.Navigate%2A> Methode aufgerufen wird oder wenn der Benutzer klickt der **in neuem Fenster öffnen** Option des Kontextmenüs Browser Wenn der Mauszeiger die Form über einen Link bewegt wird. Sie können das Kontextmenü deaktivieren, indem die <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> Eigenschaft auf "false".  
  
 Die <xref:System.Windows.Forms.WebBrowser.NewWindow> Ereignis tritt auf, bevor die neuen Browserfenster geöffnet wird. Sie können dieses Ereignis behandeln, um zu verhindern, dass das Fenster geöffnet wird, wenn bestimmte Bedingungen nicht erfüllt wurden.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.WebBrowser.NewWindow> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.WebBrowser> mit dem Namen `WebBrowser1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.WebBrowser.NewWindow> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#651](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#651)]
 [!code-vb[System.Windows.Forms.EventExamples#651](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#651)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
        <altmember cref="T:System.ComponentModel.CancelEventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="ObjectForScripting">
      <MemberSignature Language="C#" Value="public object ObjectForScripting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectForScripting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ObjectForScripting" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectForScripting As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectForScripting { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, auf das über Skriptcode zugegriffen werden kann, der sich in einer im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigten Webseite befindet, oder legt dieses fest.</summary>
        <value>Das Objekt, das dem Skriptcode verfügbar gemacht wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um die Kommunikation zwischen einer Webseite, die von gehosteten ermöglichen die <xref:System.Windows.Forms.WebBrowser> -Steuerelement und die Anwendung, enthält die <xref:System.Windows.Forms.WebBrowser> Steuerelement. Diese Eigenschaft ermöglicht die Integration von dynamic HTML (DHTML)-Code mit Ihrem Clientanwendungscode auf niedriger Ebene. Das Objekt angegeben wird, für diese Eigenschaft für Webseitenskript als verfügbar ist die `window.external` -Objekt, das eine integrierte DOM-Objekt, das für den Hostzugriff bereitgestellt wird.  
  
 Sie können diese Eigenschaft festlegen, um ein COM-sichtbaren Objekt für die die öffentlichen Eigenschaften und Methoden für Skriptcode verfügbar gemacht werden soll. Sie können eine Klasse, die COM-sichtbar machen, indem markieren ihn mit der <xref:System.Runtime.InteropServices.ComVisibleAttribute>.  
  
 Verwenden Sie zum Aufrufen von Funktionen in Ihre Webseite aus Ihrem Clientanwendungscode der <xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A?displayProperty=nameWithType> Methode der <xref:System.Windows.Forms.HtmlDocument> Objekt abgerufen werden können, aus der <xref:System.Windows.Forms.WebBrowser.Document%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> Eigenschaft. Im Beispiel die <xref:System.Windows.Forms.WebBrowser.ObjectForScripting%2A> -Eigenschaft auf das aktuelle Formular festgelegt wird.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist eine Instanz eines nicht öffentlichen Typs.  
  
 - oder -   
  
 Der beim Festlegen dieser Eigenschaft angegebene Wert ist eine Instanz eines nicht für COM sichtbaren Typs. Weitere Informationen finden Sie unter <see cref="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
        <altmember cref="M:System.Windows.Forms.HtmlDocument.InvokeScript(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoBackChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoBackChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoBackChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoBackChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoBackChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnCanGoBackChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoBack" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCanGoForwardChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCanGoForwardChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCanGoForwardChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCanGoForwardChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCanGoForwardChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.CanGoForward" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnDocumentCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentCompleted (System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentCompleted(class System.Windows.Forms.WebBrowserDocumentCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentCompleted (e As WebBrowserDocumentCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentCompleted(System::Windows::Forms::WebBrowserDocumentCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnDocumentCompleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
        <altmember cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDocumentTitleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDocumentTitleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDocumentTitleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDocumentTitleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDocumentTitleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnEncryptionLevelChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEncryptionLevelChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEncryptionLevelChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEncryptionLevelChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEncryptionLevelChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.EncryptionLevel" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFileDownload">
      <MemberSignature Language="C#" Value="protected virtual void OnFileDownload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFileDownload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFileDownload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFileDownload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.CancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.FileDownload" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnFileDownload%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.FileDownload" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigated">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigated (System.Windows.Forms.WebBrowserNavigatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigated(class System.Windows.Forms.WebBrowserNavigatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigated (e As WebBrowserNavigatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigated(System::Windows::Forms::WebBrowserNavigatedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.Navigated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnNavigated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigated" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNavigating">
      <MemberSignature Language="C#" Value="protected virtual void OnNavigating (System.Windows.Forms.WebBrowserNavigatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNavigating(class System.Windows.Forms.WebBrowserNavigatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNavigating (e As WebBrowserNavigatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNavigating(System::Windows::Forms::WebBrowserNavigatingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.Navigating" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnNavigating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.Navigating" />
        <altmember cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnNewWindow">
      <MemberSignature Language="C#" Value="protected virtual void OnNewWindow (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewWindow(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewWindow (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewWindow(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.CancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.NewWindow" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnNewWindow%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.NewWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnProgressChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnProgressChanged (System.Windows.Forms.WebBrowserProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressChanged(class System.Windows.Forms.WebBrowserProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressChanged (e As WebBrowserProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressChanged(System::Windows::Forms::WebBrowserProgressChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnProgressChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnStatusTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStatusTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStatusTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStatusTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStatusTextChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.WebBrowser.OnStatusTextChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für das genannte Steuerelement nicht relevant.</summary>
        <value>
          <see cref="F:System.Windows.Forms.Padding.Empty" />
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.WebBrowser.Padding" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl Sie abrufen können, oder legen Sie den Wert des der <xref:System.Windows.Forms.WebBrowser.Padding%2A> Eigenschaft und reagieren auf Änderungen durch die Behandlung dieses Ereignisses hat die Padding-Eigenschaft nicht für das genannte Steuerelement Bedeutung.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Padding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Print" />
      <MemberSignature Language="VB.NET" Value="Public Sub Print ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Print();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Druckt das gegenwärtig im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigte Dokument mit den aktuellen Druck- und Seiteneinstellungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Implementieren einer **Drucken** Schaltfläche in Internet Explorer ähnelt. Diese Methode wird das aktuelle Dokument gedruckt, ohne weitere Benutzereingaben. Zum Anzeigen der **Drucken** Dialogfeld vor dem Drucken, verwenden die <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> Methode. Zum Anzeigen der **Seiteneinrichtung** . dieses Dialogfeld kann die Benutzer angeben, verwenden von Kopf- und Fußzeilenwerte und andere Einstellungen, die <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> Methode. Zum Anzeigen der **Seitenansicht** (Dialogfeld), verwenden die <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.Print%2A> Methode für die Implementierung einer **Drucken** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement, das ähnlich wie die **Drucken** Schaltfläche in Internet Explorer. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonPrint`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#13)]
 [!code-csharp[System.Windows.Forms.WebBrowser#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.WebBrowser#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">auf den Drucker über diese Methode zugreifen zu können. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.WebBrowserProgressChangedEventHandler ProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.ProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ProgressChanged As WebBrowserProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::WebBrowserProgressChangedEventHandler ^ ProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement die Informationen über den Downloadstatus eines Dokuments aktualisiert hat, zu dem es gegenwärtig navigiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Einen Handler für dieses Ereignis können Sie um eine Status-Navigationsleiste, die mit dem Umwandlungsoperator in Internet Explorer zu implementieren. Verwenden der <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.CurrentProgress%2A?displayProperty=nameWithType> -Eigenschaft können Sie die Anzahl der Bytes zu bestimmen, die erfolgreich heruntergeladen wurden. Verwenden der <xref:System.Windows.Forms.WebBrowserProgressChangedEventArgs.MaximumProgress%2A?displayProperty=nameWithType> -Eigenschaft zum Bestimmen der Gesamtanzahl der Bytes, die als Download zur Verfügung.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.WebBrowser.ProgressChanged> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.WebBrowser> mit dem Namen `WebBrowser1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.WebBrowser.ProgressChanged> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#652](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#652)]
 [!code-vb[System.Windows.Forms.EventExamples#652](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#652)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.WebBrowserProgressChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ReadyState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.WebBrowserReadyState ReadyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.WebBrowserReadyState ReadyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ReadyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadyState As WebBrowserReadyState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::WebBrowserReadyState ReadyState { System::Windows::Forms::WebBrowserReadyState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.WebBrowserReadyState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den aktuellen Zustand des <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelements angibt.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.WebBrowserReadyState" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.WebBrowser.ReadyState%2A> den genauen Zustand der abzurufenden Eigenschaft der <xref:System.Windows.Forms.WebBrowser> steuern, wenn Sie mehr Informationen als benötigen die <xref:System.Windows.Forms.WebBrowser.IsBusy%2A> Eigenschaft ermöglicht.  
  
 Wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement enthält kein Dokument, das der Wert dieser Eigenschaft ist <xref:System.Windows.Forms.WebBrowserReadyState.Uninitialized?displayProperty=nameWithType>. Andere Werte deuten Zustand des Steuerelements auf, wenn es zu einem neuen Dokument navigiert. Zu diesen Werten zählen <xref:System.Windows.Forms.WebBrowserReadyState.Loading?displayProperty=nameWithType>, <xref:System.Windows.Forms.WebBrowserReadyState.Loaded?displayProperty=nameWithType>, <xref:System.Windows.Forms.WebBrowserReadyState.Interactive?displayProperty=nameWithType>, und <xref:System.Windows.Forms.WebBrowserReadyState.Complete?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsBusy" />
        <altmember cref="T:System.Windows.Forms.WebBrowserReadyState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt das im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement gegenwärtig angezeigte Dokument erneut.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lädt das gegenwärtig im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigte Dokument erneut, indem der Server auf eine neue Version überprüft wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert, speichert es Zeit durch eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist, anstatt die Seite erneut herunterzuladen. Die <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode erzwingt die <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt. Verwenden Sie diese Methode zum Implementieren einer **aktualisieren** Schaltfläche in Internet Explorer ähnelt.  
  
> [!NOTE]
>  Eine Dokument-Aktualisierung einfach lädt die aktuelle Seite also die <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, und <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Ereignisse treten nicht beim Aufrufen der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode für die Implementierung einer **aktualisieren** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement in Internet Explorer ähnelt. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonRefresh`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#10)]
 [!code-csharp[System.Windows.Forms.WebBrowser#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.WebBrowser#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Windows.Forms.WebBrowserRefreshOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Windows.Forms.WebBrowserRefreshOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (opt As WebBrowserRefreshOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Windows::Forms::WebBrowserRefreshOption opt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opt" Type="System.Windows.Forms.WebBrowserRefreshOption" />
      </Parameters>
      <Docs>
        <param name="opt">Einer der <see cref="T:System.Windows.Forms.WebBrowserRefreshOption" />-Werte.</param>
        <summary>Lädt das gegenwärtig im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement angezeigte Dokument mit den angegebenen Aktualisierungsoptionen erneut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement speichert die zuletzt besuchten Webseiten in einem Cache auf der lokalen Festplatte. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert, speichert es Zeit durch eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist, anstatt die Seite erneut herunterzuladen. Die <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode erzwingt die <xref:System.Windows.Forms.WebBrowser> Steuerelement, um die aktuelle Seite erneut zu laden. Der Typ des Ladevorgangs hängt die <xref:System.Windows.Forms.WebBrowserRefreshOption> angegebene Wert. Beim Aufrufen der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode mit dem <xref:System.Windows.Forms.WebBrowserRefreshOption.Completely?displayProperty=nameWithType> Wert, der die neueste Version des Dokuments wird heruntergeladen. Bei Verwendung der <xref:System.Windows.Forms.WebBrowserRefreshOption.IfExpired?displayProperty=nameWithType> Wert, der die neueste Version heruntergeladen wird, nur dann, wenn das aktuelle Dokument abgelaufen ist. Bei Verwendung der <xref:System.Windows.Forms.WebBrowserRefreshOption.Normal?displayProperty=nameWithType> -Wert, der Server sendet eine Kopie des Dokuments in einen eigenen Cache gespeichert.  
  
> [!NOTE]
>  Eine Dokument-Aktualisierung einfach lädt die aktuelle Seite also die <xref:System.Windows.Forms.WebBrowser.Navigating>, <xref:System.Windows.Forms.WebBrowser.Navigated>, und <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> Ereignisse treten nicht beim Aufrufen der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Stop" />
      </Docs>
    </Member>
    <Member MemberName="ScriptErrorsSuppressed">
      <MemberSignature Language="C#" Value="public bool ScriptErrorsSuppressed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptErrorsSuppressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptErrorsSuppressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScriptErrorsSuppressed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, mit dem angegeben wird, ob der <see cref="T:System.Windows.Forms.WebBrowser" /> Dialogfelder anzeigt, z. B. Skriptfehlermeldungen, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement die entsprechenden Dialogfelder nicht anzeigt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie diese Eigenschaft auf `false` Webseiten zu debuggen, die Sie, in Anzeigen der <xref:System.Windows.Forms.WebBrowser> Steuerelement. Dies ist hilfreich, wenn das Steuerelement mit der Web-basierte Steuerelemente und Skript-Code zu einer Anwendung hinzufügen. Er ist weniger nützlich, wenn Sie das Steuerelement als generische Browser verwenden. Wenn Sie alle gewünschten haben Debuggen Ihrer Anwendung legen Sie diese Eigenschaft auf `true` Skriptfehler unterdrückt.  
  
> [!NOTE]
>  Wenn <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> festgelegt ist, um `true`, die <xref:System.Windows.Forms.WebBrowser> Steuerelement blendet alle Dialogfelder, die das zugrunde liegende ActiveX-Steuerelement stammen, nicht nur Skriptfehler. Gelegentlich müssen Sie beim Anzeigen von Dialogfeldern, z. B. den Browsersicherheitseinstellungen und Anmeldung des Benutzers verwendeten Skriptfehler zu unterdrücken. Legen Sie in diesem Fall <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> auf `false` und Unterdrücken von Fehlern in einem Ereignishandler für das <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> Ereignis. Weitere Informationen finden Sie im Codebeispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Skriptfehler unterdrückt werden, ohne andere Dialogfelder zu unterdrücken. Im Beispiel die <xref:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed%2A> -Eigenschaftensatz auf `false` um sicherzustellen, dass Dialogfelder angezeigt werden. Ein Handler für das <xref:System.Windows.Forms.HtmlWindow.Error?displayProperty=nameWithType> Ereignis unterdrückt den Fehler. Dieses Ereignis kann nur zugegriffen werden kann, wenn ein Dokument abgeschlossen ist geladen, damit der Ereignishandler, in angefügt ist einem <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> -Ereignishandler.  
  
 [!code-csharp[WebBrowserMisc#40](~/samples/snippets/csharp/VS_Snippets_Winforms/WebBrowserMisc/CS/WebBrowserMisc.cs#40)]
 [!code-vb[WebBrowserMisc#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WebBrowserMisc/vb/WebBrowserMisc.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Ein Verweis auf eine Implementierung der [IWebBrowser2-Schnittstelle](http://go.microsoft.com/fwlink/?LinkId=151479) konnte nicht aus dem zugrunde liegenden ActiveX-Steuerelement [WebBrowser](http://go.microsoft.com/fwlink/?LinkId=151478) abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ScrollBarsEnabled">
      <MemberSignature Language="C#" Value="public bool ScrollBarsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollBarsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.ScrollBarsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBarsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollBarsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement Bildlaufleisten angezeigt werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn im Steuerelement Bildlaufleisten angezeigt werden, andernfalls <see langword="false" />. Der Standardwert ist "True".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Wert dieser Eigenschaft ist `true`, Bildlaufleisten werden nur angezeigt, wenn der Inhalt der Seite größer als das Browserfenster ist.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowPageSetupDialog">
      <MemberSignature Language="C#" Value="public void ShowPageSetupDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPageSetupDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPageSetupDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPageSetupDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet das Dialogfeld **Seite einrichten** von Internet Explorer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Implementieren einer **Seiteneinrichtung** Menüelement mit dem Umwandlungsoperator in Internet Explorer **Datei** im Menü. Diese Methode zeigt den **Seiteneinrichtung** (Dialogfeld), der Ihre Benutzer Kopf- und Fußzeilenwerte festzulegen und die andere seiteneinstellungen vor dem Drucken angeben kann. Um das aktuelle Dokument zu drucken, verwenden die <xref:System.Windows.Forms.WebBrowser.Print%2A> Methode oder die <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> Methode. Zum Anzeigen der **Seitenansicht** (Dialogfeld), verwenden die <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> Methode für die Implementierung einer **Seiteneinrichtung** Menüoption, die in Internet Explorer ähnelt **Datei** Menü. Dieses Beispiel benötigen Sie, dass das Formular ein Menü mit einem Datenelement Namens enthält `MenuItemFilePageSetup` und ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.WebBrowser#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.WebBrowser#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">auf den Drucker über diese Methode zugreifen zu können. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet das Dialogfeld **Drucken** von Internet Explorer, ohne Kopf- und Fußzeilenwerte festzulegen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Implementieren einer **Drucken** Menüelement mit dem Umwandlungsoperator in Internet Explorer **Datei** Menü. Diese Methode zeigt den **Drucken** (Dialogfeld), wenn Ihre Benutzer ändern von Druckereinstellungen vor dem Drucken. Damit Ihre Benutzer seiteneinstellungen vor dem Drucken angeben können, verwenden die <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> Methode. Zum Anzeigen der **Seitenansicht** (Dialogfeld), verwenden die <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> Methode für die Implementierung einer **Drucken** Menüoption, die in Internet Explorer ähnelt **Datei** Menü. Dieses Beispiel benötigen Sie, dass das Formular ein Menü mit einem Datenelement Namens enthält `MenuItemFilePrint` und ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.WebBrowser#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">auf den Drucker über diese Methode zugreifen zu können. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPrintPreviewDialog">
      <MemberSignature Language="C#" Value="public void ShowPrintPreviewDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPrintPreviewDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPrintPreviewDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPrintPreviewDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet das Dialogfeld **Druckvorschau** von Internet Explorer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Implementieren einer **Seitenansicht** Menüelement mit dem Umwandlungsoperator in Internet Explorer **Datei** Menü. Diese Methode zeigt den **Seitenansicht** (Dialogfeld), ermöglichen es den Benutzern, die das aktuelle Dokument angezeigt werden, wenn es gedruckt wird. Damit Ihre Benutzer seiteneinstellungen vor dem Drucken angeben können, verwenden die <xref:System.Windows.Forms.WebBrowser.ShowPageSetupDialog%2A> Methode. Um das aktuelle Dokument zu drucken, verwenden die <xref:System.Windows.Forms.WebBrowser.Print%2A> Methode oder die <xref:System.Windows.Forms.WebBrowser.ShowPrintDialog%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog%2A> Methode für die Implementierung einer **Seitenansicht** Menüoption im Internet Explorer ähnelt **Datei** Menü. Dieses Beispiel benötigen Sie, dass das Formular ein Menü mit einem Datenelement namens `MenuItemFilePrintPreview`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.WebBrowser#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.WebBrowser#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">auf den Drucker über diese Methode zugreifen zu können. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.ShowPrintDialog" />
      </Docs>
    </Member>
    <Member MemberName="ShowPropertiesDialog">
      <MemberSignature Language="C#" Value="public void ShowPropertiesDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowPropertiesDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowPropertiesDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowPropertiesDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowPropertiesDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet das Dialogfeld **Eigenschaften** von Internet Explorer für das aktuelle Dokument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Implementieren einer **Eigenschaften** Menüoption im Internet Explorer ähnelt **Datei** Menü. Diese Methode zeigt den **Eigenschaften** (Dialogfeld), die Informationen über das aktuelle Dokument z. B. Typ, URL, Größe und Datum der Erstellung und Änderung enthält.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.ShowPropertiesDialog%2A> Methode für die Implementierung einer **Eigenschaften** Menüoption, die in Internet Explorer ähnelt **Datei** Menü. Dieses Beispiel benötigen Sie, dass das Formular ein Menü mit einem Datenelement Namens enthält `MenuItemFileProperties` und ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1.`  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.WebBrowser#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.WebBrowser#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ShowSaveAsDialog">
      <MemberSignature Language="C#" Value="public void ShowSaveAsDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowSaveAsDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.ShowSaveAsDialog" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowSaveAsDialog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowSaveAsDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Öffnet das Dialogfeld **Webseite speichern** oder, wenn es sich nicht um eine HTML-Seite handelt, das Dialogfeld **Speichern** für das gehostete Dokument.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Implementieren einer **speichern unter** Menüelement mit dem Umwandlungsoperator in Internet Explorer **Datei** Menü. Das Dialogfeld wird angezeigt, wenn diese Methode aufgerufen wird, hängt von des Dokumenttyp ist derzeit geladen.  
  
> [!NOTE]
>  Diese Methode ermöglicht Benutzern nur den Inhalt des Dokuments zu speichern, wie es ursprünglich geladen wurde. Alle Änderungen, die dem Dokument zur Laufzeit über die <xref:System.Windows.Forms.WebBrowser.Document%2A> Eigenschaft werden nicht beibehalten. Informationen über das Abrufen von Änderungen zur Laufzeit finden Sie unter [Vorgehensweise: Zugriff auf das HTML-Quellcode im verwalteten HTML-Dokumentobjektmodell](~/docs/framework/winforms/controls/how-to-access-the-html-source-in-the-managed-html-document-object-model.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.ShowSaveAsDialog%2A> Methode für die Implementierung einer **speichern unter** Menüoption, die in Internet Explorer ähnelt **Datei** Menü. Dieses Beispiel benötigen Sie, dass das Formular ein Menü mit einem Datenelement Namens enthält `MenuItemFileSaveAs` und ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.WebBrowser#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.WebBrowser#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">auf den Drucker über diese Methode zugreifen zu können. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Zugeordnete Enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.Document" />
      </Docs>
    </Member>
    <Member MemberName="StatusText">
      <MemberSignature Language="C#" Value="public virtual string StatusText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.StatusText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StatusText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StatusText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Statustext des <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelements ab.</summary>
        <value>Der Statustext.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft zum Anzeigen des Status der <xref:System.Windows.Forms.WebBrowser> -Steuerelement in einer Statusleiste. Der Statustext ist eine Nachricht, die Informationen wie die URL der Link enthält, wenn der Mauszeiger über sie und die URL der derzeit geladenen Dokument bewegt wird. Behandeln der <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> Ereignis, um den Status aktualisieren Leiste, wenn der Wert des der <xref:System.Windows.Forms.WebBrowser.StatusText%2A> -Eigenschaft ändert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.StatusText%2A> Eigenschaft implementiert eine Statusleiste für die <xref:System.Windows.Forms.WebBrowser> Steuerelement in Internet Explorer ähnelt. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.StatusBar> -Steuerelement namens `StatusBar1`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      </Docs>
    </Member>
    <Member MemberName="StatusTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StatusTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StatusTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.WebBrowser.StatusTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StatusTextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StatusTextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der <see cref="P:System.Windows.Forms.WebBrowser.StatusText" />-Eigenschaftswert geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Handle dieses Ereignis einen Aktualisierungsstatus Leiste, wenn der Wert von der <xref:System.Windows.Forms.WebBrowser.StatusText%2A> -Eigenschaft ändert.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Handler für das <xref:System.Windows.Forms.WebBrowser.StatusTextChanged> Ereignis implementiert eine Statusleiste für die <xref:System.Windows.Forms.WebBrowser> Steuerelement in Internet Explorer ähnelt. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.StatusBar> -Steuerelement namens `StatusBar1`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.WebBrowser#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.WebBrowser#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.StatusText" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht eine unvollständige Navigation ab und beendet dynamische Seitenelemente wie Hintergrundsound und Animationen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie die <xref:System.Windows.Forms.WebBrowser.Stop%2A> Methode für die Implementierung einer **beenden** Schaltfläche in Internet Explorer ähnelt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.Stop%2A> Methode für die Implementierung einer **beenden** Schaltfläche für die <xref:System.Windows.Forms.WebBrowser> Steuerelement in Internet Explorer ähnelt. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1` und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonStop`.  
  
 Das vollständige Codebeispiel finden Sie unter [wie: Hinzufügen von Webbrowserfunktionen zu einer Windows Forms-Anwendung](~/docs/framework/winforms/controls/how-to-add-web-browser-capabilities-to-a-windows-forms-application.md).  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#9)]
 [!code-csharp[System.Windows.Forms.WebBrowser#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.WebBrowser#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoBack" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoForward" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoHome" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.GoSearch" />
        <altmember cref="M:System.Windows.Forms.WebBrowser.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.WebBrowserUriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL des aktuellen Dokuments ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Uri" />, der die URL des aktuellen Dokuments darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieser Eigenschaft entspricht dem Aufrufen der <xref:System.Windows.Forms.WebBrowser.Navigate%2A> -Methode und zur Übergabe an der angegebenen URL.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement unterhält eine Verlaufsliste aller Webseiten, die während einer Browsersitzung besucht hat. Beim Festlegen der <xref:System.Windows.Forms.WebBrowser.Url%2A> -Eigenschaft, die <xref:System.Windows.Forms.WebBrowser> Steuerelement navigiert zur angegebenen URL und fügt es am Ende der Verlaufsliste.  
  
 Die <xref:System.Windows.Forms.WebBrowser> Steuerelement Webseiten zuletzt besuchten Websites in einem Cache auf der lokalen Festplatte gespeichert. Jede Seite festlegbaren ein Ablaufdatum, der angibt, wie lange es im Cache bleibt. Wenn das Steuerelement zu einer Seite navigiert, speichert es Zeit durch eine zwischengespeicherte Version angezeigt, wenn ein solcher verfügbar ist, anstatt die Seite erneut herunterzuladen. Verwenden der <xref:System.Windows.Forms.WebBrowser.Refresh%2A> Methode zum Erzwingen der <xref:System.Windows.Forms.WebBrowser> Steuerelement zu laden die aktuelle Seite herunterladen, um sicherzustellen, dass das Steuerelement auf die neueste Version angezeigt.  
  
> [!NOTE]
>  Diese Eigenschaft enthält die URL des aktuellen Dokuments, auch wenn ein anderes Dokument angefordert wurde. Wenn Sie den Wert dieser Eigenschaft festgelegt und sofort wieder abrufen, der abgerufene Wert ggf. anders als der Wert festgelegt, wenn die <xref:System.Windows.Forms.WebBrowser> Steuerelement weist nicht genügend Zeit zum Laden des neuen Dokuments. Sie können in den neuen Wert Abrufen einer <xref:System.Windows.Forms.WebBrowser.DocumentCompleted> -Ereignishandler.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.Url%2A> Eigenschaft implementieren eine Adressleiste für die <xref:System.Windows.Forms.WebBrowser> Steuerelement. Dieses Beispiel benötigen Sie, dass das Formular enthält ein <xref:System.Windows.Forms.WebBrowser> -Steuerelement namens `webBrowser1`, <xref:System.Windows.Forms.TextBox> -Steuerelement namens `TextBoxAddress`, und ein <xref:System.Windows.Forms.Button> -Steuerelement namens `ButtonGo`. Wenn Sie eine URL in das Textfeld eingeben und EINGABETASTE drücken oder auf die **Go** Schaltfläche, die <xref:System.Windows.Forms.WebBrowser> Steuerelement mit der angegebenen URL navigiert. Beim Navigieren durch Klicken auf einen Link, wird im Textfeld automatisch aktualisiert, um die aktuelle URL anzuzeigen.  
  
 [!code-cpp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.WebBrowser#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.WebBrowser#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Diese <see cref="T:System.Windows.Forms.WebBrowser" />-Instanz ist nicht mehr gültig.</exception>
        <exception cref="T:System.InvalidOperationException">Aus dem zugrunde liegenden ActiveX-<see langword="IWebBrowser2" />-Steuerelement konnte kein Verweis auf eine Implementierung der <see langword="WebBrowser" />-Schnittstelle abgerufen werden.</exception>
        <exception cref="T:System.ArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein absoluter URI. Weitere Informationen finden Sie unter <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="Overload:System.Windows.Forms.WebBrowser.Navigate" />
        <altmember cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die installierte Version von Internet Explorer ab.</summary>
        <value>Ein <see cref="T:System.Version" />-Objekt, das die installierte Version von Internet Explorer darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.WebBrowser> -Steuerelement ist ein verwalteter Wrapper für eine Komponente, die mit Internet Explorer installiert. Verwenden Sie diese Eigenschaft, um zu bestimmen, welche Version von Internet Explorer installiert ist. Dies ist hilfreich, wenn Ihre Anwendung ein Feature von Internet Explorer verwendet, die nur in bestimmten Betriebssystemversionen vorhanden ist. Wenn nicht die erforderliche Version auf dem lokalen Computer vorhanden ist, können von Ihnen bereitgestellte alternative Funktionalität oder der Benutzer aufgefordert, zu aktualisieren.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowserShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool WebBrowserShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WebBrowserShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property WebBrowserShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WebBrowserShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im <see cref="T:System.Windows.Forms.WebBrowser" />-Steuerelement Tastenkombinationen aktiviert sind, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn im Steuerelement Tastenkombinationen aktiviert sind, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legen Sie diese Eigenschaft auf "false", um zu verhindern, dass Ihre Benutzer mithilfe von Tastenkombinationen im Internet Explorer mit der <xref:System.Windows.Forms.WebBrowser> Steuerelement. Dies ist hilfreich, wenn Sie bemerkt, die Sie verwenden möchten die <xref:System.Windows.Forms.WebBrowser> Steuerelement, z. B. zum Erstellen einer Benutzeroberfläche, die DHTML-Steuerelemente mit Windows Forms-Steuerelemente nahtlos kombiniert.  
  
 Sie können andere Standardbrowserfeatures deaktivieren, indem die <xref:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop%2A> und <xref:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled%2A> Eigenschaften `false`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled%2A> Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.WebBrowser.ObjectForScripting#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.WebBrowser.ObjectForScripting/vb/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den unmittelbaren Aufrufer auf dieses Steuerelement. "Demand"-Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: benannte Berechtigungssätze](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</permission>
        <altmember cref="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop" />
        <altmember cref="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Die zu verarbeitende Windows-<see cref="T:System.Windows.Forms.Message" />.</param>
        <summary>Verarbeitet Windows-Meldungen.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.WebBrowserBase.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>