<Type Name="FolderBrowserDialog" FullName="System.Windows.Forms.FolderBrowserDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1882e29e360dc92e1b3a35f356355487ccd3a54c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37569032" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FolderBrowserDialog : System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FolderBrowserDialog extends System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FolderBrowserDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FolderBrowserDialog&#xA;Inherits CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class FolderBrowserDialog sealed : System::Windows::Forms::CommonDialog" />
  <TypeSignature Language="F#" Value="type FolderBrowserDialog = class&#xA;    inherit CommonDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("HelpRequest")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectedPath")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FolderBrowserDialogDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Prompts the user to select a folder. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt eine Möglichkeit, die der Benutzer aufgefordert, durchsuchen, erstellen, und wählen Sie schließlich einen Ordner. Verwenden Sie diese Klasse, wenn Sie nur den Benutzer zum Auswählen von Ordnern, Dateien nicht zulassen möchten. Der Ordner durchsuchen, erfolgt über ein Strukturansicht-Steuerelement. Nur die Ordner aus dem Dateisystem können ausgewählt werden; virtuelle Ordner ist nicht möglich.  
  
 In der Regel nach dem Erstellen eines neuen <xref:System.Windows.Forms.FolderBrowserDialog>, Festlegen der <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> auf den Speicherort von die Suche gestartet. Sie können optional Festlegen der <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> zu einem absoluten Pfad, der einen Unterordner des <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> , das Anfangs ausgewählt. Sie können auch optional festlegen, die <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A> Eigenschaft, um zusätzliche Anweisungen für den Benutzer bereitzustellen. Rufen Sie abschließend die <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> Methode, um das Dialogfeld für den Benutzer anzuzeigen. Wenn Sie das Dialogfeld geschlossen wird und das Dialogfeld, die aus der <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> ist <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>, <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> eine Zeichenfolge, die mit dem Pfad in den ausgewählten Ordner.  
  
 Können Sie die <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A> -Eigenschaft können Sie steuern, ob der Benutzer zum Erstellen von neuen Ordner mit den **neuer Ordner** Schaltfläche.  
  
 <xref:System.Windows.Forms.FolderBrowserDialog> ist ein modales Dialogfeld an. aus diesem Grund blockiert, wenn dargestellt, sie die übrigen Teile der Anwendung, bis der Benutzer einen Ordner ausgewählt hat. Wenn ein Dialogfeld modal angezeigt wird, kann keine Eingabe (Tastatur- oder Maustastenzustand) ausschließlich auf Objekte im Dialogfeld erfolgen. Das Programm muss ausblenden oder schließen das Dialogfeld (in der Regel als Reaktion auf eine Benutzeraktion) vor der Eingabe an das aufrufende Programm auftreten kann.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Anwendung, die dem Benutzer ermöglicht, öffnen Sie rich-Text (RTF)-Dateien innerhalb der <xref:System.Windows.Forms.RichTextBox> Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.FolderBrowserDialog.RootFolder" />
    <altmember cref="P:System.Windows.Forms.FolderBrowserDialog.SelectedPath" />
    <altmember cref="M:System.Windows.Forms.CommonDialog.ShowDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FolderBrowserDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FolderBrowserDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FolderBrowserDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.FolderBrowserDialog" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardkonstruktor initialisiert die Eigenschaften auf ihre Standardwerte zurück.  
  
 Beim Erstellen eines neuen <xref:System.Windows.Forms.FolderBrowserDialog> erstellt wird, die <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> -Eigenschaftensatz auf <xref:System.Environment.SpecialFolder.Desktop?displayProperty=nameWithType>, <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A> -Eigenschaftensatz auf eine leere Zeichenfolge (""), wird die <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> -Eigenschaftensatz auf eine leere Zeichenfolge ist, und die <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A> -Eigenschaftensatz auf `true`.  
  
 In der Regel nach dem Erstellen eines neuen <xref:System.Windows.Forms.FolderBrowserDialog>, Festlegen der <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> auf den Speicherort von die Suche gestartet. Sie können optional Festlegen der <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> auf den Pfad eines Unterordners von <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> , das Anfangs ausgewählt. Sie können auch optional festlegen, die <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A> Eigenschaft, um zusätzliche Anweisungen für den Benutzer bereitzustellen. Rufen Sie abschließend die <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> Methode, um das Dialogfeld für den Benutzer anzuzeigen. Wenn Sie das Dialogfeld geschlossen wird und das Dialogergebnis aus <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> ist <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>, <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> eine Zeichenfolge, die mit dem Pfad in den ausgewählten Ordner.  
  
 <xref:System.Windows.Forms.FolderBrowserDialog> ist ein modales Dialogfeld an. aus diesem Grund blockiert, wenn dargestellt, sie die übrigen Teile der Anwendung, bis der Benutzer einen Ordner ausgewählt hat. Wenn ein Dialogfeld modal angezeigt wird, kann keine Eingabe (Tastatur- oder Maustastenzustand) ausschließlich auf Objekte im Dialogfeld erfolgen. Das Programm muss ausblenden oder schließen das Dialogfeld (in der Regel als Reaktion auf eine Benutzeraktion) vor der Eingabe an das aufrufende Programm auftreten kann.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Anwendung, die dem Benutzer ermöglicht, öffnen Sie rich-Text (RTF)-Dateien innerhalb der <xref:System.Windows.Forms.RichTextBox> Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the descriptive text displayed above the tree view control in the dialog box.</summary>
        <value>Die anzuzeigende Beschreibung. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A> Eigenschaft kann verwendet werden, um zusätzliche Informationen für den Benutzer, z. B. Anweisungen angeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Anwendung, die dem Benutzer ermöglicht, öffnen Sie rich-Text (RTF)-Dateien innerhalb der <xref:System.Windows.Forms.RichTextBox> Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.FolderBrowserDialog.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberSignature Language="F#" Value="member this.HelpRequest : EventHandler " Usage="member this.HelpRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the user clicks the **Help** button on the dialog box.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FolderBrowserDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="folderBrowserDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets properties to their default values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Setzt die <xref:System.Windows.Forms.FolderBrowserDialog.Description%2A>, <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A>, <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> und <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> Eigenschaften auf ihre Standardwerte zurück. Eine Liste der Standardwerte, finden Sie unter den <xref:System.Windows.Forms.FolderBrowserDialog.%23ctor%2A> Konstruktor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootFolder">
      <MemberSignature Language="C#" Value="public Environment.SpecialFolder RootFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Environment/SpecialFolder RootFolder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.RootFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property RootFolder As Environment.SpecialFolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Environment::SpecialFolder RootFolder { Environment::SpecialFolder get(); void set(Environment::SpecialFolder value); };" />
      <MemberSignature Language="F#" Value="member this.RootFolder : Environment.SpecialFolder with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.RootFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.SpecialFolderEnumConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Environment+SpecialFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the root folder where the browsing starts from.</summary>
        <value>Einer der <see cref="T:System.Environment.SpecialFolder" />-Werte. Die Standardeinstellung ist <see langword="Desktop" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nur die angegebenen Ordner und Unterordner, die darunter liegenden sind im Dialogfeld angezeigt, und ausgewählt werden. Die <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> Eigenschaft zusammen mit <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>, bestimmt, was im ausgewählte Ordner werden, wenn das Dialogfeld angezeigt, solange wird <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> ist ein absoluter Pfad, der einen Unterordner des <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> (oder mehr präzise, verweist auf einen Unterordner des Shell-Namespace durch dargestellt <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>).  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Anwendung, die dem Benutzer ermöglicht, öffnen Sie rich-Text (RTF)-Dateien innerhalb der <xref:System.Windows.Forms.RichTextBox> Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Environment.SpecialFolder" /> values.</exception>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hWndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hWndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FolderBrowserDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RunDialog (hWndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool RunDialog(IntPtr hWndOwner);" />
      <MemberSignature Language="F#" Value="override this.RunDialog : nativeint -&gt; bool" Usage="folderBrowserDialog.RunDialog hWndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWndOwner">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPath">
      <MemberSignature Language="C#" Value="public string SelectedPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.SelectedPath" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPath : string with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.SelectedPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.SelectedPathEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the path selected by the user.</summary>
        <value>Der Pfad des Ordners im Dialogfeld zum ersten Mal ausgewählt oder der letzte Ordner, der vom Benutzer ausgewählt wurde. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> -Eigenschaft vor dem Anzeigen des Dialogfelds festgelegt ist, zu der Ordner mit diesem Pfad wird der ausgewählte Ordner ist, solange <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> festgelegt ist, um einen absoluten Pfad, der einen Unterordner des <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A> (oder mehr präzise, verweist auf einen Unterordner der Shell Namespace dargestellt, indem <xref:System.Windows.Forms.FolderBrowserDialog.RootFolder%2A>).  
  
 Wenn die <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> gibt <xref:System.Windows.Forms.DialogResult.OK>, d. h. der Benutzer geklickt der **OK** Schaltfläche der <xref:System.Windows.Forms.FolderBrowserDialog.SelectedPath%2A> Eigenschaft eine Zeichenfolge, die mit dem Pfad in den ausgewählten Ordner zurück. Wenn <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> gibt <xref:System.Windows.Forms.DialogResult.Cancel>, d. h. der Benutzer das Dialogfeld abgebrochen wurde, wird diese Eigenschaft weist denselben Wert, den sie hatte, vor der Anzeige des Dialogfelds. Wenn der Benutzer Ordner auswählt, die nicht über einen physischen Pfad (z. B. Arbeitsplatz), verfügt die **OK** auf das Dialogfeld auf die Schaltfläche wird deaktiviert.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Anwendung, die dem Benutzer ermöglicht, öffnen Sie rich-Text (RTF)-Dateien innerhalb der <xref:System.Windows.Forms.RichTextBox> Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">zum Abrufen des Pfads an. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="P:System.Windows.Forms.FolderBrowserDialog.RootFolder" />
      </Docs>
    </Member>
    <Member MemberName="ShowNewFolderButton">
      <MemberSignature Language="C#" Value="public bool ShowNewFolderButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowNewFolderButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowNewFolderButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowNewFolderButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowNewFolderButton : bool with get, set" Usage="System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the **New Folder** button appears in the folder browser dialog box.</summary>
        <value>
          <see langword="true" /> Wenn die ** Schaltfläche Neuer Ordner ** im Dialogfeld angezeigt wird andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A> ist `true`, **neuer Ordner** Schaltfläche wird angezeigt, sodass des Benutzers die Möglichkeit zum Erstellen eines Ordners. Klickt der Benutzer die **neuer Ordner** Schaltfläche, ein neuer Ordner erstellt wird und der Benutzer wird aufgefordert, den Namen des Ordners an. Der ausgewählte Knoten in der Struktur wird das übergeordnete Element des neuen Ordners. Die tatsächlichen Beschriftung, der die **neuer Ordner** Schaltfläche kann variieren, je nach Betriebssystem  
  
> [!IMPORTANT]
>  Festlegen von <xref:System.Windows.Forms.FolderBrowserDialog.ShowNewFolderButton%2A> zu `false` funktioniert nicht unter Windows 2000.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Anwendung, die dem Benutzer ermöglicht, öffnen Sie rich-Text (RTF)-Dateien innerhalb der <xref:System.Windows.Forms.RichTextBox> Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FolderBrowserDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FolderBrowserDialog/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>