<Type Name="ImageIndexConverter" FullName="System.Windows.Forms.ImageIndexConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f094a720258089b3f8764e4a4718b5c57e61aaf4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647444" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImageIndexConverter : System.ComponentModel.Int32Converter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageIndexConverter extends System.ComponentModel.Int32Converter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ImageIndexConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageIndexConverter&#xA;Inherits Int32Converter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageIndexConverter : System::ComponentModel::Int32Converter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Int32Converter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Typkonverter zum Konvertieren von Daten für einen Bildindex in eine und aus einer Zeichenfolge bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ImageIndexConverter> Klasse wird verwendet, um die Indexwerte des Konvertieren einer <xref:System.Windows.Forms.ImageList> in und aus anderen Datentypen in der Regel <xref:System.String>. Weitere Informationen zu den Einsatz von Typkonvertern, finden Sie unter der <xref:System.ComponentModel.TypeConverter> Basisklasse und [Vorgehensweise: Implementieren eines Typkonverters](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
> [!NOTE]
>  Normalerweise werden nicht direkt erstellen Sie eine Instanz von einem <xref:System.Windows.Forms.ImageIndexConverter>. Rufen Sie stattdessen die <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Methode <xref:System.ComponentModel.TypeDescriptor>. Weitere Informationen finden Sie in den Beispielen in der <xref:System.ComponentModel.TypeConverter> Basisklasse.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageIndexConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageIndexConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine Instanz der <see cref="T:System.Windows.Forms.ImageIndexConverter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalerweise werden nicht direkt erstellen Sie eine Instanz von einem <xref:System.Windows.Forms.ImageIndexConverter>. Rufen Sie stattdessen die <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Methode <xref:System.ComponentModel.TypeDescriptor>. Weitere Informationen finden Sie in den Beispielen in der <xref:System.ComponentModel.TypeConverter> Basisklasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</param>
        <param name="culture">Ein <see cref="T:System.Globalization.CultureInfo" /> für das Bereitstellen von Gebietsschemainformationen.</param>
        <param name="value">Die zu konvertierende <see cref="T:System.Object" />.</param>
        <summary>Konvertiert das angegebene Wertobjekt in ein 32-Bit-Ganzzahlobjekt mit Vorzeichen.</summary>
        <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konverter kann nur ein 32-Bit-Ganzzahlobjekt mit Vorzeichen in und aus einer Zeichenfolge konvertieren.  
  
 Die `context` können verwendet werden, um zusätzliche Informationen über die Umgebung extrahiert, aus dieser Konverter aufgerufen wurde werden. Der Wert hierfür kann `null` sein. Eine Überprüfung ist daher ratsam. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls `null` zurückgegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Die Konvertierung konnte nicht durchgeführt werden.</exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatkontext bereitstellt, der zum Extrahieren von weiteren Informationen über die Umgebung verwendet werden kann, aus der dieser Konverter aufgerufen wurde. Dieser Parameter oder Eigenschaften dieses Parameters können gleich <see langword="null" /> sein.</param>
        <param name="culture">Eine <see cref="T:System.Globalization.CultureInfo" />, die Gebietsschemainformationen bereitstellt.</param>
        <param name="value">Das zu konvertierende Objekt, in der Regel ein Index, der als eine <see cref="T:System.Int32" />-Zahl dargestellt wird.</param>
        <param name="destinationType">Der Typ, in den das Objekt konvertiert werden soll, häufig ein <see cref="T:System.String" />.</param>
        <summary>Konvertiert das angegebene Objekt in den angegebenen Zieltyp.</summary>
        <returns>Eine <see cref="T:System.Object" />-Klasse, die den konvertierten <paramref name="value" />-Parameter darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die standardmäßige Implementierung dieser Methode kann nur einen Indexwert, dargestellt als Konvertieren einer <xref:System.Int32> zu einem <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Der angegebene <paramref name="value" /> konnte nicht in den angegebenen <paramref name="destinationType" /> konvertiert werden.</exception>
        <block subset="none" type="overrides">
          <para>Überschreiben Sie diese Methode, um eigene Funktionen bereitstellen.  
  
 Die <paramref name="context" /> Parameter kann verwendet werden, um zusätzliche Informationen über die Umgebung extrahiert, aus dieser Konverter aufgerufen wurde werden. Dies ist möglicherweise <see langword="null" />, sodass Sie immer auf diesem Rückgabewert überprüft werden soll. Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatkontext bereitstellt, der zum Extrahieren von weiteren Informationen über die Umgebung verwendet werden kann, aus der dieser Konverter aufgerufen wurde. Dieser Parameter oder Eigenschaften dieses Parameters können gleich <see langword="null" /> sein.</param>
        <summary>Gibt eine Auflistung von standardmäßigen Indexwerten für die Bildliste zurück, die dem angegebenen Formatkontext zugeordnet ist.</summary>
        <returns>Eine <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />, die einen Standardsatz gültiger Indexwerte enthält. Wenn keine Bildliste gefunden wird, enthält diese Auflistung ein einzelnes Objekt mit einem Wert von -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt eine Auflistung von Indexwerten für Bilderliste für das zugeordnete der <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A?displayProperty=nameWithType> Eigenschaft von der `context` Parameter. Wenn ein <xref:System.Windows.Forms.ImageList> nicht gefunden wird, und klicken Sie dann das übergeordnete Element der Komponente für eine solche Liste gesucht werden soll.  
  
 In der Regel die <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> Methode aufgerufen, bevor versucht wird, verwenden die <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> und <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A> Methoden.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
        <altmember cref="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein Formatierungskontext.</param>
        <summary>Bestimmt, ob die von der <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />-Methode zurückgegebene Liste von Standardwerten eine exklusive Liste ist.</summary>
        <returns>
          <see langword="true" />, wenn die <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />-Methode eine exklusive Liste gültiger Werte zurückgibt; andernfalls <see langword="false" />. Diese Implementierung gibt immer <see langword="false" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Liste, durch zurückgegeben die <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> Methode exklusiv ist, und klicken Sie dann keine anderen Werte gültig sind. Dies ist typisch für enumerierten Datentyps. Wenn die Liste nicht exklusiv ist, sind neben der Liste der standardmäßigen, die Werte den weiteren gültigen Werten <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> bereitstellt.  
  
 Wie in diesem Typkonverter implementiert wird, gibt diese Methode immer `false`.  
  
 In der Regel die <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> Methode aufgerufen, bevor versucht wird, verwenden die <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> und <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A> Methoden.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatkontext bereitstellt, der zum Extrahieren von weiteren Informationen über die Umgebung verwendet werden kann, aus der dieser Konverter aufgerufen wurde. Dieser Parameter oder Eigenschaften dieses Parameters können gleich <see langword="null" /> sein.</param>
        <summary>Bestimmt, ob der Typkonverter einen Standardsatz von Werten unterstützt, die aus einer Liste ausgewählt werden können.</summary>
        <returns>
          <see langword="true" />, wenn die <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />-Methode einen Standardsatz von Werten zurückgibt; andernfalls <see langword="false" />. Gibt immer <see langword="true" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wie in dieser Klasse implementiert <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> gibt immer `true` da dieses Objekt einen Standardsatz von Indexwerten für Bilder unterstützt, die aus einer Liste ausgewählt werden können.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="IncludeNoneAsStandardValue">
      <MemberSignature Language="C#" Value="protected virtual bool IncludeNoneAsStandardValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeNoneAsStandardValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IncludeNoneAsStandardValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IncludeNoneAsStandardValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein <see langword="none" />-Wert oder ein <see langword="null" />-Wert in der <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />-Auflistung gültig ist, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn ein <see langword="none" />-Wert oder ein <see langword="null" />-Wert in der Auflistung der Standardwerte gültig ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Implementierung in dieser Klasse wird immer gibt `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>