<Type Name="QueryContinueDragEventArgs" FullName="System.Windows.Forms.QueryContinueDragEventArgs">
  <TypeSignature Language="C#" Value="public class QueryContinueDragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryContinueDragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.QueryContinueDragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryContinueDragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryContinueDragEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="acd7f-101">Stellt Daten für das <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" />-Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="acd7f-101">Provides data for the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd7f-102">Die <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignis tritt während eines Drag & Drop-Vorgangs und ermöglicht die Quelle des Ziehvorgangs bestimmen, ob der Drag-and-Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="acd7f-102">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.</span></span> <span data-ttu-id="acd7f-103">Ein <xref:System.Windows.Forms.QueryContinueDragEventArgs> gibt an, ob und wie der Drag-and-Drop-Vorgang fortgesetzt werden soll, ob Modifizierertasten werden und gibt an, ob der Benutzer die ESC-Taste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="acd7f-103">A <xref:System.Windows.Forms.QueryContinueDragEventArgs> specifies whether and how the drag-and-drop operation should proceed, whether any modifier keys are pressed, and whether the user has pressed the ESC key.</span></span>  
  
 <span data-ttu-id="acd7f-104">Standardmäßig legt das <xref:System.Windows.Forms.Control.QueryContinueDrag>-Ereignis <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> auf <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> fest, wenn die ESC-Taste gedrückt wurde, und legt `Action` auf <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> fest, wenn die linke, mittlere oder rechte Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="acd7f-104">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if the left, middle, or right mouse button is pressed.</span></span>  
  
 <span data-ttu-id="acd7f-105">Informationen über das Ereignismodell finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="acd7f-105">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acd7f-106">Dieser Code veranschaulicht die Verwendung der <xref:System.Windows.Forms.QueryContinueDragEventArgs> -Klasse mit der <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="acd7f-106">This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="acd7f-107">Finden Sie unter der <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode für das gesamte Codebeispiel dargestellt.</span><span class="sxs-lookup"><span data-stu-id="acd7f-107">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragAction" />
    <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 keyState, bool escapePressed, valuetype System.Windows.Forms.DragAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyState As Integer, escapePressed As Boolean, action As DragAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryContinueDragEventArgs(int keyState, bool escapePressed, System::Windows::Forms::DragAction action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="escapePressed" Type="System.Boolean" />
        <Parameter Name="action" Type="System.Windows.Forms.DragAction" />
      </Parameters>
      <Docs>
        <param name="keyState"><span data-ttu-id="acd7f-108">Der aktuelle Zustand von UMSCHALTTASTE, STRG und ALT.</span><span class="sxs-lookup"><span data-stu-id="acd7f-108">The current state of the SHIFT, CTRL, and ALT keys.</span></span></param>
        <param name="escapePressed">
          <span data-ttu-id="acd7f-109"><see langword="true" />, wenn ESC gedrückt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="acd7f-109"><see langword="true" /> if the ESC key was pressed; otherwise, <see langword="false" />.</span></span></param>
        <param name="action"><span data-ttu-id="acd7f-110">Ein <see cref="T:System.Windows.Forms.DragAction" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="acd7f-110">A <see cref="T:System.Windows.Forms.DragAction" /> value.</span></span></param>
        <summary><span data-ttu-id="acd7f-111">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="acd7f-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragAction Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragAction Action" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As DragAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragAction Action { System::Windows::Forms::DragAction get(); void set(System::Windows::Forms::DragAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acd7f-112">Ruft den Status eines Drag &amp; Drop-Vorgangs ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="acd7f-112">Gets or sets the status of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="acd7f-113">Ein <see cref="T:System.Windows.Forms.DragAction" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="acd7f-113">A <see cref="T:System.Windows.Forms.DragAction" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd7f-114">Standardmäßig legt das <xref:System.Windows.Forms.Control.QueryContinueDrag>-Ereignis <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> auf <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> fest, wenn die ESC-Taste gedrückt wurde, und legt `Action` auf <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> fest, wenn die linke, mittlere oder rechte Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="acd7f-114">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if the left, middle, or right mouse button is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acd7f-115">Dieser Code veranschaulicht die Verwendung der <xref:System.Windows.Forms.QueryContinueDragEventArgs> -Klasse mit der <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="acd7f-115">This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="acd7f-116">Finden Sie unter der <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode für das gesamte Codebeispiel dargestellt.</span><span class="sxs-lookup"><span data-stu-id="acd7f-116">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragAction" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="EscapePressed">
      <MemberSignature Language="C#" Value="public bool EscapePressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EscapePressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapePressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EscapePressed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acd7f-117">Ruft ab, ob der Benutzer ESC gedrückt hat.</span><span class="sxs-lookup"><span data-stu-id="acd7f-117">Gets whether the user pressed the ESC key.</span></span></summary>
        <value>
          <span data-ttu-id="acd7f-118"><see langword="true" />, wenn ESC gedrückt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="acd7f-118"><see langword="true" /> if the ESC key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd7f-119">Wird standardmäßig die <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignis legt <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> auf <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> Wenn <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> ist "true".</span><span class="sxs-lookup"><span data-stu-id="acd7f-119">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Cancel?displayProperty=nameWithType> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> is true.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acd7f-120">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> .</span><span class="sxs-lookup"><span data-stu-id="acd7f-120">The following code example demonstrates the use of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> .</span></span> <span data-ttu-id="acd7f-121">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="acd7f-121">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="acd7f-122">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="acd7f-122">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="acd7f-123">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="acd7f-123">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="acd7f-124">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz eines Typs, die enthält von erben <xref:System.Windows.Forms.Control>, z. B. eine <xref:System.Windows.Forms.Button> oder <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="acd7f-124">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="acd7f-125">Geben Sie den Namen der Instanz `Control1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="acd7f-125">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.QueryContinueDragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="acd7f-126">Ruft den aktuellen Zustand von UMSCHALTTASTE, STRG und ALT ab.</span><span class="sxs-lookup"><span data-stu-id="acd7f-126">Gets the current state of the SHIFT, CTRL, and ALT keys.</span></span></summary>
        <value><span data-ttu-id="acd7f-127">Der aktuelle Zustand von UMSCHALTTASTE, STRG und ALT.</span><span class="sxs-lookup"><span data-stu-id="acd7f-127">The current state of the SHIFT, CTRL, and ALT keys.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd7f-128">Die Bits, die festgelegt werden, in der <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> Eigenschaft identifiziert den Schlüsseln oder Maustasten, die während des Vorgangs gedrückt wurden.</span><span class="sxs-lookup"><span data-stu-id="acd7f-128">The bits that are set in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="acd7f-129">Z. B. wenn die linke Maustaste gedrückt wird, das erste bit in der <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="acd7f-129">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="acd7f-130">Sie können die bitweise `AND` Operator für einen bestimmten Schlüssel Status überprüft.</span><span class="sxs-lookup"><span data-stu-id="acd7f-130">You can use the bitwise `AND` operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="acd7f-131">Die folgende Tabelle enthält die Bits, die für ein angegebenes Ereignis festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="acd7f-131">The following table lists the bits that are set for a specified event.</span></span>  
  
|<span data-ttu-id="acd7f-132">Bit</span><span class="sxs-lookup"><span data-stu-id="acd7f-132">Bit</span></span>|<span data-ttu-id="acd7f-133">Key</span><span class="sxs-lookup"><span data-stu-id="acd7f-133">Key</span></span>|  
|---------|---------|  
|<span data-ttu-id="acd7f-134">1</span><span class="sxs-lookup"><span data-stu-id="acd7f-134">1</span></span>|<span data-ttu-id="acd7f-135">Die linke Maustaste.</span><span class="sxs-lookup"><span data-stu-id="acd7f-135">The left mouse button.</span></span>|  
|<span data-ttu-id="acd7f-136">2</span><span class="sxs-lookup"><span data-stu-id="acd7f-136">2</span></span>|<span data-ttu-id="acd7f-137">Die rechte Maustaste.</span><span class="sxs-lookup"><span data-stu-id="acd7f-137">The right mouse button.</span></span>|  
|<span data-ttu-id="acd7f-138">4</span><span class="sxs-lookup"><span data-stu-id="acd7f-138">4</span></span>|<span data-ttu-id="acd7f-139">Die UMSCHALTTASTE.</span><span class="sxs-lookup"><span data-stu-id="acd7f-139">The SHIFT key.</span></span>|  
|<span data-ttu-id="acd7f-140">8</span><span class="sxs-lookup"><span data-stu-id="acd7f-140">8</span></span>|<span data-ttu-id="acd7f-141">Die STRG-Taste.</span><span class="sxs-lookup"><span data-stu-id="acd7f-141">The CTL key.</span></span>|  
|<span data-ttu-id="acd7f-142">16</span><span class="sxs-lookup"><span data-stu-id="acd7f-142">16</span></span>|<span data-ttu-id="acd7f-143">Die mittlere Maustaste.</span><span class="sxs-lookup"><span data-stu-id="acd7f-143">The middle mouse button.</span></span>|  
|<span data-ttu-id="acd7f-144">32</span><span class="sxs-lookup"><span data-stu-id="acd7f-144">32</span></span>|<span data-ttu-id="acd7f-145">Die ALT-TASTE.</span><span class="sxs-lookup"><span data-stu-id="acd7f-145">The ALT key.</span></span>|  
  
 <span data-ttu-id="acd7f-146">Wird standardmäßig die <xref:System.Windows.Forms.Control.QueryContinueDrag> Ereignis legt <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> auf <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> Wenn <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> gibt an, dass die linke, mittlere oder rechte Maustaste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="acd7f-146">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction.Drop?displayProperty=nameWithType> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> indicates that the left, middle, or right mouse button is pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acd7f-147">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="acd7f-147">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="acd7f-148">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="acd7f-148">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="acd7f-149">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="acd7f-149">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="acd7f-150">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="acd7f-150">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="acd7f-151">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz eines Typs, die enthält von erben <xref:System.Windows.Forms.Control>, z. B. eine <xref:System.Windows.Forms.Button> oder <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="acd7f-151">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="acd7f-152">Geben Sie den Namen der Instanz `Control1` und stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="acd7f-152">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]
 [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
  </Members>
</Type>