<Type Name="Form" FullName="System.Windows.Forms.Form">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95d840228da10b998cd2a6f059f0b9fa19adc332" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36522926" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Form : System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Form extends System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Form" />
  <TypeSignature Language="VB.NET" Value="Public Class Form&#xA;Inherits ContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Form : System::Windows::Forms::ContainerControl" />
  <TypeSignature Language="F#" Value="type Form = class&#xA;    inherit ContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Form")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.InitializationEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.Control.TopLevel")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dc07a-101">Represents a window or dialog box that makes up an application's user interface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc07a-101">Represents a window or dialog box that makes up an application's user interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-102">Ein <xref:System.Windows.Forms.Form> ist eine Darstellung von einem beliebigen Fenster in der Anwendung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-102">A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application.</span></span> <span data-ttu-id="dc07a-103">Die <xref:System.Windows.Forms.Form> Klasse kann verwendet werden, um Standard, randlos, Tools und frei schwebenden Fenster erstellen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-103">The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows.</span></span> <span data-ttu-id="dc07a-104">Sie können auch die <xref:System.Windows.Forms.Form> Klasse, z. B. ein Dialogfeld modale Fenster zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-104">You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box.</span></span> <span data-ttu-id="dc07a-105">Eine spezielle Art des Formulars, die Multiple Document Interface (MDI), kann andere Formen aufgerufen, untergeordnete MDI-Formulare enthalten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-105">A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.</span></span> <span data-ttu-id="dc07a-106">Ein MDI-Formular erstellt, indem die <xref:System.Windows.Forms.Form.IsMdiContainer%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-106">An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`.</span></span> <span data-ttu-id="dc07a-107">Untergeordnete MDI-Formulare werden erstellt, indem die <xref:System.Windows.Forms.Form.MdiParent%2A> Eigenschaft, um die übergeordneten MDI-Formulars, das das untergeordnete Formular enthält.</span><span class="sxs-lookup"><span data-stu-id="dc07a-107">MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form.</span></span>  
  
 <span data-ttu-id="dc07a-108">Indem Sie die Eigenschaften in der <xref:System.Windows.Forms.Form> -Klasse, Sie können die Darstellung, Größe, Farbe und Fenster-Verwaltungsfunktionen von Fenster oder Dialogfeld Feld erstelltem bestimmen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-108">Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.</span></span> <span data-ttu-id="dc07a-109">Die <xref:System.Windows.Forms.Control.Text%2A> -Eigenschaft können Sie die Beschriftung des Fensters in der Titelleiste angeben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-109">The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar.</span></span> <span data-ttu-id="dc07a-110">Die <xref:System.Windows.Forms.Form.Size%2A> und <xref:System.Windows.Forms.Form.DesktopLocation%2A> Eigenschaften können Sie die Größe und Position des Fensters definieren, wenn er angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-110">The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed.</span></span> <span data-ttu-id="dc07a-111">Sie können die <xref:System.Windows.Forms.Control.ForeColor%2A> Color-Eigenschaft so ändern Sie die Standardvordergrundfarbe aller Steuerelemente im Formular platziert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-111">You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form.</span></span> <span data-ttu-id="dc07a-112">Die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, und <xref:System.Windows.Forms.Form.MaximizeBox%2A> Eigenschaften können Sie steuern, ob das Formular minimiert, maximiert oder zur Laufzeit geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="dc07a-112">The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.</span></span>  
  
 <span data-ttu-id="dc07a-113">Zusätzlich zu den Eigenschaften können Sie die Methoden der Klasse verwenden, um einem Formular zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-113">In addition to properties, you can use the methods of the class to manipulate a form.</span></span> <span data-ttu-id="dc07a-114">Beispielsweise können Sie die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um ein Formular als modales Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-114">For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box.</span></span> <span data-ttu-id="dc07a-115">Sie können die <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> Methode, um das Formular zu positionieren, auf dem Desktop.</span><span class="sxs-lookup"><span data-stu-id="dc07a-115">You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.</span></span>  
  
 <span data-ttu-id="dc07a-116">Die Ereignisse der <xref:System.Windows.Forms.Form> Klasse können Sie Aktionen für das Formular zu reagieren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-116">The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form.</span></span> <span data-ttu-id="dc07a-117">Sie können die <xref:System.Windows.Forms.Form.Activated> Ereignis, um Vorgänge wie das Aktualisieren der Daten in die Steuerelemente des Formulars angezeigt, wenn das Formular aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-117">You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.</span></span>  
  
 <span data-ttu-id="dc07a-118">Sie können ein Formular in Ihrer Anwendung als Startklasse verwenden, platziert eine Methode namens `Main` in der Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-118">You can use a form as the starting class in your application by placing a method called `Main` in the class.</span></span> <span data-ttu-id="dc07a-119">In der `Main` Methode fügen Sie Code zum Erstellen und das Formular anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-119">In the `Main` method add code to create and show the form.</span></span> <span data-ttu-id="dc07a-120">Sie müssen auch hinzufügen der `STAThread` -Attribut auf die `Main` Methode in der Reihenfolge des Formulars ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-120">You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run.</span></span> <span data-ttu-id="dc07a-121">Wenn das Startformular geschlossen wird, wird die Anwendung ebenfalls geschlossen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-121">When the starting form is closed, the application is also closed.</span></span>  
  
 <span data-ttu-id="dc07a-122">Wenn Sie festlegen, die <xref:System.Windows.Forms.Control.Enabled%2A> Eigenschaft, um `false` vor der <xref:System.Windows.Forms.Form> sichtbar ist (z. B. <xref:System.Windows.Forms.Control.Enabled%2A> auf "false" in der [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] Designer), die minimieren-, maximieren-, schließen und Systemschaltflächen aktiviert bleiben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-122">If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled.</span></span> <span data-ttu-id="dc07a-123">Wenn Sie festlegen, <xref:System.Windows.Forms.Control.Enabled%2A> auf `false` nach der <xref:System.Windows.Forms.Form> wird angezeigt (z. B., wenn das Load-Ereignis auftritt), die Schaltflächen sind deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-123">If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-124">Das folgende Codebeispiel erstellt eine neue Instanz von einem <xref:System.Windows.Forms.Form> und ruft die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um das Formular als Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-124">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="dc07a-125">Im Beispiel wird die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um die Darstellung und Funktionalität des Formulars in ein Dialogfeld zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-125">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="dc07a-126">Das Beispiel verwendet außerdem die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> Methode im Format <xref:System.Windows.Forms.Control.Controls%2A> Auflistung hinzuzufügende zwei <xref:System.Windows.Forms.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-126">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="dc07a-127">Im Beispiel wird die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaft auf eine Schaltfläche "Hilfe" in der Titelleiste des Dialogfelds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-127">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Form ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Form();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-128">Initializes a new instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-128">Initializes a new instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-129">Die Standardgröße eines Formulars beträgt 300 Pixel hoch und 300 Pixel breit.</span><span class="sxs-lookup"><span data-stu-id="dc07a-129">The default size of a form is 300 pixels in height and 300 pixels in width.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-130">Das folgende Codebeispiel erstellt eine neue Instanz von einem <xref:System.Windows.Forms.Form> und ruft die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um das Formular als Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-130">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="dc07a-131">Im Beispiel wird die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um die Darstellung und Funktionalität des Formulars in ein Dialogfeld zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-131">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="dc07a-132">Im Beispiel wird außerdem verwendet die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> Methode im Format <xref:System.Windows.Forms.Control.Controls%2A> Auflistung hinzuzufügende zwei <xref:System.Windows.Forms.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-132">The example also sets uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="dc07a-133">Im Beispiel wird die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaft auf eine Schaltfläche "Hilfe" in der Titelleiste des Dialogfelds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-133">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl AcceptButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl AcceptButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AcceptButton" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ AcceptButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptButton : System.Windows.Forms.IButtonControl with get, set" Usage="System.Windows.Forms.Form.AcceptButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-134">Gets or sets the button on the form that is clicked when the user presses the ENTER key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-134">Gets or sets the button on the form that is clicked when the user presses the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-135">Ein <see cref="T:System.Windows.Forms.IButtonControl" />, das die Schaltfläche darstellt, die als Bestätigungsschaltfläche für das Formular verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-135">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the button to use as the accept button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-136">Diese Eigenschaft ermöglicht Ihnen, eine Standardaktion, die auftreten, wenn der Benutzer die EINGABETASTE, in der Anwendung drückt festzulegen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-136">This property enables you to designate a default action to occur when the user presses the ENTER key in your application.</span></span> <span data-ttu-id="dc07a-137">Die Schaltfläche "dieser Eigenschaft zugewiesene" muss ein <xref:System.Windows.Forms.IButtonControl> , befindet sich auf das aktuelle Formular oder in einem Container auf das aktuelle Formular befindet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-137">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="dc07a-138">Sie können diese Eigenschaft verwenden, damit der Benutzer schnell ein einfaches Formular navigieren, indem ihnen ermöglicht, einfach die EINGABETASTE drücken, wenn sie anstatt manuell auf die Schaltfläche "akzeptieren", mit dem Mauszeiger fertig sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-138">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.</span></span>  
  
 <span data-ttu-id="dc07a-139">Die Schaltfläche "Annehmen" kann nicht aktiviert werden, wenn das momentan ausgewählte Steuerelement im Formular die EINGABETASTE abfängt und diese verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-139">The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.</span></span> <span data-ttu-id="dc07a-140">Beispielsweise ermöglicht ein mehrzeiliges Textfeld-Steuerelement die EINGABETASTE gedrückt, wenn er ausgewählt ist, um ein neue-Zeile-Zeichen in das Steuerelement eingefügt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-140">For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-141">Das folgende Codebeispiel erstellt eine neue Instanz von einem <xref:System.Windows.Forms.Form> und ruft die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um das Formular als Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-141">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="dc07a-142">Im Beispiel wird die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um die Darstellung und Funktionalität des Formulars in ein Dialogfeld zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-142">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="dc07a-143">Das Beispiel verwendet außerdem die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> Methode im Format <xref:System.Windows.Forms.Control.Controls%2A> Auflistung hinzuzufügende zwei <xref:System.Windows.Forms.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-143">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="dc07a-144">Im Beispiel wird die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaft auf eine Schaltfläche "Hilfe" in der Titelleiste des Dialogfelds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-144">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; unit" Usage="form.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-145">Activates the form and gives it focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-145">Activates the form and gives it focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-146">Ein Formular aktivieren sie in den Vordergrund gebracht, wenn die aktive Anwendung sieht, oder es die fensterbeschriftung blinkt, ist dies nicht die aktive Anwendung.</span><span class="sxs-lookup"><span data-stu-id="dc07a-146">Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.</span></span> <span data-ttu-id="dc07a-147">Das Formular muss für diese Methode wirkt sich nur sichtbar sein.</span><span class="sxs-lookup"><span data-stu-id="dc07a-147">The form must be visible for this method to have any effect.</span></span> <span data-ttu-id="dc07a-148">Um das aktive Formular in einer Anwendung zu ermitteln, verwenden die <xref:System.Windows.Forms.Form.ActiveForm%2A> Eigenschaft oder die <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> Eigenschaft, wenn die Formulare in einer Multiple Document Interface (MDI)-Anwendung sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-148">To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-149">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> und <xref:System.Windows.Forms.Form.Activate%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-149">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="dc07a-150">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular namens `Form1` aufgerufen, die eine Schaltfläche enthält `Button1` und zwei `Label` genannten Hoststeuerelemente `Label1` und `Label2`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-150">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="dc07a-151">zum Ändern des Fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-151">for changing focus.</span>
          </span>
          <span data-ttu-id="dc07a-152">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-152">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-153">Occurs when the form is activated in code or by the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-153">Occurs when the form is activated in code or by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-154">Wenn die Anwendung aktiv ist und mehrere Formulare aufweist, wird das aktive Formular das Formular mit den Eingabefokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-154">When the application is active and has multiple forms, the active form is the form with the input focus.</span></span> <span data-ttu-id="dc07a-155">Ein Formular, das nicht angezeigt wird, darf nicht das aktive Formular sein.</span><span class="sxs-lookup"><span data-stu-id="dc07a-155">A form that is not visible cannot be the active form.</span></span> <span data-ttu-id="dc07a-156">Die einfachste Methode zum Aktivieren eines Formulars angezeigten wird, klicken darauf, oder verwenden Sie eine entsprechende Tastenkombination.</span><span class="sxs-lookup"><span data-stu-id="dc07a-156">The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.</span></span>  
  
 <span data-ttu-id="dc07a-157">Um ein Formular zur Laufzeit mithilfe von Code zu aktivieren, rufen Sie die <xref:System.Windows.Forms.Form.Activate%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-157">To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method.</span></span> <span data-ttu-id="dc07a-158">Verwenden Sie dieses Ereignis für Aufgaben wie das Aktualisieren des Inhalts des Formulars basierend auf Änderungen an die Daten des Formulars, wenn das Formular nicht aktiviert wurde.</span><span class="sxs-lookup"><span data-stu-id="dc07a-158">You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.</span></span>  
  
 <span data-ttu-id="dc07a-159">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-159">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-160">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, und <xref:System.Windows.Forms.Form.Activate%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-160">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="dc07a-161">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular mit dem Namen Form1 ein <xref:System.Windows.Forms.Button> aufgerufen `Button1` und zwei <xref:System.Windows.Forms.Label> genannten Hoststeuerelemente `Label1` und `Label2`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-161">To run the example, paste the following code in a form called Form1 containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActivateMdiChild">
      <MemberSignature Language="C#" Value="protected void ActivateMdiChild (System.Windows.Forms.Form form);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ActivateMdiChild(class System.Windows.Forms.Form form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ActivateMdiChild(System::Windows::Forms::Form ^ form);" />
      <MemberSignature Language="F#" Value="member this.ActivateMdiChild : System.Windows.Forms.Form -&gt; unit" Usage="form.ActivateMdiChild form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="form">
          <span data-ttu-id="dc07a-162">The child form to activate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-162">The child form to activate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-163">Activates the MDI child of a form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-163">Activates the MDI child of a form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-164">Wenn die `form` Parameter ist bereits mit dem aktiven untergeordneten MDI-Formulars die <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> einfach Methodenrückgabe.</span><span class="sxs-lookup"><span data-stu-id="dc07a-164">If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns.</span></span> <span data-ttu-id="dc07a-165">Wenn `form` nicht `null`, dann werden von aktiven untergeordneten MDI-Formulars festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-165">If `form` is not `null`, then it is set to be the active MDI child form.</span></span>  
  
 <span data-ttu-id="dc07a-166">Ob die `form` Parameter ist `null` or not <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> löst die <xref:System.Windows.Forms.Form.MdiChildActivate> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-166">Whether the `form` parameter is `null` or not, <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> raises the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveForm">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Form ActiveForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.Form ActiveForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveForm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Form ^ ActiveForm { System::Windows::Forms::Form ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveForm : System.Windows.Forms.Form" Usage="System.Windows.Forms.Form.ActiveForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-167">Gets the currently active form for this application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-167">Gets the currently active form for this application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-168">Ein <see cref="T:System.Windows.Forms.Form" />-Objekt, das das momentan aktive Formular darstellt, oder <see langword="null" />, wenn es kein aktives Formular gibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-168">A <see cref="T:System.Windows.Forms.Form" /> that represents the currently active form, or <see langword="null" /> if there is no active form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-169">Diese Methode können Sie einen Verweis auf das momentan aktive Formular für Aktionen auf die Form oder einem seiner Steuerelemente erhalten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-169">You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.</span></span>  
  
 <span data-ttu-id="dc07a-170">Wenn Ihre Anwendung eine Multiple Document Interface (MDI)-Anwendung ist, verwenden die <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> Eigenschaft, die derzeit aktiven untergeordneten MDI-Formulars abgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-170">If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-171">Im folgenden Codebeispiel wird das aktive Formular abgerufen und alle Steuerelemente im Formular deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-171">The following code example gets the active form and disables all the controls on the form.</span></span> <span data-ttu-id="dc07a-172">Im Beispiel wird die <xref:System.Windows.Forms.Control.Controls%2A> Auflistung des Formulars auf jedes Steuerelement im Formular durchlaufen, und deaktivieren die Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-172">The example uses the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form to iterate through each control on the form and disable the controls.</span></span>  
  
 [!code-cpp[Classic Form.ActiveForm Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveForm Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveForm Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveForm Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="dc07a-173">zum Anfordern eines Formulars an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-173">for requesting a form.</span>
          </span>
          <span data-ttu-id="dc07a-174">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-174">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="ActiveMdiChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form ActiveMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form ActiveMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMdiChild As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ ActiveMdiChild { System::Windows::Forms::Form ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveMdiChild : System.Windows.Forms.Form" Usage="System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-175">Gets the currently active multiple-document interface (MDI) child window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-175">Gets the currently active multiple-document interface (MDI) child window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-176">Gibt ein <see cref="T:System.Windows.Forms.Form" />-Objekt zurück, das das momentan aktive untergeordnete MDI-Fenster darstellt, oder <see langword="null" />, wenn keine untergeordneten Fenster vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-176">Returns a <see cref="T:System.Windows.Forms.Form" /> that represents the currently active MDI child window, or <see langword="null" /> if there are currently no child windows present.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-177">Sie können diese Methode verwenden, um zu bestimmen, ob alle untergeordneten MDI-Formulare in der MDI-Anwendung geöffnet sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-177">You can use this method to determine whether there are any MDI child forms open in your MDI application.</span></span> <span data-ttu-id="dc07a-178">Sie können diese Methode auch verwenden, zum Ausführen von Vorgängen für ein untergeordnetes MDI-Fenster aus seiner übergeordneten MDI-Formulars oder eine andere Form, die in der Anwendung angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-178">You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.</span></span>  
  
 <span data-ttu-id="dc07a-179">Wenn das momentan aktive Formular nicht über ein untergeordnetes MDI-Formular ist, können Sie mithilfe der <xref:System.Windows.Forms.Form.ActiveForm%2A> Eigenschaft, um einen Verweis darauf erhalten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-179">If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-180">Im folgenden Codebeispiel wird erhält einen Verweis auf das aktive untergeordnete MDI-Formular und durchläuft alle <xref:System.Windows.Forms.TextBox> Steuerelemente im Formular Zurücksetzen ihrer <xref:System.Windows.Forms.TextBoxBase.Text%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-180">The following code example obtains a reference to the active MDI child form and loops through all <xref:System.Windows.Forms.TextBox> controls on the form, resetting their <xref:System.Windows.Forms.TextBoxBase.Text%2A> properties.</span></span> <span data-ttu-id="dc07a-181">Dieses Beispiel benötigen Sie ein übergeordnetes MDI-Formular erstellt wurde, sodass der Aufruf dieser Methode wird von übergeordneten MDI-Formulars erfolgt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-181">This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.</span></span>  
  
 [!code-cpp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
      </Docs>
    </Member>
    <Member MemberName="AddOwnedForm">
      <MemberSignature Language="C#" Value="public void AddOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberSignature Language="F#" Value="member this.AddOwnedForm : System.Windows.Forms.Form -&gt; unit" Usage="form.AddOwnedForm ownedForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="dc07a-182">The <see cref="T:System.Windows.Forms.Form" /> that this form will own.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-182">The <see cref="T:System.Windows.Forms.Form" /> that this form will own.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-183">Adds an owned form to this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-183">Adds an owned form to this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-184">Das Formular auf das Besitzerformular zugewiesen bleibt bis zum Besitzer der <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-184">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="dc07a-185">Sie können auch ein Formular, das im Besitz von einem anderen festlegen, die <xref:System.Windows.Forms.Form.Owner%2A> Eigenschaft mit einem Verweis auf das Besitzerformular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-185">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="dc07a-186">Wenn eine andere Form ein Formulars Besitz befindet, ist es geschlossen oder ausgeblendet werden, zusammen mit dem Besitzerformular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-186">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="dc07a-187">Betrachten Sie beispielsweise ein Formular mit dem Namen `Form2` , deren Besitzer ein Formular mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-187">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="dc07a-188">Wenn `Form1` geschlossen oder minimiert, `Form2` auch geschlossen oder ausgeblendet wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-188">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="dc07a-189">Formulare werden ebenfalls nicht hinter dem Besitzerformular angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-189">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="dc07a-190">Sie können verwendet Formulare für Windows, z. B. Suchen und Ersetzen von Fenstern, bei denen hinter dem Besitzerformular nicht angezeigt werden soll, wenn das Besitzerformular ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-190">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-191">Wenn das Formular ein Multiple Document Interface (MDI) übergeordnetes Formular ist, gibt diese Eigenschaft an, dass alle Formulare, die mit Ausnahme von untergeordneten MDI-Formulare angezeigt werden, die derzeit geöffnet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-191">If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="dc07a-192">Verwenden Sie zum Abrufen der untergeordnete MDI-Formulare in einem übergeordneten MDI-Formulars geöffnet die <xref:System.Windows.Forms.Form.MdiChildren%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-192">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-193">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.AddOwnedForm%2A> Methode, um ein Formular als ein Formular mit einem anderen Formular angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-193">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method to display a form as an owned form of another form.</span></span> <span data-ttu-id="dc07a-194">Sobald das Formular angezeigt wird, können Sie das Besitzerformular minimieren und das zugehörige Formular wird minimiert, damit.</span><span class="sxs-lookup"><span data-stu-id="dc07a-194">Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it.</span></span> <span data-ttu-id="dc07a-195">Das Beispiel erfordert, dass der Code im Beispiel über ein anderes Ereignis oder Methode eines Formulars aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-195">The example requires that the code in the example is called from another event or method of a form.</span></span>  
  
 [!code-cpp[Form.AddOwnedForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AddOwnedForm/CPP/form1.cpp#1)]
 [!code-csharp[Form.AddOwnedForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AddOwnedForm/CS/form1.cs#1)]
 [!code-vb[Form.AddOwnedForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AddOwnedForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="AdjustFormScrollbars">
      <MemberSignature Language="C#" Value="protected override void AdjustFormScrollbars (bool displayScrollbars);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AdjustFormScrollbars(bool displayScrollbars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AdjustFormScrollbars (displayScrollbars As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AdjustFormScrollbars(bool displayScrollbars);" />
      <MemberSignature Language="F#" Value="override this.AdjustFormScrollbars : bool -&gt; unit" Usage="form.AdjustFormScrollbars displayScrollbars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayScrollbars" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="displayScrollbars">
          <span data-ttu-id="dc07a-196">
            <see langword="true" /> to show the scroll bars; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-196">
              <see langword="true" /> to show the scroll bars; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-197">Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-197">Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTransparency">
      <MemberSignature Language="C#" Value="public bool AllowTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AllowTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTransparency : bool with get, set" Usage="System.Windows.Forms.Form.AllowTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-198">Gets or sets a value indicating whether the opacity of the form can be adjusted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-198">Gets or sets a value indicating whether the opacity of the form can be adjusted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-199">
            <see langword="true" />, wenn die Deckkraft des Formulars geändert werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-199">
              <see langword="true" /> if the opacity of the form can be changed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-200">Diese Eigenschaft wird automatisch festgelegt, um `true` Wenn die `Opacity` geändert wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-200">This property is automatically set to `true` if the `Opacity` is changed.</span></span> <span data-ttu-id="dc07a-201">Wenn die Deckkraft eines Formulars festgelegt ist, mit der `Opacity` -Eigenschaft, das Formular wird Überlagern von Objekten in das Formular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-201">When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form.</span></span> <span data-ttu-id="dc07a-202">Wenn Sie festlegen, die <xref:System.Windows.Forms.Form.AllowTransparency%2A> Eigenschaft `false` des Formulars werden im Ebenen-Modus, der die Anzeige des Formulars verbessert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-202">If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAutoScaling">
      <MemberSignature Language="C#" Value="protected void ApplyAutoScaling ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ApplyAutoScaling() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ApplyAutoScaling" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ApplyAutoScaling ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ApplyAutoScaling();" />
      <MemberSignature Language="F#" Value="member this.ApplyAutoScaling : unit -&gt; unit" Usage="form.ApplyAutoScaling " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the ApplyAutoScaling method instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-203">Resizes the form according to the current value of the <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> property and the size of the current font.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-203">Resizes the form according to the current value of the <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> property and the size of the current font.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-204">Diese Methode bestimmt die Größe des Formulars, mit dem Wert von der <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> Eigenschaft und die <xref:System.Windows.Forms.Form.Size%2A> zurückgegebene Wert den <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-204">This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScale">
      <MemberSignature Language="C#" Value="public bool AutoScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScale" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScale As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScale { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScale : bool with get, set" Usage="System.Windows.Forms.Form.AutoScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Use the AutoScaleMode property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-205">Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-205">Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-206">
            <see langword="true" />, wenn das Formular und die darin befindlichen Steuerelemente automatisch entsprechend der aktuellen dem Formular zugewiesenen Schriftart skaliert werden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-206">
              <see langword="true" /> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-207">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-207">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc07a-208">Die <xref:System.Windows.Forms.Form.AutoScale%2A> ist veraltet und wurde für Abwärtskompatibilität beibehalten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-208">The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="dc07a-209">Die nicht veraltete Alternative ist <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-209">The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dc07a-210">Weitere Informationen zur automatischen Skalierung finden Sie unter [automatische Skalierung in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-210">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="dc07a-211">Sie können diese Eigenschaft verwenden, um das Formular zu ermöglichen, und seine Steuerelemente automatisch anpassen auf der Grundlage von Änderungen in der Schriftart.</span><span class="sxs-lookup"><span data-stu-id="dc07a-211">You can use this property to allow your form and its controls to automatically adjust based on changes in the font.</span></span> <span data-ttu-id="dc07a-212">Dies kann hilfreich für Anwendungen, in dem die Schriftart erhöhen kann, oder verringern, die basierend auf der Sprache, die für die Verwendung von Windows angegeben sein.</span><span class="sxs-lookup"><span data-stu-id="dc07a-212">This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.</span></span>  
  
 <span data-ttu-id="dc07a-213">Zum Abrufen der Größe des Formulars werden automatisch zu verwendende Skala der <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-213">To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span> <span data-ttu-id="dc07a-214">Gegebenenfalls zur Bestimmung der Größe des Formulars automatisch vergrößert wird, basierend auf einer bestimmten Schriftart, verwenden die <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-214">If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaleBaseSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size AutoScaleBaseSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScaleBaseSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size AutoScaleBaseSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScaleBaseSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-215">Gets or sets the base size used for autoscaling of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-215">Gets or sets the base size used for autoscaling of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-216">Eine <see cref="T:System.Drawing.Size" />, die die Grundgröße darstellt, die dieses Formular für die automatische Skalierung verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-216">A <see cref="T:System.Drawing.Size" /> that represents the base size that this form uses for autoscaling.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc07a-217">Dieser Member wurde für Abwärtskompatibilität beibehalten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-217">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="dc07a-218">Weitere Informationen zur automatischen Skalierung finden Sie unter [automatische Skalierung in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-218">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="dc07a-219">Der Wert, der die <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> Eigenschaft wird zum Zeitpunkt der Anzeige des Formulars verwendet, um den Faktor für die Skalierung für das Formular zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-219">The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form.</span></span> <span data-ttu-id="dc07a-220">Die Grundgröße wird vom Formular verwendeten als Grundlage für den Vergleich mit Schriftgrad für das System zum Ermitteln des anfallenden für die Skalierung des Formulars, wenn die automatische Skalierung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-220">The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.</span></span> <span data-ttu-id="dc07a-221">Wenn Sie die Größe bestimmen möchten, ein Formular werden automatisch skalieren basierend auf einer bestimmten Schriftart, verwenden die <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-221">If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-222">Der Wert dieser Eigenschaft wird verwendet, wenn das Formular erstmalig erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-222">The value of this property is used when the form is initially created.</span></span> <span data-ttu-id="dc07a-223">Sobald die Eigenschaft festgelegt ist, kann er nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-223">Once the property is set, it cannot be changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScale" />
        <altmember cref="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public override bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScroll : bool with get, set" Usage="System.Windows.Forms.Form.AutoScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-224">Gets or sets a value indicating whether the form enables autoscrolling.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-224">Gets or sets a value indicating whether the form enables autoscrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-225">
            <see langword="true" />, um den automatischen Bildlauf für das Formular zu aktivieren, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-225">
              <see langword="true" /> to enable autoscrolling on the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-226">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-227">Wenn diese Eigenschaft, um festgelegt wird `true`, Bildlaufleisten werden auf dem Formular angezeigt, wenn alle Steuerelemente außerhalb der Formularbereich Client befinden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-227">If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region.</span></span> <span data-ttu-id="dc07a-228">Darüber hinaus bei den automatischen Bildlauf aktiviert ist, führt einen Bildlauf durch den Clientbereich des Formulars automatisch um das Steuerelement mit Eingabefokus sichtbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-228">Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.</span></span>  
  
 <span data-ttu-id="dc07a-229">Sie können diese Eigenschaft verwenden, um zu verhindern, dass Benutzer verlieren die Möglichkeit, die Steuerelemente anzuzeigen, wenn ihre Einstellungen für die Auflösung mit niedriger Auflösung festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-229">You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-230">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.AutoScroll%2A> Eigenschaft zum Aktivieren der Anzeige von Steuerelementen, die sich außerhalb des Clientbereichs eines Formulars sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-230">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AutoScroll%2A> property to enable the display of controls that are outsize the client area of a form.</span></span> <span data-ttu-id="dc07a-231">Das Beispiel erstellt ein neues Formular, und fügt eine <xref:System.Windows.Forms.Button> Steuerelement dem Formular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-231">The example creates a new form and adds a <xref:System.Windows.Forms.Button> control to the form.</span></span> <span data-ttu-id="dc07a-232">Die <xref:System.Windows.Forms.Button> Steuerelement befindet sich außerhalb des Clientbereichs des neuen Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-232">The <xref:System.Windows.Forms.Button> control is positioned outsize the client area of the new form.</span></span> <span data-ttu-id="dc07a-233">Die <xref:System.Windows.Forms.Form.AutoScroll%2A> Eigenschaftensatz wird auf "true", auf das Formular, um dem Benutzer ermöglichen, führen Sie einen Bildlauf an das Steuerelement Bildlaufleisten angezeigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-233">The <xref:System.Windows.Forms.Form.AutoScroll%2A> property is set to true to display scroll bars on the form to enable the user to scroll to the control.</span></span> <span data-ttu-id="dc07a-234">Dieses Beispiel benötigen Sie, dass die in diesem Beispiel definierte Methode aus einem anderen Formular in einem Ereignishandler oder eine andere Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-234">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.AutoScroll#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AutoScroll/CPP/form1.cpp#1)]
 [!code-csharp[Form.AutoScroll#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoScroll/CS/form1.cs#1)]
 [!code-vb[Form.AutoScroll#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoScroll/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.Form.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-235">Resize the form according to the setting of <see cref="P:System.Windows.Forms.Form.AutoSizeMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-235">Resize the form according to the setting of <see cref="P:System.Windows.Forms.Form.AutoSizeMode" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-236">
            <see langword="true" />, wenn die Größe des Formulars automatisch geändert wird, <see langword="false" />, wenn die Größe manuell geändert werden muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-236">
              <see langword="true" /> if the form will automatically resize; <see langword="false" /> if it must be manually resized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-237">Verwendung <xref:System.Windows.Forms.Form.AutoSize%2A> erzwingen Sie ein Formular, um seinen Inhalt angepasst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-237">Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents.</span></span>  
  
 <span data-ttu-id="dc07a-238">Ein Formular in der Visual Studio-Forms-Designer, unabhängig von den Werten der nicht automatisch angepasst werden die <xref:System.Windows.Forms.Form.AutoSize%2A> und <xref:System.Windows.Forms.Form.AutoSizeMode%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-238">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="dc07a-239">Größe des Formulars ändert ordnungsgemäß selbst zur Laufzeit nach den Werten dieser beiden Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-239">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="dc07a-240">Im Gegensatz dazu, eine benutzerdefinierte <xref:System.Windows.Forms.UserControl> automatisch selbst ändert sowohl zur Entwurfszeit und zur Laufzeit.</span><span class="sxs-lookup"><span data-stu-id="dc07a-240">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
 <span data-ttu-id="dc07a-241">Bei Verwendung <xref:System.Windows.Forms.Form.AutoSize%2A>, <xref:System.Windows.Forms.Control.MinimumSize%2A> und <xref:System.Windows.Forms.Control.MaximumSize%2A> Eigenschaften werden berücksichtigt, aber der aktuelle Wert der die <xref:System.Windows.Forms.Control.Size%2A> Eigenschaft wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-241">When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored.</span></span> <span data-ttu-id="dc07a-242">Mit <xref:System.Windows.Forms.Form.AutoSize%2A> und <xref:System.Windows.Forms.Form.AutoSizeMode%2A> auch rendert die <xref:System.Windows.Forms.Form.AutoScroll%2A> Eigenschaft überflüssig, wie es keine Möglichkeit zum Verkleinern des Formulars gibt, um die darin enthaltenen Steuerelemente aus der Ansicht ausgeblendet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-242">Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.</span></span>  
  
 <span data-ttu-id="dc07a-243">Finden Sie unter der <xref:System.Windows.Forms.AutoSizeMode> Enumeration Informationen wann verhält sich wie ein Formular <xref:System.Windows.Forms.Form.AutoSize%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-243">See the <xref:System.Windows.Forms.AutoSizeMode> enumeration for information on how a form behaves when <xref:System.Windows.Forms.Form.AutoSize%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-244">Das folgende Codebeispiel zeigt ein Formular erstellt, mit Code, die Größe wird automatisch an seinen Inhalt angepasst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-244">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="dc07a-245">Bei der Ausführung des Formulars angezeigt ein <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.TextBox> zum Eingeben einer URL und ein <xref:System.Windows.Forms.Button> für diese URL innerhalb des Benutzers Standard-Webbrowser anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-245">When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="dc07a-246">Das Codebeispiel verwendet eine <xref:System.Windows.Forms.FlowLayoutPanel> um das Layout der enthaltenen Steuerelemente nacheinander.</span><span class="sxs-lookup"><span data-stu-id="dc07a-246">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="dc07a-247">Außerdem wird die <xref:System.Windows.Forms.Control.AutoSize%2A> und <xref:System.Windows.Forms.AutoSizeMode> vergrößert und verkleinert werden, um den Inhalt des Formulars anzupassen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-247">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-248">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoSize" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-248">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoSize" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeMode : System.Windows.Forms.AutoSizeMode with get, set" Usage="System.Windows.Forms.Form.AutoSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-249">Gets or sets the mode by which the form automatically resizes itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-249">Gets or sets the mode by which the form automatically resizes itself.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-250">Ein <see cref="T:System.Windows.Forms.AutoSizeMode" />-Enumerationswert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-250">An <see cref="T:System.Windows.Forms.AutoSizeMode" /> enumerated value.</span>
          </span>
          <span data-ttu-id="dc07a-251">Die Standardeinstellung ist <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-251">The default is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-252">Festlegen der <xref:System.Windows.Forms.Form.AutoSizeMode%2A> -Eigenschaft einen neuen Wert bewirkt, dass das Formular erneut angeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-252">Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again.</span></span>  
  
 <span data-ttu-id="dc07a-253">Ein Formular in der Visual Studio-Forms-Designer, unabhängig von den Werten der nicht automatisch angepasst werden die <xref:System.Windows.Forms.Form.AutoSize%2A> und <xref:System.Windows.Forms.Form.AutoSizeMode%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-253">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="dc07a-254">Größe des Formulars ändert ordnungsgemäß selbst zur Laufzeit nach den Werten dieser beiden Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-254">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="dc07a-255">Im Gegensatz dazu, eine benutzerdefinierte <xref:System.Windows.Forms.UserControl> automatisch selbst ändert sowohl zur Entwurfszeit und zur Laufzeit.</span><span class="sxs-lookup"><span data-stu-id="dc07a-255">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-256">Das folgende Codebeispiel zeigt ein Formular erstellt, mit Code, die Größe wird automatisch an seinen Inhalt angepasst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-256">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="dc07a-257">Bei Ausführung im Formular ein ein <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.TextBox> zum Eingeben einer URL und ein <xref:System.Windows.Forms.Button> für diese URL innerhalb des Benutzers Standard-Webbrowser anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-257">When run, the form displaya a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="dc07a-258">Das Codebeispiel verwendet eine <xref:System.Windows.Forms.FlowLayoutPanel> um das Layout der enthaltenen Steuerelemente nacheinander.</span><span class="sxs-lookup"><span data-stu-id="dc07a-258">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="dc07a-259">Außerdem wird die <xref:System.Windows.Forms.Control.AutoSize%2A> und <xref:System.Windows.Forms.AutoSizeMode> vergrößert und verkleinert werden, um den Inhalt des Formulars anzupassen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-259">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc07a-260">The value is not a valid <see cref="T:System.Windows.Forms.AutoSizeMode" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-260">The value is not a valid <see cref="T:System.Windows.Forms.AutoSizeMode" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.AutoSizeMode" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoValidate AutoValidate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoValidate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoValidate As AutoValidate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AutoValidate AutoValidate { System::Windows::Forms::AutoValidate get(); void set(System::Windows::Forms::AutoValidate value); };" />
      <MemberSignature Language="F#" Value="member this.AutoValidate : System.Windows.Forms.AutoValidate with get, set" Usage="System.Windows.Forms.Form.AutoValidate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-261">Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-261">Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-262">Ein <see cref="T:System.Windows.Forms.AutoValidate" /> Enumerationswert, der angibt, ob enthaltene Steuerelemente bei Änderung des Fokus implizit validiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-262">An <see cref="T:System.Windows.Forms.AutoValidate" /> enumerated value that indicates whether contained controls are implicitly validated on focus change.</span>
          </span>
          <span data-ttu-id="dc07a-263">Der Standardwert wird geerbt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-263">The default is Inherit.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.AutoValidate" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoValidateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoValidateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoValidateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoValidateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoValidateChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoValidateChanged : EventHandler " Usage="member this.AutoValidateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-264">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoValidate" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-264">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoValidate" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Form.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-265">Gets or sets the background color for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-265">Gets or sets the background color for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-266">Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe des Steuerelements darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-266">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span>
          </span>
          <span data-ttu-id="dc07a-267">Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />-Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-267">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="CancelButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl CancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl CancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CancelButton" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ CancelButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelButton : System.Windows.Forms.IButtonControl with get, set" Usage="System.Windows.Forms.Form.CancelButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-268">Gets or sets the button control that is clicked when the user presses the ESC key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-268">Gets or sets the button control that is clicked when the user presses the ESC key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-269">Ein <see cref="T:System.Windows.Forms.IButtonControl" />, das die Schaltfläche zum Abbrechen für das Formular darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-269">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the cancel button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-270">Die Schaltfläche "Abbrechen", für ein Formular ist das Schaltflächen-Steuerelement, auf die geklickt wird, wenn der Benutzer die ESC-Taste drückt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-270">The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.</span></span> <span data-ttu-id="dc07a-271">Die Schaltfläche "dieser Eigenschaft zugewiesene" muss ein <xref:System.Windows.Forms.IButtonControl> , befindet sich auf das aktuelle Formular oder in einem Container auf das aktuelle Formular befindet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-271">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="dc07a-272">Diese Eigenschaft ermöglicht Ihnen, eine Standardaktion, die auftreten, wenn der Benutzer die ESC-Taste, in der Anwendung drückt festzulegen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-272">This property allows you to designate a default action to occur when the user presses the ESC key in your application.</span></span> <span data-ttu-id="dc07a-273">Sie können diese Eigenschaft verwenden, damit der Benutzer, ein einfaches Formular schnell zu navigieren, indem ihnen ermöglicht, drücken einfach die ESC-Taste, um ein Fenster zu schließen, ohne dass Änderungen, anstatt manuell auf die Schaltfläche "Abbrechen", mit dem Mauszeiger kann.</span><span class="sxs-lookup"><span data-stu-id="dc07a-273">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.</span></span>  
  
 <span data-ttu-id="dc07a-274"><xref:System.Windows.Forms.Form.CancelButton%2A> Möglicherweise funktioniert nicht, wenn ein anderes Steuerelement im Formular die ESC-TASTE abfängt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-274"><xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key.</span></span> <span data-ttu-id="dc07a-275">Angenommen, Sie haben eine <xref:System.Windows.Forms.ComboBox> auf das Formular geöffnet, ESC geschlossen wird die <xref:System.Windows.Forms.ComboBox> anstatt das Formular geschlossen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-275">For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.</span></span>  
  
 <span data-ttu-id="dc07a-276">Die <xref:System.Windows.Forms.IButtonControl> zugewiesene Objekt <xref:System.Windows.Forms.Form.CancelButton%2A> muss auf dem Formular angezeigt werden, da andernfalls die ESC-Taste drücken Schlüssel hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-276">The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-277">Das folgende Codebeispiel erstellt eine neue Instanz von einem <xref:System.Windows.Forms.Form> und ruft die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um das Formular als Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-277">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="dc07a-278">Im Beispiel wird die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um die Darstellung und Funktionalität des Formulars in ein Dialogfeld zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-278">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="dc07a-279">Das Beispiel verwendet außerdem die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> Methode im Format <xref:System.Windows.Forms.Control.Controls%2A> Auflistung hinzuzufügende zwei <xref:System.Windows.Forms.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-279">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="dc07a-280">Im Beispiel wird die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaft auf eine Schaltfläche "Hilfe" in der Titelleiste des Dialogfelds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-280">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CenterToParent">
      <MemberSignature Language="C#" Value="protected void CenterToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToParent" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToParent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToParent();" />
      <MemberSignature Language="F#" Value="member this.CenterToParent : unit -&gt; unit" Usage="form.CenterToParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-281">Centers the position of the form within the bounds of the parent form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-281">Centers the position of the form within the bounds of the parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-282">Rufen Sie nicht die <xref:System.Windows.Forms.Form.CenterToParent%2A> -Methode direkt aus dem Code.</span><span class="sxs-lookup"><span data-stu-id="dc07a-282">Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code.</span></span> <span data-ttu-id="dc07a-283">Legen Sie stattdessen die <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaft <xref:System.Windows.Forms.FormStartPosition.CenterParent>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-283">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.</span></span>  
  
 <span data-ttu-id="dc07a-284">Wenn das Formular oder Dialogfeld klicken Sie dann auf der obersten Ebene, ist <xref:System.Windows.Forms.Form.CenterToParent%2A> Zentriert das Formular in Bezug auf den Bildschirm oder den Desktop.</span><span class="sxs-lookup"><span data-stu-id="dc07a-284">If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterParent" />
        <altmember cref="M:System.Windows.Forms.Form.CenterToScreen" />
      </Docs>
    </Member>
    <Member MemberName="CenterToScreen">
      <MemberSignature Language="C#" Value="protected void CenterToScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToScreen();" />
      <MemberSignature Language="F#" Value="member this.CenterToScreen : unit -&gt; unit" Usage="form.CenterToScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-285">Centers the form on the current screen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-285">Centers the form on the current screen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-286">Rufen Sie dies nicht direkt aus dem Code.</span><span class="sxs-lookup"><span data-stu-id="dc07a-286">Do not call this directly from your code.</span></span> <span data-ttu-id="dc07a-287">Legen Sie stattdessen die <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaft <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-287">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.</span></span>  
  
 <span data-ttu-id="dc07a-288">Die <xref:System.Windows.Forms.Form.CenterToScreen%2A> Methode der folgenden Prioritätenliste verwendet, um zu bestimmen, den Bildschirm, um das Formular zentrieren verwendet:</span><span class="sxs-lookup"><span data-stu-id="dc07a-288">The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:</span></span>  
  
1.  <span data-ttu-id="dc07a-289">Die <xref:System.Windows.Forms.Form.Owner%2A> -Eigenschaft des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-289">The <xref:System.Windows.Forms.Form.Owner%2A> property of the form.</span></span>  
  
2.  <span data-ttu-id="dc07a-290">Der HWND-Besitzer des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-290">The HWND owner of the form.</span></span>  
  
3.  <span data-ttu-id="dc07a-291">Der Bildschirm aufweist, das gegenwärtig den Cursor.</span><span class="sxs-lookup"><span data-stu-id="dc07a-291">The screen that currently has the mouse cursor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterScreen" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.ClientSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.ClientSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-292">Gets or sets the size of the client area of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-292">Gets or sets the size of the client area of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-293">Eine <see cref="T:System.Drawing.Size" />, die die Größe des Clientbereichs des Formulars darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-293">A <see cref="T:System.Drawing.Size" /> that represents the size of the form's client area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-294">Die Größe des Clientbereichs des Formulars wird die Größe des Formulars ohne Rahmen und der Titelleiste.</span><span class="sxs-lookup"><span data-stu-id="dc07a-294">The size of the client area of the form is the size of the form excluding the borders and the title bar.</span></span> <span data-ttu-id="dc07a-295">Das den Clientbereich eines Formulars ist der Bereich innerhalb eines Formulars, in dem Steuerelemente platziert werden können.</span><span class="sxs-lookup"><span data-stu-id="dc07a-295">The client area of a form is the area within a form where controls can be placed.</span></span> <span data-ttu-id="dc07a-296">Sie können diese Eigenschaft verwenden, die richtigen Dimensionen bei Vorgängen für Grafiken oder beim Ändern der Größe und Positionierung der Steuerelemente im Formular ab.</span><span class="sxs-lookup"><span data-stu-id="dc07a-296">You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.</span></span> <span data-ttu-id="dc07a-297">Verwenden Sie zum Abrufen der Größe des gesamten Formulars die <xref:System.Windows.Forms.Form.Size%2A> Eigenschaft oder die einzelnen Eigenschaften <xref:System.Windows.Forms.Control.Height%2A> und <xref:System.Windows.Forms.Control.Width%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-297">To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-298">Sie können nicht auf diese Eigenschaft, die mit den Anwendungseinstellungen derzeit binden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-298">You cannot currently bind to this property using application settings.</span></span> <span data-ttu-id="dc07a-299">Weitere Informationen zu Anwendungseinstellungen, finden Sie unter [Übersicht über Anwendungseinstellungen](~/docs/framework/winforms/advanced/application-settings-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-299">For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-300">Das folgende Codebeispiel erstellt einen Ereignishandler für das <xref:System.Windows.Forms.Control.Resize> -Ereignis für ein Formular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-300">The following code example creates an event handler for the <xref:System.Windows.Forms.Control.Resize> event of a form.</span></span> <span data-ttu-id="dc07a-301">Der Ereignishandler verwendet die <xref:System.Windows.Forms.Form.ClientSize%2A> -Eigenschaft des Formulars auf stellen eine <xref:System.Windows.Forms.Button> -Steuerelement namens `button1` füllen Sie den gesamten Clientbereich des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-301">The event handler uses the <xref:System.Windows.Forms.Form.ClientSize%2A> property of the form to make a <xref:System.Windows.Forms.Button> control named `button1` fill the entire client area of the form.</span></span>  
  
 [!code-cpp[Classic Form.ClientSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ClientSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ClientSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ClientSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="form.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-302">Closes the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-302">Closes the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-303">Wenn ein Formular geschlossen wird, alle Ressourcen erstellt, die innerhalb des Objekts geschlossen sind, und das Formular freigegeben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-303">When a form is closed, all resources created within the object are closed and the form is disposed.</span></span> <span data-ttu-id="dc07a-304">Sie können das Schließen eines Formulars zur Laufzeit verhindern, durch Behandeln der <xref:System.Windows.Forms.Form.Closing> Ereignis und die Einstellung der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.ComponentModel.CancelEventArgs> als Parameter an Ihren Ereignishandler übergebene.</span><span class="sxs-lookup"><span data-stu-id="dc07a-304">You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler.</span></span> <span data-ttu-id="dc07a-305">Wenn das Formular, das Sie schließen das Startformular der Anwendung ist, wird die Anwendung beendet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-305">If the form you are closing is the startup form of your application, your application ends.</span></span>  
  
 <span data-ttu-id="dc07a-306">Die beiden Bedingungen, wenn ein Formular nicht gelöscht wird, auf `Close` bei (1) sie ist Teil einer Anwendung Multiple Document Interface (MDI) und das Formular nicht sichtbar ist; und (2) Sie haben das Formular angezeigt wird mithilfe von <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-306">The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span> <span data-ttu-id="dc07a-307">In diesen Fällen müssen Sie zum Aufrufen <xref:System.Windows.Forms.Form.Dispose%2A> manuell, um alle Steuerelemente des Formulars für die Garbagecollection zu markieren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-307">In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-308">Wenn die <xref:System.Windows.Forms.Form.Close%2A> Methode aufgerufen wird eine <xref:System.Windows.Forms.Form> als ein nicht modales Fenster angezeigt wird, können nicht aufgerufen werden die <xref:System.Windows.Forms.Control.Show%2A> Methode, um das Formular sichtbar ist, da die Ressourcen des Formulars bereits freigegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-308">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="dc07a-309">Zum Ausblenden eines Formulars und dass es sichtbar ist, verwenden die <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-309">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="dc07a-310">Vor der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 die <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> und <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> Ereignisse wurden nicht wird ausgelöst, wenn die <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> Methode wird aufgerufen, um die Anwendung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-310">Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="dc07a-311">Wenn Sie Validierungscode in eines dieser Ereignisse, die ausgeführt werden müssen verfügen, sollten Sie Aufrufen der <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> Methode für jedes Formular einzeln vor dem Aufruf der <xref:System.Windows.Forms.Application.Exit%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-311">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc07a-312">The form was closed while a handle was being created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-312">The form was closed while a handle was being created.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="dc07a-313">You cannot call this method from the <see cref="E:System.Windows.Forms.Form.Activated" /> event when <see cref="P:System.Windows.Forms.Form.WindowState" /> is set to <see cref="F:System.Windows.Forms.FormWindowState.Maximized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-313">You cannot call this method from the <see cref="E:System.Windows.Forms.Form.Activated" /> event when <see cref="P:System.Windows.Forms.Form.WindowState" /> is set to <see cref="F:System.Windows.Forms.FormWindowState.Maximized" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-314">Occurs when the form is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-314">Occurs when the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="dc07a-315">Die <xref:System.Windows.Forms.Form.Closed> Ereignis ist in .NET Framework, Version 2.0 veraltet; verwenden Sie die <xref:System.Windows.Forms.Form.FormClosed> Ereignis stattdessen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-315">The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead.</span></span>  
  
 <span data-ttu-id="dc07a-316">Dieses Ereignis tritt auf, nachdem das Formular vom Benutzer oder durch geschlossen wurde die <xref:System.Windows.Forms.Form.Close%2A> -Methode des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-316">This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form.</span></span> <span data-ttu-id="dc07a-317">Zum Schließen ein Formulars zu verhindern, behandeln die <xref:System.Windows.Forms.Form.Closing> Ereignis, und legen die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.ComponentModel.CancelEventArgs> an Ihren Ereignishandler zu übergeben `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-317">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="dc07a-318">Sie können dieses Ereignis verwenden, um Aufgaben wie das Freigeben von Ressourcen, die vom Formular verwendeten und im Formular eingegebenen Informationen zu speichern oder übergeordneten Formulars zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-318">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="dc07a-319">Die <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> und <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> Ereignisse wurden nicht ausgelöst, wenn die <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> Methode wird aufgerufen, um die Anwendung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-319">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="dc07a-320">Wenn Sie Validierungscode in eines dieser Ereignisse, die ausgeführt werden müssen verfügen, sollten Sie Aufrufen der <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> Methode für jedes Formular einzeln vor dem Aufruf der <xref:System.Windows.Forms.Application.Exit%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-320">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="dc07a-321">Wenn das Formular mit einem übergeordneten MDI-Formulars ist die <xref:System.Windows.Forms.Form.Closing> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor der übergeordnete MDI-Formular <xref:System.Windows.Forms.Form.Closing> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-321">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="dc07a-322">Darüber hinaus die <xref:System.Windows.Forms.Form.Closed> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor die <xref:System.Windows.Forms.Form.Closed> -Ereignis des übergeordneten MDI-Formulars ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-322">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="dc07a-323">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-323">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-324">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, und <xref:System.Windows.Forms.Form.Activate%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-324">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="dc07a-325">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular mit `Form1` mit einem <xref:System.Windows.Forms.Button> aufgerufen `Button1` und zwei <xref:System.Windows.Forms.Label> genannten Hoststeuerelemente `Label1` und `Label2`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-325">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-326">Occurs when the form is closing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-326">Occurs when the form is closing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="dc07a-327">Die <xref:System.Windows.Forms.Form.Closing> Ereignis ist in .NET Framework, Version 2.0 veraltet; verwenden Sie die <xref:System.Windows.Forms.Form.FormClosing> Ereignis stattdessen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-327">The <xref:System.Windows.Forms.Form.Closing> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead.</span></span>  
  
 <span data-ttu-id="dc07a-328">Die <xref:System.Windows.Forms.Form.Closing> Ereignis tritt auf, wenn das Formular geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-328">The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed.</span></span> <span data-ttu-id="dc07a-329">Wenn ein Formular geschlossen wird, alle Ressourcen, die innerhalb des Objekts erstellt werden freigegeben, und das Formular freigegeben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-329">When a form is closed, all resources created within the object are released and the form is disposed.</span></span> <span data-ttu-id="dc07a-330">Wenn Sie dieses Ereignis abbrechen, bleibt das Formular geöffnet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-330">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="dc07a-331">Legen Sie zum Abbrechen des Abschluss eines Formulars die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.ComponentModel.CancelEventArgs> an Ihren Ereignishandler zu übergeben `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-331">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="dc07a-332">Wenn ein Formular als modales Dialogfeld angezeigt wird, klicken Sie auf die **schließen** Schaltfläche (die Schaltfläche mit einem X in der oberen rechten Ecke des Formulars) bewirkt, dass das Formular ausgeblendet werden und die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft festgelegt werden, um `DialogResult.Cancel`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-332">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="dc07a-333">Sie können den zugewiesenen Wert überschreiben die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft klickt der Benutzer die **schließen** Schaltfläche durch Festlegen der <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft in einem Ereignishandler für die <xref:System.Windows.Forms.Form.Closing> Ereignis der Art.</span><span class="sxs-lookup"><span data-stu-id="dc07a-333">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-334">Wenn die <xref:System.Windows.Forms.Form.Close%2A> Methode aufgerufen wird eine <xref:System.Windows.Forms.Form> als ein nicht modales Fenster angezeigt wird, können nicht aufgerufen werden die <xref:System.Windows.Forms.Control.Show%2A> Methode, um das Formular sichtbar ist, da die Ressourcen des Formulars bereits freigegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-334">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="dc07a-335">Zum Ausblenden eines Formulars und dass es sichtbar ist, verwenden die <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-335">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="dc07a-336">Die <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> und <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> Ereignisse wurden nicht ausgelöst, wenn die <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> Methode wird aufgerufen, um die Anwendung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-336">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="dc07a-337">Wenn Sie Validierungscode in eines dieser Ereignisse, die ausgeführt werden müssen verfügen, sollten Sie Aufrufen der <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> Methode für jedes Formular einzeln vor dem Aufruf der <xref:System.Windows.Forms.Application.Exit%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-337">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="dc07a-338">Wenn das Formular mit einem übergeordneten MDI-Formulars ist die <xref:System.Windows.Forms.Form.Closing> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor der übergeordnete MDI-Formular <xref:System.Windows.Forms.Form.Closing> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-338">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="dc07a-339">Darüber hinaus die <xref:System.Windows.Forms.Form.Closed> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor die <xref:System.Windows.Forms.Form.Closed> -Ereignis des übergeordneten MDI-Formulars ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-339">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="dc07a-340">Durch das Abbrechen der <xref:System.Windows.Forms.Form.Closing> -Ereignis für ein untergeordnetes MDI-Formular verhindert nicht die <xref:System.Windows.Forms.Form.Closing> -Ereignis des übergeordneten MDI-Formulars ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-340">Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="dc07a-341">Abbrechen des Ereignisses jedoch festgelegt wird, um `true` der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.ComponentModel.CancelEventArgs> , die als Parameter an das übergeordnete Formular übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-341">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="dc07a-342">Um alle übergeordneten und untergeordneten MDI-Formulare geschlossen zu erzwingen, legen die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `false` im MDI übergeordnete Formular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-342">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="dc07a-343">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-343">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-344">Im folgenden Codebeispiel wird mit <xref:System.Windows.Forms.Form.Closing> getestet, ob der Text in einem <xref:System.Windows.Forms.TextBox> hat sich geändert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-344">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="dc07a-345">Wenn bestehen, wird der Benutzer an, ob die Änderungen in einer Datei Speichern aufgefordert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-345">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ControlBox">
      <MemberSignature Language="C#" Value="public bool ControlBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ControlBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlBox : bool with get, set" Usage="System.Windows.Forms.Form.ControlBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-346">Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-346">Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-347">
            <see langword="true" /> Wenn das Formular in der oberen rechten Ecke des Formulars ein Systemmenüfeld angezeigt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-347">
              <see langword="true" /> if the form displays a control box in the upper-right corner of the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-348">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-348">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-349">Wenn die <xref:System.Windows.Forms.Form.ControlBox%2A> -Eigenschaftensatz auf `true`, das Steuerelement wird in der oberen rechten Ecke der Titelleiste angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-349">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-right corner of the caption bar.</span></span> <span data-ttu-id="dc07a-350">Das Steuerelement zählen zu minimieren und Maximieren Hilfe-Schaltflächen darüber hinaus auf eine Schaltfläche "Schließen".</span><span class="sxs-lookup"><span data-stu-id="dc07a-350">The control box can include minimize, maximize, and help buttons in addition to a close button.</span></span> <span data-ttu-id="dc07a-351">Für die `ControlBox` Eigenschaft so, dass keine Auswirkung, müssen Sie auch des Formulars festlegen <xref:System.Windows.Forms.Form.FormBorderStyle%2A> Eigenschaft <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, oder <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-351">For the `ControlBox` property to have any effect, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="dc07a-352">Wenn Sie festlegen, <xref:System.Windows.Forms.Form.ControlBox%2A> auf `false` und legen Sie außerdem die <xref:System.Windows.Forms.Form.Location%2A> -Eigenschaft, die <xref:System.Windows.Forms.Form.Size%2A> -Eigenschaft des Formulars wird nicht aktualisiert, um widerzuspiegeln, dass nicht-Clientbereich des Formulars ausgeblendet wurde.</span><span class="sxs-lookup"><span data-stu-id="dc07a-352">If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of the form is not updated to reflect that the non-client area of the form has been hidden.</span></span> <span data-ttu-id="dc07a-353">Um dieses Problem zu beheben, platzieren Sie den Code, der ändert die <xref:System.Windows.Forms.Form.Location%2A> Eigenschaft in der <xref:System.Windows.Forms.Control.HandleCreated> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="dc07a-353">To fix this problem, put the code that alters the <xref:System.Windows.Forms.Form.Location%2A> property in the <xref:System.Windows.Forms.Control.HandleCreated> event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-354">Bei Festlegung auf `false`die <xref:System.Windows.Forms.Form.ControlBox%2A> Eigenschaft wirkt sich nicht auf einem Multiple Document Interface (MDI) untergeordnete Formular, das zum Zeitpunkt der Erstellung maximiert angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-354">When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-355">Im folgenden Codebeispiel wird mit der <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um ein Formular erstellen, die über kein Rahmen oder eine Beschriftung-Feld.</span><span class="sxs-lookup"><span data-stu-id="dc07a-355">The following code example uses the <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to create a form that does not have any border or caption box.</span></span> <span data-ttu-id="dc07a-356">Das Formular in diesem Beispiel erstellte konnte verwendet werden, um einen Begrüßungsbildschirm für eine Anwendung zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-356">The form created in this example could be used to create a splash screen for an application.</span></span> <span data-ttu-id="dc07a-357">Im Beispiel erfordert, dass das Beispiel für eine Methode in einer Formularklasse definiert ist, und wird aufgerufen, wenn das Formular initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-357">The example requires that the example's method is defined in a form class and called when the form is being initialized.</span></span>  
  
 [!code-cpp[Classic Form.ControlBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="form.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-358">Creates a new instance of the control collection for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-358">Creates a new instance of the control collection for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-359">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-359">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="form.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-360">Creates the handle for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-360">Creates the handle for the form.</span>
          </span>
          <span data-ttu-id="dc07a-361">If a derived class overrides this function, it must call the base implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-361">If a derived class overrides this function, it must call the base implementation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc07a-362">A handle for this <see cref="T:System.Windows.Forms.Form" /> has already been created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-362">A handle for this <see cref="T:System.Windows.Forms.Form" /> has already been created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Form.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-363">Gets the required creation parameters when the control handle is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-363">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-364">Eine <see cref="T:System.Windows.Forms.CreateParams" />-Eigenschaft, die die erforderlichen Erstellungsparameter enthält, wenn das Handle für das Steuerelement erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-364">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivate;" />
      <MemberSignature Language="F#" Value="member this.Deactivate : EventHandler " Usage="member this.Deactivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-365">Occurs when the form loses focus and is no longer the active form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-365">Occurs when the form loses focus and is no longer the active form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-366">Sie können dieses Ereignis für Aufgaben wie das Aktualisieren von einem anderen Fenster in Ihrer Anwendung mit Daten aus dem deaktivierten Formular verwenden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-366">You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.</span></span>  
  
 <span data-ttu-id="dc07a-367">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-367">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-368">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-368">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-369">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.Deactivate> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-369">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span> <span data-ttu-id="dc07a-370">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-370">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-371">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-371">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-372">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-372">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-373">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.Deactivate> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-373">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#393](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#393)]
 [!code-vb[System.Windows.Forms.EventExamples#393](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#393)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
        <altmember cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Form.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-374">Gets the default Input Method Editor (IME) mode supported by the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-374">Gets the default Input Method Editor (IME) mode supported by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-375">Einer der <see cref="T:System.Windows.Forms.ImeMode" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-375">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-376">Ein Eingabemethoden-Editor (IME) ist ein Programm, das Benutzern ermöglicht, komplexe Zeichen und Symbole, z. B. japanische Kanji-Zeichen, über eine Standardtastatur eingeben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-376">An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="dc07a-377">Bei Implementierung in der <xref:System.Windows.Forms.Form> Klasse, die diese Eigenschaft gibt immer die <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> Wert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-377">As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="dc07a-378">Der Wert dieser Eigenschaft zugewiesen ist die <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-378">The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.Form.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-379">Gets the default size of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-379">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-380">Die Standard-<see cref="T:System.Drawing.Size" /> des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-380">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected override void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.DefWndProc :  -&gt; unit" Usage="form.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="dc07a-381">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-381">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-382">Sends the specified message to the default window procedure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-382">Sends the specified message to the default window procedure.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DesktopBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DesktopBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DesktopBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle DesktopBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.DesktopBounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Form.DesktopBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-383">Gets or sets the size and location of the form on the Windows desktop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-383">Gets or sets the size and location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-384">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Formulars auf dem Windows-Desktop in Desktopkoordinaten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-384">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form on the Windows desktop using desktop coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-385">Desktopkoordinaten basieren auf den Arbeitsbereich des Bildschirms, die die Taskleiste ausgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-385">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="dc07a-386">Das Koordinatensystem des Desktops basiert auf Pixel.</span><span class="sxs-lookup"><span data-stu-id="dc07a-386">The coordinate system of the desktop is pixel-based.</span></span> <span data-ttu-id="dc07a-387">Wenn Ihre Anwendung auf einem System Monitor ausgeführt wird, sind die Koordinaten des Formulars die Koordinaten für den kombinierten Desktop.</span><span class="sxs-lookup"><span data-stu-id="dc07a-387">If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="dc07a-388">Sie können diese Eigenschaft verwenden, um Größe und position eines Formulars relativ zu anderen Formen oder Anwendungen auf dem Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="dc07a-388">You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-389">Das folgende Codebeispiel legt fest, die Größe und Position eines Formulars, damit das Formular 50 Pixel vom linken Rand und 50 Pixel vom oberen Rand der Desktop ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-389">The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop.</span></span> <span data-ttu-id="dc07a-390">Dieses Beispiel erfordert, dass die Methode in einer Formularklasse definiert ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-390">This example requires that the method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopLocation" />
      </Docs>
    </Member>
    <Member MemberName="DesktopLocation">
      <MemberSignature Language="C#" Value="public System.Drawing.Point DesktopLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point DesktopLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopLocation As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point DesktopLocation { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.DesktopLocation : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Form.DesktopLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-391">Gets or sets the location of the form on the Windows desktop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-391">Gets or sets the location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-392">Ein <see cref="T:System.Drawing.Point" />, der die Position des Formulars auf dem Desktop darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-392">A <see cref="T:System.Drawing.Point" /> that represents the location of the form on the desktop.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-393">Desktopkoordinaten basieren auf den Arbeitsbereich des Bildschirms, die die Taskleiste ausgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-393">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="dc07a-394">Das Koordinatensystem des Desktops ist Grundlage Pixel.</span><span class="sxs-lookup"><span data-stu-id="dc07a-394">The coordinate system of the desktop is pixel based.</span></span> <span data-ttu-id="dc07a-395">Wenn Ihre Anwendung auf einem System mit mehreren Bildschirmen ausgeführt wird, sind die Koordinaten des Formulars die Koordinaten für den kombinierten Desktop.</span><span class="sxs-lookup"><span data-stu-id="dc07a-395">If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="dc07a-396">Sie können diese Eigenschaft verwenden, positionieren Sie das Formular relativ zu anderen Formen und Anwendungen auf dem Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="dc07a-396">You can use this property to position your form relative to other forms and applications on the Windows desktop.</span></span>  
  
 <span data-ttu-id="dc07a-397">Beim Aufrufen der <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> Methode vor dem Aufruf der <xref:System.Windows.Forms.Form.Show%2A> -Methode, wird das Formular positioniert werden, an seinem Standardspeicherort, der vom Betriebssystem bestimmt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-397">If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system.</span></span> <span data-ttu-id="dc07a-398">Weitere Informationen zu Fenster zu positionieren, finden Sie im Abschnitt "Größe und Position im Fenster" des Dokuments "Fenster-Funktionen" in der MSDN Library unter http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="dc07a-398">For more information about window positioning, see the "Window Size and Position" section of the "Window Features" document in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
 <span data-ttu-id="dc07a-399">Beim Aufrufen <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> nach dem Aufruf <xref:System.Windows.Forms.Form.Show%2A>, das Formular wird am angegebenen Speicherort positioniert sein.</span><span class="sxs-lookup"><span data-stu-id="dc07a-399">If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-400">Das folgende Codebeispiel legt die Position eines Formulars, damit das Formular 100 Pixel vom linken Rand der desktop und 100 Pixel vom oberen Rand des Desktops befindet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-400">The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop.</span></span> <span data-ttu-id="dc07a-401">Dieses Beispiel erfordert, dass die Methode innerhalb einer Form-Klasse definiert wurde.</span><span class="sxs-lookup"><span data-stu-id="dc07a-401">This example requires that method has been defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopLocation Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopLocation Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopLocation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.Form.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-402">Gets or sets the dialog result for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-402">Gets or sets the dialog result for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-403">Ein <see cref="T:System.Windows.Forms.DialogResult" />, das das Ergebnis des Formulars bei Verwendung als Dialogfeld darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-403">A <see cref="T:System.Windows.Forms.DialogResult" /> that represents the result of the form when used as a dialog box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-404">Das Dialogergebnis eines Formulars ist der Wert, der aus dem Formular zurückgegeben wird, wenn er als modales Dialogfeld angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-404">The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.</span></span> <span data-ttu-id="dc07a-405">Wenn das Formular als Dialogfeld angezeigt wird, durch Festlegen dieser Eigenschaft mit einem Wert aus der <xref:System.Windows.Forms.DialogResult> Enumeration legt den Wert für das Ergebnis des Dialogfelds für das Formular, das modale Dialogfeld ausgeblendet und die Steuerung an die aufrufende Formular zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-405">If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.</span></span> <span data-ttu-id="dc07a-406">Diese Eigenschaft ist in der Regel durch Festlegen der <xref:System.Windows.Forms.Button.DialogResult%2A> Eigenschaft ein <xref:System.Windows.Forms.Button> Steuerelement im Formular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-406">This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form.</span></span> <span data-ttu-id="dc07a-407">Klickt der Benutzer die <xref:System.Windows.Forms.Button> zu steuern, den zugewiesenen Wert der <xref:System.Windows.Forms.Button.DialogResult%2A> Eigenschaft von der <xref:System.Windows.Forms.Button> zugewiesen ist die <xref:System.Windows.Forms.Form.DialogResult%2A> -Eigenschaft des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-407">When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 <span data-ttu-id="dc07a-408">Wenn ein Formular als modales Dialogfeld angezeigt wird, klicken Sie auf die **schließen** Schaltfläche (die Schaltfläche mit einem "X" in der oberen rechten Ecke des Formulars) bewirkt, dass das Formular ausgeblendet werden und die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft festgelegt werden, um `DialogResult.Cancel`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-408">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="dc07a-409">Die <xref:System.Windows.Forms.Form.Close%2A> Methode wird nicht automatisch aufgerufen, wenn der Benutzer klickt der **schließen** Schaltfläche eines Dialogfelds, oder legt den Wert für die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-409">The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="dc07a-410">Stattdessen wird das Formular wird ausgeblendet, und kann erneut ohne Erstellen einer neuen Instanz des Dialogfelds angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-410">Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="dc07a-411">Aufgrund dieses Verhaltens, rufen Sie die <xref:System.Windows.Forms.Control.Dispose%2A> -Methode des Formulars bei das Formular von der Anwendung nicht mehr benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-411">Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="dc07a-412">Sie können diese Eigenschaft verwenden, um zu bestimmen, wie ein Dialogfeld geschlossen wird, um das Dialogfeld ausgeführten Aktionen ordnungsgemäß zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-412">You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-413">Sie können den zugewiesenen Wert überschreiben die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft klickt der Benutzer die **schließen** Schaltfläche durch Festlegen der <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft in einem Ereignishandler für die <xref:System.Windows.Forms.Form.Closing> Ereignis der Art.</span><span class="sxs-lookup"><span data-stu-id="dc07a-413">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-414">Wenn eine <xref:System.Windows.Forms.Form> wird angezeigt, wie ein nicht modales Fenster, den Rückgabewert von der <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft möglicherweise keinen Rückgabewert auf das Formular zugewiesen werden, da die Ressourcen des Formulars automatisch freigegeben werden, wenn das Formular geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-414">If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-415">Das folgende Codebeispiel zeigt ein Formular als Dialogfeld an und zeigt ein Meldungsfeld gibt an, ob durch Verweisen auf die Schaltfläche OK oder "Abbrechen", des Formulars geklickt wurde die <xref:System.Windows.Forms.Form.DialogResult%2A> -Eigenschaft des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-415">The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 [!code-cpp[Classic Form.DialogResult Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DialogResult Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DialogResult Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DialogResult Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc07a-416">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-416">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
        <altmember cref="P:System.Windows.Forms.Button.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="form.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="dc07a-417">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-417">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-418">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-418">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-419">Diese Methode wird aufgerufen, der öffentlich `Dispose` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-419">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="dc07a-420">`Dispose` Ruft die geschützte `Dispose(Boolean)` Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-420">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="dc07a-421"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-421"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="dc07a-422">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Windows.Forms.Form> verweist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-422">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references.</span></span> <span data-ttu-id="dc07a-423">Diese Methode ruft die `Dispose`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-423">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 <span data-ttu-id="dc07a-424"><xref:System.Windows.Forms.Form.Dispose%2A> wird automatisch aufgerufen, wenn das Formular angezeigt wird, mit der <xref:System.Windows.Forms.Form.Show%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-424"><xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method.</span></span> <span data-ttu-id="dc07a-425">Wenn eine andere Methode wie z. B. <xref:System.Windows.Forms.Form.ShowDialog%2A> verwendet wird, oder das Formular nie angezeigt wird, rufen Sie <xref:System.Windows.Forms.Form.Dispose%2A> selbst innerhalb der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="dc07a-425">If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-426">
            <para>
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben von <see langword="Dispose(Boolean)" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see langword="Dispose" /> freigegeben wurden. Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen nicht verwaltete Resources](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-426">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.Forms.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.Forms.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-427">Occurs when the DPI setting changes on the display device where the form is currently displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-427">Occurs when the DPI setting changes on the display device where the form is currently displayed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormBorderStyle FormBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.FormBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FormBorderStyle As FormBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormBorderStyle FormBorderStyle { System::Windows::Forms::FormBorderStyle get(); void set(System::Windows::Forms::FormBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FormBorderStyle : System.Windows.Forms.FormBorderStyle with get, set" Usage="System.Windows.Forms.Form.FormBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-428">Gets or sets the border style of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-428">Gets or sets the border style of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-429">Ein <see cref="T:System.Windows.Forms.FormBorderStyle" />, der die Art des Rahmens für die Anzeige des Formulars darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-429">A <see cref="T:System.Windows.Forms.FormBorderStyle" /> that represents the style of border to display for the form.</span>
          </span>
          <span data-ttu-id="dc07a-430">Die Standardeinstellung ist <see langword="FormBorderStyle.Sizable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-430">The default is <see langword="FormBorderStyle.Sizable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-431">Die Rahmenart des Formulars bestimmt, wie die äußeren Rand des Formulars angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-431">The border style of the form determines how the outer edge of the form appears.</span></span> <span data-ttu-id="dc07a-432">Zusätzlich zum Ändern der Anzeige der Rahmen für ein Formular, verhindern, dass bestimmte Rahmenarten des Formulars angepasst wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-432">In addition to changing the border display for a form, certain border styles prevent the form from being sized.</span></span> <span data-ttu-id="dc07a-433">Z. B. die `FormBorderStyle.FixedDialog` Rahmenart der Rahmen des Formulars, eines Dialogfelds ändert und verhindert, dass das Formular, dessen Größe geändert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-433">For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized.</span></span> <span data-ttu-id="dc07a-434">Die Rahmenart kann auch die Größe oder die Verfügbarkeit von Titelleistenbereichs eines Formulars beeinflussen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-434">The border style can also affect the size or availability of the caption bar section of a form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-435">Mit der <xref:System.Windows.Forms.FormBorderStyle.Sizable> -Format ist es unmöglich, die Größe des Fensters unter einen bestimmten minimalen Wert, auch wenn Sie festgelegt haben <xref:System.Windows.Forms.Form.ControlBox%2A> auf `false` und eine Zeichenfolge der Länge 0 (null), zugewiesen <xref:System.Windows.Forms.Form.Text%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-435">With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>.</span></span> <span data-ttu-id="dc07a-436">Betrachten Sie das Umgehen von dies mithilfe der <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> stattdessen formatieren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-436">Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-437">Das folgende Codebeispiel erstellt eine neue Instanz von einem <xref:System.Windows.Forms.Form> und ruft die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um das Formular als Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-437">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="dc07a-438">Im Beispiel wird die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um die Darstellung und Funktionalität des Formulars in ein Dialogfeld zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-438">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="dc07a-439">Das Beispiel verwendet außerdem die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> Methode im Format <xref:System.Windows.Forms.Control.Controls%2A> Auflistung hinzuzufügende zwei <xref:System.Windows.Forms.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-439">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="dc07a-440">Im Beispiel wird die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaft auf eine Schaltfläche "Hilfe" in der Titelleiste des Dialogfelds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-440">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc07a-441">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-441">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="FormClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosedEventHandler FormClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosedEventHandler FormClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosed As FormClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosedEventHandler ^ FormClosed;" />
      <MemberSignature Language="F#" Value="member this.FormClosed : System.Windows.Forms.FormClosedEventHandler " Usage="member this.FormClosed : System.Windows.Forms.FormClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-442">Occurs after the form is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-442">Occurs after the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-443">Die <xref:System.Windows.Forms.Form.FormClosed> Ereignis tritt auf, nachdem das Formular vom Benutzer oder durch geschlossen wurde die <xref:System.Windows.Forms.Form.Close%2A> Methode oder die <xref:System.Windows.Forms.Application.Exit%2A> Methode der <xref:System.Windows.Forms.Application> Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-443">The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class.</span></span> <span data-ttu-id="dc07a-444">Zum Schließen ein Formulars zu verhindern, behandeln die <xref:System.Windows.Forms.Form.FormClosing> Ereignis, und legen die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.ComponentModel.CancelEventArgs> an Ihren Ereignishandler zu übergeben `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-444">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="dc07a-445">Sie können dieses Ereignis verwenden, um Aufgaben wie das Freigeben von Ressourcen, die vom Formular verwendeten und im Formular eingegebenen Informationen zu speichern oder übergeordneten Formulars zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-445">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
 <span data-ttu-id="dc07a-446">Wenn das Formular ein Multiple Document Interface (MDI) übergeordnetes Formular ist der <xref:System.Windows.Forms.Form.FormClosing> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor der übergeordnete MDI-Formular <xref:System.Windows.Forms.Form.FormClosing> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-446">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="dc07a-447">Entsprechend der <xref:System.Windows.Forms.Form.FormClosed> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor die <xref:System.Windows.Forms.Form.FormClosed> -Ereignis des übergeordneten MDI-Formulars ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-447">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="dc07a-448">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-448">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-449">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-449">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-450">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.FormClosed> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-450">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span> <span data-ttu-id="dc07a-451">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-451">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-452">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-452">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-453">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-453">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-454">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.FormClosed> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-454">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#395](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#395)]
 [!code-vb[System.Windows.Forms.EventExamples#395](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#395)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="FormClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosingEventHandler FormClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosingEventHandler FormClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosing As FormClosingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosingEventHandler ^ FormClosing;" />
      <MemberSignature Language="F#" Value="member this.FormClosing : System.Windows.Forms.FormClosingEventHandler " Usage="member this.FormClosing : System.Windows.Forms.FormClosingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-455">Occurs before the form is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-455">Occurs before the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-456">Die <xref:System.Windows.Forms.Form.FormClosing> Ereignis tritt auf, wenn das Formular geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-456">The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed.</span></span> <span data-ttu-id="dc07a-457">Wenn ein Formular geschlossen wird, wird sie verworfen und freigeben aller Ressourcen, die das Formular zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-457">When a form is closed, it is disposed, releasing all resources associated with the form.</span></span> <span data-ttu-id="dc07a-458">Wenn Sie dieses Ereignis abbrechen, bleibt das Formular geöffnet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-458">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="dc07a-459">Legen Sie zum Abbrechen des Abschluss eines Formulars die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Windows.Forms.FormClosingEventArgs> an Ihren Ereignishandler zu übergeben `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-459">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="dc07a-460">Wenn ein Formular als modales Dialogfeld angezeigt wird, klicken Sie auf die **schließen** Schaltfläche (die Schaltfläche mit einem X in der oberen rechten Ecke des Formulars) bewirkt, dass das Formular ausgeblendet werden und die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft festgelegt werden, um `DialogResult.Cancel`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-460">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="dc07a-461">Sie können den zugewiesenen Wert überschreiben die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft klickt der Benutzer die **schließen** Schaltfläche durch Festlegen der <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft in einem Ereignishandler für die <xref:System.Windows.Forms.Form.FormClosing> Ereignis der Art.</span><span class="sxs-lookup"><span data-stu-id="dc07a-461">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-462">Wenn die <xref:System.Windows.Forms.Form.Close%2A> Methode aufgerufen wird eine <xref:System.Windows.Forms.Form> als ein nicht modales Fenster angezeigt wird, können nicht aufgerufen werden die <xref:System.Windows.Forms.Control.Show%2A> Methode, um das Formular sichtbar ist, da die Ressourcen des Formulars bereits freigegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-462">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="dc07a-463">Zum Ausblenden eines Formulars und dass es sichtbar ist, verwenden die <xref:System.Windows.Forms.Control.Hide%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-463">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.</span></span>  
  
 <span data-ttu-id="dc07a-464">Wenn das Formular ein Multiple Document Interface (MDI) übergeordnetes Formular ist der <xref:System.Windows.Forms.Form.FormClosing> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor der übergeordnete MDI-Formular <xref:System.Windows.Forms.Form.FormClosing> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-464">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="dc07a-465">Entsprechend der <xref:System.Windows.Forms.Form.FormClosed> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor die <xref:System.Windows.Forms.Form.FormClosed> -Ereignis des übergeordneten MDI-Formulars ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-465">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="dc07a-466">Durch das Abbrechen der <xref:System.Windows.Forms.Form.FormClosing> -Ereignis für ein untergeordnetes MDI-Formular verhindert nicht die <xref:System.Windows.Forms.Form.FormClosing> -Ereignis des übergeordneten MDI-Formulars ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-466">Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="dc07a-467">Abbrechen des Ereignisses jedoch festgelegt wird, um `true` der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Windows.Forms.FormClosingEventArgs> -Klasse, die als Parameter an das übergeordnete Formular übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-467">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="dc07a-468">Um alle übergeordneten und untergeordneten MDI-Formulare geschlossen zu erzwingen, legen die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `false` im MDI übergeordnete Formular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-468">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="dc07a-469">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-469">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-470">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-470">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-471">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.FormClosing> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-471">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span> <span data-ttu-id="dc07a-472">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-472">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-473">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-473">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-474">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-474">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-475">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.FormClosing> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-475">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#394](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#394)]
 [!code-vb[System.Windows.Forms.EventExamples#394](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#394)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoScaleSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetAutoScaleSize(class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::SizeF GetAutoScaleSize(System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member GetAutoScaleSize : System.Drawing.Font -&gt; System.Drawing.SizeF" Usage="System.Windows.Forms.Form.GetAutoScaleSize font" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the AutoScaleDimensions property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="font">
          <span data-ttu-id="dc07a-476">A <see cref="T:System.Drawing.Font" /> representing the font to determine the autoscaled base size of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-476">A <see cref="T:System.Drawing.Font" /> representing the font to determine the autoscaled base size of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-477">Gets the size when autoscaling the form based on a specified font.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-477">Gets the size when autoscaling the form based on a specified font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-478">A <see cref="T:System.Drawing.SizeF" /> representing the autoscaled size of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-478">A <see cref="T:System.Drawing.SizeF" /> representing the autoscaled size of the form.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc07a-479">Die <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> Methode ist in.NET Framework, Version 2.0, veraltet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-479">The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0.</span></span> <span data-ttu-id="dc07a-480">Dieser Member wurde für Abwärtskompatibilität beibehalten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-480">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="dc07a-481">Weitere Informationen zur automatischen Skalierung finden Sie unter [automatische Skalierung in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-481">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="dc07a-482">Sie können diese Methode verwenden, zur Bestimmung der Größe, die ein Formulars für eine bestimmte Schriftart automatische Skalierung würde, vor dem Anwenden der Schriftartformats in das Formular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-482">You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.</span></span> <span data-ttu-id="dc07a-483">Wenn Sie die Größe bestimmen möchten, ein Formular ist automatisch, basierend auf dem Formular zugewiesenen Schriftart, verwenden Sie die <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-483">If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle" Usage="form.GetScaledBounds (bounds, factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="dc07a-484">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-484">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span>
          </span>
        </param>
        <param name="factor">
          <span data-ttu-id="dc07a-485">The height and width of the control's bounds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-485">The height and width of the control's bounds.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="dc07a-486">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-486">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-487">Retrieves the bounds within which the control is scaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-487">Retrieves the bounds within which the control is scaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-488">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-488">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="HelpButton">
      <MemberSignature Language="C#" Value="public bool HelpButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.HelpButton" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HelpButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HelpButton : bool with get, set" Usage="System.Windows.Forms.Form.HelpButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-489">Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-489">Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-490">
            <see langword="true" />, um die Hilfeschaltfläche auf der Titelleiste des Formulars anzuzeigen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-490">
              <see langword="true" /> to display a Help button in the form's caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-491">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-491">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-492">Wenn diese Eigenschaft festgelegt wird, um `true`, eine kleine Schaltfläche mit einem Fragezeichen angezeigt wird, auf der Titelleiste links neben der **schließen** Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="dc07a-492">When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button.</span></span> <span data-ttu-id="dc07a-493">Sie können diese Schaltfläche zum Anzeigen von Hilfe für Ihre Anwendung verwenden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-493">You can use this button to display help for your application.</span></span> <span data-ttu-id="dc07a-494">Können, erstellen Sie einen Ereignishandler für das <xref:System.Windows.Forms.Control.HelpRequested> Ereignis, um Hilfeinformationen für den Benutzer anzeigen, wenn auf die Schaltfläche "Hilfe" des Formulars geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-494">You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event to display Help information to the user when the Help button of the form is clicked.</span></span>  

<span data-ttu-id="dc07a-495">Eine Schaltfläche "Hilfe" den Wert im Formular anzuzeigende <xref:System.Windows.Forms.Form.ControlBox> Eigenschaft muss `true`, den Standardwert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-495">To display a Help button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span> <span data-ttu-id="dc07a-496">Die <xref:System.Windows.Forms.Form.ControlBox> -Eigenschaft bestimmt, ob der oberen rechten Ecke der Titelleiste Steuerelemente, z. B. eine Schaltfläche "Maximieren", Schaltfläche "Minimieren", eine Schaltfläche "Hilfe" und eine Schaltfläche "Schließen" enthält.</span><span class="sxs-lookup"><span data-stu-id="dc07a-496">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="dc07a-497">Darüber hinaus müssen Sie auch des Formulars festlegen <xref:System.Windows.Forms.Form.FormBorderStyle%2A> Eigenschaft <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, oder <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-497">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  


> [!IMPORTANT]
>  <span data-ttu-id="dc07a-498">Der Wert, der die <xref:System.Windows.Forms.Form.HelpButton%2A> Eigenschaft wird ignoriert, wenn die **Maximieren** oder **Minimieren** Schaltflächen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-498">The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-499">Das folgende Codebeispiel erstellt eine neue Instanz von einem <xref:System.Windows.Forms.Form> und ruft die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um das Formular als Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-499">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="dc07a-500">Im Beispiel wird die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um die Darstellung und Funktionalität des Formulars in ein Dialogfeld zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-500">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="dc07a-501">Das Beispiel verwendet außerdem die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> Methode im Format <xref:System.Windows.Forms.Control.Controls%2A> Auflistung hinzuzufügende zwei <xref:System.Windows.Forms.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-501">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="dc07a-502">Im Beispiel wird die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaft auf eine Schaltfläche "Hilfe" in der Titelleiste des Dialogfelds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-502">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a Help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
      </Docs>
    </Member>
    <Member MemberName="HelpButtonClicked">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler HelpButtonClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler HelpButtonClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.HelpButtonClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpButtonClicked As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ HelpButtonClicked;" />
      <MemberSignature Language="F#" Value="member this.HelpButtonClicked : System.ComponentModel.CancelEventHandler " Usage="member this.HelpButtonClicked : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-503">Occurs when the **Help** button is clicked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-503">Occurs when the **Help** button is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-504">Die <xref:System.Windows.Forms.Form.HelpButtonClicked> Ereignis tritt auf, wenn die **Hilfe** Titelleiste des Formulars die Schaltfläche geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-504">The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked.</span></span> <span data-ttu-id="dc07a-505">Die **Hilfe** Schaltfläche wird angezeigt, wenn die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-505">The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`.</span></span> <span data-ttu-id="dc07a-506"><xref:System.Windows.Forms.Form.HelpButtonClicked> kann abgebrochen werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-506"><xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled.</span></span>  
  
 <span data-ttu-id="dc07a-507">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-507">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-508">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-508">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-509">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.HelpButtonClicked> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-509">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span> <span data-ttu-id="dc07a-510">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-510">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-511">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-511">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-512">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-512">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-513">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.HelpButtonClicked> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-513">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#388](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#388)]
 [!code-vb[System.Windows.Forms.EventExamples#388](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#388)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.HelpButton" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.Form.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-514">Gets or sets the icon for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-514">Gets or sets the icon for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-515">Ein <see cref="T:System.Drawing.Icon" />, das das Symbol für das Formular darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-515">An <see cref="T:System.Drawing.Icon" /> that represents the icon for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-516">Symbol "des Formulars" kennzeichnet das Bild, das das Formular in der Taskleiste als auch auf das Symbol, das für das Steuerelement im Formular angezeigt wird, darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-516">A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.</span></span>  
  
 <span data-ttu-id="dc07a-517">Diese Eigenschaft hat keine Auswirkung, wenn <xref:System.Windows.Forms.Form.FormBorderStyle%2A> festgelegt ist, um <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-517">This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="dc07a-518">In diesem Fall wird das Formular kein Symbol angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-518">In that case, the form will not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanged As InputLanguageChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangedEventHandler ^ InputLanguageChanged;" />
      <MemberSignature Language="F#" Value="member this.InputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventHandler " Usage="member this.InputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-519">Occurs after the input language of the form has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-519">Occurs after the input language of the form has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-520">Sie können dieses Ereignis verwenden, Darstellung und Text basierend auf Änderungen an die Eingabesprache des Formulars des Formulars ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-520">You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.</span></span>  
  
 <span data-ttu-id="dc07a-521">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-521">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-522">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-522">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-523">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.InputLanguageChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-523">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span> <span data-ttu-id="dc07a-524">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-524">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-525">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-525">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-526">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-526">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-527">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.InputLanguageChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-527">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanging As InputLanguageChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangingEventHandler ^ InputLanguageChanging;" />
      <MemberSignature Language="F#" Value="member this.InputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventHandler " Usage="member this.InputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-528">Occurs when the user attempts to change the input language for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-528">Occurs when the user attempts to change the input language for the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-529">Dieses Ereignis tritt auf, bevor die Änderung der Eingabesprache für das Formular vorgenommen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-529">This event occurs before the change of input language is made for the form.</span></span> <span data-ttu-id="dc07a-530">Sie können die Sprache ändern "Abbrechen", durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Windows.Forms.InputLanguageChangingEventArgs> an Ihren Ereignishandler zu übergeben `false`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-530">You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`.</span></span> <span data-ttu-id="dc07a-531">Wenn das Ereignis abgebrochen wird, wird die Eingabesprache nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-531">If the event is canceled, the input language is not changed.</span></span> <span data-ttu-id="dc07a-532">Sie können dieses Ereignis verwenden, um zu bestimmen, ob die Änderung der angeforderten Eingabesprache für Ihre Anwendung geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-532">You can use this event to determine whether the requested input language change is appropriate for your application.</span></span>  
  
 <span data-ttu-id="dc07a-533">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-533">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-534">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-534">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-535">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.InputLanguageChanging> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-535">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span> <span data-ttu-id="dc07a-536">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-536">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-537">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-537">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-538">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-538">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-539">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.InputLanguageChanging> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-539">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiChild">
      <MemberSignature Language="C#" Value="public bool IsMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMdiChild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiChild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMdiChild : bool" Usage="System.Windows.Forms.Form.IsMdiChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-540">Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-540">Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-541">
            <see langword="true" />, wenn das Formular ein untergeordnetes MDI-Formular ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-541">
              <see langword="true" /> if the form is an MDI child form; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-542">Zur Laufzeit werden untergeordnete MDI-Formulare in den Clientbereich des übergeordneten MDI-Formulars angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-542">At run time, MDI child forms are displayed inside the client area of an MDI parent form.</span></span> <span data-ttu-id="dc07a-543">Ein untergeordnetes MDI-Formular kann maximiert, minimiert werden, und innerhalb der übergeordneten MDI-Formulars verschoben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-543">An MDI child form can be maximized, minimized, and moved within the MDI parent form.</span></span> <span data-ttu-id="dc07a-544">Um ein untergeordnetes MDI-Formular zu erstellen, weisen die <xref:System.Windows.Forms.Form> , werden die übergeordneten MDI-Formulars, um die <xref:System.Windows.Forms.Form.MdiParent%2A> Eigenschaft des untergeordneten Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-544">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="dc07a-545">Sie können die <xref:System.Windows.Forms.Form.IsMdiContainer%2A> Eigenschaft, um zu bestimmen, ob ein Formular MDI-Formulars ist übergeordnete Formular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-545">You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.</span></span>  
  
 <span data-ttu-id="dc07a-546">Sie können die <xref:System.Windows.Forms.Form.IsMdiChild%2A> Eigenschaft, um zu bestimmen, ob ein Formular, das von einer Methode oder Eigenschaft zurückgegeben, ein untergeordnetes MDI-Formular oder ein Standardformat in Ihrer Anwendung z. B. ein Dialogfeld wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-546">You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-547">Rahmen mit veränderbarer Größe, einem Systemmenüfeld und minimieren müssen sich alle untergeordneten MDI-Formulare und **Maximieren** Schaltflächen, unabhängig von den Einstellungen von der <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, und <xref:System.Windows.Forms.Form.MaximizeBox%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-547">All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiContainer">
      <MemberSignature Language="C#" Value="public bool IsMdiContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMdiContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiContainer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMdiContainer : bool with get, set" Usage="System.Windows.Forms.Form.IsMdiContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-548">Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-548">Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-549">
            <see langword="true" />, wenn das Formular ein Container für untergeordnete MDI-Formulare ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-549">
              <see langword="true" /> if the form is a container for MDI child forms; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-550">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-550">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-551">Diese Eigenschaft ändert die Anzeige und das Verhalten des Formulars in ein übergeordnetes MDI-Formular an.</span><span class="sxs-lookup"><span data-stu-id="dc07a-551">This property changes the display and behavior of the form to an MDI parent form.</span></span> <span data-ttu-id="dc07a-552">Wenn diese Eigenschaft festgelegt wird, um `true`, das Formular wird ein Gesenktes Clientbereich mit einem Rahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-552">When this property is set to `true`, the form displays a sunken client area with a raised border.</span></span> <span data-ttu-id="dc07a-553">Alle untergeordneten MDI-Formulare an das übergeordnete Formular zugewiesen werden im Clientbereich angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-553">All MDI child forms assigned to the parent form are displayed within its client area.</span></span>  
  
 <span data-ttu-id="dc07a-554">Wenn ein übergeordnetes MDI-Formular geschlossen wird, die <xref:System.Windows.Forms.Form.Closing> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor der übergeordnete MDI-Formular <xref:System.Windows.Forms.Form.Closing> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-554">When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="dc07a-555">Darüber hinaus die <xref:System.Windows.Forms.Form.Closed> Ereignisse von allen untergeordneten MDI-Formulare ausgelöst, bevor die <xref:System.Windows.Forms.Form.Closed> -Ereignis des übergeordneten MDI-Formulars ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-555">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-556">Wenn es zwei existieren <xref:System.Windows.Forms.MenuStrip> Steuerelemente in einem untergeordneten MDI-Formulars festlegen <xref:System.Windows.Forms.Form.IsMdiContainer%2A> auf `true` für das übergeordnete Formular führt den Inhalt nur eines der der <xref:System.Windows.Forms.MenuStrip> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-556">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="dc07a-557">Verwendung <xref:System.Windows.Forms.ToolStripManager.Merge%2A> zum Zusammenführen der Inhalt der zusätzliche untergeordnete <xref:System.Windows.Forms.MenuStrip> Steuerelemente auf der übergeordneten MDI-Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-557">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-558">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.Form.IsMdiContainer%2A> Eigenschaft sowie das Ändern der `BackColor` Eigenschaft eines MDI-Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-558">The following code example demonstrates using the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property as well as changing the `BackColor` property of an MDI Form.</span></span> <span data-ttu-id="dc07a-559">Um dieses Beispiel auszuführen, fügen Sie folgenden Code in ein neues Formular aus.</span><span class="sxs-lookup"><span data-stu-id="dc07a-559">To run this example, paste the following code in a new form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="IsRestrictedWindow">
      <MemberSignature Language="C#" Value="public bool IsRestrictedWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestrictedWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestrictedWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestrictedWindow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRestrictedWindow : bool" Usage="System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-560">Gets a value indicating whether the form can use all windows and user input events without restriction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-560">Gets a value indicating whether the form can use all windows and user input events without restriction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-561">
            <see langword="true" />, wenn für das Formular Einschränkungen gelten, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-561">
              <see langword="true" /> if the form has restrictions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-562">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-562">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-563">Die <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> Eigenschaft bestimmt, ob die <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> Berechtigung erteilt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-563">The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted.</span></span> <span data-ttu-id="dc07a-564">Diese Eigenschaft wird zur Laufzeit in den Konstruktor des Formulars festgelegt und für die Lebensdauer des Formulars zwischengespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-564">This property is set at run time in the form's constructor, and is cached for the lifetime of the form.</span></span> <span data-ttu-id="dc07a-565">Windows Forms-Anwendung unter teilweiser Vertrauenswürdigkeit ausgeführt wird können nicht diese Prüfung umgangen werden, wie die common Language Runtime stellt sicher, dass bei teilweiser Vertrauenswürdigkeit immer der übergeordneten Konstruktor aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-565">Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPreview">
      <MemberSignature Language="C#" Value="public bool KeyPreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeyPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.KeyPreview" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeyPreview { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPreview : bool with get, set" Usage="System.Windows.Forms.Form.KeyPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-566">Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-566">Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-567">
            <see langword="true" />, wenn das Formular alle Tastaturereignisse empfängt. <see langword="false" />, wenn das momentan ausgewählte Steuerelement im Formular Tastaturereignisse empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-567">
              <see langword="true" /> if the form will receive all key events; <see langword="false" /> if the currently selected control on the form receives key events.</span>
          </span>
          <span data-ttu-id="dc07a-568">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-568">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-569">Wenn diese Eigenschaft festgelegt wird, um `true`, erhält das Formular alle <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, und <xref:System.Windows.Forms.Control.KeyUp> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-569">When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span> <span data-ttu-id="dc07a-570">Nach dem Ereignishandler für das Formular verarbeitet die Tastatureingabe abgeschlossen haben, wird die Tastatureingabe klicken Sie dann auf das Steuerelement mit Fokus zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-570">After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.</span></span> <span data-ttu-id="dc07a-571">Z. B. wenn die <xref:System.Windows.Forms.Form.KeyPreview%2A> -Eigenschaftensatz auf `true` und das momentan ausgewählte Steuerelement ist ein <xref:System.Windows.Forms.TextBox>, nachdem die Tastatureingabe, durch die Ereignishandler des Formulars behandelt wird die <xref:System.Windows.Forms.TextBox> Steuerelement erhält den Schlüssel, die gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="dc07a-571">For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed.</span></span> <span data-ttu-id="dc07a-572">Um Tastaturereignisse nur auf Formularebene zu behandeln und nicht zu, dass Steuerelemente Tastaturereignisse empfangen, legen Sie die <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> Eigenschaft in Ihrem Formulars <xref:System.Windows.Forms.Control.KeyPress> Ereignishandler `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-572">To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`.</span></span>  
  
 <span data-ttu-id="dc07a-573">Diese Eigenschaft können Sie in Ihrer Anwendung und entweder die Tastatureingabe behandeln die meisten Tastatureingaben zu verarbeiten, oder rufen Sie das entsprechende Steuerelement aus, um die Tastatureingabe zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-573">You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.</span></span> <span data-ttu-id="dc07a-574">Wenn eine Anwendung Funktionstasten verwendet, sollten Sie verarbeiten die Tastatureingaben auf Formularebene, statt das Schreiben von Code für jedes Steuerelement, das möglicherweise Tastatureingabe Ereignisse empfängt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-574">For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-575">Wenn ein Formular keine Steuerelemente angezeigt oder aktiviert hat, erhält sie automatisch alle Tastaturereignisse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-575">If a form has no visible or enabled controls, it automatically receives all keyboard events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-576">Ein Steuerelement eines Formulars kann Tastatureingaben "Abbrechen", die es empfängt programmiert werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-576">A control on a form may be programmed to cancel any keystrokes it receives.</span></span> <span data-ttu-id="dc07a-577">Da das Steuerelement diese Tastatureingaben nie in das Formular sendet, das Formular nie sehen sie unabhängig von der Einstellung der <xref:System.Windows.Forms.Form.KeyPreview%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-577">Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-578">Das folgende Codebeispiel veranschaulicht das Festlegen eines Formulars <xref:System.Windows.Forms.Form.KeyPreview%2A> Eigenschaft auf "true" und die Tastaturereignisse auf Formularebene zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-578">The following code example demonstrates setting a form's <xref:System.Windows.Forms.Form.KeyPreview%2A> property to true and handling the key events at the form level.</span></span> <span data-ttu-id="dc07a-579">Fügen Sie zum Ausführen des Beispiels den folgenden Code in ein leeres Formular ein.</span><span class="sxs-lookup"><span data-stu-id="dc07a-579">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="LayoutMdi">
      <MemberSignature Language="C#" Value="public void LayoutMdi (System.Windows.Forms.MdiLayout value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LayoutMdi(valuetype System.Windows.Forms.MdiLayout value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LayoutMdi (value As MdiLayout)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LayoutMdi(System::Windows::Forms::MdiLayout value);" />
      <MemberSignature Language="F#" Value="member this.LayoutMdi : System.Windows.Forms.MdiLayout -&gt; unit" Usage="form.LayoutMdi value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MdiLayout" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dc07a-580">One of the <see cref="T:System.Windows.Forms.MdiLayout" /> values that defines the layout of MDI child forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-580">One of the <see cref="T:System.Windows.Forms.MdiLayout" /> values that defines the layout of MDI child forms.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-581">Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-581">Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-582">Sie können diese Methode verwenden, zum Anordnen von untergeordneten MDI-Formulare in Ihrer übergeordneten MDI-Formulars, um für eine einfachere Navigation und Bearbeitung von untergeordneten MDI-Formularen zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-582">You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.</span></span> <span data-ttu-id="dc07a-583">Untergeordnete MDI-Formulare können horizontal und vertikal, Überlappend oder als Symbole im übergeordneten MDI-Formulars angeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-583">MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-584">Im folgenden Codebeispiel zeigt die Ereignishandler für die Menüelemente Menü Fenster in ein MDI-Anwendung übergeordneten Formular an.</span><span class="sxs-lookup"><span data-stu-id="dc07a-584">The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form.</span></span> <span data-ttu-id="dc07a-585">Jeder Ereignishandler aufruft, um die <xref:System.Windows.Forms.Form.LayoutMdi%2A> Methode zum Anordnen von untergeordneten Formulare, die derzeit in der Anwendung geöffnet sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-585">Each event handler makes calls to the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to arrange any child forms that are currently open in the application.</span></span>  
  
 [!code-cpp[Classic Form.LayoutMdi Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.LayoutMdi Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CS/source.cs#1)]
 [!code-vb[Classic Form.LayoutMdi Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MdiLayout" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberSignature Language="F#" Value="member this.Load : EventHandler " Usage="member this.Load : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-586">Occurs before a form is displayed for the first time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-586">Occurs before a form is displayed for the first time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-587">Sie können dieses Ereignis verwenden, um Aufgaben wie das Zuweisen von Ressourcen, die vom Formular verwendeten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-587">You can use this event to perform tasks such as allocating resources used by the form.</span></span>  
  
 <span data-ttu-id="dc07a-588">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-588">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-589">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, und <xref:System.Windows.Forms.Form.Activate%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-589">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="dc07a-590">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular mit `Form1` mit einem <xref:System.Windows.Forms.Button> aufgerufen `Button1` und zwei <xref:System.Windows.Forms.Label> genannten Hoststeuerelemente `Label1` und `Label2`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-590">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Form.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-591">Gets or sets the <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-591">Gets or sets the <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-592">Der <see cref="T:System.Drawing.Point" />, der die linke obere Ecke des <see cref="T:System.Windows.Forms.Form" />-Objekts in Bildschirmkoordinaten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-592">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-593"><xref:System.Drawing.Point> ist eine Struktur, was bedeutet, dass es sich um einen Werttyp handelt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-593"><xref:System.Drawing.Point> is a structure, which means that it is a value type.</span></span> <span data-ttu-id="dc07a-594">Wenn Sie Zugriff auf eine Eigenschaft in <xref:System.Drawing.Point>, eine Kopie der Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-594">If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned.</span></span> <span data-ttu-id="dc07a-595">Aus diesem Grund ändern die <xref:System.Drawing.Point.X%2A> oder <xref:System.Drawing.Point.Y%2A> Eigenschaften der <xref:System.Drawing.Point> Merry der <xref:System.Windows.Forms.Control.Location%2A> Eigenschaft wirkt sich nicht die <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, oder <xref:System.Windows.Forms.Control.Bottom%2A> Eigenschaftswerte des der <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-595">Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="dc07a-596">Um diese Eigenschaften anzupassen, legen Sie jeden Eigenschaftswert einzeln, oder legen die <xref:System.Windows.Forms.Form.Location%2A> Eigenschaft mit einem neuen <xref:System.Drawing.Point>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-596">To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="dc07a-597">Die <xref:System.Windows.Forms.Form.Location%2A> Eigenschaft ruft ab oder legt ihn fest der <xref:System.Windows.Forms.Control.Location%2A> Eigenschaft der <xref:System.Windows.Forms.Control> Basisklasse und legt die <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-597">The <xref:System.Windows.Forms.Form.Location%2A> property gets or sets the <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.Control> base class, and sets the <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="MainMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuStrip MainMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MainMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Property MainMenuStrip As MenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuStrip ^ MainMenuStrip { System::Windows::Forms::MenuStrip ^ get(); void set(System::Windows::Forms::MenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainMenuStrip : System.Windows.Forms.MenuStrip with get, set" Usage="System.Windows.Forms.Form.MainMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-598">Gets or sets the primary menu container for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-598">Gets or sets the primary menu container for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-599">Ein <see cref="T:System.Windows.Forms.MenuStrip" />-Objekt, das den Container für die Menüstruktur des Formulars darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-599">A <see cref="T:System.Windows.Forms.MenuStrip" /> that represents the container for the menu structure of the form.</span>
          </span>
          <span data-ttu-id="dc07a-600">Die Standardeinstellung ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-600">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-601">Zusätzlich zu den <xref:System.Windows.Forms.Form.MainMenuStrip%2A> -Eigenschaft müssen <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> der <xref:System.Windows.Forms.MenuStrip> die Steuerung an die <xref:System.Windows.Forms.Control.Controls%2A> -Auflistung des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-601">In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form.</span></span>  
  
 <span data-ttu-id="dc07a-602">Die <xref:System.Windows.Forms.MenuStrip> Klasse hat Vorrang vor den <xref:System.Windows.Forms.MainMenu> Klasse in früheren Versionen von .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="dc07a-602">The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuStrip" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Form.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-603">Gets or sets the space between controls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-603">Gets or sets the space between controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-604">Ein Wert, der den Zwischenraum zwischen Steuerelementen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-604">A value that represents the space between controls.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberSignature Language="F#" Value="member this.MarginChanged : EventHandler " Usage="member this.MarginChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-605">Occurs when the <see cref="P:System.Windows.Forms.Form.Margin" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-605">Occurs when the <see cref="P:System.Windows.Forms.Form.Margin" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeBox">
      <MemberSignature Language="C#" Value="public bool MaximizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaximizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaximizeBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MaximizeBox : bool with get, set" Usage="System.Windows.Forms.Form.MaximizeBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-606">Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-606">Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-607">
            <see langword="true" /> zum Anzeigen einer ** ** Maximieren-Schaltfläche für das Formular andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-607">
              <see langword="true" /> to display a **Maximize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-608">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-608">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="dc07a-609">Ein **Maximieren** Schaltfläche können Benutzer ein Fenster auf Vollbildgröße vergrößern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-609">A **Maximize** button enables users to enlarge a window to full-screen size.</span></span> <span data-ttu-id="dc07a-610">Zum Anzeigen einer **Maximieren** Schaltfläche, den Wert im Format <xref:System.Windows.Forms.Form.ControlBox> Eigenschaft muss `true`, den Standardwert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-610">To display a **Maximize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="dc07a-611">Die <xref:System.Windows.Forms.Form.ControlBox> -Eigenschaft bestimmt, ob der oberen rechten Ecke der Titelleiste Steuerelemente, z. B. eine Schaltfläche "Maximieren", Schaltfläche "Minimieren", eine Schaltfläche "Hilfe" und eine Schaltfläche "Schließen" enthält.</span><span class="sxs-lookup"><span data-stu-id="dc07a-611">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="dc07a-612">Darüber hinaus müssen Sie auch des Formulars festlegen <xref:System.Windows.Forms.Form.FormBorderStyle%2A> Eigenschaft <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, oder <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-612">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="dc07a-613">Ein **Maximieren** Schaltfläche wird automatisch ein Wiederherstellungsschaltfläche, wenn ein Fenster maximiert ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-613">A **Maximize** button automatically becomes a restore button when a window is maximized.</span></span> <span data-ttu-id="dc07a-614">Durch Minimieren oder Wiederherstellen eines Fensters ändert sich die Schaltfläche "Wiederherstellen" wieder zu einem **Maximieren** Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="dc07a-614">Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-615">Maximieren eines Formulars zur Laufzeit generiert eine <xref:System.Windows.Forms.Control.Resize> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-615">Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="dc07a-616">Die <xref:System.Windows.Forms.Form.WindowState%2A> Eigenschaft entspricht dem aktuellen Zustand des Fensters.</span><span class="sxs-lookup"><span data-stu-id="dc07a-616">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="dc07a-617">Wenn Sie festlegen, der <xref:System.Windows.Forms.Form.WindowState%2A> Eigenschaft, um `FormWindowState.Maximized`, unabhängig von wirksam, alle Einstellungen für sind das Formular maximiert die <xref:System.Windows.Forms.Form.MaximizeBox%2A> und <xref:System.Windows.Forms.Form.FormBorderStyle%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-617">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-618">Das folgende Codebeispiel erstellt eine neue Instanz von einem <xref:System.Windows.Forms.Form> und ruft die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um das Formular als Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-618">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="dc07a-619">Im Beispiel wird die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um die Darstellung und Funktionalität des Formulars in ein Dialogfeld zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-619">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="dc07a-620">Das Beispiel verwendet außerdem die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> Methode im Format <xref:System.Windows.Forms.Control.Controls%2A> Auflistung hinzuzufügende zwei <xref:System.Windows.Forms.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-620">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="dc07a-621">Im Beispiel wird die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaft auf eine Schaltfläche "Hilfe" in der Titelleiste des Dialogfelds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-621">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBounds">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle MaximizedBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle MaximizedBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizedBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Property MaximizedBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Drawing::Rectangle MaximizedBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.MaximizedBounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Form.MaximizedBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-622">Gets and sets the size of the form when it is maximized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-622">Gets and sets the size of the form when it is maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-623">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Formulars darstellt, wenn dieses maximiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-623">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form when it is maximized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dc07a-624">The value of the <see cref="P:System.Drawing.Rectangle.Top" /> property is greater than the height of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-624">The value of the <see cref="P:System.Drawing.Rectangle.Top" /> property is greater than the height of the form.</span>
          </span>
          <span data-ttu-id="dc07a-625">-or-  The value of the <see cref="P:System.Drawing.Rectangle.Left" /> property is greater than the width of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-625">-or-  The value of the <see cref="P:System.Drawing.Rectangle.Left" /> property is greater than the width of the form.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-626">
            <para>Klassen, die von erben <see cref="T:System.Windows.Forms.Form" /> können überschreiben diese Methode, um neue Grenzen für das Formular bereitzustellen, wenn dieses maximiert ist. Die Klasse wird diese Eigenschaft intern, wenn des Formulars ** Maximieren ** Schaltfläche geklickt wird.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-626">
              <para>Classes that inherit from <see cref="T:System.Windows.Forms.Form" /> can override this method to provide new bounds for the form when it is maximized. The class sets this property internally when the form's **Maximize** button is clicked.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximizedBoundsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximizedBoundsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximizedBoundsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximizedBoundsChanged;" />
      <MemberSignature Language="F#" Value="member this.MaximizedBoundsChanged : EventHandler " Usage="member this.MaximizedBoundsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-627">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-627">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-628">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-628">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-629">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-629">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-630">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-630">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span> <span data-ttu-id="dc07a-631">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-631">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-632">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-632">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-633">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-633">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-634">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-634">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#389](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#389)]
 [!code-vb[System.Windows.Forms.EventExamples#389](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#389)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-635">Gets the maximum size the form can be resized to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-635">Gets the maximum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-636">Eine <see cref="T:System.Drawing.Size" />, die die maximale Größe für das Formular darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-636">A <see cref="T:System.Drawing.Size" /> that represents the maximum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-637">Diese Eigenschaft können Sie die Größe eines Formulars auf eine angegebene maximale Größe beschränkt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-637">This property enables you to limit the size of a form to a specified maximum size.</span></span> <span data-ttu-id="dc07a-638">Sie können diese Funktion verwenden, wenn mehrere Fenster anzeigen, zur gleichen Zeit, stellen Sie sicher, dass ein einziges Fenster nicht mit anderen Fenstern ausgeblendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="dc07a-638">You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.</span></span> <span data-ttu-id="dc07a-639">Wenn diese Eigenschaft, um festgelegt wird eine <xref:System.Drawing.Size> -Objekt, das 0 für die Höhe und Breite des Formulars 0 ist, müssen keine Maximalgröße jenseits der Grenzen von Windows festlegen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-639">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-640">Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Windows.Forms.Form.MaximumSize%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-640">The following code example demonstrates setting the <xref:System.Windows.Forms.Form.MaximumSize%2A> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.FormExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.FormExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dc07a-641">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-641">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MaxWindowTrackSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximumSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.MaximumSizeChanged : EventHandler " Usage="member this.MaximumSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-642">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximumSize" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-642">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-643">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-643">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-644">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-644">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-645">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.MaximumSizeChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-645">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span> <span data-ttu-id="dc07a-646">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-646">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-647">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-647">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-648">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-648">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-649">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.MaximumSizeChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-649">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#390](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#390)]
 [!code-vb[System.Windows.Forms.EventExamples#390](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#390)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildActivate">
      <MemberSignature Language="C#" Value="public event EventHandler MdiChildActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MdiChildActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MdiChildActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MdiChildActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MdiChildActivate;" />
      <MemberSignature Language="F#" Value="member this.MdiChildActivate : EventHandler " Usage="member this.MdiChildActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-650">Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-650">Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-651">Sie können mithilfe dieses Ereignisses können Sie Aufgaben wie das Aktualisieren des Inhalts des untergeordneten MDI-Formulars aus, und ändern die Menüoptionen verfügbar im übergeordneten MDI-Formulars basierend auf den Status des untergeordneten MDI-Formulars, das aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-651">You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.</span></span>  
  
 <span data-ttu-id="dc07a-652">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-652">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-653">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-653">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-654">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.MdiChildActivate> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-654">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span> <span data-ttu-id="dc07a-655">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-655">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-656">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-656">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-657">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-657">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-658">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.MdiChildActivate> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-658">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#397](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#397)]
 [!code-vb[System.Windows.Forms.EventExamples#397](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#397)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] MdiChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] MdiChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MdiChildren As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ MdiChildren { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MdiChildren : System.Windows.Forms.Form[]" Usage="System.Windows.Forms.Form.MdiChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-659">Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-659">Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-660">Ein Array von <see cref="T:System.Windows.Forms.Form" />-Objekten, von denen jedes ein untergeordnetes MDI-Formular dieses Formulars bezeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-660">An array of <see cref="T:System.Windows.Forms.Form" /> objects, each of which identifies one of this form's MDI child forms.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-661">Diese Eigenschaft ermöglicht Ihnen das Abrufen der Verweise auf alle dem untergeordneten MDI-Formulare derzeit in einer übergeordneten MDI-Formulars geöffnet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-661">This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.</span></span> <span data-ttu-id="dc07a-662">Um ein untergeordnetes MDI-Formular zu erstellen, weisen die <xref:System.Windows.Forms.Form> , werden die übergeordneten MDI-Formulars, um die <xref:System.Windows.Forms.Form.MdiParent%2A> Eigenschaft des untergeordneten Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-662">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span>  
  
 <span data-ttu-id="dc07a-663">Sie können diese Eigenschaft verwenden, durchläuft alle dem untergeordneten MDI-Formularen zum Vorgänge wie das Speichern von Daten in einer Datenbank beim Schließen einer übergeordneten MDI-Formulars oder zum Aktualisieren von Feldern in den untergeordneten Formularen basierend auf Aktionen, die in der Anwendung ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-663">You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-664">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.MdiChildren%2A> Eigenschaft, um die Liste der untergeordneten MDI-Formularen durchlaufen, und fügen eine <xref:System.Windows.Forms.Button> auf jedes Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="dc07a-664">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property to iterate through the list of MDI child forms and add a <xref:System.Windows.Forms.Button> control to each.</span></span>  
  
 [!code-cpp[Form.MDIChildren#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIChildren/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIChildren#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIChildren/CS/form1.cs#1)]
 [!code-vb[Form.MDIChildren#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIChildren/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
      </Docs>
    </Member>
    <Member MemberName="MdiParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MdiParent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MdiParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiParent" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiParent As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MdiParent { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MdiParent : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.Form.MdiParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-665">Gets or sets the current multiple-document interface (MDI) parent form of this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-665">Gets or sets the current multiple-document interface (MDI) parent form of this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-666">Ein <see cref="T:System.Windows.Forms.Form" />-Objekt, das das übergeordnete MDI-Formular darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-666">A <see cref="T:System.Windows.Forms.Form" /> that represents the MDI parent form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-667">Um ein untergeordnetes MDI-Formular zu erstellen, weisen die <xref:System.Windows.Forms.Form> , werden die übergeordneten MDI-Formulars, um die <xref:System.Windows.Forms.Form.MdiParent%2A> Eigenschaft des untergeordneten Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-667">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="dc07a-668">Sie können diese Eigenschaft über ein untergeordnetes MDI-Formular verwenden, um globale Informationen abzurufen, den alle untergeordneten Formulare müssen oder zum Aufrufen von Methoden, die Aktionen an, die alle untergeordneten Formulare ausführen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-668">You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-669">Wenn es zwei existieren <xref:System.Windows.Forms.MenuStrip> Steuerelemente in einem untergeordneten MDI-Formulars festlegen <xref:System.Windows.Forms.Form.IsMdiContainer%2A> auf `true` für das übergeordnete Formular führt den Inhalt nur eines der der <xref:System.Windows.Forms.MenuStrip> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-669">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="dc07a-670">Verwendung <xref:System.Windows.Forms.ToolStripManager.Merge%2A> zum Zusammenführen der Inhalt der zusätzliche untergeordnete <xref:System.Windows.Forms.MenuStrip> Steuerelemente auf der übergeordneten MDI-Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-670">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-671">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen von untergeordneten Formularen in einer MDI-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="dc07a-671">The following code example demonstrates how to create child forms in an MDI application.</span></span> <span data-ttu-id="dc07a-672">Der Beispielcode erstellt ein Formular mit eindeutigen Text an das untergeordnete Formular zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-672">The example code creates a form with unique text to identify the child form.</span></span> <span data-ttu-id="dc07a-673">Im Beispiel wird die <xref:System.Windows.Forms.Form.MdiParent%2A> Eigenschaft, um anzugeben, dass ein Formular ein untergeordnetes Formular handelt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-673">The example uses the <xref:System.Windows.Forms.Form.MdiParent%2A> property to specify that a form is a child form.</span></span> <span data-ttu-id="dc07a-674">Dieses Beispiel benötigen Sie, dass der Code im Beispiel aus einem Formular aufgerufen wird, ist dessen <xref:System.Windows.Forms.Form.IsMdiContainer%2A> -Eigenschaftensatz auf `true` und das Formular eine private Klasse Ebene ganzzahlige Variable, die mit dem Namen verfügt `childCount`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-674">This example requires that the code in the example is called from a form that has its <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property set to `true` and that the form has a private class level integer variable named `childCount`.</span></span>  
  
 [!code-cpp[Form.MDIParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIParent/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIParent/CS/form1.cs#1)]
 [!code-vb[Form.MDIParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIParent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="dc07a-675">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is not marked as an MDI container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-675">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is not marked as an MDI container.</span>
          </span>
          <span data-ttu-id="dc07a-676">-or-  The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is both a child and an MDI container form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-676">-or-  The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is both a child and an MDI container form.</span>
          </span>
          <span data-ttu-id="dc07a-677">-or-  The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is located on a different thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-677">-or-  The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is located on a different thread.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="dc07a-678">zum Anfordern eines Formulars an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-678">for requesting a form.</span>
          </span>
          <span data-ttu-id="dc07a-679">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-679">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu Menu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu Menu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Property Menu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ Menu { System::Windows::Forms::MainMenu ^ get(); void set(System::Windows::Forms::MainMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Menu : System.Windows.Forms.MainMenu with get, set" Usage="System.Windows.Forms.Form.Menu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-680">Gets or sets the <see cref="T:System.Windows.Forms.MainMenu" /> that is displayed in the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-680">Gets or sets the <see cref="T:System.Windows.Forms.MainMenu" /> that is displayed in the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-681">Ein <see cref="T:System.Windows.Forms.MainMenu" />, das das im Formular anzuzeigende Menü darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-681">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the menu to display in the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-682">Sie können diese Eigenschaft verwenden, so wechseln Sie zwischen vollständigen Menü zur Laufzeit.</span><span class="sxs-lookup"><span data-stu-id="dc07a-682">You can use this property to switch between complete menu sets at run time.</span></span> <span data-ttu-id="dc07a-683">Beispielsweise können Sie definieren eine <xref:System.Windows.Forms.MainMenu> angezeigt, wenn das Formular Multiple Document Interface (MDI) keine aktive untergeordnete MDI-Formulare und ein anderes hat <xref:System.Windows.Forms.MainMenu> angezeigt, wenn ein untergeordnetes Fenster angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-683">For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed.</span></span> <span data-ttu-id="dc07a-684">Sie können auch ein anderes verwenden <xref:System.Windows.Forms.MainMenu> Wenn bestimmte Bedingungen in Ihrer Anwendung, die erfordern, Anzeigen von einem anderen Menüsatz vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-684">You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-685">Das folgende Codebeispiel erstellt eine <xref:System.Windows.Forms.MainMenu>, weist zwei <xref:System.Windows.Forms.MenuItem> -Objekte und die <xref:System.Windows.Forms.MainMenu> und bindet sie an ein Formular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-685">The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form.</span></span> <span data-ttu-id="dc07a-686">Dieses Beispiel benötigen Sie ein <xref:System.Windows.Forms.Form> erstellte mit der Bezeichnung `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-686">This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.</span></span>  
  
 [!code-cpp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.MainMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MenuComplete">
      <MemberSignature Language="C#" Value="public event EventHandler MenuComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuComplete;" />
      <MemberSignature Language="F#" Value="member this.MenuComplete : EventHandler " Usage="member this.MenuComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-687">Occurs when the menu of a form loses focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-687">Occurs when the menu of a form loses focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-688">Dieses Ereignis wird ausgelöst, wenn Sie auf ein beliebiges Menüelement im in einem Menü klicken, der das Ergebnis in einem Befehl ausgeführt wird und das Menü den Fokus verliert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-688">This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.</span></span> <span data-ttu-id="dc07a-689">Verwenden Sie dieses Ereignis, um Aufgaben wie das Aktualisieren des Textes ein <xref:System.Windows.Forms.StatusBar> Steuerelement oder aktivieren und Deaktivieren von Schaltflächen auf einem <xref:System.Windows.Forms.ToolBar>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-689">You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.</span></span>  
  
 <span data-ttu-id="dc07a-690">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-690">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-691">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-691">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-692">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.MenuComplete> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-692">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span> <span data-ttu-id="dc07a-693">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-693">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-694">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-694">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-695">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-695">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-696">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.MenuComplete> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-696">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#398](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#398)]
 [!code-vb[System.Windows.Forms.EventExamples#398](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#398)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuStart">
      <MemberSignature Language="C#" Value="public event EventHandler MenuStart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuStart" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuStart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuStart As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuStart;" />
      <MemberSignature Language="F#" Value="member this.MenuStart : EventHandler " Usage="member this.MenuStart : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-697">Occurs when the menu of a form receives focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-697">Occurs when the menu of a form receives focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-698">Dieses Ereignis wird ausgelöst, wenn der Benutzer alle Menüelement im Menü geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-698">This event is raised when any menu item in the menu is clicked by the user.</span></span> <span data-ttu-id="dc07a-699">Sie können dieses Ereignis verwenden, zum Ausführen von Aufgaben wie das Aktivieren und Deaktivieren von Steuerelementen auf dem Formular, das vom Benutzer nicht zugegriffen werden soll, wenn die Menüs zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-699">You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.</span></span>  
  
 <span data-ttu-id="dc07a-700">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-700">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-701">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-701">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-702">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.MenuStart> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-702">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span> <span data-ttu-id="dc07a-703">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-703">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-704">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-704">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-705">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-705">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-706">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.MenuStart> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-706">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#399](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#399)]
 [!code-vb[System.Windows.Forms.EventExamples#399](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#399)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MergedMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu MergedMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu MergedMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MergedMenu" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergedMenu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ MergedMenu { System::Windows::Forms::MainMenu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MergedMenu : System.Windows.Forms.MainMenu" Usage="System.Windows.Forms.Form.MergedMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-707">Gets the merged menu for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-707">Gets the merged menu for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-708">Ein <see cref="T:System.Windows.Forms.MainMenu" />, das das zusammengeführte Menü des Formulars darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-708">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the merged menu of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-709">Diese Eigenschaft wird hauptsächlich verwendet, wenn das Formular ein untergeordnetes Multiple Document Interface (MDI)-Formular ist, die die Menü mit des übergeordneten Formulars zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-709">This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.</span></span> <span data-ttu-id="dc07a-710">Diese Eigenschaft können Sie um die aktuelle Menüstruktur in einer MDI-Anwendung zum vornehmen von Änderungen oder Hinzufügungen zu den Menüstruktur zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-710">You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.</span></span> <span data-ttu-id="dc07a-711">Zum Abrufen von nicht zusammengeführten <xref:System.Windows.Forms.MainMenu> ein Formular zugewiesen, verwenden Sie die <xref:System.Windows.Forms.Form.Menu%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-711">To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="P:System.Windows.Forms.Form.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeBox">
      <MemberSignature Language="C#" Value="public bool MinimizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MinimizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MinimizeBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MinimizeBox : bool with get, set" Usage="System.Windows.Forms.Form.MinimizeBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-712">Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-712">Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-713">
            <see langword="true" /> zum Anzeigen einer ** Minimieren ** Schaltfläche für das Formular andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-713">
              <see langword="true" /> to display a **Minimize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-714">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-714">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-715">Ein **Minimieren** Schaltfläche ermöglicht Benutzern, um ein Fenster auf Symbolgröße zu minimieren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-715">A **Minimize** button enables users to minimize a window to an icon.</span></span> <span data-ttu-id="dc07a-716">Zum Anzeigen einer **Minimieren** Schaltfläche, den Wert im Format <xref:System.Windows.Forms.Form.ControlBox> Eigenschaft muss `true`, den Standardwert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-716">To display a **Minimize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="dc07a-717">Die <xref:System.Windows.Forms.Form.ControlBox> -Eigenschaft bestimmt, ob der oberen rechten Ecke der Titelleiste Steuerelemente, z. B. eine Schaltfläche "Maximieren", Schaltfläche "Minimieren", eine Schaltfläche "Hilfe" und eine Schaltfläche "Schließen" enthält.</span><span class="sxs-lookup"><span data-stu-id="dc07a-717">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="dc07a-718">Darüber hinaus müssen Sie auch des Formulars festlegen <xref:System.Windows.Forms.Form.FormBorderStyle%2A> Eigenschaft <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, oder <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-718">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-719">Generiert ein Formular minimiert, zur Laufzeit eine <xref:System.Windows.Forms.Control.Resize> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-719">Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="dc07a-720">Die <xref:System.Windows.Forms.Form.WindowState%2A> Eigenschaft entspricht dem aktuellen Zustand des Fensters.</span><span class="sxs-lookup"><span data-stu-id="dc07a-720">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="dc07a-721">Wenn Sie festlegen, die <xref:System.Windows.Forms.Form.WindowState%2A> Eigenschaft `FormWindowState.Minimized`, das Formular wird minimiert, unabhängig von die Einstellungen für in Kraft sind die <xref:System.Windows.Forms.Form.MinimizeBox%2A> und <xref:System.Windows.Forms.Form.FormBorderStyle%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-721">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-722">Das folgende Codebeispiel erstellt eine neue Instanz von einem <xref:System.Windows.Forms.Form> und ruft die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um das Formular als Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-722">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="dc07a-723">Im Beispiel wird die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um die Darstellung und Funktionalität des Formulars in ein Dialogfeld zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-723">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="dc07a-724">Das Beispiel verwendet außerdem die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> Methode im Format <xref:System.Windows.Forms.Control.Controls%2A> Auflistung hinzuzufügende zwei <xref:System.Windows.Forms.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-724">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="dc07a-725">Im Beispiel wird die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaft auf eine Schaltfläche "Hilfe" in der Titelleiste des Dialogfelds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-725">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-726">Gets or sets the minimum size the form can be resized to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-726">Gets or sets the minimum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-727">Eine <see cref="T:System.Drawing.Size" />, die die minimale Größe für das Formular darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-727">A <see cref="T:System.Drawing.Size" /> that represents the minimum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-728">Diese Eigenschaft können Sie die Größe eines Formulars auf eine bestimmte minimale Größe beschränkt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-728">This property enables you to limit the size of a form to a specified minimum size.</span></span> <span data-ttu-id="dc07a-729">Sie können diese Funktion verwenden, um zu verhindern, dass einen Benutzer ein Fenster an unerwünschten Größe anpassen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-729">You can use this feature to prevent a user from sizing a window to an undesirable size.</span></span> <span data-ttu-id="dc07a-730">Wenn diese Eigenschaft, um festgelegt wird eine <xref:System.Drawing.Size> -Objekt, das 0 für die Höhe und Breite des Formulars 0 ist, müssen keine Mindestgröße jenseits der Grenzen von Windows festlegen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-730">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="dc07a-731">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-731">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MinimumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MinimumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MinimumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MinimumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MinimumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MinimumSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.MinimumSizeChanged : EventHandler " Usage="member this.MinimumSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-732">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MinimumSize" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-732">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MinimumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-733">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-733">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-734">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-734">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-735">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.MinimumSizeChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-735">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span> <span data-ttu-id="dc07a-736">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-736">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-737">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-737">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-738">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-738">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-739">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.MinimumSizeChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-739">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#391](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#391)]
 [!code-vb[System.Windows.Forms.EventExamples#391](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#391)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="Modal">
      <MemberSignature Language="C#" Value="public bool Modal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Modal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Modal : bool" Usage="System.Windows.Forms.Form.Modal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-740">Gets a value indicating whether this form is displayed modally.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-740">Gets a value indicating whether this form is displayed modally.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-741">
            <see langword="true" />, wenn das Formular modal angezeigt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-741">
              <see langword="true" /> if the form is displayed modally; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-742">Wenn ein Formular modal angezeigt wird, kann keine Eingabe (Tastatur- oder Maustastenzustand klicken) außer auf Objekte auf dem Formular modal auftreten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-742">When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.</span></span> <span data-ttu-id="dc07a-743">Das Programm muss ausblenden oder schließen ein modales Formular (normalerweise als Reaktion auf eine Benutzeraktion) vor der Eingabe in ein anderes Format auftreten kann.</span><span class="sxs-lookup"><span data-stu-id="dc07a-743">The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.</span></span> <span data-ttu-id="dc07a-744">Formen, mit die modal angezeigt werden, werden in der Regel als Dialogfelder in einer Anwendung verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-744">Forms that are displayed modally are typically used as dialog boxes in an application.</span></span>  
  
 <span data-ttu-id="dc07a-745">Sie können diese Eigenschaft verwenden, um zu bestimmen, ob ein Formular, das Sie von einer Methode oder Eigenschaft erhalten modal angezeigt wurde.</span><span class="sxs-lookup"><span data-stu-id="dc07a-745">You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.</span></span>  
  
 <span data-ttu-id="dc07a-746">Um anzuzeigen, ein Formular modal verwenden die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-746">To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-747">Im folgenden Codebeispiel wird mit der <xref:System.Windows.Forms.Form.Modal%2A> Eigenschaft, um zu bestimmen, ob ein Formular als modales Formular angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-747">The following code example uses the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="dc07a-748">Ist dies nicht der <xref:System.Windows.Forms.Form.FormBorderStyle%2A> und <xref:System.Windows.Forms.Form.TopLevel%2A> Eigenschaften werden geändert, um das Formular ein Formular auf der obersten Ebene mit einem Toolfensterrahmen ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-748">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form a non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ShowDialog" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="form.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-749">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-749">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-750">Raises the <see cref="E:System.Windows.Forms.Form.Activated" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-750">Raises the <see cref="E:System.Windows.Forms.Form.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-751">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-751">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-752">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-752">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-753">Mit der <xref:System.Windows.Forms.Form.OnActivated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-753">The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-754">Überschreiben diese Methode ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-754">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-755">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-755">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="form.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-756">An <see cref="T:System.EventArgs" /> that contains the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-756">An <see cref="T:System.EventArgs" /> that contains the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-757">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-757">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-758">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-758">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-759">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-759">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-760">Mit der <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-760">The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-761">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-761">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-762">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-762">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageLayoutChanged : EventArgs -&gt; unit" Usage="form.OnBackgroundImageLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-763">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-763">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-764">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-764">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-765">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-765">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-766">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-766">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-767">Mit der <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-767">The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-768">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-768">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-769">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-769">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="form.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-770">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-770">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-771">Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-771">Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="dc07a-772">Die <xref:System.Windows.Forms.Form.OnClosed%2A> Methode ist veraltet in .NET Framework, Version 2.0; verwenden Sie die <xref:System.Windows.Forms.Form.OnFormClosed%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-772">The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead.</span></span>  
  
 <span data-ttu-id="dc07a-773">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-773">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-774">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-774">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-775">Mit der <xref:System.Windows.Forms.Form.OnFormClosed%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-775">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-776">Überschreiben diese Methode ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-776">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="dc07a-777">Die <xref:System.Windows.Forms.Form.OnClosed%2A> und <xref:System.Windows.Forms.Form.OnClosing%2A> Methoden werden nicht aufgerufen, wenn die <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> Methode wird aufgerufen, um die Anwendung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-777">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="dc07a-778">Wenn Sie Validierungscode in einer dieser Methoden, die ausgeführt werden müssen verfügen, sollten Sie Aufrufen der <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> Methode für jedes Formular einzeln vor dem Aufruf der <xref:System.Windows.Forms.Application.Exit%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-778">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-779">Das folgende Codebeispiel veranschaulicht das Überschreiben der <xref:System.Windows.Forms.Form.OnClosed%2A> Methode in einer Klasse abgeleitet <xref:System.Windows.Forms.Form> .</span><span class="sxs-lookup"><span data-stu-id="dc07a-779">The following code example demonstrates how to override the <xref:System.Windows.Forms.Form.OnClosed%2A> method in a class derived from <xref:System.Windows.Forms.Form> .</span></span>  
  
 [!code-cpp[System.Drawing.PointsAndSizes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.PointsAndSizes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.PointsAndSizes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-780">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-780">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closed" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="form.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-781">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-781">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-782">Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-782">Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="dc07a-783">Die <xref:System.Windows.Forms.Form.OnClosing%2A> Methode ist veraltet in .NET Framework, Version 2.0; verwenden Sie die <xref:System.Windows.Forms.Form.OnFormClosing%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-783">The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead.</span></span>  
  
 <span data-ttu-id="dc07a-784">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-784">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-785">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-785">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-786">Mit der <xref:System.Windows.Forms.Form.OnClosing%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-786">The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-787">Überschreiben diese Methode ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-787">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="dc07a-788">Die <xref:System.Windows.Forms.Form.OnClosed%2A> und <xref:System.Windows.Forms.Form.OnClosing%2A> Methoden werden nicht aufgerufen, wenn die <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> Methode wird aufgerufen, um die Anwendung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-788">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="dc07a-789">Wenn Sie Validierungscode in einer dieser Methoden, die ausgeführt werden müssen verfügen, sollten Sie Aufrufen der <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> Methode für jedes Formular einzeln vor dem Aufruf der <xref:System.Windows.Forms.Application.Exit%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-789">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-790">Im folgenden Codebeispiel wird mit <xref:System.Windows.Forms.Form.Closing> getestet, ob der Text in einem <xref:System.Windows.Forms.TextBox> hat sich geändert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-790">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="dc07a-791">Wenn bestehen, wird der Benutzer an, ob die Änderungen in einer Datei Speichern aufgefordert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-791">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-792">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-792">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected override void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateControl();" />
      <MemberSignature Language="F#" Value="override this.OnCreateControl : unit -&gt; unit" Usage="form.OnCreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-793">Raises the <see langword="CreateControl" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-793">Raises the <see langword="CreateControl" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-794">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-794">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-795">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-795">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-796">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-796">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivate : EventArgs -&gt; unit&#xA;override this.OnDeactivate : EventArgs -&gt; unit" Usage="form.OnDeactivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-797">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-797">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-798">Raises the <see cref="E:System.Windows.Forms.Form.Deactivate" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-798">Raises the <see cref="E:System.Windows.Forms.Form.Deactivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-799">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-799">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-800">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-800">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-801">Mit der <xref:System.Windows.Forms.Form.OnDeactivate%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-801">The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-802">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-802">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-803">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-803">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.Forms.DpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.Forms.DpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As DpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::Forms::DpiChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.Forms.DpiChangedEventArgs -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.Forms.DpiChangedEventArgs -&gt; unit" Usage="form.OnDpiChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DpiChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-804">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-804">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-805">Raises the <see cref="E:System.Windows.Forms.Form.DpiChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-805">Raises the <see cref="E:System.Windows.Forms.Form.DpiChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="form.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-806">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-806">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-807">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-807">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : EventArgs -&gt; unit" Usage="form.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-808">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-808">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-809">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-809">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-810">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-810">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-811">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-811">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-812">Mit der <xref:System.Windows.Forms.Form.OnEnter%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-812">The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-813">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-813">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-814">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-814">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="form.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-815">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-815">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-816">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-816">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosed(class System.Windows.Forms.FormClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosed (e As FormClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosed(System::Windows::Forms::FormClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormClosed : System.Windows.Forms.FormClosedEventArgs -&gt; unit&#xA;override this.OnFormClosed : System.Windows.Forms.FormClosedEventArgs -&gt; unit" Usage="form.OnFormClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-817">A <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-817">A <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-818">Raises the <see cref="E:System.Windows.Forms.Form.FormClosed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-818">Raises the <see cref="E:System.Windows.Forms.Form.FormClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-819">Die <xref:System.Windows.Forms.Form.OnFormClosing%2A> Methode entfernt das aktuelle Formular aus dem <xref:System.Windows.Forms.Application.OpenForms%2A> Auflistung der zugeordneten <xref:System.Windows.Forms.Application>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-819">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>.</span></span>  
  
 <span data-ttu-id="dc07a-820">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-820">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-821">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-821">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-822">Mit der <xref:System.Windows.Forms.Form.OnFormClosed%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-822">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-823">Überschreiben diese Methode ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-823">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-824">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-824">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosing(class System.Windows.Forms.FormClosingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosing (e As FormClosingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosing(System::Windows::Forms::FormClosingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormClosing : System.Windows.Forms.FormClosingEventArgs -&gt; unit&#xA;override this.OnFormClosing : System.Windows.Forms.FormClosingEventArgs -&gt; unit" Usage="form.OnFormClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-825">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-825">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-826">Raises the <see cref="E:System.Windows.Forms.Form.FormClosing" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-826">Raises the <see cref="E:System.Windows.Forms.Form.FormClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-827">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-827">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-828">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-828">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-829">Mit der <xref:System.Windows.Forms.Form.OnFormClosing%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-829">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-830">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-830">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-831">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-831">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGetDpiScaledSize">
      <MemberSignature Language="C#" Value="protected virtual bool OnGetDpiScaledSize (int deviceDpiOld, int deviceDpiNew, ref System.Drawing.Size desiredSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnGetDpiScaledSize(int32 deviceDpiOld, int32 deviceDpiNew, valuetype System.Drawing.Size&amp; desiredSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetDpiScaledSize (deviceDpiOld As Integer, deviceDpiNew As Integer, ByRef desiredSize As Size) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnGetDpiScaledSize(int deviceDpiOld, int deviceDpiNew, System::Drawing::Size % desiredSize);" />
      <MemberSignature Language="F#" Value="abstract member OnGetDpiScaledSize : int * int *  -&gt; bool&#xA;override this.OnGetDpiScaledSize : int * int *  -&gt; bool" Usage="form.OnGetDpiScaledSize (deviceDpiOld, deviceDpiNew, desiredSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" />
        <Parameter Name="desiredSize" Type="System.Drawing.Size&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld">
          <span data-ttu-id="dc07a-832">The DPI value for the display device where the form was previously displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-832">The DPI value for the display device where the form was previously displayed.</span>
          </span>
        </param>
        <param name="deviceDpiNew">
          <span data-ttu-id="dc07a-833">The DPI value for the display device where the form will be displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-833">The DPI value for the display device where the form will be displayed.</span>
          </span>
        </param>
        <param name="desiredSize">
          <span data-ttu-id="dc07a-834">A <see cref="T:System.Drawing.Size" /> representing the new size of the form based on the new DPI value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-834">A <see cref="T:System.Drawing.Size" /> representing the new size of the form based on the new DPI value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-835">Raises the GetDpiScaledSize event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-835">Raises the GetDpiScaledSize event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-836">
            <see langword="true" /> if successful; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-836">
              <see langword="true" /> if successful; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="form.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-837">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-837">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-838">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-838">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="form.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-839">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-839">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-840">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-840">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpButtonClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpButtonClicked(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpButtonClicked (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpButtonClicked(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpButtonClicked : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnHelpButtonClicked : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="form.OnHelpButtonClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-841">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-841">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-842">Raises the <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-842">Raises the <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-843">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-843">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-844">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-844">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-845">Mit der <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-845">The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-846">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-846">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-847">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-847">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <altmember cref="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanged(class System.Windows.Forms.InputLanguageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanged (e As InputLanguageChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanged(System::Windows::Forms::InputLanguageChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventArgs -&gt; unit&#xA;override this.OnInputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventArgs -&gt; unit" Usage="form.OnInputLanguageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-848">The <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-848">The <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-849">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-849">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-850">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-850">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-851">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-851">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-852">Mit der <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-852">The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-853">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-853">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-854">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-854">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanging(class System.Windows.Forms.InputLanguageChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanging (e As InputLanguageChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanging(System::Windows::Forms::InputLanguageChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventArgs -&gt; unit&#xA;override this.OnInputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventArgs -&gt; unit" Usage="form.OnInputLanguageChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-855">The <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-855">The <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-856">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-856">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-857">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-857">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-858">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-858">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-859">Mit der <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-859">The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-860">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-860">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-861">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-861">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="form.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">
          <span data-ttu-id="dc07a-862">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-862">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-863">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-863">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="form.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-864">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-864">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-865">Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-865">Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-866">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-866">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-867">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-867">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-868">Mit der <xref:System.Windows.Forms.Form.OnLoad%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-868">The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-869">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-869">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-870">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-870">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximizedBoundsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximizedBoundsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximizedBoundsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximizedBoundsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaximizedBoundsChanged : EventArgs -&gt; unit&#xA;override this.OnMaximizedBoundsChanged : EventArgs -&gt; unit" Usage="form.OnMaximizedBoundsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-871">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-871">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-872">Raises the <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-872">Raises the <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-873">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-873">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-874">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-874">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-875">Mit der <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-875">The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-876">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-876">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-877">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-877">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximumSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaximumSizeChanged : EventArgs -&gt; unit&#xA;override this.OnMaximumSizeChanged : EventArgs -&gt; unit" Usage="form.OnMaximumSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-878">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-878">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-879">Raises the <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-879">Raises the <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-880">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-880">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-881">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-881">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-882">Mit der <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-882">The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-883">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-883">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-884">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-884">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMdiChildActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMdiChildActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMdiChildActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMdiChildActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMdiChildActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMdiChildActivate : EventArgs -&gt; unit&#xA;override this.OnMdiChildActivate : EventArgs -&gt; unit" Usage="form.OnMdiChildActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-885">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-885">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-886">Raises the <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-886">Raises the <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-887">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-887">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-888">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-888">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-889">Mit der <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-889">The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-890">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-890">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-891">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-891">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuComplete(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuComplete : EventArgs -&gt; unit&#xA;override this.OnMenuComplete : EventArgs -&gt; unit" Usage="form.OnMenuComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-892">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-892">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-893">Raises the <see cref="E:System.Windows.Forms.Form.MenuComplete" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-893">Raises the <see cref="E:System.Windows.Forms.Form.MenuComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-894">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-894">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-895">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-895">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-896">Mit der <xref:System.Windows.Forms.Form.OnMenuComplete%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-896">The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-897">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-897">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-898">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-898">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuComplete" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuStart">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuStart (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuStart(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuStart (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuStart(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuStart : EventArgs -&gt; unit&#xA;override this.OnMenuStart : EventArgs -&gt; unit" Usage="form.OnMenuStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-899">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-899">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-900">Raises the <see cref="E:System.Windows.Forms.Form.MenuStart" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-900">Raises the <see cref="E:System.Windows.Forms.Form.MenuStart" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-901">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-901">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-902">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-902">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-903">Mit der <xref:System.Windows.Forms.Form.OnMenuStart%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-903">The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-904">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-904">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-905">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-905">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuStart" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMinimumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMinimumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMinimumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMinimumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMinimumSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMinimumSizeChanged : EventArgs -&gt; unit&#xA;override this.OnMinimumSizeChanged : EventArgs -&gt; unit" Usage="form.OnMinimumSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-906">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-906">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-907">Raises the <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-907">Raises the <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-908">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-908">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-909">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-909">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-910">Mit der <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-910">The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-911">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-911">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-912">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-912">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="form.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-913">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-913">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-914">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-914">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="form.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-915">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-915">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-916">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-916">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeBegin (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeBegin(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeBegin (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeBegin(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizeBegin : EventArgs -&gt; unit&#xA;override this.OnResizeBegin : EventArgs -&gt; unit" Usage="form.OnResizeBegin e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-917">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-917">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-918">Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-918">Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-919">Die <xref:System.Windows.Forms.Form.ResizeBegin> Ereignis wird nur ausgelöst, wenn des Formulars <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-919">The <xref:System.Windows.Forms.Form.ResizeBegin> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="dc07a-920">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-920">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-921">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-921">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-922">Mit der <xref:System.Windows.Forms.Form.OnResizeBegin%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-922">The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-923">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-923">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-924">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-924">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeEnd (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeEnd(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeEnd (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeEnd(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizeEnd : EventArgs -&gt; unit&#xA;override this.OnResizeEnd : EventArgs -&gt; unit" Usage="form.OnResizeEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-925">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-925">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-926">Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-926">Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-927">Die <xref:System.Windows.Forms.Form.ResizeEnd> Ereignis wird nur ausgelöst, wenn des Formulars <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-927">The <xref:System.Windows.Forms.Form.ResizeEnd> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="dc07a-928">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-928">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-929">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-929">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-930">Mit der <xref:System.Windows.Forms.Form.OnResizeEnd%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-930">The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-931">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-931">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-932">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-932">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="form.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-933">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-933">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-934">Raises the <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-934">Raises the <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-935">Wenn das aktuelle Formular oder eines seiner übergeordneten Ressourcen freigegeben ist die <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> Methode kehrt zurück, ohne eine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-935">If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action.</span></span> <span data-ttu-id="dc07a-936">Wenn die <xref:System.Windows.Forms.Control.RightToLeft%2A> -Eigenschaft des Formulars hat den Wert <xref:System.Windows.Forms.RightToLeft.Yes>, und klicken Sie dann die Ziehpunkte des Formulars und seiner untergeordneten Steuerelemente durch Aufrufen von neu erstellt werden die <xref:System.Windows.Forms.Control.RecreateHandle%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-936">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="dc07a-937">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-937">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-938">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-938">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-939">Mit der <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-939">The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-940">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-940">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-941">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-941">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Form.Dispose" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="OnShown">
      <MemberSignature Language="C#" Value="protected virtual void OnShown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShown(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnShown : EventArgs -&gt; unit&#xA;override this.OnShown : EventArgs -&gt; unit" Usage="form.OnShown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-942">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-942">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-943">Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-943">Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-944">Die <xref:System.Windows.Forms.Form.Shown> Ereignis tritt auf, wenn das Formular erstmalig angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-944">The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown.</span></span>  
  
 <span data-ttu-id="dc07a-945">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-945">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-946">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-946">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-947">Mit der <xref:System.Windows.Forms.Form.OnShown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-947">The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-948">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-948">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-949">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-949">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected override void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnStyleChanged : EventArgs -&gt; unit" Usage="form.OnStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-950">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-950">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-951">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-951">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="form.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-952">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-952">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-953">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-953">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="form.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dc07a-954">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-954">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-955">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-955">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-956">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-956">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="dc07a-957">Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-957">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="dc07a-958">Mit der <xref:System.Windows.Forms.Form.OnVisibleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-958">The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="dc07a-959">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc07a-959">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dc07a-960">
            <para>Zum Überschreiben <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-960">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.Forms.Form.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.OpacityConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-961">Gets or sets the opacity level of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-961">Gets or sets the opacity level of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-962">Die Durchlässigkeit des Formulars.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-962">The level of opacity for the form.</span>
          </span>
          <span data-ttu-id="dc07a-963">Der Standard ist 1,00.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-963">The default is 1.00.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-964">Die <xref:System.Windows.Forms.Form.Opacity%2A> Eigenschaft können Sie den Grad der Transparenz für das Formular und seine Steuerelemente angeben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-964">The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls.</span></span> <span data-ttu-id="dc07a-965">Wenn diese Eigenschaft auf einen Wert kleiner als 100 Prozent (1.00) festgelegt ist, wird das gesamte Formular, Rahmen, einschließlich transparenter vorgenommen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-965">When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.</span></span> <span data-ttu-id="dc07a-966">Wenn diese Eigenschaft auf einen Wert von 0 Prozent (0.00) wird das Formular vollständig unsichtbar.</span><span class="sxs-lookup"><span data-stu-id="dc07a-966">Setting this property to a value of 0 percent (0.00) makes the form completely invisible.</span></span> <span data-ttu-id="dc07a-967">Sie können diese Eigenschaft verwenden, um verschiedene Ebenen der Transparenz bereitzustellen oder um Geben Sie beispielsweise einen Effekte wie einstellt eines Formulars in oder aus der Sicht.</span><span class="sxs-lookup"><span data-stu-id="dc07a-967">You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.</span></span> <span data-ttu-id="dc07a-968">Sie können z. B. ein Formular in den Anzeigebereich phase, durch Festlegen der <xref:System.Windows.Forms.Form.Opacity%2A> Eigenschaft auf einen Wert von 0 Prozent (0.00) und den Wert schrittweise erhöhen, bis 100 Prozent (1.00) erreicht.</span><span class="sxs-lookup"><span data-stu-id="dc07a-968">For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).</span></span>  
  
 <span data-ttu-id="dc07a-969"><xref:System.Windows.Forms.Form.Opacity%2A> unterscheidet sich von der gebotenen Transparenz der <xref:System.Windows.Forms.Form.TransparencyKey%2A>, die nur ein Formular und seine Steuerelemente vollständig transparent. Wenn sie die gleiche Farbe wie der Wert im angegebenen sind die <xref:System.Windows.Forms.Form.TransparencyKey%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-969"><xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by the <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property.</span></span>  
  
 <span data-ttu-id="dc07a-970">Diese Eigenschaft wird nicht unterstützt, wenn <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-970">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
 <span data-ttu-id="dc07a-971">Die <xref:System.Windows.Forms.Form.Opacity%2A> Eigenschaft hängt von der in den Ebenen Windows-API, die eingeführt wurde mit Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="dc07a-971">The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API that was introduced with Windows 2000.</span></span> <span data-ttu-id="dc07a-972">Weitere Informationen finden Sie unter "In den Ebenen Windows: A New Möglichkeit zum Verwenden Lichtdurchlässigkeit und Transparenz Effekte in Windows Applications" in der Platform SDK-Dokumentation unter [ http://msdn.microsoft.com ](http://msdn.microsoft.com/).</span><span class="sxs-lookup"><span data-stu-id="dc07a-972">For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-973">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen eines Formulars, das angezeigt wird, mit einer Durchlässigkeit von 75 Prozent.</span><span class="sxs-lookup"><span data-stu-id="dc07a-973">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="dc07a-974">Das Codebeispiel erstellt ein neues Formular, das sich in der Mitte des Bildschirms mit einer <xref:System.Windows.Forms.Form.Opacity%2A> Eigenschaft festgelegt wird, um die Durchlässigkeit des Formulars zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-974">The code example creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="dc07a-975">Das Codebeispiel setzt auch die <xref:System.Windows.Forms.Form.Size%2A> Eigenschaft ermöglichen einen größeren Größe, Form als die Standardgröße des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-975">The code example also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="dc07a-976">Dieses Codebeispiel wurde unter der Annahme geschrieben, dass die in diesem Beispiel definierte Methode aus einem anderen Formular in einem Ereignishandler oder eine andere Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-976">This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TransparencyKey" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="OwnedForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] OwnedForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] OwnedForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.OwnedForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedForms As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ OwnedForms { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedForms : System.Windows.Forms.Form[]" Usage="System.Windows.Forms.Form.OwnedForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-977">Gets an array of <see cref="T:System.Windows.Forms.Form" /> objects that represent all forms that are owned by this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-977">Gets an array of <see cref="T:System.Windows.Forms.Form" /> objects that represent all forms that are owned by this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-978">Ein <see cref="T:System.Windows.Forms.Form" />-Array, das die Formulare darstellt, die dieses Formular besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-978">A <see cref="T:System.Windows.Forms.Form" /> array that represents the owned forms for this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-979">Diese Eigenschaft gibt ein Array, das alle Formulare enthält, die dieses Formular besitzt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-979">This property returns an array that contains all forms that are owned by this form.</span></span> <span data-ttu-id="dc07a-980">Um ein Formular, das im Besitz einer anderen Form zu machen, rufen Sie die <xref:System.Windows.Forms.Form.AddOwnedForm%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-980">To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method.</span></span> <span data-ttu-id="dc07a-981">Das Formular auf das Besitzerformular zugewiesen bleibt im Besitz befindlichen, bis die <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-981">The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="dc07a-982">Sie können auch ein Formular, das im Besitz von einem anderen festlegen, die <xref:System.Windows.Forms.Form.Owner%2A> Eigenschaft mit einem Verweis auf das Besitzerformular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-982">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="dc07a-983">Wenn eine andere Form ein Formulars Besitz befindet, ist es geschlossen oder ausgeblendet werden, zusammen mit dem Besitzerformular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-983">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="dc07a-984">Betrachten Sie beispielsweise ein Formular mit dem Namen `Form2` , deren Besitzer ein Formular mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-984">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="dc07a-985">Wenn `Form1` geschlossen oder minimiert, `Form2` auch geschlossen oder ausgeblendet wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-985">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="dc07a-986">Formulare werden ebenfalls nicht hinter dem Besitzerformular angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-986">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="dc07a-987">Sie können verwendet Formulare für Windows, z. B. Suchen und Ersetzen von Fenstern, bei denen hinter dem Besitzerformular nicht angezeigt werden soll, wenn das Besitzerformular ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-987">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-988">Wenn das Formular ein Multiple Document Interface (MDI) übergeordnetes Formular ist, wird diese Eigenschaft zurück, dass alle Formulare, die mit Ausnahme von untergeordneten MDI-Formulare angezeigt werden, die derzeit geöffnet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-988">If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="dc07a-989">Verwenden Sie zum Abrufen der untergeordnete MDI-Formulare in einem übergeordneten MDI-Formulars geöffnet die <xref:System.Windows.Forms.Form.MdiChildren%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-989">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-990">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.OwnedForms%2A> so ändern Sie alle Formulare, die Besitzer der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-990">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property to modify all forms owned by the owner form.</span></span> <span data-ttu-id="dc07a-991">Die erste Methode im Beispiel fügt zum Array der Formulare der Besitzer ein Formular zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-991">The first method in the example adds forms to the array of owned forms associated with the owned form.</span></span> <span data-ttu-id="dc07a-992">Die zweite Methode durchläuft alle Formulare und ändert die Beschriftung.</span><span class="sxs-lookup"><span data-stu-id="dc07a-992">The second method loops through all owned forms and changes the caption.</span></span> <span data-ttu-id="dc07a-993">Dieses Beispiel erfordert, dass beide Methoden, indem Sie ein Ereignis oder eine andere Methode eines Formulars aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-993">This example requires that both methods are called by an event or other method of a form.</span></span>  
  
 [!code-cpp[Form.OwnedForms#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.OwnedForms/CPP/form1.cpp#1)]
 [!code-csharp[Form.OwnedForms#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.OwnedForms/CS/form1.cs#1)]
 [!code-vb[Form.OwnedForms#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.OwnedForms/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ Owner { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.Form.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-994">Gets or sets the form that owns this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-994">Gets or sets the form that owns this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-995">Ein <see cref="T:System.Windows.Forms.Form" />-Objekt, das das Formular darstellt, das Besitzer dieses Formulars ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-995">A <see cref="T:System.Windows.Forms.Form" /> that represents the form that is the owner of this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-996">Um ein Formular, das im Besitz einer anderen Form zu machen, weisen die <xref:System.Windows.Forms.Form.Owner%2A> Eigenschaft einen Verweis auf das Formular, das den Besitzer.</span><span class="sxs-lookup"><span data-stu-id="dc07a-996">To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner.</span></span>  
  
 <span data-ttu-id="dc07a-997">Wenn eine andere Form ein Formulars Besitz befindet, ist es geschlossen oder ausgeblendet werden, zusammen mit dem Besitzerformular.</span><span class="sxs-lookup"><span data-stu-id="dc07a-997">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="dc07a-998">Betrachten Sie beispielsweise ein Formular mit dem Namen `Form2` , deren Besitzer ein Formular mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-998">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="dc07a-999">Wenn `Form1` geschlossen oder minimiert, `Form2` auch geschlossen oder ausgeblendet wird. Formulare werden ebenfalls nicht hinter dem Besitzerformular angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-999">If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="dc07a-1000">Sie können verwendet Formulare für Windows, z. B. Suchen und Ersetzen von Fenstern, bei denen nicht verschwinden sollte, wenn das Besitzerformular ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1000">You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.</span></span> <span data-ttu-id="dc07a-1001">Verwenden Sie zum Bestimmen der Formulare, die ein übergeordnetes Formular gehören, die <xref:System.Windows.Forms.Form.OwnedForms%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1001">To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="dc07a-1002">A top-level window cannot have an owner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1002">A top-level window cannot have an owner.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="form.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="dc07a-1003">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the Win32 message to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1003">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the Win32 message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="dc07a-1004">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1004">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1005">Processes a command key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1005">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1006">
            <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1006">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1007">Die <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> Methode überschreibt die</span><span class="sxs-lookup"><span data-stu-id="dc07a-1007">The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base</span></span>  
  
 <span data-ttu-id="dc07a-1008"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> Implementierung, die zusätzliche Verarbeitung von Hauptmenü Befehl Schlüssel und MDI-Zugriffstasten bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1008"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> implementation to provide additional handling of main menu command keys and MDI accelerators.</span></span>  
  
 <span data-ttu-id="dc07a-1009">Informationen zum Auffangen von Tastatureingaben, finden Sie unter "Vorgehensweise beim Tastatureingaben in Steuerelementen mithilfe von Visual C#-trap" und "Gewusst wie: Auffangen von Tastatureingaben in .NET steuert mithilfe von Visual Basic .NET" in der Microsoft Knowledge Base unter http://support.microsoft.com.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1009">For information about trapping keystrokes, see "How to trap keystrokes in controls by using Visual C#" and "How to trap keystrokes in .NET controls by using Visual Basic .NET" in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogChar(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogChar : char -&gt; bool" Usage="form.ProcessDialogChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="dc07a-1010">The character to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1010">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1011">Processes a dialog character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1011">Processes a dialog character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1012">
            <see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1012">
              <see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="form.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="dc07a-1013">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1013">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1014">Processes a dialog box key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1014">Processes a dialog box key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1015">
            <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1015">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1016">Die <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> Methode überschreibt die <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> Implementierung zusätzliche Behandlung der Schlüssel zurückgeben und das ESCAPEZEICHEN in Dialogfeldern bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1016">The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.</span></span> <span data-ttu-id="dc07a-1017">Die Methode führt keine Verarbeitung von Tastatureingaben, die die ALT-Taste oder die CONTROL-Modifizierer enthalten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1017">The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyPreview :  -&gt; bool" Usage="form.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="dc07a-1018">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1018">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1019">Previews a keyboard message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1019">Previews a keyboard message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1020">
            <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1020">
              <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="form.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="dc07a-1021">The character to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1021">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1022">Processes a mnemonic character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1022">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1023">
            <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1023">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessTabKey (bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessTabKey(bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessTabKey (forward As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessTabKey(bool forward);" />
      <MemberSignature Language="F#" Value="override this.ProcessTabKey : bool -&gt; bool" Usage="form.ProcessTabKey forward" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forward">
          <span data-ttu-id="dc07a-1024">
            <see langword="true" /> to cycle forward through the controls in the ContainerControl; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1024">
              <see langword="true" /> to cycle forward through the controls in the ContainerControl; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1025">Selects the next available control and makes it the active control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1025">Selects the next available control and makes it the active control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1026">
            <see langword="true" /> if a control is selected; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1026">
              <see langword="true" /> if a control is selected; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessTabKey(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOwnedForm">
      <MemberSignature Language="C#" Value="public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberSignature Language="F#" Value="member this.RemoveOwnedForm : System.Windows.Forms.Form -&gt; unit" Usage="form.RemoveOwnedForm ownedForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="dc07a-1027">A <see cref="T:System.Windows.Forms.Form" /> representing the form to remove from the list of owned forms for this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1027">A <see cref="T:System.Windows.Forms.Form" /> representing the form to remove from the list of owned forms for this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1028">Removes an owned form from this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1028">Removes an owned form from this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1029">Das Formular auf das Besitzerformular zugewiesen bleibt bis zum Besitzer der <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1029">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="dc07a-1030">Zusätzlich zum Entfernen der Besitzer ein Formulars aus der Liste der Besitzer ein Formular, legt diese Methode auch das Besitzerformular zu `null`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1030">In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ResizeBegin">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeBegin;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeBegin" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeBegin" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeBegin As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeBegin;" />
      <MemberSignature Language="F#" Value="member this.ResizeBegin : EventHandler " Usage="member this.ResizeBegin : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1031">Occurs when a form enters resizing mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1031">Occurs when a form enters resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1032">Die <xref:System.Windows.Forms.Form.ResizeBegin> Ereignis wird ausgelöst, wenn der Benutzer beginnt, um die Größe von einem Formular in der Regel durch Klicken und Ziehen der Rahmen oder dem Größenziehpunkt befindet sich auf der unteren rechten Ecke des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1032">The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.</span></span> <span data-ttu-id="dc07a-1033">Diese Aktion setzt das Formular in eine modale Größenanpassungsschleife, bis das Resize-Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1033">This action puts the form into a modal sizing loop until the resize operation is completed.</span></span> <span data-ttu-id="dc07a-1034">In der Regel tritt der folgende Satz von Ereignissen während eines Vorgangs zum Ändern der Größe:</span><span class="sxs-lookup"><span data-stu-id="dc07a-1034">Typically, the following set of events occurs during a resize operation:</span></span>  
  
1.  <span data-ttu-id="dc07a-1035">Ein einzelnes <xref:System.Windows.Forms.Form.ResizeBegin> Ereignis tritt auf, wenn das Formular den Größenänderungsmodus wechselt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1035">A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode.</span></span>  
  
2.  <span data-ttu-id="dc07a-1036">0 (null) oder mehr Nummernpaare <xref:System.Windows.Forms.Control.Resize> und <xref:System.Windows.Forms.Control.SizeChanged> Ereignisse auftreten, weil der Formulars <xref:System.Windows.Forms.Form.Size%2A> geändert wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1036">Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified.</span></span>  
  
3.  <span data-ttu-id="dc07a-1037">Ein einzelnes <xref:System.Windows.Forms.Form.ResizeEnd> Ereignis tritt auf, wenn das Formular den Größenänderungsmodus verlässt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1037">A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-1038">Nur klicken, ohne auf einen Rahmen ziehen oder Größenziehpunkt generiert die <xref:System.Windows.Forms.Form.ResizeBegin> und <xref:System.Windows.Forms.Form.ResizeEnd> Ereignisse ohne alle Zwischendateien <xref:System.Windows.Forms.Control.Resize> und <xref:System.Windows.Forms.Control.SizeChanged> Ereignis-Paaren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1038">Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs.</span></span>  
  
 <span data-ttu-id="dc07a-1039">Die <xref:System.Windows.Forms.Form.ResizeBegin> und <xref:System.Windows.Forms.Form.ResizeEnd> Ereignispaar wird auch ausgelöst, wenn der Benutzer das Formular in der Regel bewegt durch Klicken und ziehen auf der Titelleiste.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1039">The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="dc07a-1040">Diese Ereignisse werden nicht generiert durch programmgesteuerte Bearbeitung des Formulars, z. B. durch Ändern der <xref:System.Windows.Forms.Form.Size%2A> oder <xref:System.Windows.Forms.Control.Location%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1040">These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="dc07a-1041">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-1041">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1042">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1042">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-1043">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.ResizeBegin> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1043">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span> <span data-ttu-id="dc07a-1044">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1044">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-1045">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1045">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-1046">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1046">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-1047">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.ResizeBegin> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1047">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#404](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#404)]
 [!code-vb[System.Windows.Forms.EventExamples#404](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#404)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResizeEnd">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeEnd" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeEnd" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeEnd As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeEnd;" />
      <MemberSignature Language="F#" Value="member this.ResizeEnd : EventHandler " Usage="member this.ResizeEnd : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1048">Occurs when a form exits resizing mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1048">Occurs when a form exits resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1049">Die <xref:System.Windows.Forms.Form.ResizeEnd> Ereignis wird ausgelöst, wenn der Benutzer die Größe eines Formulars, in der Regel durch Ziehen der Rahmen oder dem Größenziehpunkt befindet sich auf der unteren rechten Ecke des Formulars und dann losgelassen wird beendet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1049">The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.</span></span> <span data-ttu-id="dc07a-1050">Weitere Informationen über die Größenänderung im Vorgang finden Sie unter der <xref:System.Windows.Forms.Form.ResizeBegin> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1050">For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 <span data-ttu-id="dc07a-1051">Die <xref:System.Windows.Forms.Form.ResizeEnd> Ereignis wird auch generiert, nachdem der Benutzer durch Klicken und ziehen auf der Titelleiste in der Regel eine Form bewegt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1051">The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="dc07a-1052">Dieses Ereignis wird nicht generiert durch programmgesteuerte Bearbeitung des Formulars, z. B. durch Ändern der <xref:System.Windows.Forms.Form.Size%2A> oder <xref:System.Windows.Forms.Control.Location%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1052">This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="dc07a-1053">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-1053">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1054">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1054">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-1055">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.ResizeEnd> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1055">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span> <span data-ttu-id="dc07a-1056">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1056">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-1057">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1057">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-1058">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1058">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-1059">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.ResizeEnd> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1059">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#405](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#405)]
 [!code-vb[System.Windows.Forms.EventExamples#405](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#405)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle RestoreBounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.Form.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1060">Gets the location and size of the form in its normal window state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1060">Gets the location and size of the form in its normal window state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1061">Ein <see cref="T:System.Drawing.Rectangle" />, das die Position und die Größe des Formulars im normalen Fensterzustand enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1061">A <see cref="T:System.Drawing.Rectangle" /> that contains the location and size of the form in the normal window state.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1062">Normalerweise verwenden Sie die <xref:System.Windows.Forms.Form.RestoreBounds%2A> Eigenschaft zum Nachverfolgen von Fenstergröße des Benutzers, und positionieren Sie die Einstellungen für das Formular im normalen Fensterzustand.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1062">Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state.</span></span> <span data-ttu-id="dc07a-1063">Sollten Sie sowohl den Wert der verfolgen die <xref:System.Windows.Forms.Form.WindowState%2A> und <xref:System.Windows.Forms.Form.RestoreBounds%2A> Eigenschaften nachzuverfolgen und die Einstellungen des Benutzers Fenster.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1063">You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-1064">Der Wert des der <xref:System.Windows.Forms.Form.RestoreBounds%2A> Eigenschaft ist nur gültig, wenn die <xref:System.Windows.Forms.Form.WindowState%2A> Eigenschaft von der <xref:System.Windows.Forms.Form> Klasse ist nicht gleich <xref:System.Windows.Forms.FormWindowState.Normal>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1064">The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1065">Gets or sets a value indicating whether right-to-left mirror placement is turned on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1065">Gets or sets a value indicating whether right-to-left mirror placement is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1066">
            <see langword="true" />, wenn die Anordnung der Spiegelung von rechts nach links aktiviert ist, andernfalls <see langword="false" /> für die Standardanordnung von untergeordneten Steuerelementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1066">
              <see langword="true" /> if right-to-left mirror placement is turned on; otherwise, <see langword="false" /> for standard child control placement.</span>
          </span>
          <span data-ttu-id="dc07a-1067">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1067">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1068">Die <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> Eigenschaft eignet sich hauptsächlich für die Entwicklung weltweit einsatzfähiger Formularen für Zielgruppen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1068">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences.</span></span> <span data-ttu-id="dc07a-1069">Viele Formen sind so konzipiert, dass Steuerelemente in einem Formular in einer Weise von links nach rechts angeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1069">Many forms are designed so that controls are laid out on a form in a left-to-right fashion.</span></span> <span data-ttu-id="dc07a-1070">Diese Formen sind kompatibel mit den Sprachen, die diese Richtung schreiben folgen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1070">These forms are compatible with languages that follow this writing direction.</span></span> <span data-ttu-id="dc07a-1071">Wenn Sie die gleichen Formulare für Benutzer der rechts-nach-links-Sprachen angezeigt, ist es jedoch oft vorzuziehen, um die Reihenfolge der Steuerelemente im Formular umzukehren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1071">However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.</span></span> <span data-ttu-id="dc07a-1072">Wenn beide die <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> und <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaften sind `true`Spiegelung wird aktiviert, für das Formular und Positionierung von Steuerelementen und Textfluss werden rechts-nach-links.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1072">If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.</span></span>  
  
 <span data-ttu-id="dc07a-1073">Im Gegensatz zu <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> erbt nicht.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1073">Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit.</span></span> <span data-ttu-id="dc07a-1074">Wenn der Wert für die untergeordneten Steuerelemente wirksam werden soll, müssen Sie es für jedes untergeordnete Steuerelement festlegen, die gespiegelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1074">If you want it to take effect for child controls, you must set it on each child control that you want mirrored.</span></span>  
  
 <span data-ttu-id="dc07a-1075">Ownerdrawing wird nicht unterstützt, wenn <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> festgelegt ist, um `Yes`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1075">Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`.</span></span> <span data-ttu-id="dc07a-1076">Besitzer Draw-Ereignisse werden nach wie vor erfolgen, aber das Verhalten sämtlicher Code, den Sie in diese Ereignisse erstellen, ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1076">The owner draw events will still occur, but the behavior of any code you author in these events is not defined.</span></span> <span data-ttu-id="dc07a-1077">Darüber hinaus <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, und die zeichnen-Ereignisse werden nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1077">Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported.</span></span>  
  
 <span data-ttu-id="dc07a-1078">Die <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> und <xref:System.Windows.Forms.Control.RightToLeft%2A> Eigenschaften dazu führen, dass die folgenden Win32-API-Fensterstile festgelegt werden:</span><span class="sxs-lookup"><span data-stu-id="dc07a-1078">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Win32 API window styles to be set:</span></span>  
  
-   <span data-ttu-id="dc07a-1079">Wenn <xref:System.Windows.Forms.Control.RightToLeft%2A> auf festgelegt ist `Yes` und <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> auf festgelegt ist `true`, legt Windows Forms die `WS_EX_LAYOUTRTL` Fensterstil und entfernt die `WS_EX_RIGHT` und `WS_EX_RTLREADING` Stile.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1079">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `true`, Windows Forms sets the `WS_EX_LAYOUTRTL` window style, and removes the `WS_EX_RIGHT` and `WS_EX_RTLREADING` styles.</span></span>  
  
-   <span data-ttu-id="dc07a-1080">Wenn <xref:System.Windows.Forms.Control.RightToLeft%2A> festgelegt ist, um `Yes` jedoch <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> auf festgelegt ist `No`, Windows Forms festgelegt die `WS_EX_RIGHT` und `WS_EX_RTLREADING` Fensterstile.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1080">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` but <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `No`, Windows Forms sets the `WS_EX_RIGHT` and `WS_EX_RTLREADING` window styles.</span></span>  
  
 <span data-ttu-id="dc07a-1081">Ändern des Werts dieser Eigenschaft löst die <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1081">Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 <span data-ttu-id="dc07a-1082">Weitere Informationen zu Globalisierungsproblemen finden Sie unter [bewährte Methoden für die Entwicklung weltweit einsatzfähiger Anwendungen](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-1082">For more information about globalization issues, see [Best Practices for Developing World-Ready Applications](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1083">Occurs after the value of the <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1083">Occurs after the value of the <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1084">Die <xref:System.Windows.Forms.Control.RightToLeft%2A> und <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> Eigenschaften werden in der Regel bei der Entwicklung weltweit einsatzfähiger Anwendungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1084">The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1085">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1085">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-1086">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1086">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span> <span data-ttu-id="dc07a-1087">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1087">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-1088">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1088">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-1089">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1089">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-1090">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1090">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#402](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#402)]
 [!code-vb[System.Windows.Forms.EventExamples#402](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#402)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="form.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="dc07a-1091">The factor by which the height and width of the control are scaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1091">The factor by which the height and width of the control are scaled.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="dc07a-1092">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1092">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1093">Scales the location, size, padding, and margin of a control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1093">Scales the location, size, padding, and margin of a control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected override void ScaleCore (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleCore(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleCore (x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleCore(float x, float y);" />
      <MemberSignature Language="F#" Value="override this.ScaleCore : single * single -&gt; unit" Usage="form.ScaleCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="dc07a-1094">Percentage to scale the form horizontally</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1094">Percentage to scale the form horizontally</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="dc07a-1095">Percentage to scale the form vertically</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1095">Percentage to scale the form vertically</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1096">Performs scaling of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1096">Performs scaling of the form.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="override this.Select : bool * bool -&gt; unit" Usage="form.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed">
          <span data-ttu-id="dc07a-1097">If set to true that the active control is changed</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1097">If set to true that the active control is changed</span>
          </span>
        </param>
        <param name="forward">
          <span data-ttu-id="dc07a-1098">If directed is true, then this controls the direction in which focus is moved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1098">If directed is true, then this controls the direction in which focus is moved.</span>
          </span>
          <span data-ttu-id="dc07a-1099">If this is <see langword="true" />, then the next control is selected; otherwise, the previous control is selected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1099">If this is <see langword="true" />, then the next control is selected; otherwise, the previous control is selected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1100">Selects this form, and optionally selects the next or previous control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1100">Selects this form, and optionally selects the next or previous control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="dc07a-1101">zum Ändern des Fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1101">For changing focus.</span>
          </span>
          <span data-ttu-id="dc07a-1102">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1102">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="form.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="dc07a-1103">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1103">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="dc07a-1104">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1104">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="dc07a-1105">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1105">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="dc07a-1106">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1106">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="dc07a-1107">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1107">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1108">Performs the work of setting the specified bounds of this control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1108">Performs the work of setting the specified bounds of this control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected override void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetClientSizeCore(int x, int y);" />
      <MemberSignature Language="F#" Value="override this.SetClientSizeCore : int * int -&gt; unit" Usage="form.SetClientSizeCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="dc07a-1109">Requested width of the client region.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1109">Requested width of the client region.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="dc07a-1110">Requested height of the client region.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1110">Requested height of the client region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1111">Sets the client size of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1111">Sets the client size of the form.</span>
          </span>
          <span data-ttu-id="dc07a-1112">This will adjust the bounds of the form to make the client size the requested size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1112">This will adjust the bounds of the form to make the client size the requested size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopBounds">
      <MemberSignature Language="C#" Value="public void SetDesktopBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetDesktopBounds : int * int * int * int -&gt; unit" Usage="form.SetDesktopBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="dc07a-1113">The x-coordinate of the form's location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1113">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="dc07a-1114">The y-coordinate of the form's location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1114">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="dc07a-1115">The width of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1115">The width of the form.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="dc07a-1116">The height of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1116">The height of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1117">Sets the bounds of the form in desktop coordinates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1117">Sets the bounds of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1118">Desktopkoordinaten basieren auf den Arbeitsbereich des Bildschirms, die die Taskleiste ausgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1118">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="dc07a-1119">Sie können diese Methode verwenden, die Position und Größe des Formulars auf dem Desktop festlegen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1119">You can use this method to set the position and size of your form on the desktop.</span></span> <span data-ttu-id="dc07a-1120">Da Desktopkoordinaten auf den Arbeitsbereich des Formulars basieren, können Sie diese Methode verwenden, um sicherzustellen, dass das Formular vollständig auf dem Desktop sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1120">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1121">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.Form.SetDesktopBounds%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1121">The following code example demonstrates using the <xref:System.Windows.Forms.Form.SetDesktopBounds%2A> method.</span></span> <span data-ttu-id="dc07a-1122">Um dieses Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular, das eine Schaltfläche mit dem Namen enthält `Button2`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1122">To run this example, paste the following code in a form that contains a button named `Button2`.</span></span> <span data-ttu-id="dc07a-1123">Stellen Sie sicher, dass alle Ereignisse den Ereignishandler zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1123">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.FormExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.FormExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopLocation">
      <MemberSignature Language="C#" Value="public void SetDesktopLocation (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopLocation(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopLocation (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopLocation(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.SetDesktopLocation : int * int -&gt; unit" Usage="form.SetDesktopLocation (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="dc07a-1124">The x-coordinate of the form's location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1124">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="dc07a-1125">The y-coordinate of the form's location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1125">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1126">Sets the location of the form in desktop coordinates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1126">Sets the location of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1127">Desktopkoordinaten basieren auf den Arbeitsbereich des Bildschirms, die die Taskleiste ausgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1127">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="dc07a-1128">Sie können diese Methode verwenden, um das Formular zu positionieren, auf dem Desktop.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1128">You can use this method to position your form on the desktop.</span></span> <span data-ttu-id="dc07a-1129">Da Desktopkoordinaten auf den Arbeitsbereich des Formulars basieren, können Sie diese Methode verwenden, um sicherzustellen, dass das Formular vollständig auf dem Desktop sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1129">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span> <span data-ttu-id="dc07a-1130">Diese Methode dient in erster Linie für Formulare der obersten Ebene verwendet werden soll; Verwenden Sie die <xref:System.Windows.Forms.Form.LayoutMdi%2A> Methode, um die Multiple Document Interface (MDI) untergeordnete Formulare positionieren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1130">This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1131">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> und <xref:System.Windows.Forms.Form.Activate%2A> Elemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1131">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="dc07a-1132">Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular namens `Form1` aufgerufen, die eine Schaltfläche enthält `Button1` und zwei `Label` genannten Hoststeuerelemente `Label1` und `Label2`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1132">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool value);" />
      <MemberSignature Language="F#" Value="override this.SetVisibleCore : bool -&gt; unit" Usage="form.SetVisibleCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dc07a-1133">
            <see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1133">
              <see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1134">Sets the control to the specified visible state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1134">Sets the control to the specified visible state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (owner As IWin32Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="override this.Show : System.Windows.Forms.IWin32Window -&gt; unit" Usage="form.Show owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="dc07a-1135">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> and represents the top-level window that will own this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1135">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> and represents the top-level window that will own this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1136">Shows the form with the specified owner to the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1136">Shows the form with the specified owner to the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1137">Sie können diese Methode verwenden, ein nicht modales Formular angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1137">You can use this method to display a non-modal form.</span></span> <span data-ttu-id="dc07a-1138">Bei Verwendung dieser Methode die <xref:System.Windows.Forms.Form.Owner%2A> -Eigenschaft des Formulars festgelegt ist, um `owner`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1138">When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`.</span></span> <span data-ttu-id="dc07a-1139">Das Formular nicht modalen können die <xref:System.Windows.Forms.Form.Owner%2A> Eigenschaft, um Informationen über das übergeordnete Formular abzurufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1139">The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form.</span></span>  <span data-ttu-id="dc07a-1140">Beim Aufrufen dieser Methode ist identisch mit der Einstellung der <xref:System.Windows.Forms.Form.Owner%2A> nicht modalen-Eigenschaft und dem anschließenden Aufrufen der <xref:System.Windows.Forms.Control.Show> Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1140">Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method.</span></span>  
  
 <span data-ttu-id="dc07a-1141">Anzeigen des Formulars entspricht dem Festlegen der <xref:System.Windows.Forms.Control.Visible%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1141">Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="dc07a-1142">Nach der <xref:System.Windows.Forms.Form.Show%2A> -Methode aufgerufen wird, die <xref:System.Windows.Forms.Control.Visible%2A> Eigenschaft gibt einen Wert von `true` bis die <xref:System.Windows.Forms.Control.Hide%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1142">After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc07a-1143">The form being shown is already visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1143">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="dc07a-1144">-or-  The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1144">-or-  The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
          <span data-ttu-id="dc07a-1145">-or-  The form being shown is disabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1145">-or-  The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="dc07a-1146">-or-  The form being shown is not a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1146">-or-  The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="dc07a-1147">-or-  The form being shown as a dialog box is already a modal form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1147">-or-  The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="dc07a-1148">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1148">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Forms.Form.ShowDialog" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1149">Shows the form as a modal dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1149">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; System.Windows.Forms.DialogResult" Usage="form.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1150">Shows the form as a modal dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1150">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1151">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1151">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1152">Sie können diese Methode verwenden, um ein modales Dialogfeld in der Anwendung anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1152">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="dc07a-1153">Wenn diese Methode aufgerufen wird, ist der folgende Code wird erst ausgeführt, nachdem das Dialogfeld geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1153">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="dc07a-1154">Das Dialogfeld kann zugewiesen werden, einen der Werte von der <xref:System.Windows.Forms.DialogResult> Enumeration durch Zuweisung zu der <xref:System.Windows.Forms.Button.DialogResult%2A> Eigenschaft eine <xref:System.Windows.Forms.Button> auf dem Formular oder durch Festlegen der <xref:System.Windows.Forms.Form.DialogResult%2A> -Eigenschaft des Formulars im Code.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1154">The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="dc07a-1155">Dieser Wert wird von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1155">This value is then returned by this method.</span></span> <span data-ttu-id="dc07a-1156">Dieser Rückgabewert können Sie bestimmen, wie zum Verarbeiten der Aktionen, die Sie im Dialogfeld aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1156">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="dc07a-1157">Angenommen, wenn das Dialogfeld geschlossen und zurückgegeben wurde die `DialogResult.Cancel` Wert über diese Methode können Sie Code nach dem Aufruf von verhindern <xref:System.Windows.Forms.Form.ShowDialog%2A> aus ausführen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1157">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="dc07a-1158">Wenn ein Formular als modales Dialogfeld angezeigt wird, klicken Sie auf die **schließen** Schaltfläche (die Schaltfläche mit einem X in der oberen rechten Ecke des Formulars) bewirkt, dass das Formular ausgeblendet werden und die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft festgelegt werden, um `DialogResult.Cancel`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1158">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="dc07a-1159">Im Gegensatz zu nicht modalen Formulare die <xref:System.Windows.Forms.Form.Close%2A> Methode wird nicht von der .NET Framework aufgerufen, wenn der Benutzer klickt auf die Schaltfläche Schließen eines Dialogfelds, oder den Wert für legt die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1159">Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="dc07a-1160">Stattdessen wird das Formular wird ausgeblendet, und kann erneut ohne Erstellen einer neuen Instanz des Dialogfelds angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1160">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="dc07a-1161">Da ein Formular angezeigt, wie ein Dialogfeld und geschlossen ausgeblendet wird, aufgerufen werden, muss die <xref:System.Windows.Forms.Control.Dispose%2A> Methode des Formulars bei das Formular von der Anwendung nicht mehr benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1161">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="dc07a-1162">Diese Version von den <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode gibt keines Formulars oder Steuerelements als Besitzer.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1162">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner.</span></span> <span data-ttu-id="dc07a-1163">Wenn diese Version aufgerufen wird, erfolgt das aktuell aktive Fenster den Besitzer des Dialogfelds.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1163">When this version is called, the currently active window is made the owner of the dialog box.</span></span> <span data-ttu-id="dc07a-1164">Wenn Sie einen bestimmten Besitzer angeben möchten, verwenden Sie die andere Version dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1164">If you want to specify a specific owner, use the other version of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1165">Im folgenden Codebeispiel wird ein Formular als modales Dialogfeld angezeigt und den Rückgabewert des Dialogfelds ausgewertet, bevor festgestellt wird, ob der Wert des gelesen ein <xref:System.Windows.Forms.TextBox> Steuerelement im Formular Dialogfelds.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1165">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="dc07a-1166">Dieses Beispiel erfordert, dass eine <xref:System.Windows.Forms.Form> mit dem Namen `testDialog` wird erstellt und die darin enthaltenen eine <xref:System.Windows.Forms.TextBox> Steuerelement namens `TextBox1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1166">This example requires that a <xref:System.Windows.Forms.Form> named `testDialog` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="dc07a-1167">Beispiel darüber hinaus ist es erforderlich, dass Code in diesem Beispiel enthaltenen und von einem anderen aufgerufen <xref:System.Windows.Forms.Form> um anzeigen `testDialog` als modales Dialogfeld.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1167">Furthermore, the example requires that code in this example is contained and called from a different <xref:System.Windows.Forms.Form> in order to display `testDialog` as a modal dialog box.</span></span> <span data-ttu-id="dc07a-1168">Im Beispiel wird die Version des <xref:System.Windows.Forms.Form.ShowDialog%2A> , die einen Besitzer für das Dialogfeld angibt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1168">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc07a-1169">The form being shown is already visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1169">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="dc07a-1170">-or-  The form being shown is disabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1170">-or-  The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="dc07a-1171">-or-  The form being shown is not a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1171">-or-  The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="dc07a-1172">-or-  The form being shown as a dialog box is already a modal form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1172">-or-  The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="dc07a-1173">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1173">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : System.Windows.Forms.IWin32Window -&gt; System.Windows.Forms.DialogResult" Usage="form.ShowDialog owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="dc07a-1174">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1174">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1175">Shows the form as a modal dialog box with the specified owner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1175">Shows the form as a modal dialog box with the specified owner.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1176">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1176">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1177">Sie können diese Methode verwenden, um ein modales Dialogfeld in der Anwendung anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1177">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="dc07a-1178">Wenn diese Methode aufgerufen wird, ist der folgende Code wird erst ausgeführt, nachdem das Dialogfeld geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1178">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="dc07a-1179">Das Dialogfeld kann zugewiesen werden, einen der Werte von <xref:System.Windows.Forms.DialogResult> durch Zuweisung zu den <xref:System.Windows.Forms.Button.DialogResult%2A> Eigenschaft eine <xref:System.Windows.Forms.Button> auf dem Formular oder durch Festlegen der <xref:System.Windows.Forms.Form.DialogResult%2A> -Eigenschaft des Formulars im Code.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1179">The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="dc07a-1180">Dieser Wert wird von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1180">This value is then returned by this method.</span></span> <span data-ttu-id="dc07a-1181">Dieser Rückgabewert können Sie bestimmen, wie zum Verarbeiten der Aktionen, die Sie im Dialogfeld aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1181">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="dc07a-1182">Angenommen, wenn das Dialogfeld geschlossen und zurückgegeben wurde die `DialogResult.Cancel` Wert über diese Methode können Sie Code nach dem Aufruf von verhindern <xref:System.Windows.Forms.Form.ShowDialog%2A> aus ausführen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1182">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="dc07a-1183">Wenn ein Formular als modales Dialogfeld angezeigt wird, klicken Sie auf die **schließen** Schaltfläche (die Schaltfläche mit einem X in der oberen rechten Ecke des Formulars) bewirkt, dass das Formular ausgeblendet werden und die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft festgelegt werden, um `DialogResult.Cancel`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1183">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="dc07a-1184">Im Gegensatz zu nicht modalen Formularen der <xref:System.Windows.Forms.Form.Close%2A> Methode wird nicht von der .NET Framework aufgerufen, wenn der Benutzer klickt auf die Schaltfläche Schließen eines Dialogfelds, oder den Wert für legt die <xref:System.Windows.Forms.Form.DialogResult%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1184">Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="dc07a-1185">Stattdessen wird das Formular wird ausgeblendet, und kann erneut ohne Erstellen einer neuen Instanz des Dialogfelds angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1185">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="dc07a-1186">Da ein Formular angezeigt, wie ein Dialogfeld und geschlossen ausgeblendet wird, aufgerufen werden, muss die <xref:System.Windows.Forms.Control.Dispose%2A> Methode des Formulars bei das Formular von der Anwendung nicht mehr benötigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1186">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="dc07a-1187">Diese Version von den <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode ermöglicht Ihnen die Angabe ein bestimmtes Formulars, das das Dialogfeld besitzen soll, das angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1187">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1188">Im folgenden Codebeispiel wird ein Formular als modales Dialogfeld angezeigt und den Rückgabewert des Dialogfelds ausgewertet, bevor festgestellt wird, ob der Wert des gelesen ein <xref:System.Windows.Forms.TextBox> Steuerelement im Formular Dialogfelds.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1188">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="dc07a-1189">Dieses Beispiel erfordert, dass eine <xref:System.Windows.Forms.Form> mit dem Namen `Form2` wird erstellt und die darin enthaltenen eine <xref:System.Windows.Forms.TextBox> Steuerelement namens `TextBox1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1189">This example requires that a <xref:System.Windows.Forms.Form> named `Form2` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="dc07a-1190">Im Beispiel wird die Version des <xref:System.Windows.Forms.Form.ShowDialog%2A> , die einen Besitzer für das Dialogfeld angibt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1190">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dc07a-1191">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1191">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dc07a-1192">The form being shown is already visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1192">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="dc07a-1193">-or-  The form being shown is disabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1193">-or-  The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="dc07a-1194">-or-  The form being shown is not a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1194">-or-  The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="dc07a-1195">-or-  The form being shown as a dialog box is already a modal form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1195">-or-  The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="dc07a-1196">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1196">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowIcon">
      <MemberSignature Language="C#" Value="public bool ShowIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowIcon : bool with get, set" Usage="System.Windows.Forms.Form.ShowIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1197">Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1197">Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1198">
            <see langword="true" />, wenn auf der Titelleiste des Formulars ein Symbol angezeigt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1198">
              <see langword="true" /> if the form displays an icon in the caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-1199">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1199">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1200">Die <xref:System.Windows.Forms.Form.ShowIcon%2A> Eigenschaft enthält eine <xref:System.Boolean> Wert, der angibt, ob des Formulars <xref:System.Windows.Forms.Form.Icon%2A> wird in der Titelleiste des Formulars angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1200">The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form.</span></span> <span data-ttu-id="dc07a-1201">Wenn die <xref:System.Windows.Forms.Form.ControlBox%2A> Eigenschaft `false`, sowohl das Symbol als auch das Kontrollkästchen werden unterdrückt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1201">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed.</span></span>  
  
 <span data-ttu-id="dc07a-1202">Wenn <xref:System.Windows.Forms.Form.ShowIcon%2A> ist `false` , wenn die Primärform angezeigt wird, wird ein generisches Symbol in der Taskleistenschaltfläche für die Anwendung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1202">If <xref:System.Windows.Forms.Form.ShowIcon%2A> is `false` when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.</span></span>  
  
 <span data-ttu-id="dc07a-1203">Diese Eigenschaft hat keine Auswirkung, wenn <xref:System.Windows.Forms.Form.FormBorderStyle%2A> festgelegt ist, um <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1203">This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="dc07a-1204">In diesem Fall wird das Formular ein Symbol nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1204">In that case, the form does not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Icon" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1205">Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1205">Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1206">
            <see langword="true" />, um das Formular zur Laufzeit auf der Windows-Taskleiste anzuzeigen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1206">
              <see langword="true" /> to display the form in the Windows taskbar at run time; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-1207">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1207">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1208">Wenn ein Formular in eine andere Form untergeordnet ist, wird das untergeordnete Formular nicht in der Windows-Taskleiste angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1208">If a form is parented within another form, the parented form is not displayed in the Windows taskbar.</span></span>  
  
 <span data-ttu-id="dc07a-1209">Sie können diese Eigenschaft verwenden, um zu verhindern, dass Benutzer das Formular über die Windows-Taskleiste auswählen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1209">You can use this property to prevent users from selecting your form through the Windows taskbar.</span></span> <span data-ttu-id="dc07a-1210">Z. B. Wenn Sie ein Toolfenster suchen und Ersetzen in der Anwendung anzeigen, sollten Sie verhindern, dass dieses Fenster über die Windows-Taskleiste ausgewählt werden, da Sie im Hauptfenster der Anwendung und das Suchen und Ersetzen-Toolfenster müssten angezeigt, um Suchvorgänge ordnungsgemäß zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1210">For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.</span></span>  
  
 <span data-ttu-id="dc07a-1211">Wird häufig mit dem soll diese Eigenschaft beim Erstellen eines Formulars mit der <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> Stil.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1211">You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style.</span></span> <span data-ttu-id="dc07a-1212">Festlegen der <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> Stil allein ist nicht garantiert, dass ein Fenster nicht in der Taskleiste angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1212">Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1213">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.Form.ShowInTaskbar%2A> Eigenschaft, um ein Dialogfeld wird nicht in der Windows-Taskleiste angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1213">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.ShowInTaskbar%2A> property to make a dialog box that is not displayed in the Windows taskbar.</span></span>  
  
 [!code-cpp[Form.ShowInTaskbar#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.ShowInTaskbar/CPP/form1.cpp#1)]
 [!code-csharp[Form.ShowInTaskbar#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.ShowInTaskbar/CS/form1.cs#1)]
 [!code-vb[Form.ShowInTaskbar#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.ShowInTaskbar/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shown">
      <MemberSignature Language="C#" Value="public event EventHandler Shown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Shown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Shown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Shown;" />
      <MemberSignature Language="F#" Value="member this.Shown : EventHandler " Usage="member this.Shown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1214">Occurs whenever the form is first displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1214">Occurs whenever the form is first displayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1215">Die <xref:System.Windows.Forms.Form.Shown> Ereignis wird nur beim ersten ein Formular angezeigt wird; anschließend minimieren, maximieren, wiederherstellen, ausblenden, anzeigen, oder ungültig macht und Neuzeichnen werden dieses Ereignis nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1215">The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.</span></span> <span data-ttu-id="dc07a-1216">Weitere Informationen zur Reihenfolge der Ereignisse eines Formulars finden Sie unter [Reihenfolge der Ereignisse in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-1216">For more information about the order of events of a form, see [Order of Events in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="dc07a-1217">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="dc07a-1217">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1218">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1218">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="dc07a-1219">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.Form.Shown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1219">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Shown> event.</span></span> <span data-ttu-id="dc07a-1220">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1220">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="dc07a-1221">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1221">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="dc07a-1222">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1222">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="dc07a-1223">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.Shown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1223">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Shown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#403](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#403)]
 [!code-vb[System.Windows.Forms.EventExamples#403](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#403)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="ShowWithoutActivation">
      <MemberSignature Language="C#" Value="protected virtual bool ShowWithoutActivation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWithoutActivation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowWithoutActivation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowWithoutActivation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowWithoutActivation : bool" Usage="System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1224">Gets a value indicating whether the window will be activated when it is shown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1224">Gets a value indicating whether the window will be activated when it is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1225">
            <see langword="True" />, wenn das Fenster nicht aktiviert wird, wenn es angezeigt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1225">
              <see langword="True" /> if the window will not be activated when it is shown; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-1226">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1227">Verwenden Sie diese Eigenschaft, wenn Sie ein Fenster der obersten Ebene angezeigt werden sollen, aber nicht angezeigt werden sollen, eines Benutzers Arbeit zu unterbrechen, ergreifen Sie hierzu den Eingabefokus nicht auf dem aktuellen Fenster.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1227">Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.</span></span> <span data-ttu-id="dc07a-1228">Dies kann ein Information-Popup-Fenster oder ein unverankertes Fenster, z. B. eine Toolspalette in der Paint-Anwendung sein.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1228">This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.</span></span>  
  
 <span data-ttu-id="dc07a-1229">Da diese Eigenschaft schreibgeschützt ist, können Sie seinen Wert nur ändern, indem überschreiben <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in Ihren eigenen Formular und Programmierung zurückkehren `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1229">Because this property is read-only, you can only change its value by overriding <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in your own form, and programming it to return `true`.</span></span>  
  
 <span data-ttu-id="dc07a-1230">Wenn das Fenster nicht aktivierten Benutzeroberflächen-Steuerelemente verwenden muss, sollten Sie mit der <xref:System.Windows.Forms.ToolStrip> steuert, wie z. B. <xref:System.Windows.Forms.ToolStripDropDown>.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1230">If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>.</span></span> <span data-ttu-id="dc07a-1231">Diese Steuerelemente sind fensterlose und werden nicht dazu, dass ein Fenster zu aktivieren, wenn sie ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1231">These controls are windowless, and will not cause a window to activate when they are selected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1232">Gets or sets the size of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1232">Gets or sets the size of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1233">Eine <see cref="T:System.Drawing.Size" />, die die Größe des Formulars darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1233">A <see cref="T:System.Drawing.Size" /> that represents the size of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1234">Diese Eigenschaft bietet die Möglichkeit, legen Sie die Höhe und Breite (in Pixel) des Formulars zur gleichen Zeit anstatt durch die Einstellung der <xref:System.Windows.Forms.Control.Height%2A> und <xref:System.Windows.Forms.Control.Width%2A> Eigenschaften einzeln.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1234">This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually.</span></span> <span data-ttu-id="dc07a-1235">Wenn Sie die Größe und Position eines Formulars festlegen möchten, können Sie mithilfe der <xref:System.Windows.Forms.Form.DesktopBounds%2A> -Eigenschaft für die Größe und Position des Formulars basierend auf Desktopkoordinaten oder verwenden Sie die <xref:System.Windows.Forms.Control.Bounds%2A> Eigenschaft von der <xref:System.Windows.Forms.Control> Klasse zum Festlegen der Größe und Position des Formulars basierend auf Bildschirm Koord Inates.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1235">If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-1236">Der maximale Wert dieser Eigenschaft wird von der Auflösung des Bildschirms beschränkt, auf dem das Formular ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1236">The maximum value of this property is limited by the resolution of the screen on which the form runs.</span></span> <span data-ttu-id="dc07a-1237">Der Wert darf nicht größer als 12 Pixel über jede Dimension Bildschirm (horizontale + 12 und vertikale + 12) sein.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1237">The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc07a-1238">Für Pocket PC-Geräte können Sie ein Fenster in der Größe veränderbaren erstellen, indem <xref:System.Windows.Forms.Form.FormBorderStyle%2A> auf `None` und entfernen Sie die <xref:System.Windows.Forms.MainMenu> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1238">On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control.</span></span> <span data-ttu-id="dc07a-1239">Auf SmartPhone-Geräte können Sie nie Ändern einer <xref:System.Windows.Forms.Form> -es wird immer den gesamten Bildschirm ausfüllen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1239">On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1240">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen eines Formulars, das angezeigt wird, mit einer Durchlässigkeit von 75 Prozent.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1240">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="dc07a-1241">Der Beispielcode erstellt ein neues Formular, das sich in der Mitte des Bildschirms mit einer <xref:System.Windows.Forms.Form.Opacity%2A> Eigenschaft festgelegt wird, um die Durchlässigkeit des Formulars zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1241">The example code creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="dc07a-1242">Der Beispielcode setzt auch die <xref:System.Windows.Forms.Form.Size%2A> Eigenschaft ermöglichen einen größeren Größe, Form als die Standardgröße des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1242">The example code also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="dc07a-1243">Dieses Beispiel benötigen Sie, dass die in diesem Beispiel definierte Methode aus einem anderen Formular in einem Ereignishandler oder eine andere Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1243">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="SizeGripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SizeGripStyle SizeGripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.SizeGripStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeGripStyle As SizeGripStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SizeGripStyle SizeGripStyle { System::Windows::Forms::SizeGripStyle get(); void set(System::Windows::Forms::SizeGripStyle value); };" />
      <MemberSignature Language="F#" Value="member this.SizeGripStyle : System.Windows.Forms.SizeGripStyle with get, set" Usage="System.Windows.Forms.Form.SizeGripStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SizeGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1244">Gets or sets the style of the size grip to display in the lower-right corner of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1244">Gets or sets the style of the size grip to display in the lower-right corner of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1245">Ein <see cref="T:System.Windows.Forms.SizeGripStyle" />, der die Art des anzuzeigenden Größenziehpunkts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1245">A <see cref="T:System.Windows.Forms.SizeGripStyle" /> that represents the style of the size grip to display.</span>
          </span>
          <span data-ttu-id="dc07a-1246">Die Standardeinstellung ist <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1246">The default is <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1247">Diese Eigenschaft können Sie bestimmen, wann der Größenziehpunkt auf dem Formular angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1247">This property enables you to determine when the sizing grip is displayed on the form.</span></span> <span data-ttu-id="dc07a-1248">Sie können diese Eigenschaft auf dem Größenziehpunkt angezeigt oder haben sie automatisch angezeigt, basierend auf der Einstellung der Festlegen der <xref:System.Windows.Forms.Form.FormBorderStyle%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1248">You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1249">Im folgenden Codebeispiel wird veranschaulicht, wie die Größenziehpunkts für Ausblenden einer <xref:System.Windows.Forms.Form> bei der <xref:System.Windows.Forms.Form> kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1249">The following code example demonstrates how to hide the size grip for a <xref:System.Windows.Forms.Form> when the <xref:System.Windows.Forms.Form> is not resizable.</span></span>  
  
 [!code-cpp[Form.SizeGripStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.SizeGripStyle/CPP/form1.cpp#1)]
 [!code-csharp[Form.SizeGripStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.SizeGripStyle/CS/form1.cs#1)]
 [!code-vb[Form.SizeGripStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.SizeGripStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc07a-1250">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1250">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="StartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormStartPosition StartPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormStartPosition StartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.StartPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property StartPosition As FormStartPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormStartPosition StartPosition { System::Windows::Forms::FormStartPosition get(); void set(System::Windows::Forms::FormStartPosition value); };" />
      <MemberSignature Language="F#" Value="member this.StartPosition : System.Windows.Forms.FormStartPosition with get, set" Usage="System.Windows.Forms.Form.StartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormStartPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1251">Gets or sets the starting position of the form at run time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1251">Gets or sets the starting position of the form at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1252">Eine <see cref="T:System.Windows.Forms.FormStartPosition" />, die die Anfangsposition des Formulars darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1252">A <see cref="T:System.Windows.Forms.FormStartPosition" /> that represents the starting position of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1253">Diese Eigenschaft ermöglicht Ihnen, die Anfangsposition des Formulars festgelegt, wenn er zur Laufzeit angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1253">This property enables you to set the starting position of the form when it is displayed at run time.</span></span> <span data-ttu-id="dc07a-1254">Die Position des Formulars kann manuell angegeben werden, indem die <xref:System.Windows.Forms.Form.Location%2A> Eigenschaft oder verwenden den Standardspeicherort von Windows angegeben.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1254">The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows.</span></span> <span data-ttu-id="dc07a-1255">Sie können auch das Formular zum Anzeigen von in der Mitte des Bildschirms oder in der Mitte des übergeordneten Formulars für Formulare, z. B. Multiple Document Interface (MDI) untergeordnete Formulare positionieren.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1255">You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.</span></span>  
  
 <span data-ttu-id="dc07a-1256">Diese Eigenschaft muss festgelegt werden, bevor das Formular angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1256">This property should be set before the form is shown.</span></span>  <span data-ttu-id="dc07a-1257">Sie können diese Eigenschaft festlegen, vor dem Aufrufen der <xref:System.Windows.Forms.Form.Show%2A> oder <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode oder im Konstruktor des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1257">You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1258">Das folgende Codebeispiel erstellt eine neue Instanz von einem <xref:System.Windows.Forms.Form> und ruft die <xref:System.Windows.Forms.Form.ShowDialog%2A> Methode, um das Formular als Dialogfeld anzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1258">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="dc07a-1259">Im Beispiel wird die <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, und <xref:System.Windows.Forms.Form.StartPosition%2A> Eigenschaften, um die Darstellung und Funktionalität des Formulars in ein Dialogfeld zu ändern.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1259">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="dc07a-1260">Das Beispiel verwendet außerdem die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> Methode im Format <xref:System.Windows.Forms.Control.Controls%2A> Auflistung hinzuzufügende zwei <xref:System.Windows.Forms.Button> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1260">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="dc07a-1261">Im Beispiel wird die <xref:System.Windows.Forms.Form.HelpButton%2A> -Eigenschaft auf eine Schaltfläche "Hilfe" in der Titelleiste des Dialogfelds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1261">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.StartPosition Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.StartPosition Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CS/source.cs#1)]
 [!code-vb[Classic Form.StartPosition Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.StartPosition Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc07a-1262">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1262">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="System.Windows.Forms.Form.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1263">Gets or sets the tab order of the control within its container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1263">Gets or sets the tab order of the control within its container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1264">Eine <see cref="T:System.Int32" />-Struktur, die den Index des Steuerelements in der Gruppe von Steuerelementen in dessen Container enthält, die in der Aktivierreihenfolge enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1264">An <see cref="T:System.Int32" /> containing the index of the control within the set of controls within its container that is included in the tab order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1265">Formulare werden nicht in der Aktivierreihenfolge enthalten.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1265">Forms are not included in the tab order.</span></span> <span data-ttu-id="dc07a-1266">Festlegen der <xref:System.Windows.Forms.Form.TabIndex%2A> Eigenschaft wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1266">Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.TabIndexChanged : EventHandler " Usage="member this.TabIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1267">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.TabIndex" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1267">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.TabIndex" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.Form.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1268">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1268">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1269">
            <see langword="true" />, wenn der Fokus mit der TAB-TASTE auf dieses Steuerelement gesetzt werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1269">
              <see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-1270">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1270">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1271">Occurs when the <see cref="P:System.Windows.Forms.Form.TabStop" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1271">Occurs when the <see cref="P:System.Windows.Forms.Form.TabStop" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.Form.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1272">Gets or sets the text associated with this control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1272">Gets or sets the text associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1273">Der diesem Steuerelement zugeordnete Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1273">The text associated with this control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="TopLevel">
      <MemberSignature Language="C#" Value="public bool TopLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TopLevel : bool with get, set" Usage="System.Windows.Forms.Form.TopLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1274">Gets or sets a value indicating whether to display the form as a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1274">Gets or sets a value indicating whether to display the form as a top-level window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1275">
            <see langword="true" />, um das Formular als Fenster der obersten Ebene anzuzeigen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1275">
              <see langword="true" /> to display the form as a top-level window; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-1276">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1276">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1277">Ein Formular der obersten Ebene ist ein Fenster, der ohne übergeordnetes Formular aufweist, oder dessen übergeordnetes Formular ist der Desktopfenster.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1277">A top-level form is a window that has no parent form, or whose parent form is the desktop window.</span></span> <span data-ttu-id="dc07a-1278">Fenster auf oberster Ebene werden in der Regel als das Hauptformular in einer Anwendung verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1278">Top-level windows are typically used as the main form in an application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1279">Im folgenden Codebeispiel wird mithilfe der <xref:System.Windows.Forms.Form.Modal%2A> Eigenschaft, um zu bestimmen, ob ein Formular als modales Formular angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1279">The following code example use the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="dc07a-1280">Ist dies nicht der <xref:System.Windows.Forms.Form.FormBorderStyle%2A> und <xref:System.Windows.Forms.Form.TopLevel%2A> Eigenschaften werden geändert, um das Formular auf der obersten Ebene Formular mit Toolfensterrahmen ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1280">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="dc07a-1281">A Multiple-document interface (MDI) parent form must be a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1281">A Multiple-document interface (MDI) parent form must be a top-level window.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.TopMost" />
      </Docs>
    </Member>
    <Member MemberName="TopMost">
      <MemberSignature Language="C#" Value="public bool TopMost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopMost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopMost" />
      <MemberSignature Language="VB.NET" Value="Public Property TopMost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopMost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TopMost : bool with get, set" Usage="System.Windows.Forms.Form.TopMost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1282">Gets or sets a value indicating whether the form should be displayed as a topmost form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1282">Gets or sets a value indicating whether the form should be displayed as a topmost form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1283">
            <see langword="true" />, um das Formular als oberstes Formular anzuzeigen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1283">
              <see langword="true" /> to display the form as a topmost form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-1284">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1284">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1285">Oberstes Formular wird ein Formular, das alle anderen (höchsten) Formulare überlagert, auch wenn es sich nicht um das Formular "aktiv" oder Vordergrund ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1285">A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.</span></span> <span data-ttu-id="dc07a-1286">Oberste Formulare werden immer am höchsten Punkt in der Z-Reihenfolge der Fenster auf dem Desktop angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1286">Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.</span></span> <span data-ttu-id="dc07a-1287">Sie können diese Eigenschaft verwenden, um ein Formular erstellen, die immer in der Anwendung, z. B. ein Toolfenster suchen und ersetzen angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1287">You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1288">Im folgenden Codebeispiel wird veranschaulicht, wie oberstes Formular zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1288">The following code example demonstrates how to create a topmost form.</span></span> <span data-ttu-id="dc07a-1289">Das Beispiel erstellt zwei Formen enthalten, von denen eine wird maximiert und eine, die als oberstes Formular angezeigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1289">The example creates two forms, one that is maximized and one that will be displayed as a topmost form.</span></span> <span data-ttu-id="dc07a-1290">Die erste Form, die mit dem Namen `bottomForm`, wird angezeigt, maximiert angezeigt wird, mithilfe der <xref:System.Windows.Forms.Form.WindowState%2A> -Eigenschaft, um die Funktionen des obersten Formulars besser zu veranschaulichen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1290">The first form, named `bottomForm`, is displayed maximized, using the <xref:System.Windows.Forms.Form.WindowState%2A> property, to better demonstrate the abilities of the topmost form.</span></span> <span data-ttu-id="dc07a-1291">Die zweite Form, die mit dem Namen `topMostForm`, legt der <xref:System.Windows.Forms.Form.TopMost%2A> Eigenschaft `true` um das Formular als oberstes Formular anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1291">The second form, named `topMostForm`, sets the <xref:System.Windows.Forms.Form.TopMost%2A> property to `true` to display the form as a topmost form.</span></span> <span data-ttu-id="dc07a-1292">Wenn dieser Code ausgeführt wird, einen durch Klicken auf das Formular maximiert verursacht keinen oberste Formular unterhalb des maximierten Formulars angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1292">When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form.</span></span> <span data-ttu-id="dc07a-1293">Das Beispiel erfordert, dass die im Beispiel definierte Methode aus einem anderen Formular aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1293">The example requires that the method defined in the example is called from another form.</span></span>  
  
 [!code-cpp[Form.TopMost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.TopMost/CPP/form1.cpp#1)]
 [!code-csharp[Form.TopMost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.TopMost/CS/form1.cs#1)]
 [!code-vb[Form.TopMost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.TopMost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TopLevel" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="form.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1294">Gets a string representing the current instance of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1294">Gets a string representing the current instance of the form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1295">A string consisting of the fully qualified name of the form object's class, with the <see cref="P:System.Windows.Forms.Form.Text" /> property of the form appended to the end.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1295">A string consisting of the fully qualified name of the form object's class, with the <see cref="P:System.Windows.Forms.Form.Text" /> property of the form appended to the end.</span>
          </span>
          <span data-ttu-id="dc07a-1296">For example, if the form is derived from the class <c>MyForm</c> in the <c>MyNamespace</c> namespace, and the <see cref="P:System.Windows.Forms.Form.Text" /> property is set to <c>Hello, World</c>, this method will return <c>MyNamespace.MyForm, Text: Hello, World</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1296">For example, if the form is derived from the class <c>MyForm</c> in the <c>MyNamespace</c> namespace, and the <see cref="P:System.Windows.Forms.Form.Text" /> property is set to <c>Hello, World</c>, this method will return <c>MyNamespace.MyForm, Text: Hello, World</c>.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparencyKey">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TransparencyKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TransparencyKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TransparencyKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransparencyKey As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TransparencyKey { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TransparencyKey : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Form.TransparencyKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1297">Gets or sets the color that will represent transparent areas of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1297">Gets or sets the color that will represent transparent areas of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1298">Eine <see cref="T:System.Drawing.Color" />, die die Farbe für eine transparente Anzeige im Formular darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1298">A <see cref="T:System.Drawing.Color" /> that represents the color to display transparently on the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1299">Wenn die <xref:System.Windows.Forms.Form.TransparencyKey%2A> Eigenschaft zugewiesen ist ein <xref:System.Drawing.Color>, die Bereiche des Formulars, die dieselbe <xref:System.Windows.Forms.Control.BackColor%2A> transparent angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1299">When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently.</span></span> <span data-ttu-id="dc07a-1300">Alle Mausaktionen, z. B. das Klicken auf die Maus, die für die transparente Bereiche des Formulars ausgeführt werden, werden auf dem Windows unterhalb der transparenten Bereich übertragen werden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1300">Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.</span></span> <span data-ttu-id="dc07a-1301">Z. B. wenn Clientbereichs eines Formulars erfolgt transparent ist, klicken mit der Maus auf diesen Bereich die ereignisbenachrichtigung der klicken Sie auf einem beliebigen Fenster beim Senden, die darunter liegenden.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1301">For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.</span></span> <span data-ttu-id="dc07a-1302">Wenn Sie die Farbe zugewiesen der <xref:System.Windows.Forms.Form.TransparencyKey%2A> Eigenschaft ist identisch mit der alle Steuerelemente im Formular, die sie auch transparent angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1302">If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently.</span></span> <span data-ttu-id="dc07a-1303">Angenommen, Sie haben eine <xref:System.Windows.Forms.Button> Steuerelement auf ein Formular, seine <xref:System.Windows.Forms.Form.TransparencyKey%2A> -Eigenschaftensatz auf `SystemColors.Control`, das Steuerelement transparent angezeigt, es sei denn, der <xref:System.Windows.Forms.Control.BackColor%2A> Eigenschaft von der <xref:System.Windows.Forms.Button> Steuerelement wird in einer anderen Farbe geändert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1303">For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color.</span></span>  
  
 <span data-ttu-id="dc07a-1304">Diese Eigenschaft wird nicht unterstützt, wenn <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1304">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1305">Das folgende Codebeispiel erstellt ein Fenster mit einem transparenten Clientbereich unabhängig von der Hintergrundfarbe des Formulars.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1305">The following code example creates a window that has a transparent client region regardless of background color of the form.</span></span> <span data-ttu-id="dc07a-1306">Dieses Beispiel erfordert, dass das Beispiel für eine Methode innerhalb einer Form-Klasse definiert ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1306">This example requires that the example method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.TransparencyKey Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.TransparencyKey Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CS/source.cs#1)]
 [!code-vb[Classic Form.TransparencyKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultButton">
      <MemberSignature Language="C#" Value="protected override void UpdateDefaultButton ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateDefaultButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.UpdateDefaultButton" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateDefaultButton ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateDefaultButton();" />
      <MemberSignature Language="F#" Value="override this.UpdateDefaultButton : unit -&gt; unit" Usage="form.UpdateDefaultButton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1307">Updates which button is the default button.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1307">Updates which button is the default button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1308">Die <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> Methode bestimmt, welches Steuerelement die Schaltfläche im Formular löst das Click-Ereignis, wenn der Benutzer die EINGABETASTE drückt, gemäß der folgenden Priorität:</span><span class="sxs-lookup"><span data-stu-id="dc07a-1308">The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:</span></span>  
  
1.  <span data-ttu-id="dc07a-1309">Wenn die <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> Eigenschaft implementiert die <xref:System.Windows.Forms.IButtonControl> Schnittstelle, die Kontrolle über die Standardschaltfläche ist.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1309">If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button.</span></span>  
  
2.  <span data-ttu-id="dc07a-1310">Die <xref:System.Windows.Forms.Form.AcceptButton%2A> Eigenschaft ist die Standardschaltfläche.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1310">The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateChildren">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1311">Validates all selectable child controls in the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1311">Validates all selectable child controls in the form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateChildren () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren();" />
      <MemberSignature Language="F#" Value="override this.ValidateChildren : unit -&gt; bool" Usage="form.ValidateChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1312">Causes all of the child controls within a control that support validation to validate their data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1312">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1313">
            <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1313">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-1314">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1314">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren" />
      </Docs>
    </Member>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren(valuetype System.Windows.Forms.ValidationConstraints validationConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren(System::Windows::Forms::ValidationConstraints validationConstraints);" />
      <MemberSignature Language="F#" Value="override this.ValidateChildren : System.Windows.Forms.ValidationConstraints -&gt; bool" Usage="form.ValidateChildren validationConstraints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationConstraints" Type="System.Windows.Forms.ValidationConstraints" />
      </Parameters>
      <Docs>
        <param name="validationConstraints">
          <span data-ttu-id="dc07a-1315">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1315">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1316">Causes all of the child controls within a control that support validation to validate their data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1316">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc07a-1317">
            <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1317">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dc07a-1318">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1318">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As FormWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormWindowState WindowState { System::Windows::Forms::FormWindowState get(); void set(System::Windows::Forms::FormWindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.Forms.FormWindowState with get, set" Usage="System.Windows.Forms.Form.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc07a-1319">Gets or sets a value that indicates whether form is minimized, maximized, or normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1319">Gets or sets a value that indicates whether form is minimized, maximized, or normal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc07a-1320">Ein <see cref="T:System.Windows.Forms.FormWindowState" />, der darstellt, ob ein Formular minimiert, maximiert oder normal ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1320">A <see cref="T:System.Windows.Forms.FormWindowState" /> that represents whether form is minimized, maximized, or normal.</span>
          </span>
          <span data-ttu-id="dc07a-1321">Die Standardeinstellung ist <see langword="FormWindowState.Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1321">The default is <see langword="FormWindowState.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc07a-1322">Bevor Sie ein Formular angezeigt wird, die <xref:System.Windows.Forms.Form.WindowState%2A> -Eigenschaftensatz ist immer auf `FormWindowState.Normal`, unabhängig von die ursprüngliche Einstellung.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1322">Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting.</span></span> <span data-ttu-id="dc07a-1323">Dies spiegelt wider, der <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, und <xref:System.Windows.Forms.Control.Width%2A> eigenschafteneinstellungen.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1323">This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings.</span></span> <span data-ttu-id="dc07a-1324">Wenn ein Formular ausgeblendet ist, nachdem es angezeigt wurde, diese Eigenschaften entsprechen den vorherigen Zustand erst das Formular erneut, unabhängig von der alle Änderungen angezeigt wird an der <xref:System.Windows.Forms.Form.WindowState%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1324">If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc07a-1325">Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Windows.Forms.Form.WindowState%2A> zu maximiert.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1325">The following code example demonstrates how to set the <xref:System.Windows.Forms.Form.WindowState%2A> to maximized.</span></span> <span data-ttu-id="dc07a-1326">Der Code aus aufgerufen wird die <xref:System.Windows.Forms.Form.Shown> Ereignishandler, nachdem das Formular erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="dc07a-1326">The code is called from the <xref:System.Windows.Forms.Form.Shown> event handler after the form has been created.</span></span>  
  
```csharp  
private void Form1_Shown(object sender, EventArgs e)  
        {  
            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  
        }  
```  
  
```vb  
Private  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  
            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="dc07a-1327">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1327">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormWindowState" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="form.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="dc07a-1328">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1328">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc07a-1329">Processes Windows messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc07a-1329">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>