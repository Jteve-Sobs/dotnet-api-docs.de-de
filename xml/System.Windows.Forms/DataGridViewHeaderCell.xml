<Type Name="DataGridViewHeaderCell" FullName="System.Windows.Forms.DataGridViewHeaderCell">
  <Metadata><Meta Name="ms.openlocfilehash" Value="126ff59b0f82ca5328bbc30d73ba3d6da9363919" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86654344" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewHeaderCell : System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewHeaderCell extends System.Windows.Forms.DataGridViewCell" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewHeaderCell" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewHeaderCell&#xA;Inherits DataGridViewCell" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewHeaderCell : System::Windows::Forms::DataGridViewCell" />
  <TypeSignature Language="F#" Value="type DataGridViewHeaderCell = class&#xA;    inherit DataGridViewCell" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCell</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1083c-101">Enthält die gemeinsame Funktionalität von Zeilenheaderzellen und Spaltenheaderzellen.</span><span class="sxs-lookup"><span data-stu-id="1083c-101">Contains functionality common to row header cells and column header cells.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-102">Diese Klasse ist eine Basisklasse für andere Header Zell Klassen, z <xref:System.Windows.Forms.DataGridViewRowHeaderCell> . b <xref:System.Windows.Forms.DataGridViewColumnHeaderCell> . und.</span><span class="sxs-lookup"><span data-stu-id="1083c-102">This class is a base class for other header cell classes, such as <xref:System.Windows.Forms.DataGridViewRowHeaderCell> and <xref:System.Windows.Forms.DataGridViewColumnHeaderCell>.</span></span> <span data-ttu-id="1083c-103">Wenn Sie benutzerdefinierte Zeilen Header Symbole oder Spaltenheader Symbole erstellen möchten, erben Sie von der <xref:System.Windows.Forms.DataGridViewHeaderCell> -Klasse, und fügen Sie Funktionen hinzu, um Ihr eigenes Symbol oder Symbol zu zeichnen.</span><span class="sxs-lookup"><span data-stu-id="1083c-103">To create custom row header icons or column header glyphs, inherit from the <xref:System.Windows.Forms.DataGridViewHeaderCell> class and add functionality to paint your own icon or glyph.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="1083c-104">Wenn Sie von ableiten <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> und der abgeleiteten Klasse neue Eigenschaften hinzufügen, stellen Sie sicher, dass Sie die- <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> Methode überschreiben, um die neuen Eigenschaften während des Klon Vorgangs zu kopieren.</span><span class="sxs-lookup"><span data-stu-id="1083c-104">When you derive from <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> and add new properties to the derived class, be sure to override the <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> method to copy the new properties during cloning operations.</span></span> <span data-ttu-id="1083c-105">Sie sollten auch die-Methode der Basisklasse aufzurufen <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> , damit die Eigenschaften der Basisklasse in die neue Zelle kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="1083c-105">You should also call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> method so that the properties of the base class are copied to the new cell.</span></span></para></block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
    <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewHeaderCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewHeaderCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1083c-106">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="1083c-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="ButtonState">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ButtonState ButtonState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ButtonState ButtonState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.ButtonState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ButtonState As ButtonState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ButtonState ButtonState { System::Windows::Forms::ButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.ButtonState : System.Windows.Forms.ButtonState" Usage="System.Windows.Forms.DataGridViewHeaderCell.ButtonState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1083c-107">Ruft den schaltflächenähnlichen visuellen Zustand der Headerzelle ab.</span><span class="sxs-lookup"><span data-stu-id="1083c-107">Gets the buttonlike visual state of the header cell.</span></span></summary>
        <value><span data-ttu-id="1083c-108">Einer der <see cref="T:System.Windows.Forms.ButtonState" />-Werte; der Standardwert ist <see cref="F:System.Windows.Forms.ButtonState.Normal" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-108">One of the <see cref="T:System.Windows.Forms.ButtonState" /> values; the default is <see cref="F:System.Windows.Forms.ButtonState.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-109">Ein <xref:System.Windows.Forms.DataGridViewHeaderCell> ist wie eine Schaltfläche, da darauf geklickt werden kann, um Zustände festzulegen, z. b. das Sortieren oder durchführen der Auswahl auf Zeilenebene.</span><span class="sxs-lookup"><span data-stu-id="1083c-109">A <xref:System.Windows.Forms.DataGridViewHeaderCell> is like a button in that it can be clicked to set states, such as sorting or performing row-level selection.</span></span> <span data-ttu-id="1083c-110">Die- <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> Eigenschaft verwendet <xref:System.Windows.Forms.ButtonState?displayProperty=nameWithType> Werte, um buttonlike-visuelle Zustände bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="1083c-110">The <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> property uses <xref:System.Windows.Forms.ButtonState?displayProperty=nameWithType> values to provide buttonlike visual states.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="dataGridViewHeaderCell.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1083c-111">Erstellt eine genaue Kopie dieser Zelle.</span><span class="sxs-lookup"><span data-stu-id="1083c-111">Creates an exact copy of this cell.</span></span></summary>
        <returns><span data-ttu-id="1083c-112">Ein <see cref="T:System.Object" />, das die geklonte <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="1083c-112">An <see cref="T:System.Object" /> that represents the cloned <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-113">Überschreiben <xref:System.Windows.Forms.DataGridViewHeaderCell.Clone%2A> Sie die-Methode immer dann, wenn Sie von ableiten <xref:System.Windows.Forms.DataGridViewHeaderCell> und der abgeleiteten Klasse neue Eigenschaften hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="1083c-113">Override the <xref:System.Windows.Forms.DataGridViewHeaderCell.Clone%2A> method whenever you derive from <xref:System.Windows.Forms.DataGridViewHeaderCell> and add new properties to the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1083c-114">Beim Überschreiben <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> in einer abgeleiteten Klasse wird die-Methode der Basisklasse aufgerufen, <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> sodass die Eigenschaften der Basisklasse in die neue Zelle kopiert werden. Außerdem müssen Sie die Werte aller Eigenschaften kopieren, die der abgeleiteten Klasse hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="1083c-114">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> in a derived class, call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.Clone" /> method so that the properties of the base class are copied to the new cell, and be sure to also copy the values of any properties that were added to the derived class.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Displayed">
      <MemberSignature Language="C#" Value="public override bool Displayed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Displayed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Displayed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Displayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Displayed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Displayed : bool" Usage="System.Windows.Forms.DataGridViewHeaderCell.Displayed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1083c-115">Ruft einen Wert ab, der angibt, ob die Zelle momentan auf dem Bildschirm angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="1083c-115">Gets a value that indicates whether the cell is currently displayed on-screen.</span></span></summary>
        <value><span data-ttu-id="1083c-116"><see langword="true" />, wenn die Zelle vollständig oder teilweise auf dem Bildschirm angezeigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-116"><see langword="true" /> if the cell is on-screen or partially on-screen; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Displayed" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dataGridViewHeaderCell.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1083c-117"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="1083c-117"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1083c-118">Gibt die von <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="1083c-118">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattedValueType">
      <MemberSignature Language="C#" Value="public override Type FormattedValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FormattedValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.FormattedValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FormattedValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FormattedValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormattedValueType : Type" Usage="System.Windows.Forms.DataGridViewHeaderCell.FormattedValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1083c-119">Ruft den Typ des formatierten Werts der Zelle ab.</span><span class="sxs-lookup"><span data-stu-id="1083c-119">Gets the type of the formatted value of the cell.</span></span></summary>
        <value><span data-ttu-id="1083c-120">Ein <see cref="T:System.Type" />-Objekt, das den <see cref="T:System.String" />-Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="1083c-120">A <see cref="T:System.Type" /> object representing the <see cref="T:System.String" /> type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-121">Die- <xref:System.Windows.Forms.DataGridViewCell.Value%2A> Eigenschaft ist das tatsächliche Datenobjekt, das in der Zelle enthalten ist, während die- <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> Eigenschaft die formatierte Darstellung der Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="1083c-121">The <xref:System.Windows.Forms.DataGridViewCell.Value%2A> property is the actual data object contained by the cell, whereas the <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> property is the formatted representation of the data.</span></span> <span data-ttu-id="1083c-122">Die <xref:System.Windows.Forms.DataGridViewHeaderCell.ValueType%2A> -Eigenschaft und die-Eigenschaft <xref:System.Windows.Forms.DataGridViewHeaderCell.FormattedValueType%2A> entsprechen den Datentypen dieser Werte.</span><span class="sxs-lookup"><span data-stu-id="1083c-122">The <xref:System.Windows.Forms.DataGridViewHeaderCell.ValueType%2A> and <xref:System.Windows.Forms.DataGridViewHeaderCell.FormattedValueType%2A> properties correspond to the data types of these values, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewHeaderCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
      </Docs>
    </Member>
    <Member MemberName="Frozen">
      <MemberSignature Language="C#" Value="public override bool Frozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Frozen" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Frozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frozen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Frozen : bool" Usage="System.Windows.Forms.DataGridViewHeaderCell.Frozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1083c-123">Ruft einen Wert ab, der angibt, ob die Zelle fixiert ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-123">Gets a value indicating whether the cell is frozen.</span></span></summary>
        <value><span data-ttu-id="1083c-124"><see langword="true" />, wenn die Zelle fixiert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-124"><see langword="true" /> if the cell is frozen; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1083c-125">Der Standardwert ist <see langword="false" />, wenn die Zelle von einer <see cref="T:System.Windows.Forms.DataGridView" /> abgetrennt ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-125">The default is <see langword="false" /> if the cell is detached from a <see cref="T:System.Windows.Forms.DataGridView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-126">Die- <xref:System.Windows.Forms.DataGridViewHeaderCell.Frozen%2A> Eigenschaft ist `true` , wenn die Zelle zu einer fixierten Zeile oder Spalte gehört, oder, wenn die Zelle die obere linke Header Zelle ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-126">The <xref:System.Windows.Forms.DataGridViewHeaderCell.Frozen%2A> property is `true` if the cell belongs to a frozen row or column, or if the cell is the top-left header cell.</span></span> <span data-ttu-id="1083c-127">Eine Zelle, Zeile oder Spalte wird eingefroren, wenn deren- <xref:System.Windows.Forms.DataGridViewElement.State%2A> Eigenschaft den Wert aufweist. <xref:System.Windows.Forms.DataGridViewElementStates.Frozen?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1083c-127">A cell, row, or column is frozen when its <xref:System.Windows.Forms.DataGridViewElement.State%2A> property has a value of <xref:System.Windows.Forms.DataGridViewElementStates.Frozen?displayProperty=nameWithType></span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewElement.State" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedContextMenuStrip">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Forms.ContextMenuStrip GetInheritedContextMenuStrip(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.GetInheritedContextMenuStrip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInheritedContextMenuStrip (rowIndex As Integer) As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Forms::ContextMenuStrip ^ GetInheritedContextMenuStrip(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.GetInheritedContextMenuStrip : int -&gt; System.Windows.Forms.ContextMenuStrip" Usage="dataGridViewHeaderCell.GetInheritedContextMenuStrip rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="1083c-128">Wird von dieser Implementierung ignoriert.</span><span class="sxs-lookup"><span data-stu-id="1083c-128">Ignored by this implementation.</span></span></param>
        <summary><span data-ttu-id="1083c-129">Ruft das Kontextmenü der Headerzelle ab.</span><span class="sxs-lookup"><span data-stu-id="1083c-129">Gets the shortcut menu of the header cell.</span></span></summary>
        <returns><span data-ttu-id="1083c-130">Ein <see cref="T:System.Windows.Forms.ContextMenuStrip" />, wenn <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> oder <see cref="T:System.Windows.Forms.DataGridView" /> ein Kontextmenü zugewiesen wurde, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-130">A <see cref="T:System.Windows.Forms.ContextMenuStrip" /> if the <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> or <see cref="T:System.Windows.Forms.DataGridView" /> has a shortcut menu assigned; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-131">Wenn das <xref:System.Windows.Forms.DataGridViewHeaderCell> kein Kontextmenü enthält, <xref:System.Windows.Forms.DataGridViewHeaderCell> erbt das Kontextmenü von <xref:System.Windows.Forms.DataGridView> .</span><span class="sxs-lookup"><span data-stu-id="1083c-131">If the <xref:System.Windows.Forms.DataGridViewHeaderCell> does not have a shortcut menu, the <xref:System.Windows.Forms.DataGridViewHeaderCell> will inherit the shortcut menu from the <xref:System.Windows.Forms.DataGridView>.</span></span> <span data-ttu-id="1083c-132">Wenn der <xref:System.Windows.Forms.DataGridView> auch nicht über ein Kontextmenü verfügt, gibt die <xref:System.Windows.Forms.DataGridViewHeaderCell.GetInheritedContextMenuStrip%2A> Methode zurück `null` .</span><span class="sxs-lookup"><span data-stu-id="1083c-132">If the <xref:System.Windows.Forms.DataGridView> also does not have a shortcut menu, then the <xref:System.Windows.Forms.DataGridViewHeaderCell.GetInheritedContextMenuStrip%2A> method will return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedState">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewElementStates GetInheritedState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetInheritedState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.GetInheritedState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInheritedState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Forms::DataGridViewElementStates GetInheritedState(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.GetInheritedState : int -&gt; System.Windows.Forms.DataGridViewElementStates" Usage="dataGridViewHeaderCell.GetInheritedState rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="1083c-133">Der Index der Zeile, die die Zelle enthält, oder -1, wenn es sich bei der Zelle um keine Zeilenheaderzelle handelt oder diese in keinem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-133">The index of the row containing the cell or -1 if the cell is not a row header cell or is not contained within a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span></param>
        <summary><span data-ttu-id="1083c-134">Gibt einen Wert zurück, der den aktuellen Zustand der Zelle angibt, der vom Zustand der entsprechenden Zeile bzw. Spalte geerbt wurde.</span><span class="sxs-lookup"><span data-stu-id="1083c-134">Returns a value indicating the current state of the cell as inherited from the state of its row or column.</span></span></summary>
        <returns><span data-ttu-id="1083c-135">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten, die den aktuellen Zustand der Zelle darstellen.</span><span class="sxs-lookup"><span data-stu-id="1083c-135">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values representing the current state of the cell.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1083c-136">Die Zelle ist eine Zeilenheaderzelle, die Zelle ist in keinem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement enthalten, und <paramref name="rowIndex" /> ist nicht -1.</span><span class="sxs-lookup"><span data-stu-id="1083c-136">The cell is a row header cell, the cell is not contained within a <see cref="T:System.Windows.Forms.DataGridView" /> control, and <paramref name="rowIndex" /> is not -1.</span></span>  
  
<span data-ttu-id="1083c-137">- oder -</span><span class="sxs-lookup"><span data-stu-id="1083c-137">-or-</span></span> 
<span data-ttu-id="1083c-138">Die Zelle ist eine Zeilenheaderzelle, die Zelle ist in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement enthalten, und <paramref name="rowIndex" /> liegt außerhalb des gültigen Bereichs (0 (null) bis zur Anzahl der Zeilen im Steuerelement minus 1).</span><span class="sxs-lookup"><span data-stu-id="1083c-138">The cell is a row header cell, the cell is contained within a <see cref="T:System.Windows.Forms.DataGridView" /> control, and <paramref name="rowIndex" /> is outside the valid range of 0 to the number of rows in the control minus 1.</span></span>  
  
<span data-ttu-id="1083c-139">- oder -</span><span class="sxs-lookup"><span data-stu-id="1083c-139">-or-</span></span> 
<span data-ttu-id="1083c-140">Die Zelle ist eine Zeilenheaderzelle, und <paramref name="rowIndex" /> ist nicht der Index der Zeile, die diese Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="1083c-140">The cell is a row header cell and <paramref name="rowIndex" /> is not the index of the row containing this cell.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1083c-141">Die Zelle ist eine Spaltenheaderzelle oder die <see cref="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell" /> des Steuerelements, und <paramref name="rowIndex" /> ist nicht -1.</span><span class="sxs-lookup"><span data-stu-id="1083c-141">The cell is a column header cell or the control's <see cref="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell" /> and <paramref name="rowIndex" /> is not -1.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
      </Docs>
    </Member>
    <Member MemberName="GetSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size GetSize (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size GetSize(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.GetSize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSize (rowIndex As Integer) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size GetSize(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.GetSize : int -&gt; System.Drawing.Size" Usage="dataGridViewHeaderCell.GetSize rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="1083c-142">Der Zeilenindex der Headerzelle.</span><span class="sxs-lookup"><span data-stu-id="1083c-142">The row index of the header cell.</span></span></param>
        <summary><span data-ttu-id="1083c-143">Ruft die Größe der Zelle ab.</span><span class="sxs-lookup"><span data-stu-id="1083c-143">Gets the size of the cell.</span></span></summary>
        <returns><span data-ttu-id="1083c-144">Eine <see cref="T:System.Drawing.Size" />, die die Größe der Headerzelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="1083c-144">A <see cref="T:System.Drawing.Size" /> that represents the size of the header cell.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-145">Die- <xref:System.Windows.Forms.DataGridViewHeaderCell.GetSize%2A> Methode gibt die Größe zurück, die erforderlich ist, um in eine Zeile von Spalten Headern zu passen, wenn die Header Zelle ein Spaltenheader ist, die Größe, die in eine Spalte mit Zeilen Headern passt, wenn die Header Zelle ein Zeilen Header ist, oder die erforderliche Größe, <xref:System.Windows.Forms.DataGridViewTopLeftHeaderCell> Wenn die Zelle eine obere linke Header Zelle ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-145">The <xref:System.Windows.Forms.DataGridViewHeaderCell.GetSize%2A> method returns the size necessary to fit in a row of column headers if the header cell is a column header, the size necessary to fit in a column of row headers if the header cell is a row header, or the size necessary to be a <xref:System.Windows.Forms.DataGridViewTopLeftHeaderCell> if the cell is a top left header cell.</span></span>  
  
 <span data-ttu-id="1083c-146">Wenn die Zelle nicht an einen angefügt ist <xref:System.Windows.Forms.DataGridView> , <xref:System.Windows.Forms.DataGridViewCell.Size%2A> gibt die-Eigenschaft von <xref:System.Windows.Forms.DataGridViewHeaderCell> den Wert (-1,-1) zurück.</span><span class="sxs-lookup"><span data-stu-id="1083c-146">If the cell is not attached to a <xref:System.Windows.Forms.DataGridView>, the <xref:System.Windows.Forms.DataGridViewCell.Size%2A> property of the <xref:System.Windows.Forms.DataGridViewHeaderCell> returns the value (-1,-1).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1083c-147">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />-Eigenschaft für diese Zelle ist <see langword="null" />, und <paramref name="rowIndex" /> ist ungleich -1.</span><span class="sxs-lookup"><span data-stu-id="1083c-147">The value of the <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> property for this cell is <see langword="null" /> and <paramref name="rowIndex" /> does not equal -1.</span></span>  
  
<span data-ttu-id="1083c-148">- oder -</span><span class="sxs-lookup"><span data-stu-id="1083c-148">-or-</span></span> 
<span data-ttu-id="1083c-149">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" />-Eigenschaft für diese Zelle ist nicht <see langword="null" />, und <paramref name="rowIndex" /> ist ungleich -1.</span><span class="sxs-lookup"><span data-stu-id="1083c-149">The value of the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" /> property for this cell is not <see langword="null" /> and <paramref name="rowIndex" /> does not equal -1.</span></span>  
  
<span data-ttu-id="1083c-150">- oder -</span><span class="sxs-lookup"><span data-stu-id="1083c-150">-or-</span></span> 
<span data-ttu-id="1083c-151">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" />-Eigenschaft für diese Zelle ist nicht <see langword="null" />, und <paramref name="rowIndex" /> ist kleiner als -1 oder größer oder gleich der Anzahl der Zeilen im Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="1083c-151">The value of the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> property for this cell is not <see langword="null" /> and <paramref name="rowIndex" /> is less than zero or greater than or equal to the number of rows in the control.</span></span>  
  
<span data-ttu-id="1083c-152">- oder -</span><span class="sxs-lookup"><span data-stu-id="1083c-152">-or-</span></span> 
<span data-ttu-id="1083c-153">Die Werte der <see cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" />-Eigenschaft und der <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" />-Eigenschaft für diese Zelle sind beide <see langword="null" />, und <paramref name="rowIndex" /> ist ungleich -1.</span><span class="sxs-lookup"><span data-stu-id="1083c-153">The values of the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningColumn" /> and <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> properties of this cell are both <see langword="null" /> and <paramref name="rowIndex" /> does not equal -1.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1083c-154">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" />-Eigenschaft für diese Zelle ist nicht <see langword="null" />, und <paramref name="rowIndex" /> gibt eine andere Zeile als <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> an.</span><span class="sxs-lookup"><span data-stu-id="1083c-154">The value of the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" /> property for this cell is not <see langword="null" /> and <paramref name="rowIndex" /> indicates a row other than the <see cref="P:System.Windows.Forms.DataGridViewCell.OwningRow" />.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected override object GetValue (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetValue(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetValue (rowIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetValue(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataGridViewHeaderCell.GetValue rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="1083c-155">Der Index der übergeordneten Zeile der Zelle.</span><span class="sxs-lookup"><span data-stu-id="1083c-155">The index of the cell's parent row.</span></span></param>
        <summary><span data-ttu-id="1083c-156">Ruft den Wert der Zelle ab.</span><span class="sxs-lookup"><span data-stu-id="1083c-156">Gets the value of the cell.</span></span></summary>
        <returns><span data-ttu-id="1083c-157">Der Wert der aktuellen <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-157">The value of the current <see cref="T:System.Windows.Forms.DataGridViewCell" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1083c-158"><paramref name="rowIndex" /> ist nicht -1.</span><span class="sxs-lookup"><span data-stu-id="1083c-158"><paramref name="rowIndex" /> is not -1.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="MouseDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseDownUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseDownUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseDownUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseDownUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.MouseDownUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewHeaderCell.MouseDownUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1083c-159">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das Informationen zur Position des Mauszeigers enthält.</span><span class="sxs-lookup"><span data-stu-id="1083c-159">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse position.</span></span></param>
        <summary><span data-ttu-id="1083c-160">Gibt an, ob die Freigabe einer Zeile aufgehoben wird, wenn die Maustaste gedrückt gehalten wird, während sich der Mauszeiger in einer Zelle der Zeile befindet.</span><span class="sxs-lookup"><span data-stu-id="1083c-160">Indicates whether a row will be unshared when the mouse button is held down while the pointer is on a cell in the row.</span></span></summary>
        <returns><span data-ttu-id="1083c-161"><see langword="true" /> wenn der Benutzer mit der linken Maustaste klickt, visuelle Stile aktiviert sind und die <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />-Eigenschaft <see langword="true" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-161"><see langword="true" /> if the user clicks with the left mouse button, visual styles are enabled, and the <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> property is <see langword="true" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-162">Weitere Informationen zum Aktivieren von visuellen Stilen finden Sie unter der- <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1083c-162">For information about enabling visual styles, see the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1083c-163"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseDownUnsharesRow%2A> wird direkt vor aufgerufen <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A> .</span><span class="sxs-lookup"><span data-stu-id="1083c-163"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseDownUnsharesRow%2A> is called just before <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A>.</span></span> <span data-ttu-id="1083c-164">Er muss zurückgeben `true` , wenn der-Aufrufwert die <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A> Freigabe der Zeile aufheben kann `rowIndex` .</span><span class="sxs-lookup"><span data-stu-id="1083c-164">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="1083c-165">Andernfalls sollte Sie zurückgeben `false` .</span><span class="sxs-lookup"><span data-stu-id="1083c-165">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="1083c-166">Weitere Informationen zur Zeilen Freigabe finden Sie unter [bewährte Methoden zum Skalieren des Windows Forms DataGridView-Steuer](/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control)Elements.</span><span class="sxs-lookup"><span data-stu-id="1083c-166">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <related type="Article" href="/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control"><span data-ttu-id="1083c-167">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</span><span class="sxs-lookup"><span data-stu-id="1083c-167">Best Practices for Scaling the Windows Forms DataGridView Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseEnterUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseEnterUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseEnterUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseEnterUnsharesRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.MouseEnterUnsharesRow : int -&gt; bool" Usage="dataGridViewHeaderCell.MouseEnterUnsharesRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="1083c-168">Der Index der Zeile, in deren Bereich der Mauszeiger eingetreten ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-168">The index of the row that the mouse pointer entered.</span></span></param>
        <summary><span data-ttu-id="1083c-169">Gibt an, ob die Freigabe einer Zeile aufgehoben wird, wenn der Mauszeiger über eine Zelle in der Zeile bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="1083c-169">Indicates whether a row will be unshared when the mouse pointer moves over a cell in the row.</span></span></summary>
        <returns><span data-ttu-id="1083c-170"><see langword="true" />, wenn visuelle Stile aktiviert sind und die <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />-Eigenschaft <see langword="true" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-170"><see langword="true" /> if visual styles are enabled, and the <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> property is <see langword="true" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-171">Weitere Informationen zum Aktivieren von visuellen Stilen finden Sie unter der- <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1083c-171">For information about enabling visual styles, see the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1083c-172"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow%2A> wird direkt vor aufgerufen <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A> .</span><span class="sxs-lookup"><span data-stu-id="1083c-172"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow%2A> is called just before <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A>.</span></span> <span data-ttu-id="1083c-173">Er muss zurückgeben `true` , wenn der-Aufrufwert die <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A> Freigabe der Zeile aufheben kann `rowIndex` .</span><span class="sxs-lookup"><span data-stu-id="1083c-173">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="1083c-174">Andernfalls sollte Sie zurückgeben `false` .</span><span class="sxs-lookup"><span data-stu-id="1083c-174">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="1083c-175">Weitere Informationen zur Zeilen Freigabe finden Sie unter [bewährte Methoden zum Skalieren des Windows Forms DataGridView-Steuer](/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control)Elements.</span><span class="sxs-lookup"><span data-stu-id="1083c-175">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1083c-176">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" /> in einer abgeleiteten Klasse sicher, dass die-Methode der Basisklasse aufgerufen wird, <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" /> damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="1083c-176">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" />
        <related type="Article" href="/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control"><span data-ttu-id="1083c-177">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</span><span class="sxs-lookup"><span data-stu-id="1083c-177">Best Practices for Scaling the Windows Forms DataGridView Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseLeaveUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseLeaveUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.MouseLeaveUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseLeaveUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseLeaveUnsharesRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.MouseLeaveUnsharesRow : int -&gt; bool" Usage="dataGridViewHeaderCell.MouseLeaveUnsharesRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="1083c-178">Der Index der Zeile, die der Mauszeiger verlassen hat.</span><span class="sxs-lookup"><span data-stu-id="1083c-178">The index of the row that the mouse pointer left.</span></span></param>
        <summary><span data-ttu-id="1083c-179">Gibt an, ob die Freigabe einer Zeile aufgehoben wird, wenn der Mauszeiger aus der Zeile heraus bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="1083c-179">Indicates whether a row will be unshared when the mouse pointer leaves the row.</span></span></summary>
        <returns><span data-ttu-id="1083c-180"><see langword="true" /> wenn der <see cref="P:System.Windows.Forms.DataGridViewHeaderCell.ButtonState" />-Eigenschaftswert nicht <see cref="F:System.Windows.Forms.ButtonState.Normal" /> ist, visuelle Stile aktiviert sind und die <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />-Eigenschaft <see langword="true" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-180"><see langword="true" /> if the <see cref="P:System.Windows.Forms.DataGridViewHeaderCell.ButtonState" /> property value is not <see cref="F:System.Windows.Forms.ButtonState.Normal" />, visual styles are enabled, and the <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> property is <see langword="true" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-181">Weitere Informationen zum Aktivieren von visuellen Stilen finden Sie unter der- <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1083c-181">For information about enabling visual styles, see the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1083c-182"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseLeaveUnsharesRow%2A> wird direkt vor aufgerufen <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A> .</span><span class="sxs-lookup"><span data-stu-id="1083c-182"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseLeaveUnsharesRow%2A> is called just before <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A>.</span></span> <span data-ttu-id="1083c-183">Er muss zurückgeben `true` , wenn der-Aufrufwert die <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A> Freigabe der Zeile aufheben kann `rowIndex` .</span><span class="sxs-lookup"><span data-stu-id="1083c-183">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="1083c-184">Andernfalls sollte Sie zurückgeben `false` .</span><span class="sxs-lookup"><span data-stu-id="1083c-184">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="1083c-185">Weitere Informationen zur Zeilen Freigabe finden Sie unter [bewährte Methoden zum Skalieren des Windows Forms DataGridView-Steuer](/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control)Elements.</span><span class="sxs-lookup"><span data-stu-id="1083c-185">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" />
        <related type="Article" href="/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control"><span data-ttu-id="1083c-186">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</span><span class="sxs-lookup"><span data-stu-id="1083c-186">Best Practices for Scaling the Windows Forms DataGridView Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MouseUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseUpUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseUpUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseUpUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseUpUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.MouseUpUnsharesRow : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; bool" Usage="dataGridViewHeaderCell.MouseUpUnsharesRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1083c-187">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das Informationen zur Position des Mauszeigers enthält.</span><span class="sxs-lookup"><span data-stu-id="1083c-187">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse position.</span></span></param>
        <summary><span data-ttu-id="1083c-188">Gibt an, ob die Freigabe einer Zeile aufgehoben wird, wenn die Maustaste losgelassen wird, während sich der Mauszeiger in einer Zelle der Zeile befindet.</span><span class="sxs-lookup"><span data-stu-id="1083c-188">Indicates whether a row will be unshared when the mouse button is released while the pointer is on a cell in the row.</span></span></summary>
        <returns><span data-ttu-id="1083c-189"><see langword="true" /> wenn die linke Maustaste losgelassen wurde, visuelle Stile aktiviert sind und die <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />-Eigenschaft <see langword="true" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-189"><see langword="true" /> if the left mouse button was released, visual styles are enabled, and the <see cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" /> property is <see langword="true" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-190">Weitere Informationen zum Aktivieren von visuellen Stilen finden Sie unter der- <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1083c-190">For information about enabling visual styles, see the <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1083c-191"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseUpUnsharesRow%2A> wird direkt vor aufgerufen <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A> .</span><span class="sxs-lookup"><span data-stu-id="1083c-191"><xref:System.Windows.Forms.DataGridViewHeaderCell.MouseUpUnsharesRow%2A> is called just before <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A>.</span></span> <span data-ttu-id="1083c-192">Er muss zurückgeben `true` , wenn der-Aufrufwert die <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A> Freigabe der Zeile aufheben kann `rowIndex` .</span><span class="sxs-lookup"><span data-stu-id="1083c-192">It must return `true` if the call to <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A> has the effect of unsharing the row `rowIndex`.</span></span> <span data-ttu-id="1083c-193">Andernfalls sollte Sie zurückgeben `false` .</span><span class="sxs-lookup"><span data-stu-id="1083c-193">It should return `false` otherwise.</span></span>  
  
 <span data-ttu-id="1083c-194">Weitere Informationen zur Zeilen Freigabe finden Sie unter [bewährte Methoden zum Skalieren des Windows Forms DataGridView-Steuer](/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control)Elements.</span><span class="sxs-lookup"><span data-stu-id="1083c-194">For more information about row sharing, see [Best Practices for Scaling the Windows Forms DataGridView Control](/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <related type="Article" href="/dotnet/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control"><span data-ttu-id="1083c-195">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</span><span class="sxs-lookup"><span data-stu-id="1083c-195">Best Practices for Scaling the Windows Forms DataGridView Control</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewHeaderCell.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1083c-196">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das Informationen zur Position des Mauszeigers enthält.</span><span class="sxs-lookup"><span data-stu-id="1083c-196">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse position.</span></span></param>
        <summary><span data-ttu-id="1083c-197">Wird aufgerufen, wenn die Maustaste gedrückt gehalten wird, während sich der Mauszeiger in einer Zelle befindet.</span><span class="sxs-lookup"><span data-stu-id="1083c-197">Called when the mouse button is held down while the pointer is on a cell.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-198">Die- <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A> Methode legt den <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> auf fest, <xref:System.Windows.Forms.ButtonState.Pushed> Wenn mit der linken Maustaste auf die Zelle geklickt wird und visuelle Stile für Header aktiviert sind.</span><span class="sxs-lookup"><span data-stu-id="1083c-198">The <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown%2A> method sets the <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> to <xref:System.Windows.Forms.ButtonState.Pushed> if the cell is clicked with the left mouse button and visual styles are enabled for headers.</span></span> <span data-ttu-id="1083c-199">Weitere Informationen zu visuellen Stilen für Header finden Sie unter der- <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1083c-199">For more information about visual styles for headers, see the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1083c-200">Diese Methode ähnelt der- <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1083c-200">This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1083c-201">Sie wird in denselben Situationen aufgerufen, in denen ein- <xref:System.Windows.Forms.DataGridView.CellMouseDown?displayProperty=nameWithType> Ereignis ausgelöst wird, aber das-Ereignis wird nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1083c-201">It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseDown?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1083c-202">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in einer abgeleiteten Klasse sicher, dass Sie die-Methode der Basisklasse aufzurufen <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> .</span><span class="sxs-lookup"><span data-stu-id="1083c-202">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> method.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseDown" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : int -&gt; unit" Usage="dataGridViewHeaderCell.OnMouseEnter rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="1083c-203">Der Index der Zeile, die die Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="1083c-203">The index of the row containing the cell.</span></span></param>
        <summary><span data-ttu-id="1083c-204">Wird aufgerufen, wenn der Mauszeiger in den Bereich der Zelle eintritt.</span><span class="sxs-lookup"><span data-stu-id="1083c-204">Called when the mouse pointer enters the cell.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-205">Die- <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A> Methode legt den <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> auf fest, <xref:System.Windows.Forms.ButtonState.Pushed> Wenn die linke Maustaste gedrückt wird, wenn der Zeiger in die Zelle gelangt und visuelle Stile für Header aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="1083c-205">The <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter%2A> method sets the <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> to <xref:System.Windows.Forms.ButtonState.Pushed> if the left mouse button is pressed when the pointer enters the cell and visual styles are enabled for headers.</span></span> <span data-ttu-id="1083c-206">Weitere Informationen zu visuellen Stilen für Header finden Sie unter der- <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1083c-206">For more information about visual styles for headers, see the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1083c-207">Diese Methode ähnelt der- <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1083c-207">This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1083c-208">Sie wird in denselben Situationen aufgerufen, in denen ein- <xref:System.Windows.Forms.DataGridView.CellMouseEnter?displayProperty=nameWithType> Ereignis ausgelöst wird, aber das-Ereignis wird nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1083c-208">It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseEnter?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1083c-209">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" /> in einer abgeleiteten Klasse sicher, dass Sie die-Methode der Basisklasse aufzurufen <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" /> .</span><span class="sxs-lookup"><span data-stu-id="1083c-209">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseEnter(System.Int32)" /> method.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseEnterUnsharesRow(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : int -&gt; unit" Usage="dataGridViewHeaderCell.OnMouseLeave rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="1083c-210">Der Index der Zeile, die die Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="1083c-210">The index of the row containing the cell.</span></span></param>
        <summary><span data-ttu-id="1083c-211">Wird aufgerufen, wenn der Mauszeiger den Bereich der Zelle verlässt.</span><span class="sxs-lookup"><span data-stu-id="1083c-211">Called when the mouse pointer leaves the cell.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-212">Die <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A> -Methode legt den <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> auf <xref:System.Windows.Forms.ButtonState.Normal> fest, wenn er sich in einem anderen Zustand befunden hat und visuelle Stile für Header aktiviert sind.</span><span class="sxs-lookup"><span data-stu-id="1083c-212">The <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave%2A> method sets the <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> to <xref:System.Windows.Forms.ButtonState.Normal> if it was in another state and visual styles are enabled for headers.</span></span> <span data-ttu-id="1083c-213">Weitere Informationen zu visuellen Stilen für Header finden Sie unter der- <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1083c-213">For more information about visual styles for headers, see the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1083c-214">Diese Methode ähnelt der- <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1083c-214">This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1083c-215">Sie wird in denselben Situationen aufgerufen, in denen ein- <xref:System.Windows.Forms.DataGridView.CellMouseLeave?displayProperty=nameWithType> Ereignis ausgelöst wird, aber das-Ereignis wird nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1083c-215">It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseLeave?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1083c-216">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" /> in einer abgeleiteten Klasse sicher, dass Sie die-Methode der Basisklasse aufzurufen <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" /> .</span><span class="sxs-lookup"><span data-stu-id="1083c-216">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseLeave(System.Int32)" /> method.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridViewHeaderCell.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1083c-217">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das Informationen zur Position des Mauszeigers enthält.</span><span class="sxs-lookup"><span data-stu-id="1083c-217">A <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" /> that contains information about the mouse position.</span></span></param>
        <summary><span data-ttu-id="1083c-218">Wird aufgerufen, wenn die Maustaste losgelassen wird, während sich der Mauszeiger über einer Zelle befindet.</span><span class="sxs-lookup"><span data-stu-id="1083c-218">Called when the mouse button is released while the pointer is over the cell.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-219">Die <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A> -Methode legt den <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> auf fest, <xref:System.Windows.Forms.ButtonState.Normal> Wenn die linke Maustaste losgelassen wurde und visuelle Stile für Header aktiviert sind.</span><span class="sxs-lookup"><span data-stu-id="1083c-219">The <xref:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp%2A> method sets the <xref:System.Windows.Forms.DataGridViewHeaderCell.ButtonState%2A> to <xref:System.Windows.Forms.ButtonState.Normal> if the left mouse button was released and visual styles are enabled for headers.</span></span> <span data-ttu-id="1083c-220">Weitere Informationen zu visuellen Stilen für Header finden Sie unter der- <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="1083c-220">For more information about visual styles for headers, see the <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1083c-221">Diese Methode ähnelt der- <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1083c-221">This method is similar to the <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1083c-222">Sie wird in denselben Situationen aufgerufen, in denen ein- <xref:System.Windows.Forms.DataGridView.CellMouseUp?displayProperty=nameWithType> Ereignis ausgelöst wird, aber das-Ereignis wird nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1083c-222">It is called in the same circumstances in which a <xref:System.Windows.Forms.DataGridView.CellMouseUp?displayProperty=nameWithType> event is raised, but it does not actually raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1083c-223">Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in einer abgeleiteten Klasse sicher, dass Sie die-Methode der Basisklasse aufzurufen <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> .</span><span class="sxs-lookup"><span data-stu-id="1083c-223">When overriding <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.DataGridViewHeaderCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> method.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.DataGridViewHeaderCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellMouseUp" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected override void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates dataGridViewElementState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates dataGridViewElementState, object value, object formattedValue, string errorText, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Paint (graphics As Graphics, clipBounds As Rectangle, cellBounds As Rectangle, rowIndex As Integer, dataGridViewElementState As DataGridViewElementStates, value As Object, formattedValue As Object, errorText As String, cellStyle As DataGridViewCellStyle, advancedBorderStyle As DataGridViewAdvancedBorderStyle, paintParts As DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates dataGridViewElementState, System::Object ^ value, System::Object ^ formattedValue, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="override this.Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * obj * obj * string * System.Windows.Forms.DataGridViewCellStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewHeaderCell.Paint (graphics, clipBounds, cellBounds, rowIndex, dataGridViewElementState, value, formattedValue, errorText, cellStyle, advancedBorderStyle, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataGridViewElementState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="1083c-224">Das <see cref="T:System.Drawing.Graphics" />, das zum Zeichnen der Zelle verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1083c-224">The <see cref="T:System.Drawing.Graphics" /> used to paint the cell.</span></span></param>
        <param name="clipBounds"><span data-ttu-id="1083c-225">Ein <see cref="T:System.Drawing.Rectangle" />, das die Fläche der erneut zu zeichnenden <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="1083c-225">A <see cref="T:System.Drawing.Rectangle" /> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView" /> that needs to be repainted.</span></span></param>
        <param name="cellBounds"><span data-ttu-id="1083c-226">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen der gezeichneten Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="1083c-226">A <see cref="T:System.Drawing.Rectangle" /> that contains the bounds of the cell that is being painted.</span></span></param>
        <param name="rowIndex"><span data-ttu-id="1083c-227">Der Zeilenindex der gezeichneten Zelle.</span><span class="sxs-lookup"><span data-stu-id="1083c-227">The row index of the cell that is being painted.</span></span></param>
        <param name="dataGridViewElementState"><span data-ttu-id="1083c-228">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten, die den Zustand der Zelle angibt.</span><span class="sxs-lookup"><span data-stu-id="1083c-228">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that specifies the state of the cell.</span></span></param>
        <param name="value"><span data-ttu-id="1083c-229">Die Daten der gezeichneten Zelle.</span><span class="sxs-lookup"><span data-stu-id="1083c-229">The data of the cell that is being painted.</span></span></param>
        <param name="formattedValue"><span data-ttu-id="1083c-230">Die formatierten Daten der Zelle, die gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="1083c-230">The formatted data of the cell that is being painted.</span></span></param>
        <param name="errorText"><span data-ttu-id="1083c-231">Eine Fehlermeldung, die der Zelle zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-231">An error message that is associated with the cell.</span></span></param>
        <param name="cellStyle"><span data-ttu-id="1083c-232">Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der Formatierungs- und Stilinformationen zur Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="1083c-232">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that contains formatting and style information about the cell.</span></span></param>
        <param name="advancedBorderStyle"><span data-ttu-id="1083c-233">Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> mit Rahmenarten für die Zelle, die gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="1083c-233">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that contains border styles for the cell that is being painted.</span></span></param>
        <param name="paintParts"><span data-ttu-id="1083c-234">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.DataGridViewPaintParts" />-Werte, die angibt, welche Teile der Zelle gezeichnet werden müssen.</span><span class="sxs-lookup"><span data-stu-id="1083c-234">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> values that specifies which parts of the cell need to be painted.</span></span></param>
        <summary><span data-ttu-id="1083c-235">Zeichnet die aktuelle <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-235">Paints the current <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public override bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridViewHeaderCell.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1083c-236">Ruft einen Wert ab, der angibt, ob die Headerzelle schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-236">Gets a value indicating whether the header cell is read-only.</span></span></summary>
        <value><span data-ttu-id="1083c-237"><see langword="true" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="1083c-237"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1083c-238">Ein Vorgang versucht, diese Eigenschaft festzulegen.</span><span class="sxs-lookup"><span data-stu-id="1083c-238">An operation tries to set this property.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public override bool Resizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Resizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Resizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Resizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Resizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Resizable : bool" Usage="System.Windows.Forms.DataGridViewHeaderCell.Resizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1083c-239">Ruft einen Wert ab, der angibt, ob die Größe der Zelle geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1083c-239">Gets a value indicating whether the cell is resizable.</span></span></summary>
        <value><span data-ttu-id="1083c-240"><see langword="true" />, wenn die Größe dieser Zelle geändert werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-240"><see langword="true" /> if this cell can be resized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1083c-241">Der Standardwert ist <see langword="false" />, wenn die Zelle nicht an eine <see cref="T:System.Windows.Forms.DataGridView" /> angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-241">The default is <see langword="false" /> if the cell is not attached to a <see cref="T:System.Windows.Forms.DataGridView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-242">Die Größe einer Zeilen Header Zelle kann geändert werden, wenn die Größe der Zeile geändert werden kann oder wenn die- <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> Eigenschaft auf festgelegt ist <xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing> .</span><span class="sxs-lookup"><span data-stu-id="1083c-242">A row header cell is resizable if the row is resizable or the <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> property is set to <xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing>.</span></span> <span data-ttu-id="1083c-243">Wenn die Größe der Spalte geändert werden kann oder die- <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> Eigenschaft auf festgelegt ist, kann die Größe einer Spaltenheader Zelle geändert werden <xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing> .</span><span class="sxs-lookup"><span data-stu-id="1083c-243">A column header cell is resizable if the column is resizable or the <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> property is set to <xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Windows.Forms.DataGridViewHeaderCell.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1083c-244">Ruft einen Wert ab, der angibt, ob die Zelle ausgewählt ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="1083c-244">Gets or sets a value indicating whether the cell is selected.</span></span></summary>
        <value><span data-ttu-id="1083c-245"><see langword="false" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="1083c-245"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-246">Diese Eigenschaft ist für Header Zellen nicht sinnvoll.</span><span class="sxs-lookup"><span data-stu-id="1083c-246">This property is not meaningful for header cells.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1083c-247">Die Eigenschaft wird festgelegt.</span><span class="sxs-lookup"><span data-stu-id="1083c-247">This property is being set.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewHeaderCell.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewHeaderCell.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1083c-248">Gibt eine Zeichenfolge zurück, die das aktuelle Objekt beschreibt.</span><span class="sxs-lookup"><span data-stu-id="1083c-248">Returns a string that describes the current object.</span></span></summary>
        <returns><span data-ttu-id="1083c-249">Eine Zeichenfolge, die das aktuelle Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="1083c-249">A string that represents the current object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type with get, set" Usage="System.Windows.Forms.DataGridViewHeaderCell.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1083c-250">Ruft den Typ des in der Zelle gespeicherten Werts ab.</span><span class="sxs-lookup"><span data-stu-id="1083c-250">Gets the type of the value stored in the cell.</span></span></summary>
        <value><span data-ttu-id="1083c-251">Ein <see cref="T:System.Type" />-Objekt, das den <see cref="T:System.String" />-Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="1083c-251">A <see cref="T:System.Type" /> object representing the <see cref="T:System.String" /> type.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewHeaderCell.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool" Usage="System.Windows.Forms.DataGridViewHeaderCell.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1083c-252">Ruft einen Wert ab, der angibt, ob die Zelle sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-252">Gets a value indicating whether or not the cell is visible.</span></span></summary>
        <value><span data-ttu-id="1083c-253"><see langword="true" />, wenn die Zelle sichtbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1083c-253"><see langword="true" /> if the cell is visible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1083c-254">Der Standardwert ist <see langword="false" />, wenn die Zelle von einer <see cref="T:System.Windows.Forms.DataGridView" /> abgetrennt ist.</span><span class="sxs-lookup"><span data-stu-id="1083c-254">The default is <see langword="false" /> if the cell is detached from a <see cref="T:System.Windows.Forms.DataGridView" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1083c-255">Wenn die Zelle eine Zeilen Header Zelle ist, wird Sie angezeigt, wenn die Zeile sichtbar ist und die- <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> Eigenschaft ist `true` .</span><span class="sxs-lookup"><span data-stu-id="1083c-255">If the cell is a row header cell, then it is visible if its row is visible and the <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> property is `true`.</span></span> <span data-ttu-id="1083c-256">Wenn die Zelle eine Spaltenheader Zelle ist, wird Sie angezeigt, wenn die zugehörige Spalte sichtbar und die- <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> Eigenschaft ist `true` .</span><span class="sxs-lookup"><span data-stu-id="1083c-256">If the cell is a column header cell, then it is visible if its column is visible and the <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> property is `true`.</span></span> <span data-ttu-id="1083c-257">Wenn die Zelle die obere linke Header Zelle ist, wird Sie angezeigt, wenn sowohl <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> als auch <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> true sind.</span><span class="sxs-lookup"><span data-stu-id="1083c-257">If the cell is the top left header cell, it is visible if both <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> and <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> are true.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewTopLeftHeaderCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      </Docs>
    </Member>
  </Members>
</Type>
