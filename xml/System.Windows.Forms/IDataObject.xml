<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataObject.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c4e7cff63d5b6c5e96d7cef0d617257a97de4598.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4e7cff63d5b6c5e96d7cef0d617257a97de4598</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Provides a format-independent mechanism for transferring data.</source>
          <target state="translated">Stellt ein formatunabhängiges Verfahren zur Übertragung von Daten bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>The <ph id="ph1">`IDataObject`</ph> interface is used by the <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class and in drag-and-drop operations.</source>
          <target state="translated">Die <ph id="ph1">`IDataObject`</ph> Schnittstelle wird verwendet, durch die <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> Klasse und Drag &amp; Drop-Operationen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>When implemented in a class, the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods allow the user to store data in multiple formats in an instance of the class.</source>
          <target state="translated">Beim Implementieren in einer Klasse, die <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> Methoden ermöglichen es den Benutzer zum Speichern von Daten in mehreren Formaten in einer Instanz der Klasse.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</source>
          <target state="translated">Speichern von Daten in mehrere Format erhöht die Wahrscheinlichkeit, dass eine Zielanwendung, dessen formatanforderungen, die Sie möglicherweise nicht bekannt, die gespeicherten Daten abrufen kann.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To store data in an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> method and specify the data format in the <ph id="ph3">`format`</ph> parameter.</source>
          <target state="translated">Zum Speichern von Daten in einer Instanz von <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, rufen Sie die <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> Methode, und geben Sie das Datenformat in der <ph id="ph3">`format`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> if you do not want stored data to be converted to another format when it is retrieved.</source>
          <target state="translated">Legen Sie die <ph id="ph1">`autoConvert`</ph> Parameter <ph id="ph2">`false`</ph> , wenn Sie nicht gespeicherte Daten in ein anderes Format konvertiert werden, beim abrufen möchten.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Invoke <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> multiple times on one instance of <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> to store data in more than one format.</source>
          <target state="translated">Aufrufen <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> mehrere Male auf einer Instanz von <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> zum Speichern von Daten in mehreren Formaten.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>You retrieve stored data from an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method and specifying the data format in the <ph id="ph3">`format`</ph> parameter.</source>
          <target state="translated">Rufen Sie gespeicherte Daten aus einer <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> durch Aufrufen der <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> -Methode und Angeben der Daten zu formatieren, der <ph id="ph3">`format`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to retrieve only data that was stored in the specified format.</source>
          <target state="translated">Legen Sie die <ph id="ph1">`autoConvert`</ph> Parameter <ph id="ph2">`false`</ph> nur Daten abgerufen, die im angegebenen Format gespeichert wurde.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To convert the stored data to the specified format, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use <ph id="ph3">`autoConvert`</ph>.</source>
          <target state="translated">Legen Sie zum Konvertieren der gespeicherten Daten in das angegebene Format <ph id="ph1">`autoConvert`</ph> auf <ph id="ph2">`true`</ph>, oder verwenden Sie keine <ph id="ph3">`autoConvert`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To determine the formats of the data stored in an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, use the following <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods.</source>
          <target state="translated">Um zu bestimmen, die Formate für die Daten aus einer <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, verwenden Sie die folgenden <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> method to retrieve an array of all the formats in which the data is available.</source>
          <target state="translated">Rufen Sie die <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> Methode, um ein Array abzurufen, der alle Formate in der die Daten verfügbar sind.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to get only the formats in which the data is stored.</source>
          <target state="translated">Legen Sie die <ph id="ph1">`autoConvert`</ph> Parameter <ph id="ph2">`false`</ph> abzurufenden nur die Formate, in dem die Daten gespeichert ist.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To get all the formats in which the data is available, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use this parameter.</source>
          <target state="translated">Um alle Formate erhalten, in dem die Daten verfügbar sind, legen Sie <ph id="ph1">`autoConvert`</ph> auf <ph id="ph2">`true`</ph>, oder verwenden Sie diesen Parameter nicht.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> method to determine whether stored data is available in a certain format.</source>
          <target state="translated">Rufen Sie die <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> Methode, um zu bestimmen, ob die gespeicherte Daten in einem bestimmten Format verfügbar ist.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>If you do not want stored data to be converted to the specified format, set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Wenn Sie nicht gespeicherte Daten in das angegebene Format konvertiert werden sollen, legen Sie die <ph id="ph1">`autoConvert`</ph> Parameter <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class for an implementation of this interface.</source>
          <target state="translated">Finden Sie unter der <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse für eine Implementierung dieser Schnittstelle.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> data formats.</source>
          <target state="translated">Finden Sie unter der <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> Klasse für die vordefinierten <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> Datenformate.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Retrieves the data associated with the specified data format.</source>
          <target state="translated">Ruft die Daten ab, die dem angegebenen Datenformat zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The format of the data to retrieve.</source>
          <target state="translated">Das Format der abzurufenden Daten.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Vordefinierte Formate finden Sie unter <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Retrieves the data associated with the specified data format.</source>
          <target state="translated">Ruft die Daten ab, die dem angegebenen Datenformat zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die dem angegebenen Format zugeordneten Daten oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">Wenn diese Methode die Daten im angegebenen Format nicht finden kann, versucht die Daten in das Format zu konvertieren.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Wenn die Daten in das angegebene Format konvertiert werden können, gibt diese Methode <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Um zu bestimmen, ob Daten zugeordnet ist, oder in ein Format konvertiert werden können, rufen <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> vor dem Aufruf <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> eine Liste der gültigen Formate für die in dieser Instanz gespeicherten Daten.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist und das angeforderte Format mit dem gespeicherten Format kompatibel ist.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Z. B. Daten gespeichert werden als Unicode-Text konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject,`</ph> to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject,`</ph> zum Veranschaulichen der Verwendung von der <ph id="ph3">`GetData`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The method is used to retrieve the data stored in <ph id="ph1">`myDataObject`</ph>, which is associated with the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Die Methode wird verwendet, um die in gespeicherten Daten abrufen <ph id="ph1">`myDataObject`</ph>, die zugeordnet ist die <ph id="ph2">`Text`</ph> Format.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph>.</source>
          <target state="translated">Im Beispiel wird davon ausgegangen, dass Sie bereits erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph> und ein <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> mit dem Namen <ph id="ph4">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format of the data to retrieve.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, das das Format der abzurufenden Daten darstellt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Vordefinierte Formate finden Sie unter <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Retrieves the data associated with the specified class type format.</source>
          <target state="translated">Ruft die Daten ab, die dem angegebenen Format für den Klassentyp zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die dem angegebenen Format zugeordneten Daten oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">Wenn diese Methode die Daten im angegebenen Format nicht finden kann, versucht die Daten in das Format zu konvertieren.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Wenn die Daten in das angegebene Format konvertiert werden können, gibt diese Methode <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Um zu bestimmen, ob Daten zugeordnet ist, oder in ein Format konvertiert werden können, rufen <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> vor dem Aufruf <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> eine Liste der gültigen Formate für die in dieser Instanz gespeicherten Daten.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist und das angeforderte Format mit dem gespeicherten Format kompatibel ist.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Z. B. Daten gespeichert werden als Unicode-Text konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`GetData`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The method is used to retrieve the data stored in <ph id="ph1">`myObject`</ph>, which is associated with a specific type, <ph id="ph2">`myType`</ph>.</source>
          <target state="translated">Die Methode wird verwendet, um die in gespeicherten Daten abrufen <ph id="ph1">`myObject`</ph>, einen bestimmten Typ zugeordnet ist <ph id="ph2">`myType`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The type of the retrieved data is displayed in a message box.</source>
          <target state="translated">Der Typ der abgerufenen Daten wird in einem Meldungsfeld angezeigt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Im Beispiel wird davon ausgegangen, dass Sie bereits erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The format of the data to retrieve.</source>
          <target state="translated">Das Format der abzurufenden Daten.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Vordefinierte Formate finden Sie unter <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to convert the data to the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Daten in das angegebene Format konvertiert werden sollen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</source>
          <target state="translated">Ruft die dem angegebenen Format zugeordneten Daten ab. Mit einem booleschen Wert wird dabei festgelegt, ob die Daten in das Format konvertiert werden sollen.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die dem angegebenen Format zugeordneten Daten oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">Wenn die <ph id="ph1">`autoConvert`</ph> Parameter ist <ph id="ph2">`true`</ph> und diese Methode kann nicht gefunden werden Daten im angegebenen Format, versucht wird, die Daten in das Format zu konvertieren.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the data cannot be converted to the specified format, or if the data was stored with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`false`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn die Daten in das angegebene Format konvertiert werden können, oder wenn die Daten mit gespeichert wurde die <ph id="ph1">`autoConvert`</ph> Parametersatz auf <ph id="ph2">`false`</ph>, gibt diese Methode <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, this method returns data in the specified format, or <ph id="ph3">`null`</ph> if no data in this format can be found.</source>
          <target state="translated">Wenn die <ph id="ph1">`autoConvert`</ph> Parameter ist <ph id="ph2">`false`</ph>, diese Methode gibt Daten zurück, in dem angegebenen Format oder <ph id="ph3">`null`</ph> Wenn keine Daten in dieses Format nicht gefunden werden können.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Um zu bestimmen, ob Daten zugeordnet ist, oder in ein Format konvertiert werden können, rufen <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> vor dem Aufruf <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> eine Liste der gültigen Formate für die in dieser Instanz gespeicherten Daten.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist und das angeforderte Format mit dem gespeicherten Format kompatibel ist.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Z. B. Daten gespeichert werden als Unicode-Text konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`GetData`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The example retrieves the data stored in a <ph id="ph1">`DataObject`</ph>, using the <ph id="ph2">`autoConvert`</ph> parameter to specify whether or not to convert the data format.</source>
          <target state="translated">Im Beispiel ruft die in gespeicherten Daten ab einem <ph id="ph1">`DataObject`</ph>unter Verwendung der <ph id="ph2">`autoConvert`</ph> Parameter an, ob das Datenformat konvertieren.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>First, <ph id="ph1">`myDataObject`</ph> is created with text data.</source>
          <target state="translated">Erstens <ph id="ph1">`myDataObject`</ph> mit Textdaten erstellt wird.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Then the example tries twice to retrieve the data.</source>
          <target state="translated">Das Beispiel versucht zweimal, um die Daten abzurufen.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>In the first trial, it specifies its format as a string and sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">In der ersten Testversion gibt es das Format als eine Zeichenfolge und legt die <ph id="ph1">`autoConvert`</ph> Parameter <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This trial fails, and the result is displayed in a message box labeled "Message #1."</source>
          <target state="translated">Dieser Versuch schlägt fehl, und das Ergebnis wird angezeigt, in einem Meldungsfeld mit der Bezeichnung "Meldung #1".</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>In the second trial, the example retrieves the same data with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">In der zweiten Test der, im Beispiel werden die gleichen Daten mit abgerufen der <ph id="ph1">`autoConvert`</ph> Parametersatz auf <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This trial succeeds, and the result is displayed in a message box labeled "Message #2."</source>
          <target state="translated">Diese Testversion ist erfolgreich, und das Ergebnis wird angezeigt, in einem Meldungsfeld mit der Bezeichnung "Meldung #2".</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Im Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Determines whether data stored in this instance is associated with the specified format.</source>
          <target state="translated">Bestimmt, ob den in dieser Instanz gespeicherten Daten das angegebene Format zugewiesen ist.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>The format for which to check.</source>
          <target state="translated">Das zu suchende Format.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Vordefinierte Formate finden Sie unter <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
          <target state="translated">Bestimmt, ob den in dieser Instanz gespeicherten Daten das angegebene Format zugewiesen ist bzw. sie in das Format konvertiert werden können.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn den in dieser Instanz gespeicherten Daten das angegebene Format zugeordnet ist oder sie in dieses Format konvertiert werden können, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Rufen Sie diese Methode, um zu bestimmen, ob ein Format vorhanden, in diesem ist <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> vor dem Aufruf <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> für die Formate, die in dieser Instanz verfügbar sind.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist und das angeforderte Format mit dem gespeicherten Format kompatibel ist.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Z. B. Daten gespeichert werden als Unicode-Text konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`GetDataPresent`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>First, it creates a data object using a string and the <ph id="ph1">`Text`</ph> format.</source>
          <target state="translated">Zuerst erstellt ein Objekt mit einer Zeichenfolge und der <ph id="ph1">`Text`</ph> Format.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Then it verifies that the data is present in the <ph id="ph1">`Text`</ph> format and displays the results in a message box.</source>
          <target state="translated">Und es wird überprüft, dass die Daten im ist die <ph id="ph1">`Text`</ph> formatieren und die Ergebnisse in einem Meldungsfeld angezeigt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Im Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format for which to check.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> stellt das Format dar, das gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Vordefinierte Formate finden Sie unter <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
          <target state="translated">Bestimmt, ob den in dieser Instanz gespeicherten Daten das angegebene Format zugewiesen ist bzw. sie in das Format konvertiert werden können.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn den in dieser Instanz gespeicherten Daten das angegebene Format zugewiesen ist bzw. sie in das Format konvertiert werden können, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Rufen Sie diese Methode, um zu bestimmen, ob ein Format vorhanden, in diesem ist <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> vor dem Aufruf <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> für die Formate, die in dieser Instanz verfügbar sind.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist und das angeforderte Format mit dem gespeicherten Format kompatibel ist.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Z. B. Daten gespeichert werden als Unicode-Text konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`GetDataPresent`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>).</source>
          <target state="translated">Zunächst wird eine Komponente erstellt (<ph id="ph1">`myComponent`</ph>) und speichert ihn in ein Datenobjekt (<ph id="ph2">`myDataObject`</ph>).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Then it checks whether the specified data is stored in <ph id="ph1">`myDataObject`</ph>.</source>
          <target state="translated">Anschließend wird geprüft, ob die angegebenen Daten, in gespeichert werden <ph id="ph1">`myDataObject`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>If the test evaluates <ph id="ph1">`true`</ph>, it displays the result in a message box and displays the data type in a text box.</source>
          <target state="translated">Wenn der Test ergibt <ph id="ph1">`true`</ph>, er das Ergebnis in einem Meldungsfeld wird angezeigt und zeigt den Datentyp in einem Textfeld.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>This example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph>.</source>
          <target state="translated">In diesem Beispiel wird davon ausgegangen, dass Sie bereits erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph> und ein <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> mit dem Namen <ph id="ph4">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The format for which to check.</source>
          <target state="translated">Das zu suchende Format.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Vordefinierte Formate finden Sie unter <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to determine whether data stored in this instance can be converted to the specified format; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to check whether the data is in the specified format.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um zu bestimmen, ob die in dieser Instanz gespeicherten Daten in das angegebene Format konvertiert werden können, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um zu prüfen, ob die Daten im angegebenen Format vorliegen.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</source>
          <target state="translated">Bestimmt, ob den in dieser Instanz gespeicherten Daten das angegebene Format zugewiesen ist. Ein boolescher Wert legt dabei fest, ob die Daten in das Format konvertiert werden sollen.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is in, or can be converted to, the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Daten das angegebene Format aufweisen oder in dieses konvertiert werden können, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Rufen Sie diese Methode, um zu bestimmen, ob ein Format vorhanden, in diesem ist <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> vor dem Aufruf <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> für die Formate, die in dieser Instanz verfügbar sind.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This method returns <ph id="ph1">`true`</ph> when:</source>
          <target state="translated">Diese Methode gibt <ph id="ph1">`true`</ph> wenn:</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and the data is in a format that can be converted to the appropriate format.</source>
          <target state="translated">Die <ph id="ph1">`autoConvert`</ph> Parameter ist <ph id="ph2">`true`</ph> und die Daten in einem Format, das in das entsprechende Format konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph> and the data is in the appropriate format.</source>
          <target state="translated">Die <ph id="ph1">`autoConvert`</ph> Parameter ist <ph id="ph2">`false`</ph> und die Daten im entsprechenden Format.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This method returns <ph id="ph1">`false`</ph> when:</source>
          <target state="translated">Diese Methode gibt <ph id="ph1">`false`</ph> wenn:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with <ph id="ph3">`autoConvert`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Die <ph id="ph1">`autoConvert`</ph> Parameter ist <ph id="ph2">`true`</ph> und diese Methode kann nicht gefunden werden Daten im angegebenen Format und in das angegebene Format konvertiert oder die Daten mit gespeichert wurde <ph id="ph3">`autoConvert`</ph> festgelegt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, and data does not exist in this instance in the specified format.</source>
          <target state="translated">Die <ph id="ph1">`autoConvert`</ph> Parameter ist <ph id="ph2">`false`</ph>, und Daten in dieser Instanz im angegebenen Format nicht vorhanden.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist und das angeforderte Format mit dem gespeicherten Format kompatibel ist.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Z. B. Daten gespeichert werden als Unicode-Text konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`GetDataPresent`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Zunächst erstellt er ein Datenobjekt (<ph id="ph1">`myDataObject`</ph>) mit einer Zeichenfolge und der <ph id="ph2">`Text`</ph> Format.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Then it queries the object for data associated with the <ph id="ph1">`Text`</ph> format, with the <ph id="ph2">`autoConvert`</ph> parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Anschließend es das Objekt für die zugeordneten Daten fragt der <ph id="ph1">`Text`</ph> Format, mit der <ph id="ph2">`autoConvert`</ph> Parametersatz auf <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This trial fails, and the result is displayed in a message box labeled "Message #1."</source>
          <target state="translated">Dieser Versuch schlägt fehl, und das Ergebnis wird angezeigt, in einem Meldungsfeld mit der Bezeichnung "Meldung #1".</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>In the second trial, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">In der zweiten Testversion wird die <ph id="ph1">`autoConvert`</ph> Parameter <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This trial succeeds, and the result is displayed in a message box labeled "Message #2."</source>
          <target state="translated">Diese Testversion ist erfolgreich, und das Ergebnis wird angezeigt, in einem Meldungsfeld mit der Bezeichnung "Meldung #2".</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Im Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</source>
          <target state="translated">Gibt eine Liste aller Formate zurück, die den in dieser Instanz gespeicherten Daten zugeordnet sind oder in die diese Daten konvertiert werden können.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</source>
          <target state="translated">Gibt eine Liste aller Formate zurück, die den in dieser Instanz gespeicherten Daten zugeordnet sind oder in die diese Daten konvertiert werden können.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
          <target state="translated">Ein Array mit Namen, das eine Liste aller Formate darstellt, die von den in diesem Objekt gespeicherten Daten unterstützt werden.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
          <target state="translated">Rufen Sie diese Methode zum Abrufen der unterstützten Datenformate vor dem Aufruf der <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
          <target state="translated">Finden Sie unter der <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> Klasse für die vordefinierten Formate.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist und das angeforderte Format mit dem gespeicherten Format kompatibel ist.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Z. B. Daten gespeichert werden als Unicode-Text konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetFormats`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`GetFormats`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Zunächst erstellt er ein Datenobjekt (<ph id="ph1">`myDataObject`</ph>) mit einer Zeichenfolge und der <ph id="ph2">`Text`</ph> Format.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</source>
          <target state="translated">Anschließend ruft alle Datenformate und Datenformate der Konvertierung in das Datenobjekt ab und zeigt die Ergebnisliste in einem Meldungsfeld an.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to retrieve all formats that data stored in this instance is associated with or can be converted to; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to retrieve only native data formats.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn alle Formate abgerufen werden sollen, die den in dieser Instanz gespeicherten Daten zugeordnet sind bzw. in die diese konvertiert werden können, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn nur systemeigene Datenformate abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</source>
          <target state="translated">Ruft eine Liste aller Formate ab, denen die in dieser Instanz gespeicherten Daten zugeordnet sind oder in die diese Daten konvertiert werden können. Dabei wird über einen booleschen Wert angegeben, ob auch Formate, in die die Daten konvertiert werden können, oder nur systemeigene Datenformate abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
          <target state="translated">Ein Array mit Namen, das eine Liste aller Formate darstellt, die von den in diesem Objekt gespeicherten Daten unterstützt werden.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
          <target state="translated">Rufen Sie diese Methode zum Abrufen der unterstützten Datenformate vor dem Aufruf der <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
          <target state="translated">Finden Sie unter der <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> Klasse für die vordefinierten Formate.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Daten können in ein anderes Format konvertiert werden, wenn es gespeichert wurde, gibt an, dass die Konvertierung zulässig ist und das angeforderte Format mit dem gespeicherten Format kompatibel ist.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Z. B. Daten gespeichert werden als Unicode-Text konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetFormats`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`GetFormats`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`UnicodeText`</ph> format.</source>
          <target state="translated">Zunächst erstellt er ein Datenobjekt (<ph id="ph1">`myDataObject`</ph>) mit einer Zeichenfolge und der <ph id="ph2">`UnicodeText`</ph> Format.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Then it makes two queries to get the formats associated with the data.</source>
          <target state="translated">Anschließend werden zwei Abfragen zum Abrufen der Formate, die den Daten zugeordnet.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In the first query, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> : in this case, only the native format of the data is returned.</source>
          <target state="translated">In der ersten Abfrage wird der <ph id="ph1">`autoConvert`</ph> Parameter <ph id="ph2">`false`</ph> : in diesem Fall wird nur das systemeigene Format der Daten zurückgegeben.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In the second query, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`true`</ph>, so that it gets the list of formats, including the formats that the data can be converted to.</source>
          <target state="translated">In der zweiten Abfrage wird der <ph id="ph1">`autoConvert`</ph> Parameter <ph id="ph2">`true`</ph>, sodass er ruft die Liste der Formate, einschließlich der Formate, die in die Daten konvertiert werden können.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In each case, the resulting list is displayed in a message box.</source>
          <target state="translated">In jedem Fall wird die resultierende Liste in einem Meldungsfeld angezeigt.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Stores the specified data and its associated format in this instance.</source>
          <target state="translated">Speichert die angegebenen Daten und das ihnen zugeordnete Format in dieser Instanz.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The data to store.</source>
          <target state="translated">Die zu speichernden Daten.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Stores the specified data in this instance, using the class of the data for the format.</source>
          <target state="translated">Speichert die angegebenen Daten in dieser Instanz, wobei die Klasse der Daten für das Format verwendet wird.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The format is derived from the data class.</source>
          <target state="translated">Das Format wird von der Klasse abgeleitet.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">Mit dieser Methode gespeicherte Daten können in einem kompatiblen Format konvertiert werden, beim Abrufen.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`SetData`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>).</source>
          <target state="translated">Zunächst wird eine Komponente erstellt (<ph id="ph1">`myComponent`</ph>) und speichert ihn in ein Datenobjekt (<ph id="ph2">`myDataObject`</ph>).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</source>
          <target state="translated">Anschließend wird überprüft, ob die angegebenen Daten in das Datenobjekt gespeichert, und das Ergebnis in einem Meldungsfeld wird angezeigt.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Im Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The format associated with the data.</source>
          <target state="translated">Das den Daten zugeordnete Format.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Vordefinierte Formate finden Sie unter <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The data to store.</source>
          <target state="translated">Die zu speichernden Daten.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Stores the specified data and its associated format in this instance.</source>
          <target state="translated">Speichert die angegebenen Daten und das ihnen zugeordnete Format in dieser Instanz.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">Wenn Sie nicht das Format der Zielanwendung kennen, können Sie Daten in verschiedenen Formaten, die mit dieser Methode speichern.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">Mit dieser Methode gespeicherte Daten können in einem kompatiblen Format konvertiert werden, beim Abrufen.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`SetData`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) and stores a string in the object specifying the <ph id="ph2">`UnicodeText`</ph> format.</source>
          <target state="translated">Zunächst erstellt er ein Datenobjekt (<ph id="ph1">`myDataObject`</ph>) und speichert eine Zeichenfolge im Objekt zur Angabe der <ph id="ph2">`UnicodeText`</ph> Format.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Then it retrieves that data stored in the object specifying the <ph id="ph1">`Text`</ph> format, so that the data is converted to the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Dann abgerufen, beim Angeben von Objekt gespeicherten Daten der <ph id="ph1">`Text`</ph> zu formatieren, damit die Daten konvertiert werden, um die <ph id="ph2">`Text`</ph> Format.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The result is displayed in a message box.</source>
          <target state="translated">Das Ergebnis wird in einem Meldungsfeld angezeigt.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format associated with the data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, der das den Daten zugeordnete Format darstellt.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Vordefinierte Formate finden Sie unter <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>The data to store.</source>
          <target state="translated">Die zu speichernden Daten.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Stores the specified data and its associated class type in this instance.</source>
          <target state="translated">Speichert die angegebenen Daten und den zugeordneten Klassentyp in dieser Instanz.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">Wenn Sie nicht das Format der Zielanwendung kennen, können Sie Daten in verschiedenen Formaten, die mit dieser Methode speichern.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">Mit dieser Methode gespeicherte Daten können in einem kompatiblen Format konvertiert werden, beim Abrufen.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`SetData`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>), using <ph id="ph3">`myType`</ph> to specify the data format.</source>
          <target state="translated">Zunächst wird eine Komponente erstellt (<ph id="ph1">`myComponent`</ph>) und speichert ihn in ein Datenobjekt (<ph id="ph2">`myDataObject`</ph>), wobei <ph id="ph3">`myType`</ph> Datenformat anzugeben.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</source>
          <target state="translated">Anschließend wird überprüft, ob die Daten des angegebenen Typs, die in dem Objekt gespeichert ist, und das Ergebnis in einem Meldungsfeld wird angezeigt.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Im Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The format associated with the data.</source>
          <target state="translated">Das den Daten zugeordnete Format.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Vordefinierte Formate finden Sie unter <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to allow the data to be converted to another format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um die Konvertierung der Daten in ein anderes Format zuzulassen, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The data to store.</source>
          <target state="translated">Die zu speichernden Daten.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</source>
          <target state="translated">Speichert die angegebenen Daten in dieser Instanz, wobei die Klasse der Daten für das Format verwendet wird. Dabei gibt ein boolescher Wert an, ob die Daten in ein anderes Format konvertiert werden können.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">Wenn Sie nicht das Format der Zielanwendung kennen, können Sie Daten in verschiedenen Formaten, die mit dieser Methode speichern.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Eine Implementierung dieser Methode finden Sie <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Dieses Beispiel verwendet die <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> Klasse <ph id="ph2">`IDataObject`</ph>, um zu veranschaulichen die Verwendung von der <ph id="ph3">`SetData`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) and stores a <ph id="ph2">`UnicodeText`</ph> string in it, with the <ph id="ph3">`autoConvert`</ph> parameter set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Zunächst erstellt er ein Datenobjekt (<ph id="ph1">`myDataObject`</ph>) und speichert eine <ph id="ph2">`UnicodeText`</ph> Zeichenfolge, mit der <ph id="ph3">`autoConvert`</ph> Parametersatz auf <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</source>
          <target state="translated">Klicken Sie dann die Formate abgerufen, die im Objekt gespeicherten Daten zugeordnet, und das Ergebnis in einem Meldungsfeld angezeigt wird.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The only format associated with the data is the <ph id="ph1">`UnicodeText`</ph> format.</source>
          <target state="translated">Das einzige Format, die den Daten zugeordnet ist die <ph id="ph1">`UnicodeText`</ph> Format.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">In diesem Beispiel wird davon ausgegangen, dass Sie erstellt haben eine <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> mit dem Namen <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>