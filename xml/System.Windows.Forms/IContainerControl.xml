<Type Name="IContainerControl" FullName="System.Windows.Forms.IContainerControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af0f24d36cc445e7d5191b13989d8866c4a4a111" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="82488960" /></Metadata><TypeSignature Language="C#" Value="public interface IContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContainerControl" />
  <TypeSignature Language="F#" Value="type IContainerControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Stellt Funktionen bereit, durch die ein Steuerelement als übergeordnetes Element für andere Steuerelemente agieren kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird von der <xref:System.Windows.Forms.ScrollableControl> -Klasse geerbt und die- <xref:System.Windows.Forms.IContainerControl> Schnittstelle implementiert. Die-Implementierung wird der <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> -Eigenschaft und der-Methode hinzugefügt <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> .  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Implementieren Sie diese Schnittstelle in Klassen, die Sie einer Auflistung von Steuerelementen übergeordnet werden möchten. Mithilfe der Member dieser Schnittstelle können Sie ein untergeordnetes Steuerelement aktivieren oder ermitteln, welches Steuerelement derzeit aktiv ist. Nimmt bei Implementierung in einer Klasse <see cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" /> einen <see cref="T:System.Windows.Forms.Control" /> als Parameter an und aktiviert das angegebene Steuerelement. Die- <see cref="P:System.Windows.Forms.IContainerControl.ActiveControl" /> Eigenschaft aktiviert oder ruft das aktive Steuerelement ab.  
  
In den meisten gängigen Szenarien müssen Sie diese Schnittstelle nicht direkt implementieren. Wenn Sie z. b. ein Windows-Steuerelement Bibliothek-Projekt erstellen, generiert Visual Studio eine anfängliche Klasse für Sie. Diese Klasse erbt von der <see cref="T:System.Windows.Forms.UserControl" /> -Klasse und <see cref="T:System.Windows.Forms.UserControl" /> implementiert <see cref="T:System.Windows.Forms.IContainerControl" /> für Sie.</para></block>
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.Windows.Forms.Control" />
  </Docs>
  <Members>
    <Member MemberName="ActivateControl">
      <MemberSignature Language="C#" Value="public bool ActivateControl (System.Windows.Forms.Control active);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ActivateControl(class System.Windows.Forms.Control active) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateControl (active As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ActivateControl(System::Windows::Forms::Control ^ active);" />
      <MemberSignature Language="F#" Value="abstract member ActivateControl : System.Windows.Forms.Control -&gt; bool" Usage="iContainerControl.ActivateControl active" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="active" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="active">Das derzeit aktivierte <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Aktiviert ein angegebenes Steuerelement.</summary>
        <returns><see langword="true" />, wenn das Steuerelement erfolgreich aktiviert wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird von der <xref:System.Windows.Forms.ScrollableControl> -Klasse geerbt und die- <xref:System.Windows.Forms.IContainerControl> Schnittstelle implementiert. Die-Implementierung wird der <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> -Eigenschaft und der-Methode hinzugefügt <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> .  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn diese Methode in einer Klasse implementiert wird, aktiviert Sie die angegebene <see cref="T:System.Windows.Forms.Control" /> . Das Steuerelement muss ein untergeordnetes Element des Container Steuer Elements sein.</para></block>
        <altmember cref="P:System.Windows.Forms.IContainerControl.ActiveControl" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="ActiveControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control ActiveControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control ActiveControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ ActiveControl { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveControl : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das aktive Steuerelement im Containersteuerelements ab oder legt dieses fest.</summary>
        <value>Das derzeit im Containersteuerelement aktive <see cref="T:System.Windows.Forms.Control" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird von der <xref:System.Windows.Forms.ScrollableControl> -Klasse geerbt und die- <xref:System.Windows.Forms.IContainerControl> Schnittstelle implementiert. Die-Implementierung wird der <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> -Eigenschaft und der-Methode hinzugefügt <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> .  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Bei Implementierung in einer Klasse aktiviert oder ruft diese Eigenschaft das aktive Steuerelement im Container Steuerelement ab oder ruft es ab.</para></block>
        <altmember cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>
