<Type Name="CheckedListBox+ObjectCollection" FullName="System.Windows.Forms.CheckedListBox+ObjectCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a512dd0a2ab4d5f298f25d8d1821e25f8aa34a2" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39890899" /></Metadata><TypeSignature Language="C#" Value="public class CheckedListBox.ObjectCollection : System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit CheckedListBox/ObjectCollection extends System.Windows.Forms.ListBox/ObjectCollection" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckedListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckedListBox.ObjectCollection&#xA;Inherits ListBox.ObjectCollection" />
  <TypeSignature Language="C++ CLI" Value="public: ref class CheckedListBox::ObjectCollection : System::Windows::Forms::ListBox::ObjectCollection" />
  <TypeSignature Language="F#" Value="type CheckedListBox.ObjectCollection = class&#xA;    inherit ListBox.ObjectCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListBox+ObjectCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Auflistung von Elementen in einem <see cref="T:System.Windows.Forms.CheckedListBox" /> dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Auflistung erfolgt vom übergeordneten Steuerelement, <xref:System.Windows.Forms.CheckedListBox>, von der <xref:System.Windows.Forms.CheckedListBox.Items%2A> Eigenschaft. Erstellen Sie eine Auflistung von Objekten für die Anzeige der <xref:System.Windows.Forms.CheckedListBox> -Steuerelement, können Sie hinzufügen oder entfernen Sie die Elemente einzeln mithilfe der <xref:System.Windows.Forms.CheckedListBox.ObjectCollection.Add%2A> und <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> Methoden.  
  
   
  
## Examples  
 Das folgende Beispiel listet die Elemente in der <xref:System.Windows.Forms.CheckedListBox> und überprüft jedes Element in der Liste. Im Beispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.CheckedListBox.Items%2A> -Eigenschaft zum Abrufen der <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> zum Abrufen der <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> von Elementen.  
  
 Das Beispiel zeigt auch die Verwendung der <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> und <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> Methoden, um den Aktivierungszustand eines Elements festzulegen. Für jedes Element, das überprüft werden soll, <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> wird aufgerufen, um das Festlegen der <xref:System.Windows.Forms.CheckState> zu `Indeterminate`, während <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> wird aufgerufen, für das andere Element auf den aktivierten Zustand festgelegt werden soll `Checked`.  
  
 [!code-cpp[CheckedListBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.CheckedListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.CheckedListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.#ctor(System.Windows.Forms.CheckedListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As CheckedListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::CheckedListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.CheckedListBox.ObjectCollection : System.Windows.Forms.CheckedListBox -&gt; System.Windows.Forms.CheckedListBox.ObjectCollection" Usage="new System.Windows.Forms.CheckedListBox.ObjectCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.CheckedListBox" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Windows.Forms.CheckedListBox" />, die die Auflistung besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Liste von Elementen für eine <see cref="T:System.Windows.Forms.CheckedListBox" /> ein Element hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item, bool isChecked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item, bool isChecked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object, isChecked As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item, bool isChecked);" />
      <MemberSignature Language="F#" Value="override this.Add : obj * bool -&gt; int" Usage="objectCollection.Add (item, isChecked)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="item">Ein Objekt, das das der Auflistung hinzuzufügende Element darstellt.</param>
        <param name="isChecked"><see langword="true" />, um das Element zu aktivieren, andernfalls <see langword="false" />.</param>
        <summary>Fügt der Liste von Elementen für eine <see cref="T:System.Windows.Forms.CheckedListBox" /> ein Element hinzu und gibt dabei das hinzuzufügende Objekt und dessen Aktivierungszustand an.</summary>
        <returns>Der Index des neu hinzugefügten Elements.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode fügt ein Element der Liste. Eine Liste wird das Element am Ende der vorhandenen Liste der Elemente hinzugefügt. Für ein sortiertes aktivierten Listenfeld wird das Element in die Liste gemäß seiner Sortierposition eingefügt. Ein `SystemException` tritt auf, wenn nicht genügend zum Speichern des neuen Elements zur Verfügung Speicherplatz.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Initialisieren einer <xref:System.Windows.Forms.CheckedListBox> Steuerelement durch Festlegen der <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, und <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> Eigenschaften. Im Beispiel füllt die <xref:System.Windows.Forms.CheckedListBox> mit Steuerelementen und legt die <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> auf die <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> -Eigenschaft des Steuerelements.  
  
 Um das Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular mit einer <xref:System.Windows.Forms.CheckedListBox> mit dem Namen CheckedListBox1 enthält, und rufen die `InitializeCheckListBox` Methode aus dem Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item, System.Windows.Forms.CheckState check);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item, valuetype System.Windows.Forms.CheckState check) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object, check As CheckState) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item, System::Windows::Forms::CheckState check);" />
      <MemberSignature Language="F#" Value="override this.Add : obj * System.Windows.Forms.CheckState -&gt; int" Usage="objectCollection.Add (item, check)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="check" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="item">Ein Objekt, das das der Auflistung hinzuzufügende Element darstellt.</param>
        <param name="check">Der anfängliche <see cref="T:System.Windows.Forms.CheckState" /> für den aktivierten Teil des Elements.</param>
        <summary>Fügt der Liste von Elementen für <see cref="T:System.Windows.Forms.CheckedListBox" /> ein Element hinzu und gibt so das hinzuzufügende Objekt und seinen anfänglichen Aktivierungswert an.</summary>
        <returns>Der Index des neu hinzugefügten Elements.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode fügt ein Element auf dem ausgewählten Listenfeld an. Für ein Listenfeld mit unsortierten Kontrollkästchen wird das Element am Ende der vorhandenen Liste der Elemente hinzugefügt. Für ein sortiertes aktivierten Listenfeld wird das Element in die Liste gemäß seiner Sortierposition eingefügt. Ein `SystemException` tritt auf, wenn nicht genügend zum Speichern des neuen Elements zur Verfügung Speicherplatz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="check" />-Parameter ist keiner der gültigen <see cref="T:System.Windows.Forms.CheckState" />-Werte.</exception>
      </Docs>
    </Member>
  </Members>
</Type>