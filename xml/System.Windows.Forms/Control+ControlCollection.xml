<Type Name="Control+ControlCollection" FullName="System.Windows.Forms.Control+ControlCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23574b81bf50c05dfa0451fe18ff996cba9c6b20" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65005917" /></Metadata><TypeSignature Language="C#" Value="public class Control.ControlCollection : System.Windows.Forms.Layout.ArrangedElementCollection, ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Control/ControlCollection extends System.Windows.Forms.Layout.ArrangedElementCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Control.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class Control.ControlCollection&#xA;Inherits ArrangedElementCollection&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Control::ControlCollection : System::Windows::Forms::Layout::ArrangedElementCollection, ICloneable, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type Control.ControlCollection = class&#xA;    inherit ArrangedElementCollection&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Layout.ArrangedElementCollection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCollectionCodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Auflistung von<see cref="T:System.Windows.Forms.Control" />-Objekten dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Windows.Forms.Control.ControlCollection.Add%2A>den <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>Methoden, <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> und können Sie einzelne Steuerelemente der Auflistung hinzufügen und daraus entfernen. Sie können auch die <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> -Methode oder <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> die-Methode verwenden, um alle Steuerelemente aus der Auflistung hinzuzufügen oder zu entfernen.  
  
 Sie können ermitteln, ob <xref:System.Windows.Forms.Control> ein ein Member der Auflistung ist, indem Sie das-Steuer <xref:System.Windows.Forms.Control.ControlCollection.Contains%2A> Element an die-Methode übergeben. Um den Indexwert der Position <xref:System.Windows.Forms.Control> eines in der Auflistung zu erhalten, übergeben Sie das-Steuerelement an die <xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> -Methode. Die Auflistung kann durch Aufrufen der <xref:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo%2A> -Methode in ein Array kopiert werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.Control> <xref:System.Windows.Forms.Control.ControlCollection> aus der der abgeleiteten Klasse <xref:System.Windows.Forms.Panel> entfernt, wenn Sie ein Member der Auflistung ist. Das Beispiel erfordert <xref:System.Windows.Forms.Panel>, dass Sie ein-, ein <xref:System.Windows.Forms.Button>-und mindestens ein <xref:System.Windows.Forms.RadioButton> -Steuerelement auf <xref:System.Windows.Forms.Form>einem erstellt haben. Die Steuer <xref:System.Windows.Forms.Panel> <xref:System.Windows.Forms.Panel> Elemente werden dem-Steuerelement hinzugefügt, und <xref:System.Windows.Forms.Form>das-Steuerelement, das der hinzugefügt wurde <xref:System.Windows.Forms.RadioButton> Wenn auf die Schaltfläche geklickt wird, wird das `radioButton2` Optionsfeld mit dem <xref:System.Windows.Forms.Control.ControlCollection>Namen aus der entfernt.  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Collections.IList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Windows.Forms.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Windows::Forms::Control ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control.ControlCollection : System.Windows.Forms.Control -&gt; System.Windows.Forms.Control.ControlCollection" Usage="new System.Windows.Forms.Control.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="owner">Ein <see cref="T:System.Windows.Forms.Control" />, das das Steuerelement darstellt, das die Steuerelementauflistung besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Control.ControlCollection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.Control -&gt; unit&#xA;override this.Add : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">Das der Steuerelementauflistung hinzuzufügende <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Fügt der Steuerelementauflistung das angegebene Steuerelement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> -Methode ermöglicht es Ihnen <xref:System.Windows.Forms.Control> ,-Objekte am Ende der Steuerelement Auflistung hinzuzufügen.  
  
 Sie können der Auflistung auch <xref:System.Windows.Forms.Control> neue Objekte hinzufügen, indem Sie <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> die-Methode verwenden.  
  
 Verwenden Sie zum <xref:System.Windows.Forms.Control> Entfernen eines, das Sie zuvor hinzu <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>gefügt haben, <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> die Methoden, <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>oder.  
  
> [!NOTE]
>  Ein <xref:System.Windows.Forms.Control> kann nur einzeln <xref:System.Windows.Forms.Control.ControlCollection> zugewiesen werden. Wenn das <xref:System.Windows.Forms.Control> bereits ein untergeordnetes Element eines anderen Steuer Elements ist, wird es aus dem Steuerelement entfernt, bevor es einem anderen Steuerelement hinzugefügt wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der <xref:System.Windows.Forms.Control> <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel>hinzugefügt. Das Beispiel erfordert, dass Sie ein <xref:System.Windows.Forms.Panel> -Steuerelement und ein <xref:System.Windows.Forms.Button> -Steuer <xref:System.Windows.Forms.Form>Element auf einem erstellt haben. Wenn auf die Schaltfläche geklickt wird <xref:System.Windows.Forms.TextBox> , wird dem <xref:System.Windows.Forms.Control.ControlCollection>Panel ein Steuerelement hinzugefügt.  
  
 [!code-cpp[ControlCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#2)]
 [!code-csharp[ControlCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#2)]
 [!code-vb[ControlCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Das angegebene Steuerelement ist ein Steuerelement der obersten Ebene. Andernfalls würde sich beim Hinzufügen dieses Steuerelements zur Steuerelementauflistung ein zirkulärer Verweis auf Steuerelemente ergeben.</exception>
        <exception cref="T:System.ArgumentException">Das dem <paramref name="value" />-Parameter zugewiesene Objekt ist kein <see cref="T:System.Windows.Forms.Control" />.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,umsicherzustellen,dassdasSteuerelementderAuflistunghinzugefügtwird.<see cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" /></para></block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.Control[] controls);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.Control[] controls) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (controls As Control())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::Control ^&gt; ^ controls);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.Control[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.Control[] -&gt; unit" Usage="controlCollection.AddRange controls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controls" Type="System.Windows.Forms.Control[]" />
      </Parameters>
      <Docs>
        <param name="controls">Ein Array von <see cref="T:System.Windows.Forms.Control" />-Objekten, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung ein Array von Steuerelementobjekten hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control> Die`controls` im Array enthaltenen Objekte werden an das Ende der Auflistung angefügt.  
  
 Sie <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> können die-Methode verwenden, um einer Auflistung schnell <xref:System.Windows.Forms.Control> eine Gruppe von Objekten hinzuzufügen, <xref:System.Windows.Forms.Control> anstatt Sie mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> -Methode manuell der Auflistung hinzuzufügen.  
  
 Verwenden Sie zum <xref:System.Windows.Forms.Control> Entfernen eines, das Sie zuvor hinzu <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A>gefügt haben, <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> die Methoden, <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A>oder.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden zwei <xref:System.Windows.Forms.Control> -Objekte der <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel>hinzugefügt. Das Beispiel erfordert, dass Sie ein <xref:System.Windows.Forms.Panel> -Steuerelement und ein <xref:System.Windows.Forms.Button> -Steuer <xref:System.Windows.Forms.Form>Element auf einem erstellt haben. Wenn auf die Schaltfläche geklickt wird <xref:System.Windows.Forms.RadioButton> , werden dem <xref:System.Windows.Forms.Control.ControlCollection>Panel zwei-Steuerelemente hinzugefügt.  
  
 [!code-cpp[ControlCollection#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#3)]
 [!code-csharp[ControlCollection#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#3)]
 [!code-vb[ControlCollection#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,umsicherzustellen,dassdieSteuerelementederAuflistunghinzugefügtwerden.<see cref="M:System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])" /></para></block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="controlCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Steuerelemente aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> -Methode verwenden, um die gesamte Auflistung von Steuerelementen aus einem übergeordneten Steuerelement zu entfernen.  
  
 Verwenden Sie die <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> -Methode oder <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> -Methode, um ein einzelnes Steuerelement aus der Auflistung zu entfernen.  
  
> [!IMPORTANT]
>  Durch den <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> Aufruf der-Methode werden keine Steuerungs Handles aus dem Arbeitsspeicher entfernt. Sie müssen die <xref:System.Windows.Forms.Control.Dispose%2A> -Methode explizit aufzurufen, um Speicher Verluste zu vermeiden.  
  
 Um der Auflistung <xref:System.Windows.Forms.Control> neue Objekte hinzuzufügen, verwenden Sie <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> die <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> -Methode oder die-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden alle <xref:System.Windows.Forms.Control> -Objekte in der <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel>entfernt. Das Beispiel erfordert, dass Sie ein <xref:System.Windows.Forms.Panel>-, ein <xref:System.Windows.Forms.Button>-und mindestens ein anderes-Steuerelement auf einem <xref:System.Windows.Forms.Form>erstellt haben. Die anderen-Steuerelemente werden dem <xref:System.Windows.Forms.Panel> -Steuerelement hinzu <xref:System.Windows.Forms.Panel> gefügt, und <xref:System.Windows.Forms.Form>das-Element wird hinzugefügt. Wenn auf die Schaltfläche geklickt wird, werden alle im Bereich enthaltenen Steuerelemente aus der <xref:System.Windows.Forms.Control.ControlCollection>entfernt.  
  
 [!code-cpp[ControlCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#1)]
 [!code-csharp[ControlCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#1)]
 [!code-vb[ControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,umsicherzustellen,dassalle-Steuerelementeausder-Auflistungentferntwerden.<see cref="M:System.Windows.Forms.Control.ControlCollection.Clear" /></para></block>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.Control -&gt; bool" Usage="controlCollection.Contains control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Die <see cref="T:System.Windows.Forms.Control" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob das angegebene Steuerelement ein Member der Auflistung ist.</summary>
        <returns><see langword="true" />, wenn das <see cref="T:System.Windows.Forms.Control" /> ein Member der Auflistung ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie bestimmen, ob <xref:System.Windows.Forms.Control> ein ein Member der Auflistung ist, bevor Sie versuchen, Vorgänge <xref:System.Windows.Forms.Control>für auszuführen. Mit dieser Methode können Sie überprüfen, ob <xref:System.Windows.Forms.Control> eine hinzugefügt wurde oder noch ein Member der Auflistung ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.Control> <xref:System.Windows.Forms.Control.ControlCollection> aus der der abgeleiteten Klasse <xref:System.Windows.Forms.Panel> entfernt, wenn Sie ein Member der Auflistung ist. Das Beispiel erfordert <xref:System.Windows.Forms.Panel>, dass Sie ein-, ein <xref:System.Windows.Forms.Button>-und mindestens ein <xref:System.Windows.Forms.RadioButton> -Steuerelement auf <xref:System.Windows.Forms.Form>einem erstellt haben. Die Steuer <xref:System.Windows.Forms.Panel> <xref:System.Windows.Forms.Panel> Elemente werden dem-Steuerelement hinzugefügt, und <xref:System.Windows.Forms.Form>das-Steuerelement, das der hinzugefügt wurde <xref:System.Windows.Forms.RadioButton> Wenn auf die Schaltfläche geklickt wird, wird das `removeButton` Optionsfeld mit dem <xref:System.Windows.Forms.Control.ControlCollection>Namen aus der entfernt.  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="controlCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der im <see cref="T:System.Windows.Forms.Control.ControlCollection" /> zu suchende Schlüssel.</param>
        <summary>Ermittelt, ob die <see cref="T:System.Windows.Forms.Control.ControlCollection" /> ein Element mit dem angegebenen Schlüssel enthält.</summary>
        <returns><see langword="true" />, wenn die <see cref="T:System.Windows.Forms.Control.ControlCollection" /> ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> -Eigenschaft <xref:System.Windows.Forms.Control> eines entspricht dem Schlüssel für eine <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="controlCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dest">Das eindimensionales Array, bei dem es sich um das Ziel der aus der Auflistung kopierten Elemente handelt. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="index">Der nullbasierte Index im <paramref name="dest" />, an dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die Elemente der Auflistung in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.Control.ControlCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Die Anzahl der Elemente in der Auflistung.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="controlCollection.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Gibt an, ob das aktuelle Auflistungsobjekt und das angegebene Objekt gleich sind.</summary>
        <returns><see langword="true" />, wenn diese Instanz und <paramref name="other" /> identisch sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllChildren As Boolean) As Control()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::Control ^&gt; ^ Find(System::String ^ key, bool searchAllChildren);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.Control[]" Usage="controlCollection.Find (key, searchAllChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der im <see cref="T:System.Windows.Forms.Control.ControlCollection" /> zu suchende Schlüssel.</param>
        <param name="searchAllChildren"><see langword="true" />, um alle untergeordneten Steuerelemente zu suchen, andernfalls <see langword="false" />.</param>
        <summary>Sucht nach Steuerelementen anhand ihrer <see cref="P:System.Windows.Forms.Control.Name" />-Eigenschaft und erstellt ein Array aller übereinstimmenden Steuerelemente.</summary>
        <returns>Ein Array vom Typ <see cref="T:System.Windows.Forms.Control" />, das die übereinstimmenden Steuerelemente enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="key" /> ist <see langword="null" /> oder die leere Zeichenfolge ("").</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildIndex">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft den Index eines Steuerelements in der Steuerelementauflistung ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public int GetChildIndex (System.Windows.Forms.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetChildIndex(class System.Windows.Forms.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildIndex (child As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetChildIndex(System::Windows::Forms::Control ^ child);" />
      <MemberSignature Language="F#" Value="member this.GetChildIndex : System.Windows.Forms.Control -&gt; int" Usage="controlCollection.GetChildIndex child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="child">Das <see cref="T:System.Windows.Forms.Control" />, das in der Steuerelementauflistung gesucht werden soll.</param>
        <summary>Ruft den Index des angegebenen untergeordneten Steuerelements in der Steuerelementauflistung ab.</summary>
        <returns>Ein nullbasierter Indexwert, der die Position des angegebenen untergeordneten Steuerelements in der Steuerelementauflistung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Steuerelement mit einem Indexwert von 0 (null) befindet sich am Anfang der z-Reihenfolge, und höhere Zahlen sind näher am unteren Rand.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das <paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> ist nicht in der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> enthalten.</exception>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
      </Docs>
    </Member>
    <Member MemberName="GetChildIndex">
      <MemberSignature Language="C#" Value="public virtual int GetChildIndex (System.Windows.Forms.Control child, bool throwException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildIndex(class System.Windows.Forms.Control child, bool throwException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildIndex (child As Control, throwException As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildIndex(System::Windows::Forms::Control ^ child, bool throwException);" />
      <MemberSignature Language="F#" Value="abstract member GetChildIndex : System.Windows.Forms.Control * bool -&gt; int&#xA;override this.GetChildIndex : System.Windows.Forms.Control * bool -&gt; int" Usage="controlCollection.GetChildIndex (child, throwException)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="throwException" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="child">Das <see cref="T:System.Windows.Forms.Control" />, das in der Steuerelementauflistung gesucht werden soll.</param>
        <param name="throwException"><see langword="true" />, um eine Ausnahme auszulösen, wenn das im <paramref name="child" />-Parameter angegebene <see cref="T:System.Windows.Forms.Control" /> kein Steuerelement in der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> ist, andernfalls <see langword="false" />.</param>
        <summary>Ruft den Index des angegebenen untergeordneten Steuerelements in der Steuerelementauflistung ab und löst optional eine Ausnahme aus, wenn das angegebene Steuerelement nicht in der Steuerelementauflistung enthalten ist.</summary>
        <returns>Ein nullbasierter Indexwert, der den Speicherort des angegebenen untergeordneten Steuerelements in der Steuerelementauflistung darstellt, andernfalls -1, wenn das angegebene <see cref="T:System.Windows.Forms.Control" /> nicht in der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Steuerelement mit einem Indexwert von 0 (null) befindet sich am Anfang der z-Reihenfolge, und höhere Zahlen sind näher am unteren Rand. Der Rückgabewert-1 wird nur zurückgegeben, wenn `throwException` der- `false`Parameter ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das <paramref name="child" /><see cref="T:System.Windows.Forms.Control" /> ist nicht in der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> enthalten, und der <paramref name="throwException" />-Parameterwert ist <see langword="true" />.</exception>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="controlCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen Verweis auf ein Enumeratorobjekt ab, das zum Durchlaufen einer <see cref="T:System.Windows.Forms.Control.ControlCollection" /> verwendet wird.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerator" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="controlCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
        <returns>Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.Control -&gt; int" Usage="controlCollection.IndexOf control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Die <see cref="T:System.Windows.Forms.Control" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Ruft den Index des angegebenen Steuerelements in der Steuerelementauflistung ab.</summary>
        <returns>Ein nullbasierter Indexwert, der die Position des angegebenen <see cref="T:System.Windows.Forms.Control" /> in der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Steuerelement nicht in der Auflistung gefunden wird, <xref:System.Windows.Forms.Control.ControlCollection.IndexOf%2A> ist der Rückgabewert der Methode-1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="controlCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu suchenden Steuerelements.</param>
        <summary>Ruft den Index des ersten Vorkommens des angegebenen Elements innerhalb der Auflistung ab.</summary>
        <returns>Der nullbasierte Index des ersten Vorkommens des Steuerelements mit dem angegebenen Namen in der Auflistung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> nacheinander aufgerufen wird, wird der zuletzt zurückgegebene Index zuerst auf eine Schlüssel Übereinstimmung geprüft. wenn keine Entsprechung vorhanden ist, beginnt die Suche am Anfang der Auflistung.  
  
 Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet. Wenn der `key` - `null` Parameter oder eine leere Zeichenfolge oder ein Element mit dem angegebenen Schlüssel nicht gefunden wird, <xref:System.Windows.Forms.Control.ControlCollection.IndexOfKey%2A> wird-1 zurückgegeben.  
  
 Die <xref:System.Windows.Forms.Control.Name%2A> -Eigenschaft <xref:System.Windows.Forms.Control> eines entspricht dem Schlüssel für eine <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.Control.ControlCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses Auflistungsobjekt schreibgeschützt ist.</summary>
        <value><see langref="true" />, wenn die aktuelle Instanz schreibgeschützt ist. <see langref="false" />andernfalls.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt ein <see cref="T:System.Windows.Forms.Control" /> in der Auflistung an.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ default[int] { System::Windows::Forms::Control ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Steuerelements, das aus der Steuerelementauflistung abgerufen werden soll.</param>
        <summary>Gibt das <see cref="T:System.Windows.Forms.Control" /> an der angegebenen indizierten Position in der Auflistung an.</summary>
        <value>Das <see cref="T:System.Windows.Forms.Control" />, das sich an der angegebenen Indexposition in der Steuerelementauflistung befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Abrufen eines <xref:System.Windows.Forms.Control> aus der <xref:System.Windows.Forms.Control.ControlCollection>verweisen Sie auf das Auflistungs Objekt mit einem bestimmten Indexwert. Der Indexwert von <xref:System.Windows.Forms.Control.ControlCollection> ist ein NULL basierter Index.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Wert ist kleiner als 0 bzw. größer als oder gleich der Anzahl der Steuerelemente in der Auflistung.</exception>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ default[System::String ^] { System::Windows::Forms::Control ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Steuerelements, das aus der Steuerelementauflistung abgerufen werden soll.</param>
        <summary>Gibt ein <see cref="T:System.Windows.Forms.Control" /> mit dem angegebenen Schlüssel in der Auflistung an.</summary>
        <value>Das <see cref="T:System.Windows.Forms.Control" /> mit dem angegebenen Schlüssel innerhalb der <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> -Eigenschaft <xref:System.Windows.Forms.Control> eines entspricht dem Schlüssel für eine <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ControlCollection.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Owner { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.ControlCollection.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Steuerelement ab, das diese <see cref="T:System.Windows.Forms.Control.ControlCollection" /> besitzt.</summary>
        <value>Das <see cref="T:System.Windows.Forms.Control" />, das diese <see cref="T:System.Windows.Forms.Control.ControlCollection" /> besitzt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.Control -&gt; unit&#xA;override this.Remove : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">Der <see cref="T:System.Windows.Forms.Control" />, der aus der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> entfernt werden soll.</param>
        <summary>Entfernt das angegebene Steuerelement aus der Steuerelementauflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein <xref:System.Windows.Forms.Control> aus der Steuerelement Auflistung entfernt wird, werden alle nachfolgenden Steuerelemente an einer Position in der Auflistung nach oben verschoben.  
  
 Mithilfe der <xref:System.Windows.Forms.Control> <xref:System.Windows.Forms.Control.ControlCollection.RemoveAt%2A> -Methode können Sie auch einen entfernen oder alle-Steuerelemente mithilfe der <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> -Methode entfernen.  
  
 Um der Auflistung <xref:System.Windows.Forms.Control> neue Objekte hinzuzufügen, verwenden Sie <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> die <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> -Methode oder die-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Windows.Forms.Control> <xref:System.Windows.Forms.Control.ControlCollection> aus der der abgeleiteten Klasse <xref:System.Windows.Forms.Panel> entfernt, wenn Sie ein Member der Auflistung ist. Das Beispiel erfordert <xref:System.Windows.Forms.Panel>, dass Sie ein-, ein <xref:System.Windows.Forms.Button>-und ein oder mehrere <xref:System.Windows.Forms.RadioButton> -Steuerelemente auf einem <xref:System.Windows.Forms.Form>erstellt haben. Die <xref:System.Windows.Forms.RadioButton> - <xref:System.Windows.Forms.Panel> Steuerelemente werden dem-Steuerelement hinzu <xref:System.Windows.Forms.Panel> gefügt, und das- <xref:System.Windows.Forms.Form>Steuerelement wird hinzugefügt. Wenn auf die Schaltfläche geklickt wird, wird das `radioButton2` Optionsfeld mit dem <xref:System.Windows.Forms.Control.ControlCollection>Namen aus der entfernt.  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,umsicherzustellen,dassdasSteuerelementausderAuflistungentferntwird.<see cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" /></para></block>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="controlCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Indexwert des zu entfernenden <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Entfernt ein Steuerelement an der angegebenen indizierten Position aus der Steuerelementauflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein <xref:System.Windows.Forms.Control> aus der Steuerelement Auflistung entfernt wird, werden alle nachfolgenden Steuerelemente an einer Position in der Auflistung nach oben verschoben.  
  
 Sie können auch eine <xref:System.Windows.Forms.Control> entfernen, die Sie zuvor mit der-Methode oder <xref:System.Windows.Forms.Control.ControlCollection.Clear%2A> der <xref:System.Windows.Forms.Control.ControlCollection.Remove%2A> -Methode hinzugefügt haben.  
  
 Um der Auflistung <xref:System.Windows.Forms.Control> neue Objekte hinzuzufügen, verwenden Sie <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> die <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A> -Methode oder die-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die erste <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection> der abgeleiteten Klasse <xref:System.Windows.Forms.Panel> entfernt, wenn die Anzahl der Auflistung größer als 0 (null) ist. Das Beispiel erfordert, dass Sie ein <xref:System.Windows.Forms.Panel>-, ein <xref:System.Windows.Forms.Button>-und mindestens ein anderes-Steuerelement auf einem <xref:System.Windows.Forms.Form>erstellt haben. Die anderen Steuerelemente werden dem <xref:System.Windows.Forms.Panel> -Steuerelement hinzugefügt, und das <xref:System.Windows.Forms.Panel> - <xref:System.Windows.Forms.Form>Steuerelement, das hinzugefügt wurde. Wenn auf die Schaltfläche geklickt wird, wird das erste Steuerelement, das im Bereich <xref:System.Windows.Forms.Control.ControlCollection>enthalten ist, aus dem entfernt.  
  
 [!code-cpp[ControlCollection#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#5)]
 [!code-csharp[ControlCollection#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#5)]
 [!code-vb[ControlCollection#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="controlCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu entfernenden untergeordneten Steuerelements.</param>
        <summary>Entfernt das untergeordnete Steuerelement mit dem angegebenen Schlüssel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Name%2A> -Eigenschaft <xref:System.Windows.Forms.Control> eines entspricht dem Schlüssel für eine <xref:System.Windows.Forms.Control> in der <xref:System.Windows.Forms.Control.ControlCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildIndex">
      <MemberSignature Language="C#" Value="public virtual void SetChildIndex (System.Windows.Forms.Control child, int newIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildIndex(class System.Windows.Forms.Control child, int32 newIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.SetChildIndex(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetChildIndex (child As Control, newIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetChildIndex(System::Windows::Forms::Control ^ child, int newIndex);" />
      <MemberSignature Language="F#" Value="abstract member SetChildIndex : System.Windows.Forms.Control * int -&gt; unit&#xA;override this.SetChildIndex : System.Windows.Forms.Control * int -&gt; unit" Usage="controlCollection.SetChildIndex (child, newIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="newIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">Das zu suchende <paramref name="child" /><see cref="T:System.Windows.Forms.Control" />.</param>
        <param name="newIndex">Der neue Indexwert des Steuerelements.</param>
        <summary>Legt den Index des angegebenen untergeordneten Steuerelements in der Auflistung auf den angegebenen Indexwert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.Control.ControlCollection.SetChildIndex%2A> aufgerufen wird, wird <xref:System.Windows.Forms.Control> die, auf die `child` durch den-Parameter verwiesen wird, an `newIndex` die durch <xref:System.Windows.Forms.Control.ControlCollection> angegebene <xref:System.Windows.Forms.Control> Position verschoben, und die anderen Verweise in werden neu angeordnet, um die Verschiebung zu ermöglichen. Das Steuerelement mit einem Indexwert von 0 (null) befindet sich am Anfang der z-Reihenfolge, und höhere Zahlen sind näher am unteren Rand.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das <paramref name="child" />-Steuerelement ist nicht in der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> enthalten.</exception>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (control As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ control) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">Das Objekt, das dieser Collection hinzugefügt werden soll.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>Die Position, an der das neue Element eingefügt wurde, oder -1, um anzugeben, dass das Element nicht in die Auflistung eingefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Control.ControlCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (control As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ control) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="control">Das im <see cref="T:System.Windows.Forms.Control.ControlCollection" /> zu suchende Objekt.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
        <returns><see langword="true" />, wenn die <see cref="T:System.Windows.Forms.Control.ControlCollection" /> ein Element enthält, das das angegebene Objekt aufweist; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

 ## Remarks  
Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Control.ControlCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (control As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ control) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="control">Das im <see cref="T:System.Windows.Forms.Control.ControlCollection" /> zu suchende Objekt.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
        <returns>Der Index von <paramref name="control" />, sofern dieser in der <see cref="T:System.Windows.Forms.Control.ControlCollection" /> gefunden wird, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks  
Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Control.ControlCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
        <param name="value">Das einzufügende Objekt.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks  
Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Control.ControlCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (control As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ control) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Control.ControlCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Ein neues Objekt, das eine Kopie dieser Instanz ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Control.ControlCollection>-Instanz in eine <xref:System.ICloneable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>