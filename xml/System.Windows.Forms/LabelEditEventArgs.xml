<Type Name="LabelEditEventArgs" FullName="System.Windows.Forms.LabelEditEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8086f763919e08d894c34fec8f755b718fcb079f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37510692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />-Ereignis und das <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.LabelEditEventArgs> gibt den Index und die Beschriftung des eine <xref:System.Windows.Forms.ListViewItem> und der Beschriftung, nachdem es vom Benutzer bearbeitet wurde. Diese Klasse stellt auch eine <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> Eigenschaft. Sie können diese Eigenschaft in eine <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> -Ereignishandler, um zu verhindern, dass den Benutzer die Bezeichnung bearbeiten. Sie können auch in ein <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> -Ereignishandler zum Zurücksetzen der Änderung zu verwerfen und die Bezeichnung es auf den ursprünglichen Wert. Dies ist nützlich, wenn Sie die Benutzereingabe überprüft vor dem Speichern der Änderung möchten.  
  
> [!NOTE]
>  Da die <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> Ereignis findet statt, bevor es sich bei der bezeichnungsbearbeitung abgeschlossen aufgerufen wird, die <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> -Methode in einen Handler für dieses Ereignis wird das Element mit dem ursprünglichen Wert sortiert.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Behandlung der <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> -Ereignisses und die Verwendung der <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> und <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> Eigenschaften. Um das Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular mit einem <xref:System.Windows.Forms.ListView> Steuerelement mit dem Namen `ListView1` und mit mindestens 3 Elementen gefüllt. Können Sie diese Eigenschaft in der  Ereignis, um sicherzustellen, dass das Steuerelement die richtige Menüelemente anzeigt.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.LabelEditEventArgs" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs item" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">Der nullbasierte Index des <see cref="T:System.Windows.Forms.ListViewItem" />, das die zu bearbeitende Bezeichnung enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.LabelEditEventArgs" />-Klasse mit dem angegebenen Index des zu bearbeitenden <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie diesen Konstruktor beim Auslösen der <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> oder <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> Ereignis zur Laufzeit an ein bestimmtes Element in der <xref:System.Windows.Forms.ListView> bearbeiten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelEditEventArgs (int item, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 item, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LabelEditEventArgs.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item As Integer, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelEditEventArgs(int item, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LabelEditEventArgs : int * string -&gt; System.Windows.Forms.LabelEditEventArgs" Usage="new System.Windows.Forms.LabelEditEventArgs (item, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">Der nullbasierte Index des <see cref="T:System.Windows.Forms.ListViewItem" />, das die zu bearbeitende Bezeichnung enthält.</param>
        <param name="label">Der neue Text, der der Bezeichnung von <see cref="T:System.Windows.Forms.ListViewItem" /> zugewiesen wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.LabelEditEventArgs" />-Klasse mit dem angegebenen Index des derzeit bearbeiteten <see cref="T:System.Windows.Forms.ListViewItem" /> und dem neuen Text für die Bezeichnung von <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie diesen Konstruktor beim Auslösen der <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> oder <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> Ereignis zur Laufzeit an ein Element in der <xref:System.Windows.Forms.ListView> bearbeiten. Der Konstruktor ermöglicht Ihnen die Angabe den neuen Text, der mit der Bezeichnung verknüpft auch die <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.LabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die an der Bezeichnung von <see cref="T:System.Windows.Forms.ListViewItem" /> vorgenommenen Änderungen verworfen werden sollen, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn die Bearbeitung der Bezeichnung für <see cref="T:System.Windows.Forms.ListViewItem" /> verworfen werden soll, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, zum Abbrechen von Änderungen an der Bezeichnung eine <xref:System.Windows.Forms.ListViewItem> , und es auf den ursprünglichen Text. Verwenden Sie diese Eigenschaft, um zu verhindern, dass die Beschriftung eines Elements geändert wird, um ein Wert, der nicht die Anforderungen Ihrer Anwendung erfüllt.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Behandlung der <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> -Ereignisses und die Verwendung der <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> und <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> Eigenschaften. Um das Beispiel auszuführen, fügen Sie folgenden Code in einem Formular ein ListView-Steuerelement ListView1 mit mindestens 3 Elemente enthält. Können Sie diese Eigenschaft in der  Ereignis, um sicherzustellen, dass das Steuerelement die richtige Menüelemente anzeigt.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Item { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : int" Usage="System.Windows.Forms.LabelEditEventArgs.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den nullbasierten Index des <see cref="T:System.Windows.Forms.ListViewItem" /> ab, das die zu bearbeitende Bezeichnung enthält.</summary>
        <value>Der nullbasierte Index von <see cref="T:System.Windows.Forms.ListViewItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Behandlung der <xref:System.Windows.Forms.ListView.BeforeLabelEdit?displayProperty=nameWithType> -Ereignisses und die Verwendung der <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A> und <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A> Eigenschaften. Um das Beispiel auszuführen, fügen Sie folgenden Code in einem Formular ein ListView-Steuerelement ListView1 mit mindestens 3 Elemente enthält. Können Sie diese Eigenschaft in der  Ereignis, um sicherzustellen, dass das Steuerelement die richtige Menüelemente anzeigt.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.LabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den neuen Text ab, der der Bezeichnung von <see cref="T:System.Windows.Forms.ListViewItem" /> zugewiesen wird.</summary>
        <value>Der neue Text, der dem <see cref="T:System.Windows.Forms.ListViewItem" /> zugeordnet werden soll, oder <see langword="null" />, wenn der Text nicht geändert wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Da die  Klasse erbt von , Sie können diese Eigenschaft auch verwenden, wenn die  eines Formulars zugeordnet ist. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ListView> mit dem Namen `ListView1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#463](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#463)]
 [!code-vb[System.Windows.Forms.EventExamples#463](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#463)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>