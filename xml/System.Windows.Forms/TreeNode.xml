<Type Name="TreeNode" FullName="System.Windows.Forms.TreeNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="636a04cfedf01bbdeef0b41180d21540d676b803" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69176254" /></Metadata><TypeSignature Language="C#" Value="public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TreeNode extends System.MarshalByRefObject implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : MarshalByRefObject, ICloneable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Knoten einer <see cref="T:System.Windows.Forms.TreeView" /> dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeNode.Nodes%2A> -Auflistung enthält alle <xref:System.Windows.Forms.TreeNode> untergeordneten-Objekte, die <xref:System.Windows.Forms.TreeNode>der aktuellen zugewiesen sind. Sie können einen <xref:System.Windows.Forms.TreeNode>hinzufügen, entfernen oder Klonen. Wenn Sie dies tun, werden alle untergeordneten Struktur Knoten hinzugefügt, entfernt oder geklont. Jede <xref:System.Windows.Forms.TreeNode> kann eine Auflistung anderer <xref:System.Windows.Forms.TreeNode> Objekte enthalten. Dies kann es schwierig machen, zu bestimmen, wo Sie sich <xref:System.Windows.Forms.TreeView> beim Durchlaufen der Auflistung befinden. Verwenden Sie die-Eigenschaft, um die <xref:System.Windows.Forms.TreeNode.FullPath%2A> Position in einer Baumstruktur zu ermitteln. Die <xref:System.Windows.Forms.TreeNode.FullPath%2A> Zeichenfolge kann mithilfe des <xref:System.Windows.Forms.TreeView.PathSeparator%2A> Zeichen folgen Werts analysiert werden, um zu <xref:System.Windows.Forms.TreeNode> bestimmen, wo eine Bezeichnung beginnt und endet.  
  
 Die <xref:System.Windows.Forms.TreeNode> Bezeichnung wird festgelegt, indem <xref:System.Windows.Forms.TreeNode.Text%2A> die-Eigenschaft explizit festgelegt wird. Die Alternative besteht darin, den Struktur Knoten mithilfe eines <xref:System.Windows.Forms.TreeNode.%23ctor%2A> Konstruktors zu erstellen, der über einen Zeichen folgen Parameter verfügt, der die <xref:System.Windows.Forms.TreeNode.Text%2A> -Eigenschaft darstellt. Wenn eine Bezeichnung angezeigt wird, wird <xref:System.Windows.Forms.TreeNode> Sie neben dem Bild angezeigt.  
  
 Wenn Sie Bilder neben den Struktur Knoten anzeigen möchten, weisen <xref:System.Windows.Forms.ImageList> Sie der <xref:System.Windows.Forms.TreeView.ImageList%2A> -Eigenschaft des über <xref:System.Windows.Forms.TreeView> geordneten Steuer Elements einen <xref:System.Drawing.Image> zu, und weisen Sie einen zu, <xref:System.Windows.Forms.ImageList> indem Sie auf den Indexwert in der-Eigenschaft verweisen Legen Sie <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> die-Eigenschaft auf den Indexwert des fest, den <xref:System.Drawing.Image> Sie <xref:System.Windows.Forms.TreeNode> anzeigen möchten, wenn sich der in einem nicht ausgewählten Zustand befindet. Legen Sie die <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> -Eigenschaft ebenso auf den Indexwert <xref:System.Drawing.Image> fest, den Sie anzeigen <xref:System.Windows.Forms.TreeNode> möchten, wenn ausgewählt ist.  
  
 Die Auswahl bestimmter Struktur Knoten und durchlaufen der <xref:System.Windows.Forms.TreeView.Nodes%2A> Auflistung kann mithilfe der folgenden Eigenschaftswerte erreicht werden: <xref:System.Windows.Forms.TreeNode.FirstNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevNode%2A>, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>. Weisen Sie <xref:System.Windows.Forms.TreeNode> der- <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> Eigenschaft den von einer der oben genannten Eigenschaften zurückgegebenen-Eigenschaft zu, <xref:System.Windows.Forms.TreeView> um den Struktur Knoten im-Steuerelement auszuwählen.  
  
 Struktur Knoten können erweitert werden, um die nächste Ebene von untergeordneten Struktur Knoten anzuzeigen. <xref:System.Windows.Forms.TreeNode> Der Benutzer kann die durch Klicken auf die Schaltfläche Plus (+) neben dem <xref:System.Windows.Forms.TreeNode>erweitern, wenn eine angezeigt wird, oder Sie können das <xref:System.Windows.Forms.TreeNode> erweitern, indem Sie die <xref:System.Windows.Forms.TreeNode.Expand%2A> -Methode aufrufen. Um alle untergeordneten Struktur Knoten Ebenen in der <xref:System.Windows.Forms.TreeNode.Nodes%2A> Auflistung zu erweitern, <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> wird die-Methode aufgerufen. Sie können die unter <xref:System.Windows.Forms.TreeNode> geordnete Ebene ausblenden, indem Sie die <xref:System.Windows.Forms.TreeNode.Collapse%2A> -Methode aufrufen, oder der Benutzer kann die Schaltfläche Minus (- <xref:System.Windows.Forms.TreeNode>) neben dem drücken, wenn eine angezeigt wird. Sie können auch die <xref:System.Windows.Forms.TreeNode.Toggle%2A> -Methode zum <xref:System.Windows.Forms.TreeNode> Alternativen zwischen den erweiterten und reduzierten Zuständen aufzurufen.  
  
 Struktur Knoten können optional ein Kontrollkästchen anzeigen. Um die Kontrollkästchen anzuzeigen, legen Sie <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> die-Eigenschaft <xref:System.Windows.Forms.TreeView> von `true`auf fest. Die <xref:System.Windows.Forms.TreeNode.Checked%2A> -Eigenschaft wird `true` für Struktur Knoten festgelegt, die sich im aktivierten Zustand befinden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Kundeninformationen in einem <xref:System.Windows.Forms.TreeView> -Steuerelement an. In den Stamm Struktur Knoten werden Kundennamen angezeigt, und die untergeordneten Struktur Knoten zeigen die Bestellnummern an, die den einzelnen Kunden zugewiesen sind. In diesem Beispiel werden 1.000-Kunden mit jeweils 15 Bestellungen angezeigt. Das erneute <xref:System.Windows.Forms.TreeView> Zeichnen von wird mithilfe der <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode und der <xref:System.Windows.Forms.TreeView.EndUpdate%2A> -Methode unterdrückt <xref:System.Windows.Forms.TreeView> , <xref:System.Windows.Forms.Cursor> und ein warte Vorgang wird angezeigt, während <xref:System.Windows.Forms.TreeNode> die Objekte erstellt und zeichnet. Dieses Beispiel erfordert, dass Sie über `Customer` ein-Objekt verfügen, das eine `Order` Auflistung von-Objekten enthalten kann. Außerdem ist es erforderlich, dass Sie eine Instanz eines <xref:System.Windows.Forms.TreeView> -Steuer Elements auf einem <xref:System.Windows.Forms.Form>erstellt haben.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/de1b82db-4905-449a-9f59-af271a6b6673">Gewusst wie: Hinzufügen oder Entfernen von Knoten mit dem TreeView-Steuerelement in Windows Forms</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TreeNode" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TreeNode" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird ein Stamm Struktur Knoten erstellt, dem untergeordnete Struktur Knoten zugewiesen werden. Ein untergeordneter Struktur Knoten für `Customer` jedes Objekt in <xref:System.Collections.ArrayList> einer wird dem Stamm Struktur Knoten sowie einem untergeordneten Struktur Knoten für jedes `Order` Objekt, das dem `Customer` Objekt zugewiesen ist, hinzugefügt. Das `Customer` -Objekt wird der <xref:System.Windows.Forms.TreeNode.Tag%2A> -Eigenschaft zugewiesen, und die Struktur Knoten `Customer` , die-Objekte <xref:System.Drawing.Color.Orange%2A> darstellen, werden mit Text angezeigt. `Customer` `customerArray` <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> `Order` Fürdieses<xref:System.Windows.Forms.TreeView> Beispiel ist es erforderlich, dass Sie ein-Objekt und ein-Objekt definiert haben, ein-Steuerelement für ein-Objekt und ein -Objektmit`Customer`  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der <see cref="P:System.Windows.Forms.TreeNode.Text" /> der Bezeichnung des neuen Strukturknotens.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TreeNode" />-Klasse mit dem angegebenen Bezeichnungstext.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `text` Parameterwert wird der- <xref:System.Windows.Forms.TreeNode.Text%2A> Eigenschaft des Knotens zugewiesen und wird zur Bezeichnung des Struktur Knotens.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt Kundeninformationen in einem <xref:System.Windows.Forms.TreeView> -Steuerelement an. In den Stamm Struktur Knoten werden Kundennamen angezeigt, und die untergeordneten Struktur Knoten zeigen die Bestellnummern an, die den einzelnen Kunden zugewiesen sind. In diesem Beispiel werden 1.000-Kunden mit jeweils 15 Bestellungen angezeigt. Das erneute <xref:System.Windows.Forms.TreeView> Zeichnen von wird mithilfe der <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> -Methode und der <xref:System.Windows.Forms.TreeView.EndUpdate%2A> -Methode unterdrückt <xref:System.Windows.Forms.TreeView> , <xref:System.Windows.Forms.Cursor> und ein warte Vorgang wird angezeigt, während <xref:System.Windows.Forms.TreeNode> die Objekte erstellt und zeichnet. Dieses Beispiel erfordert, dass Sie über `Customer` ein-Objekt verfügen, das eine `Order` Auflistung von-Objekten enthalten kann. Außerdem ist es erforderlich, dass Sie eine Instanz eines <xref:System.Windows.Forms.TreeView> -Steuer Elements auf einem <xref:System.Windows.Forms.Form>erstellt haben.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TreeNode(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die Daten zum Deserialisieren der Klasse enthält.</param>
        <param name="context">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Quelle und das Ziel des serialisierten Streams enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TreeNode" />-Klasse mit den angegebenen Serialisierungsinformationen und dem angegebenen Serialisierungskontext.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">Der <see cref="P:System.Windows.Forms.TreeNode.Text" /> der Bezeichnung des neuen Strukturknotens.</param>
        <param name="children">Ein Array von untergeordneten <see cref="T:System.Windows.Forms.TreeNode" />-Objekten.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TreeNode" />-Klasse mit dem angegebenen Bezeichnungstext und den angegebenen untergeordneten Strukturknoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `text` Parameterwert wird der- <xref:System.Windows.Forms.TreeNode.Text%2A> Eigenschaft des Knotens zugewiesen und wird zur Bezeichnung des Struktur Knotens. Die Struktur Knoten, die im `children` -Array enthalten sind, werden dem <xref:System.Windows.Forms.TreeNodeCollection> hinzugefügt, das in der <xref:System.Windows.Forms.TreeNode.Nodes%2A> -Eigenschaft gespeichert ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Stamm Struktur Knoten erstellt, dem untergeordnete Struktur Knoten zugewiesen werden. Ein untergeordneter Struktur Knoten für `Customer` jedes Objekt in <xref:System.Collections.ArrayList> einer wird dem Stamm Struktur Knoten sowie einem untergeordneten Struktur Knoten für jedes `Order` Objekt, das dem `Customer` Objekt zugewiesen ist, hinzugefügt. Das `Customer` -Objekt wird der <xref:System.Windows.Forms.TreeNode.Tag%2A> -Eigenschaft zugewiesen, und die Struktur Knoten `Customer` , die-Objekte <xref:System.Drawing.Color.Orange%2A> darstellen, werden mit Text angezeigt. `Customer` `customerArray` <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> `Order` Fürdieses<xref:System.Windows.Forms.TreeView> Beispiel ist es erforderlich, dass Sie ein-Objekt und ein-Objekt definiert haben, ein-Steuerelement für ein-Objekt und ein -Objektmit`Customer`  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Der <see cref="P:System.Windows.Forms.TreeNode.Text" /> der Bezeichnung des neuen Strukturknotens.</param>
        <param name="imageIndex">Der Indexwert des <see cref="T:System.Drawing.Image" />, das angezeigt wird, wenn der Strukturknoten nicht ausgewählt ist.</param>
        <param name="selectedImageIndex">Der Indexwert des <see cref="T:System.Drawing.Image" />, das angezeigt wird, wenn der Strukturknoten ausgewählt ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TreeNode" />-Klasse mit dem angegebenen Bezeichnungstext sowie den angegebenen Bildern, die den ausgewählten bzw. den nicht ausgewählten Zustand des Strukturknotens anzeigen sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `text` Parameterwert wird der- <xref:System.Windows.Forms.TreeNode.Text%2A> Eigenschaft des Knotens zugewiesen und wird zur Bezeichnung des Struktur Knotens. Der `imageIndex` - `selectedImageIndex` Wert und <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> der-Wert sind die Indexwerte eines, der in der der-Eigenschaft zugewiesenen gespeichertist.<xref:System.Drawing.Image> Das Bild, auf das `imageIndex` in der-Eigenschaft verwiesen wird, wird angezeigt, wenn der Struktur Knoten nicht ausgewählt ist. Ebenso wird das Bild, auf das `selectedImageIndex` in der-Eigenschaft verwiesen wird, angezeigt, wenn sich der Struktur Knoten in einem ausgewählten Zustand befindet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein erstellt und <xref:System.Windows.Forms.ImageList> einem- <xref:System.Windows.Forms.TreeView> Steuerelement zugewiesen, <xref:System.Windows.Forms.TreeView> und das <xref:System.Windows.Forms.TreeNode> -Steuerelement wird mit-Objekten gefüllt. Den Struktur Knoten werden Bilder aus dem <xref:System.Windows.Forms.ImageList> zugewiesen, das angezeigt wird, wenn sich der Struktur Knoten in einem ausgewählten oder nicht ausgewählten Zustand befindet. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein enthält <xref:System.Windows.Forms.TreeView>, das eine <xref:System.Collections.ArrayList> enthält, `Customer` und eine, die `Order` -Objekte enthält, die jeweils-Objekte enthalten. Außerdem müssen die `Customer` -und- `Order` Objekte definiert werden.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TreeNode : string * int * int * System.Windows.Forms.TreeNode[] -&gt; System.Windows.Forms.TreeNode" Usage="new System.Windows.Forms.TreeNode (text, imageIndex, selectedImageIndex, children)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">Der <see cref="P:System.Windows.Forms.TreeNode.Text" /> der Bezeichnung des neuen Strukturknotens.</param>
        <param name="imageIndex">Der Indexwert des <see cref="T:System.Drawing.Image" />, das angezeigt wird, wenn der Strukturknoten nicht ausgewählt ist.</param>
        <param name="selectedImageIndex">Der Indexwert des <see cref="T:System.Drawing.Image" />, das angezeigt wird, wenn der Strukturknoten ausgewählt ist.</param>
        <param name="children">Ein Array von untergeordneten <see cref="T:System.Windows.Forms.TreeNode" />-Objekten.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TreeNode" />-Klasse mit dem angegebenen Bezeichnungstext sowie den angegebenen untergeordneten Strukturknoten und den Bildern, die den ausgewählten bzw. nicht ausgewählten Zustand des Strukturknotens anzeigen sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `text` Parameterwert wird der- <xref:System.Windows.Forms.TreeNode.Text%2A> Eigenschaft des Knotens zugewiesen und wird zur Bezeichnung des Struktur Knotens. Der `imageIndex` - `selectedImageIndex` Wert und <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> der-Wert sind die Indexwerte eines, der in der der-Eigenschaft zugewiesenen gespeichertist.<xref:System.Drawing.Image> Das Bild, auf das `imageIndex` im-Parameter verwiesen wird, wird angezeigt, wenn der Struktur Knoten nicht ausgewählt ist. Ebenso wird das im `selectedImageIndex` -Parameter referenzierte Bild angezeigt, wenn sich der Struktur Knoten in einem ausgewählten Zustand befindet. Die Struktur Knoten, die im `children` -Array enthalten sind, werden dem <xref:System.Windows.Forms.TreeNodeCollection> hinzugefügt, das in der <xref:System.Windows.Forms.TreeNode.Nodes%2A> -Eigenschaft gespeichert ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein erstellt und <xref:System.Windows.Forms.ImageList> einem- <xref:System.Windows.Forms.TreeView> Steuerelement zugewiesen, <xref:System.Windows.Forms.TreeView> und das <xref:System.Windows.Forms.TreeNode> -Steuerelement wird mit-Objekten gefüllt. Den Struktur Knoten werden Bilder aus dem <xref:System.Windows.Forms.ImageList> zugewiesen, das angezeigt wird, wenn sich der Struktur Knoten in einem ausgewählten oder nicht ausgewählten Zustand befindet. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein enthält <xref:System.Windows.Forms.TreeView>, das eine <xref:System.Collections.ArrayList> enthält, `Customer` und eine, die `Order` -Objekte enthält, die jeweils-Objekte enthalten. Außerdem müssen die `Customer` -und- `Order` Objekte definiert werden.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe des Strukturknotens ab oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Drawing.Color" /> für den Hintergrund des Strukturknotens. Die Standardeinstellung ist <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.TreeNode.BackColor%2A> -Eigenschaft auf <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>festgelegt ist <xref:System.Drawing.Color> <xref:System.Windows.Forms.Control.BackColor%2A> , ist der verwendete Eigenschafts Wert <xref:System.Windows.Forms.TreeView> des Steuer Elements, dem der Struktur Knoten zugewiesen ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden alle <xref:System.Windows.Forms.TreeNode> Objekte eines <xref:System.Windows.Forms.TreeView> -Steuer Elements, <xref:System.Windows.Forms.TreeNode.Checked%2A> dessen-Eigenschaft `true` auf festgelegt <xref:System.Windows.Forms.TreeNode.BackColor%2A> ist, <xref:System.Drawing.Color.Yellow%2A>durch Festlegen der-Eigenschaft auf hervorgehoben. Dieser Code erfordert, dass Sie über <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.Form> Element für eine mit <xref:System.Windows.Forms.TreeNode> einer Auflistung von-Objekten verfügen.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="treeNode.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initiiert die Bearbeitung der Strukturknotenbezeichnung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein typisches Szenario für die Verwendung dieser Methode besteht darin, Sie für <xref:System.Windows.Forms.MenuItem.Click> das-Ereignis <xref:System.Windows.Forms.MenuItem> eines <xref:System.Windows.Forms.ContextMenu>-oder-Ereignisses aufzurufen.  
  
> [!NOTE]
>  Diese Methode funktioniert nur, wenn <xref:System.Windows.Forms.TreeView.LabelEdit%2A> die-Eigenschaft <xref:System.Windows.Forms.TreeView> von auf `true`festgelegt ist. Wenn <xref:System.Windows.Forms.TreeView.LabelEdit%2A> auf`false`festgelegt ist, wird eine Ausnahme ausgelöst, und der Struktur Knoten wird nicht in einen bearbeitbaren Zustand versetzt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann der Benutzer nicht Stamm Struktur Knoten mithilfe eines <xref:System.Windows.Forms.ContextMenu>bearbeiten. Wenn der Benutzer mit der rechten Maustaste klickt, wird <xref:System.Windows.Forms.TreeNode> der an dieser Position bestimmt und in einer Variablen mit dem `mySelectedNode`Namen gespeichert. Wenn ein nicht Stamm Struktur Knoten ausgewählt wurde, wird er in einen bearbeitbaren Zustand versetzt, sodass der Benutzer die Knoten Bezeichnung bearbeiten kann. Nachdem der Benutzer die Bearbeitung der Struktur Knoten Bezeichnung beendet hat, wird der neue Beschriftungs Text ausgewertet und gespeichert. In diesem Beispiel werden mehrere Zeichen im Bezeichnungs Text als ungültig eingestuft. Wenn eines der ungültigen Zeichen in der Bezeichnungs Zeichenfolge enthalten ist oder die Zeichenfolge leer ist, wird der Benutzer über den Fehler benachrichtigt, und die Bezeichnung wird an den vorherigen Text zurückgegeben.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für <see cref="P:System.Windows.Forms.TreeView.LabelEdit" /> ist <see langword="false" /> festgelegt.</exception>
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.TreeNode.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Begrenzungen des Strukturknotens ab.</summary>
        <value>Das <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Strukturknotens darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Koordinaten sind relativ zur linken oberen Ecke des <xref:System.Windows.Forms.TreeView> -Steuer Elements.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Größe <xref:System.Windows.Forms.TreeNode.NodeFont%2A> auf die angegebene Größe geändert und der <xref:System.Windows.Forms.TreeView.ItemHeight%2A> des übergeordneten <xref:System.Windows.Forms.TreeView> Steuer Elements des Struktur Knotens angepasst. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass Sie über <xref:System.Windows.Forms.TreeView> ein verfügen, das ein <xref:System.Windows.Forms.TreeNode> -Steuerelement mit <xref:System.Windows.Forms.ComboBox> einer Auflistung von-Objekten enthält, und einen, der Schrift Grade enthält  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Windows.Forms.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Strukturknoten aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Strukturknoten aktiviert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel werden alle <xref:System.Windows.Forms.TreeNode> Objekte eines <xref:System.Windows.Forms.TreeView> -Steuer Elements, <xref:System.Windows.Forms.TreeNode.Checked%2A> dessen-Eigenschaft `true` auf festgelegt <xref:System.Windows.Forms.TreeNode.BackColor%2A> ist, <xref:System.Drawing.Color.Yellow%2A>durch Festlegen der-Eigenschaft auf hervorgehoben. Dieser Code erfordert, dass Sie über <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.Form> Element für eine mit <xref:System.Windows.Forms.TreeNode> einer Auflistung von-Objekten verfügen.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Kopiert die Strukturknoten sowie die gesamte Teilstruktur, die bei diesem Strukturknoten beginnt.</summary>
        <returns>Das <see cref="T:System.Object" />, das den geklonten <see cref="T:System.Windows.Forms.TreeNode" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Struktur des geklonten Struktur Knotens und der nachfolgenden Struktur werden kopiert. Alle untergeordneten Struktur Knoten, die <xref:System.Windows.Forms.TreeNode> dem geklonten zugewiesen sind, sind im neuen Struktur Knoten und in der Unterstruktur enthalten.  
  
 Die <xref:System.Windows.Forms.TreeNode.Clone%2A> -Methode führt eine flache Kopie des Knotens aus. Wenn der Wert <xref:System.Windows.Forms.TreeNode.Tag%2A> der Eigenschaft ein Referenztyp ist, zeigen sowohl die ursprüngliche als auch die geklonte Kopie auf dieselbe einzelne Instanz <xref:System.Windows.Forms.TreeNode.Tag%2A> des Werts.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der letzte untergeordnete Struktur Knoten des letzten Stamm Struktur Knotens geklont und der Klon als erster Stamm Struktur Knoten in `TreeNodeCollection`eingefügt. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.Form> Element für ein verfügen, <xref:System.Windows.Forms.TreeNode> das eine Auflistung <xref:System.Windows.Forms.Button>von-Objekten und eine enthält.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#3)]
 [!code-csharp[TreeNode_EnsureVisible_4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#3)]
 [!code-vb[TreeNode_EnsureVisible_4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Collapse">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Reduziert den <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reduziert den Strukturknoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeNode.Collapse%2A> -Methode reduziert die <xref:System.Windows.Forms.TreeNode> aktuellen und deren untergeordneten Knoten. Wenn Sie nur die aktuelle <xref:System.Windows.Forms.TreeNode>reduzieren möchten, verwenden Sie die <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=nameWithType> -Überladung, und übergeben `true` Sie, um die untergeordneten Knoten zu ignorieren.  
  
> [!NOTE]
>  Der Zustand <xref:System.Windows.Forms.TreeNode> eines wird persistent gespeichert. Wenn z. b. die nächste Ebene von untergeordneten Knoten zuvor nicht reduziert wurde, <xref:System.Windows.Forms.TreeNode.Expand%2A> werden beim Aufrufen der-Methode die untergeordneten Knoten in Ihrem zuvor erweiterten Zustand angezeigt.  
  
   
  
## Examples  
 Das folgende Codebeispiel schaltet den ausgewählten Knoten um, wenn auf eine Schaltfläche geklickt wird. Wenn der ausgewählte Knoten reduziert ist, wird er erweitert. wenn er durch Aufrufen der <xref:System.Windows.Forms.TreeNode.Expand%2A> -Methode erweitert wird, wird er durch Aufrufen der <xref:System.Windows.Forms.TreeNode.Collapse%2A> -Methode reduziert. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass Sie <xref:System.Windows.Forms.TreeView> über ein-Steuerelement mit <xref:System.Windows.Forms.TreeNode> einem-Steuerelement verfügen <xref:System.Windows.Forms.TreeNode>, das mindestens ein untergeordnetes Element aufweist.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (bool ignoreChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse(bool ignoreChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (ignoreChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse(bool ignoreChildren);" />
      <MemberSignature Language="F#" Value="member this.Collapse : bool -&gt; unit" Usage="treeNode.Collapse ignoreChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignoreChildren" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="ignoreChildren"><see langword="true" />, um die untergeordneten Knoten in ihrem aktuellen Zustand zu belassen, <see langword="false" />, um die untergeordneten Knoten zu reduzieren.</param>
        <summary>Reduziert den <see cref="T:System.Windows.Forms.TreeNode" /> und optional die zugehörigen untergeordneten Elemente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Windows.Forms.TreeNode.Collapse%2A> die-Methode `true`, und übergeben Sie, wenn Sie einen Knoten zuklappen, aber seine untergeordneten Knoten im erweiterten Zustand belassen möchten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das diesem Strukturknoten zugeordnete Kontextmenü ab.</summary>
        <value>Das dem Strukturknoten zugeordnete <see cref="T:System.Windows.Forms.ContextMenu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bevorzugte Methode zum Zuordnen eines Kontextmenüs zu einem Struktur Knoten ist die <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> -Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das diesem Strukturknoten zugeordnete Kontextmenü ab oder legt dieses fest.</summary>
        <value>Das diesem Strukturknoten zugeordnete <see cref="T:System.Windows.Forms.ContextMenuStrip" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Kontextmenü wird angezeigt, wenn der Benutzer mit der rechten Maustaste auf den Struktur Knoten klickt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Deserialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Deserialize (serializationInfo, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die das <see cref="T:System.Windows.Forms.TreeNode" /> beschreibt.</param>
        <param name="context">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der während der Deserialisierung den Zustand des Streams angibt.</param>
        <summary>Lädt den Zustand des <see cref="T:System.Windows.Forms.TreeNode" /> aus der angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit(bool cancel);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : bool -&gt; unit" Usage="treeNode.EndEdit cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel"><see langword="true" />, wenn die Bearbeitung des Bezeichnungstextes des Strukturknotens ohne Speichern abgebrochen wurde, andernfalls <see langword="false" />.</param>
        <summary>Beendet die Bearbeitung der Strukturknotenbezeichnung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel kann der Benutzer nicht Stamm Struktur Knoten mithilfe eines <xref:System.Windows.Forms.ContextMenu>bearbeiten. Wenn der Benutzer mit der rechten Maustaste auf die <xref:System.Windows.Forms.TreeNode> Maus klickt, wird der an dieser Position bestimmt und in `mySelectedNode`einer Variablen mit dem Namen gespeichert. Wenn ein nicht Stamm Struktur Knoten ausgewählt wurde, wird er in einen bearbeitbaren Zustand versetzt, sodass der Benutzer die Knoten Bezeichnung bearbeiten kann. Nachdem der Benutzer die Bearbeitung der Struktur Knoten Bezeichnung beendet hat, wird der neue Beschriftungs Text ausgewertet und gespeichert. In diesem Beispiel werden mehrere Zeichen im Bezeichnungs Text als ungültig eingestuft. Wenn eines der ungültigen Zeichen in der Bezeichnungs Zeichenfolge enthalten ist oder die Zeichenfolge leer ist, wird der Benutzer über den Fehler benachrichtigt, und die Bezeichnung wird an den vorherigen Text zurückgegeben.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : unit -&gt; unit" Usage="treeNode.EnsureVisible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt sicher, dass der Strukturknoten sichtbar ist, wobei ggf. Strukturknoten erweitert werden und bei Bedarf im Strukturansicht-Steuerelement ein Bildlauf durchgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A> -Methode aufgerufen wird, wird die Struktur erweitert und gescrollt, um sicherzustellen, dass der aktuelle Struktur <xref:System.Windows.Forms.TreeView>Knoten in der sichtbar ist. Diese Methode ist nützlich, wenn Sie einen Struktur Knoten in Code basierend auf bestimmten Kriterien auswählen. Wenn Sie diese Methode aufrufen, nachdem Sie den Knoten ausgewählt haben, kann der Benutzer den ausgewählten Knoten sehen und damit interagieren.  
  
> [!NOTE]
>  Wenn die <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=nameWithType> Eigenschaft auf einen Wert festgelegt ist, der größer ist als die Höhe des Strukturansicht-Steuer Elements, weist das Aufrufen dieser Methode unerwartete Ergebnisse auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der letzte untergeordnete Struktur Knoten des letzten Stamm Struktur Knotens in der Strukturansicht angezeigt, wenn auf eine Schaltfläche geklickt wird. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.TreeView> dass Sie über <xref:System.Windows.Forms.Form> ein-Steuerelement für <xref:System.Windows.Forms.TreeNode> eine verfügen, die <xref:System.Windows.Forms.Button>eine Auflistung von-Objekten enthält, und eine Es sollten genügend Struktur Knoten vorhanden sein, damit Sie nicht alle im Strukturansicht-Steuerelement sichtbar sind.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert den Strukturknoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeNode.Expand%2A> -Methode erweitert den <xref:System.Windows.Forms.TreeNode> aktuellen auf die nächste Ebene der Knoten.  
  
> [!NOTE]
>  Der Zustand <xref:System.Windows.Forms.TreeNode> eines wird persistent gespeichert. Wenn z. b. die nächste Ebene von untergeordneten Knoten zuvor nicht reduziert wurde, <xref:System.Windows.Forms.TreeNode.Expand%2A> werden beim Aufrufen der-Methode die untergeordneten Knoten in Ihrem zuvor erweiterten Zustand angezeigt.  
  
   
  
## Examples  
 Das folgende Codebeispiel schaltet den ausgewählten Knoten um, wenn auf eine Schaltfläche geklickt wird. Wenn der ausgewählte Knoten reduziert ist, wird er erweitert. wenn er durch Aufrufen der <xref:System.Windows.Forms.TreeNode.Expand%2A> -Methode erweitert wird, wird er durch Aufrufen der <xref:System.Windows.Forms.TreeNode.Collapse%2A> -Methode reduziert. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass Sie <xref:System.Windows.Forms.TreeView> über ein-Steuerelement mit <xref:System.Windows.Forms.TreeNode> einem-Steuerelement verfügen <xref:System.Windows.Forms.TreeNode>, das mindestens ein untergeordnetes Element aufweist.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erweitert alle untergeordneten Strukturknoten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> der-Methode werden alle untergeordneten Struktur Knoten erweitert <xref:System.Windows.Forms.TreeNode.Nodes%2A> , die der-Auflistung zugewiesen sind.  
  
> [!NOTE]
>  Der Zustand <xref:System.Windows.Forms.TreeNode> eines wird persistent gespeichert. Wenn z. b. die nächste Ebene von untergeordneten Knoten zuvor nicht reduziert wurde, <xref:System.Windows.Forms.TreeNode.Expand%2A> werden beim Aufrufen der-Methode die untergeordneten Knoten in Ihrem zuvor erweiterten Zustand angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden alle Struktur Knoten in <xref:System.Windows.Forms.TreeView> einem-Steuerelement erweitert, wenn eine <xref:System.Windows.Forms.CheckBox> aktiviert ist, <xref:System.Windows.Forms.TreeNode.FirstNode%2A> und die <xref:System.Windows.Forms.CheckBox> reduziert, wenn der gelöscht wird. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein <xref:System.Windows.Forms.CheckBox>mit einem und <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.TreeNodeCollection> Element mit einem <xref:System.Windows.Forms.TreeNode> vorhanden ist, das über mehrere-Objekte verfügt (vorzugsweise mit drei oder mehr Ebenen).  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="FirstNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode FirstNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode FirstNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FirstNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ FirstNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FirstNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den ersten untergeordneten Strukturknoten in der Auflistung der Strukturknoten ab.</summary>
        <value>Der erste untergeordnete <see cref="T:System.Windows.Forms.TreeNode" /> in der <see cref="P:System.Windows.Forms.TreeNode.Nodes" />-Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeNode.FirstNode%2A> ist das <xref:System.Windows.Forms.TreeNode> erste untergeordnete Element <xref:System.Windows.Forms.TreeNodeCollection> in der, <xref:System.Windows.Forms.TreeNode.Nodes%2A> die in der-Eigenschaft des aktuellen Struktur Knotens gespeichert ist. Wenn das <xref:System.Windows.Forms.TreeNode> über keinen untergeordneten Struktur Knoten verfügt <xref:System.Windows.Forms.TreeNode.FirstNode%2A> , gibt `null`die-Eigenschaft zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die entsprechende <xref:System.Windows.Forms.TreeNode> Option ausgewählt, nachdem <xref:System.Windows.Forms.TreeNode> ermittelt wurde, ob die über <xref:System.Windows.Forms.TreeNode> gegebene ausgewählt ist und welche ausgewählt werden soll. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem <xref:System.Windows.Forms.TreeNodeCollection> -Steuerelement <xref:System.Windows.Forms.TreeNode> verfügen, das mehrere-Objekte enthält. Außerdem ist es erforderlich, dass über <xref:System.Windows.Forms.ComboBox> ein mit den folgenden Elementen verfügt: "Previous", "PreviousVisible", "Next", "NextVisible", "First" und "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeNode.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe des Strukturknotens ab oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Drawing.Color" /> für den Vordergrund des Strukturknotens.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `null`, ist <xref:System.Drawing.Color> der <xref:System.Windows.Forms.Control.ForeColor%2A> verwendete<xref:System.Windows.Forms.TreeView> der Eigenschafts Wert des Steuer Elements, dem der Struktur Knoten zugewiesen ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Stamm Struktur Knoten erstellt, dem untergeordnete Struktur Knoten zugewiesen werden. Ein untergeordneter Struktur Knoten für `Customer` jedes Objekt in <xref:System.Collections.ArrayList> einer wird dem Stamm Struktur Knoten sowie einem untergeordneten Struktur Knoten für jedes `Order` Objekt, das dem `Customer` Objekt zugewiesen ist, hinzugefügt. Das `Customer` -Objekt wird der <xref:System.Windows.Forms.TreeNode.Tag%2A> -Eigenschaft zugewiesen, und die Struktur Knoten `Customer` , die-Objekte <xref:System.Drawing.Color.Orange%2A> darstellen, werden mit Text angezeigt. `Customer` `customerArray` <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> `Order` Fürdieses<xref:System.Windows.Forms.TreeView> Beispiel ist es erforderlich, dass Sie ein-Objekt und ein-Objekt definiert haben, ein-Steuerelement für ein-Objekt und ein -Objektmit`Customer`  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TreeNode FromHandle(class System.Windows.Forms.TreeView tree, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (tree As TreeView, handle As IntPtr) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::TreeNode ^ FromHandle(System::Windows::Forms::TreeView ^ tree, IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : System.Windows.Forms.TreeView * nativeint -&gt; System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.FromHandle (tree, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tree" Type="System.Windows.Forms.TreeView" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tree">Die <see cref="T:System.Windows.Forms.TreeView" />, die den Strukturknoten enthält.</param>
        <param name="handle">Das Handle des Strukturknotens.</param>
        <summary>Gibt den Strukturknoten zurück, dem das angegebene Handle zugeordnet ist und der dem angegebenen Strukturansicht-Steuerelement zugewiesen ist.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.TreeNode" />, der den Strukturknoten mit dem angegebenen Handle darstellt, der dem angegebenen <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement zugewiesen ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Auflistung ein Knoten hinzugefügt <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=nameWithType> wird, sendet <xref:System.Windows.Forms.TreeView> das Steuerelement eine NM_CUSTOMDRAW-Benachrichtigung, bevor das Knoten Handle verfügbar ist. Wenn Sie die <xref:System.Windows.Forms.Control.WndProc%2A> -Methode <xref:System.Windows.Forms.TreeView> von überschreiben, um eine benutzerdefinierte Zeichnung als Reaktion auf diese Benachrichtigung bereitzustellen, sollten Sie immer den Rückgabewert `null` dieser Methode für überprüfen, bevor Sie versuchen, auf den Knoten zuzugreifen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.TreeNode> - <xref:System.Windows.Forms.TreeNode.Handle%2A> Objekt abgerufen, das reduziert wurde, und eine Kopie davon mithilfe der-Eigenschaft erstellt. Die ursprüngliche <xref:System.Windows.Forms.TreeNode> wird aus der <xref:System.Windows.Forms.TreeNodeCollection>entfernt, und die Kopie wird der Auflistung hinzugefügt. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem-Steuerelement verfügen. Das <xref:System.Windows.Forms.TreeView> -Steuerelement sollte über mindestens zwei Stamm Knoten verfügen, die jeweils über mindestens einen untergeordneten Knoten verfügen.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.TreeView" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="System.Windows.Forms.TreeNode.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Pfad vom Stammknoten zum aktuellen Strukturknoten ab.</summary>
        <value>Der Pfad vom Stammknoten zum aktuellen Strukturknoten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Pfad besteht aus den Bezeichnungen aller Struktur Knoten, die navigiert werden müssen, um diesen Struktur Knoten zu erreichen, beginnend beim Stamm Struktur Knoten. Die Knoten Bezeichnungen werden durch das Trennzeichen getrennt, das in der <xref:System.Windows.Forms.TreeView.PathSeparator%2A> -Eigenschaft <xref:System.Windows.Forms.TreeView> des-Steuer Elements angegeben ist, das diesen Knoten enthält. Wenn das Trennzeichen des Strukturansicht-Steuer Elements "Location" z. b. auf den umgekehrten Schrägstrich (\\) festgelegt ist, ist der <xref:System.Windows.Forms.TreeNode.FullPath%2A> Eigenschafts Wert "country\region\state".  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.TreeView.PathSeparator%2A> <xref:System.Windows.Forms.TreeView> -Eigenschaft eines festgelegt und die Anzahl der untergeordneten Struktur Knoten angezeigt <xref:System.Windows.Forms.TreeNodeCollection> , die in der <xref:System.Windows.Forms.TreeView.SelectedNode%2A>des-Objekts enthalten sind. Der Prozentsatz des untergeordneten Struktur Knotens auf Gesamtstruktur Knoten im Strukturansicht-Steuerelement wird ebenfalls angezeigt. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein <xref:System.Windows.Forms.Button>mit einem und <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.TreeNodeCollection> Element mit einem <xref:System.Windows.Forms.TreeNode> vorhanden ist, das über mehrere-Objekte verfügt (vorzugsweise mit drei oder mehr Ebenen).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Knoten befindet sich nicht in einer <see cref="T:System.Windows.Forms.TreeView" />.</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberSignature Language="F#" Value="member this.GetNodeCount : bool -&gt; int" Usage="treeNode.GetNodeCount includeSubTrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees"><see langword="true" />, wenn die Gesamtanzahl alle Strukturknoten umfasst, die indirekt bei diesem Strukturknoten beginnen, andernfalls <see langword="false" />.</param>
        <summary>Gibt die Anzahl der untergeordneten Strukturknoten zurück.</summary>
        <returns>Die Anzahl der untergeordneten Strukturknoten, die der <see cref="P:System.Windows.Forms.TreeNode.Nodes" />-Auflistung zugewiesen sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.TreeView.PathSeparator%2A> <xref:System.Windows.Forms.TreeView> -Eigenschaft eines festgelegt und die Anzahl der untergeordneten Struktur Knoten angezeigt <xref:System.Windows.Forms.TreeNodeCollection> , die in der <xref:System.Windows.Forms.TreeView.SelectedNode%2A>des-Objekts enthalten sind. Der Prozentsatz des untergeordneten Struktur Knotens auf Gesamtstruktur Knoten im Strukturansicht-Steuerelement wird ebenfalls angezeigt. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein <xref:System.Windows.Forms.Button>mit einem und <xref:System.Windows.Forms.TreeView> ein-Steuer <xref:System.Windows.Forms.TreeNodeCollection> Element mit einem <xref:System.Windows.Forms.TreeNode> vorhanden ist, das über mehrere-Objekte verfügt (vorzugsweise mit drei oder mehr Ebenen).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Nodes" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.TreeNode.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Handle des Strukturknotens ab.</summary>
        <value>Das Handle des Strukturknotens.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Handle nicht bereits erstellt wurde, wenn <xref:System.Windows.Forms.TreeNode.Handle%2A> auf die Eigenschaft verwiesen wird, wird es erstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.TreeNode> - <xref:System.Windows.Forms.TreeNode.Handle%2A> Objekt abgerufen, das reduziert wurde, und eine Kopie davon mithilfe der-Eigenschaft erstellt. Die ursprüngliche <xref:System.Windows.Forms.TreeNode> wird aus der <xref:System.Windows.Forms.TreeNodeCollection>entfernt, und die Kopie wird der Auflistung hinzugefügt. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem-Steuerelement verfügen. Das <xref:System.Windows.Forms.TreeView> -Steuerelement sollte über mindestens zwei Stamm Knoten verfügen, die jeweils über mindestens einen untergeordneten Knoten verfügen.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Indexwert des Bildes in der Bildliste ab, das für einen nicht ausgewählten Strukturknoten angezeigt wird, oder legt diesen fest.</summary>
        <value>Ein nullbasierter Indexwert, der die Bildposition in der zugewiesenen <see cref="T:System.Windows.Forms.ImageList" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> -Wert ist der Indexwert <xref:System.Drawing.Image> eines in der <xref:System.Windows.Forms.ImageList> , der der <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> -Eigenschaft zugewiesen ist.  
  
> [!NOTE]
>  Der Standardwert <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> der-Eigenschaft ist identisch mit der <xref:System.Windows.Forms.TreeView.ImageIndex%2A> -Eigenschaft des <xref:System.Windows.Forms.TreeView> -Steuer Elements, <xref:System.Windows.Forms.TreeNode> dem der zugewiesen ist.  
  
 Die <xref:System.Windows.Forms.TreeNode.ImageKey%2A> Eigenschaften <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> und schließen sich gegenseitig aus. Wenn also eine Eigenschaft festgelegt ist, wird die andere ignoriert. Wenn Sie die <xref:System.Windows.Forms.TreeNode.ImageKey%2A> -Eigenschaft festlegen, <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> wird die-Eigenschaft automatisch auf-1 festgelegt. Wenn Sie festlegen <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> wird von automatisch eine leere Zeichenfolge ("") festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein erstellt und <xref:System.Windows.Forms.ImageList> einem- <xref:System.Windows.Forms.TreeView> Steuerelement zugewiesen, <xref:System.Windows.Forms.TreeView> und das <xref:System.Windows.Forms.TreeNode> -Steuerelement wird mit-Objekten gefüllt. Den Struktur Knoten werden Bilder aus dem <xref:System.Windows.Forms.ImageList> zugewiesen, das angezeigt wird, wenn sich der Struktur Knoten in einem ausgewählten oder nicht ausgewählten Zustand befindet. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein enthält <xref:System.Windows.Forms.TreeView>, das eine <xref:System.Collections.ArrayList> enthält, `Customer` und eine, die `Order` -Objekte enthält, die jeweils-Objekte enthalten. Außerdem müssen die `Customer` -und- `Order` Objekte definiert werden.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel für das diesem Strukturknoten zugeordnete Bild ab, wenn der Knoten nicht ausgewählt ist, oder legt diesen fest.</summary>
        <value>Der Schlüssel für das diesem Strukturknoten zugeordnete Bild ab, wenn der Knoten nicht ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der von dieser Eigenschaft zurückgegebene Bild Schlüssel ist in der <xref:System.Windows.Forms.TreeView.ImageList%2A> -Eigenschaft des enthaltenden <xref:System.Windows.Forms.TreeView> Steuer Elements enthalten.  
  
 Die <xref:System.Windows.Forms.TreeNode.ImageKey%2A> Groß-/Kleinschreibung wird nicht beachtet.  
  
 Die <xref:System.Windows.Forms.TreeNode.ImageKey%2A> Eigenschaften <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> und schließen sich gegenseitig aus. Wenn eine Eigenschaft festgelegt ist, wird die andere ignoriert. Wenn Sie die <xref:System.Windows.Forms.TreeNode.ImageKey%2A> -Eigenschaft festlegen, <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> wird die-Eigenschaft automatisch auf-1 festgelegt. Wenn Sie festlegen <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> wird von automatisch eine leere Zeichenfolge ("") festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.TreeNode.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Position des Strukturknotens in der Auflistung der Strukturknoten ab.</summary>
        <value>Ein nullbasierter Indexwert, der die Position des Strukturknotens in der <see cref="P:System.Windows.Forms.TreeNode.Nodes" />-Auflistung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel werden die <xref:System.Windows.Forms.TreeNode.Text%2A> -und-Eigenschafts <xref:System.Windows.Forms.TreeNode> Werte von angezeigt <xref:System.Windows.Forms.TreeNode.Parent%2A> , die durch <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>die- <xref:System.Windows.Forms.TreeNode.Index%2A> Eigenschaft von dargestellt werden. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem-Steuerelement verfügen. Der <xref:System.Windows.Forms.TreeView> sollte über mindestens zwei Stamm Knoten verfügen, die jeweils über mindestens einen untergeordneten Knoten verfügen.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditing">
      <MemberSignature Language="C#" Value="public bool IsEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditing : bool" Usage="System.Windows.Forms.TreeNode.IsEditing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob sich der Strukturknoten in einem bearbeitbaren Zustand befindet.</summary>
        <value><see langword="true" />, wenn sich der Strukturknoten in einem bearbeitbaren Zustand befindet, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel kann der Benutzer nicht Stamm Struktur Knoten mithilfe eines <xref:System.Windows.Forms.ContextMenu>bearbeiten. Wenn der Benutzer mit der rechten Maustaste auf die <xref:System.Windows.Forms.TreeNode> Maus klickt, wird der an dieser Position bestimmt und in `mySelectedNode`einer Variablen mit dem Namen gespeichert. Wenn ein nicht Stamm Struktur Knoten ausgewählt wurde, wird er in einen bearbeitbaren Zustand versetzt, sodass der Benutzer die Knoten Bezeichnung bearbeiten kann. Nachdem der Benutzer die Bearbeitung der Struktur Knoten Bezeichnung beendet hat, wird der neue Beschriftungs Text ausgewertet und gespeichert. In diesem Beispiel werden mehrere Zeichen im Bezeichnungs Text als ungültig eingestuft. Wenn eines der ungültigen Zeichen in der Bezeichnungs Zeichenfolge enthalten ist oder die Zeichenfolge leer ist, wird der Benutzer über den Fehler benachrichtigt, und die Bezeichnung wird an den vorherigen Text zurückgegeben.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsExpanded : bool" Usage="System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Strukturknoten erweitert ist.</summary>
        <value><see langword="true" />, wenn der Strukturknoten erweitert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel schaltet den ausgewählten Knoten um, wenn auf eine Schaltfläche geklickt wird. Wenn der ausgewählte Knoten reduziert ist, wird er erweitert. wenn er durch Aufrufen der <xref:System.Windows.Forms.TreeNode.Expand%2A> -Methode erweitert wird, wird er durch Aufrufen der <xref:System.Windows.Forms.TreeNode.Collapse%2A> -Methode reduziert. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass Sie <xref:System.Windows.Forms.TreeView> über ein-Steuerelement mit <xref:System.Windows.Forms.TreeNode> einem-Steuerelement verfügen <xref:System.Windows.Forms.TreeNode>, das mindestens ein untergeordnetes Element aufweist.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool" Usage="System.Windows.Forms.TreeNode.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Strukturknoten ausgewählt ist.</summary>
        <value><see langword="true" />, wenn der Strukturknoten ausgewählt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die entsprechende <xref:System.Windows.Forms.TreeNode> Option ausgewählt, nachdem <xref:System.Windows.Forms.TreeNode> ermittelt wurde, ob die über <xref:System.Windows.Forms.TreeNode> gegebene ausgewählt ist und welche ausgewählt werden soll. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem <xref:System.Windows.Forms.TreeNodeCollection> -Steuer <xref:System.Windows.Forms.TreeNode> Element verfügen, das mehrere-Objekte enthält. Außerdem ist es erforderlich, dass über <xref:System.Windows.Forms.ComboBox> ein mit den folgenden Elementen verfügt: "Previous", "PreviousVisible", "Next", "NextVisible", "First" und "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.Forms.TreeNode.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Strukturknoten vollständig oder teilweise sichtbar ist.</summary>
        <value><see langword="true" />, wenn der Strukturknoten vollständig oder teilweise sichtbar ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird der letzte untergeordnete Struktur Knoten des letzten Stamm Struktur Knotens in der Strukturansicht angezeigt, wenn auf eine Schaltfläche geklickt wird. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.TreeView> dass Sie über <xref:System.Windows.Forms.Form> ein-Steuerelement für <xref:System.Windows.Forms.TreeNode> eine verfügen, die <xref:System.Windows.Forms.Button>eine Auflistung von-Objekten enthält, und eine Es sollten genügend Struktur Knoten vorhanden sein, damit Sie nicht alle im Strukturansicht-Steuerelement sichtbar sind.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="LastNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode LastNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode LastNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.LastNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ LastNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.LastNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den letzten untergeordneten Strukturknoten ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.TreeNode" />, der den letzten untergeordneten Strukturknoten darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeNode.LastNode%2A> ist das <xref:System.Windows.Forms.TreeNode> letzte untergeordnete Element <xref:System.Windows.Forms.TreeNodeCollection> in der, <xref:System.Windows.Forms.TreeNode.Nodes%2A> das in der-Eigenschaft des aktuellen Struktur Knotens gespeichert ist. Wenn das <xref:System.Windows.Forms.TreeNode> über keinen untergeordneten Struktur Knoten verfügt <xref:System.Windows.Forms.TreeNode.LastNode%2A> , gibt `null`die-Eigenschaft zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die entsprechende <xref:System.Windows.Forms.TreeNode> Option ausgewählt, nachdem <xref:System.Windows.Forms.TreeNode> ermittelt wurde, ob die über <xref:System.Windows.Forms.TreeNode> gegebene ausgewählt ist und welche ausgewählt werden soll. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem <xref:System.Windows.Forms.TreeNodeCollection> -Steuerelement <xref:System.Windows.Forms.TreeNode> verfügen, das mehrere-Objekte enthält. Außerdem ist es erforderlich, dass über <xref:System.Windows.Forms.ComboBox> ein mit den folgenden Elementen verfügt: "Previous", "PreviousVisible", "Next", "NextVisible", "First" und "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Level { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : int" Usage="System.Windows.Forms.TreeNode.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die nullbasierte Tiefe des Strukturknotens im <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement ab.</summary>
        <value>Die nullbasierte Tiefe des Strukturknotens im <see cref="T:System.Windows.Forms.TreeView" />-Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Windows.Forms.TreeNode.Level%2A> -Eigenschaft wird der Stamm Knoten als erste Ebene der Schachtelung betrachtet und gibt 0 zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.TreeNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Strukturknotens ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Namen des Strukturknotens darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeNode.Name%2A> einer <xref:System.Windows.Forms.TreeNodeCollection>ist auch der Schlüssel des Knotens, wenn der Knoten Teil eines ist. <xref:System.Windows.Forms.TreeNode> Wenn der Knoten keinen Namen hat, wird <xref:System.Windows.Forms.TreeNode.Name%2A> eine leere Zeichenfolge ("") zurückgegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den nächsten nebengeordneten Strukturknoten ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.TreeNode" />, der den nächsten nebengeordneten Strukturknoten darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeNode.NextNode%2A> ist das nächste <xref:System.Windows.Forms.TreeNode> gleich geordnete Element in <xref:System.Windows.Forms.TreeNodeCollection> der, das <xref:System.Windows.Forms.TreeNode.Nodes%2A> in der-Eigenschaft des übergeordneten <xref:System.Windows.Forms.TreeNode>Struktur Knotens gespeichert wird. Wenn kein nächster Struktur Knoten vorhanden ist, gibt <xref:System.Windows.Forms.TreeNode.NextNode%2A> die- `null`Eigenschaft zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die entsprechende <xref:System.Windows.Forms.TreeNode> Option ausgewählt, nachdem <xref:System.Windows.Forms.TreeNode> ermittelt wurde, ob die über <xref:System.Windows.Forms.TreeNode> gegebene ausgewählt ist und welche ausgewählt werden soll. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem <xref:System.Windows.Forms.TreeNodeCollection> -Steuerelement <xref:System.Windows.Forms.TreeNode> verfügen, das mehrere-Objekte enthält. Außerdem ist es erforderlich, dass über <xref:System.Windows.Forms.ComboBox> ein mit den folgenden Elementen verfügt: "Previous", "PreviousVisible", "Next", "NextVisible", "First" und "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="NextVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den nächsten sichtbaren Strukturknoten ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.TreeNode" />, der den nächsten sichtbaren Strukturknoten darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> kann ein untergeordneter, gleich geordneter oder Struktur Knoten aus einer anderen Verzweigung sein. Wenn kein nächster Struktur Knoten vorhanden ist, gibt <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> die- `null`Eigenschaft zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die entsprechende <xref:System.Windows.Forms.TreeNode> Option ausgewählt, nachdem <xref:System.Windows.Forms.TreeNode> ermittelt wurde, ob die über <xref:System.Windows.Forms.TreeNode> gegebene ausgewählt ist und welche ausgewählt werden soll. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem <xref:System.Windows.Forms.TreeNodeCollection> -Steuerelement <xref:System.Windows.Forms.TreeNode> verfügen, das mehrere-Objekte enthält. Außerdem ist es erforderlich, dass über <xref:System.Windows.Forms.ComboBox> ein mit den folgenden Elementen verfügt: "Previous", "PreviousVisible", "Next", "NextVisible", "First" und "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="NodeFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font NodeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font NodeFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NodeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ NodeFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NodeFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.TreeNode.NodeFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schriftart ab, mit der der Bezeichnungstext des Strukturknotens angezeigt wird, oder legt diese fest.</summary>
        <value>Der <see cref="T:System.Drawing.Font" /> für die Anzeige des Bezeichnungstextes des Strukturknotens.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `null`, ist <xref:System.Drawing.Font> der <xref:System.Windows.Forms.Control.Font%2A> verwendete<xref:System.Windows.Forms.TreeView> der Eigenschafts Wert des Steuer Elements, an das dieser Knoten angefügt ist.  
  
> [!NOTE]
>  Wenn die Knoten Schriftart größer ist als der <xref:System.Windows.Forms.Control.Font%2A> Eigenschafts Wert, der <xref:System.Windows.Forms.TreeView> im-Steuerelement festgelegt wird, wird der Text der Struktur Knoten Bezeichnung abgeschnitten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Größe von <xref:System.Windows.Forms.TreeNode.NodeFont%2A> in die angegebene Größe geändert und der <xref:System.Windows.Forms.TreeView.ItemHeight%2A> des übergeordneten <xref:System.Windows.Forms.TreeView> Steuer Elements des Struktur Knotens angepasst. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem-Steuer <xref:System.Windows.Forms.TreeNode> Element verfügen, das <xref:System.Windows.Forms.ComboBox> eine Auflistung von-Objekten enthält  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Windows.Forms.TreeNodeCollection" Usage="System.Windows.Forms.TreeNode.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der <see cref="T:System.Windows.Forms.TreeNode" />-Objekte ab, die dem aktuellen Strukturknoten zugewiesen sind.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.TreeNodeCollection" />, die die Strukturknoten darstellt, die dem aktuellen Strukturknoten zugewiesen sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TreeNode.Nodes%2A> -Eigenschaft kann eine Auflistung anderer <xref:System.Windows.Forms.TreeNode> -Objekte enthalten. Jeder Struktur Knoten in der Auflistung verfügt über eine Eigenschaft <xref:System.Windows.Forms.TreeNode.Nodes%2A> , die einen eigenen <xref:System.Windows.Forms.TreeNodeCollection>enthalten kann. Diese Schachtelung von Struktur Knoten kann die Navigation in einer Baumstruktur erschweren. Die <xref:System.Windows.Forms.TreeNode.FullPath%2A> -Eigenschaft erleichtert das Ermitteln ihrer Position in einer Struktur.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der ausgewählte Struktur Knoten aus einem <xref:System.Windows.Forms.TreeView> entfernt und einer anderen hinzugefügt, wenn beide Struktur Knoten Auflistungen nicht schreibgeschützt sind. Wenn auf <xref:System.Windows.Forms.Button> ein geklickt wird, <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> wird der mithilfe der <xref:System.Windows.Forms.TreeView> - <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> Methode aus dem einen gelöscht und mithilfe <xref:System.Windows.Forms.TreeView> der <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> -Methode dem anderen hinzugefügt. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.TreeView> dass Sie über zwei-Steuer <xref:System.Windows.Forms.Button> Elemente mit <xref:System.Windows.Forms.Form>dem Namen `treeView1` und `treeView2`und einen für einen verfügen  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Parent { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den übergeordneten Strukturknoten des aktuellen Strukturknotens ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.TreeNode" />, der den übergeordneten Strukturknoten des aktuellen Strukturknotens darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn sich der Struktur Knoten auf der Stamm Ebene befindet, <xref:System.Windows.Forms.TreeNode.Parent%2A> gibt die `null`-Eigenschaft zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die <xref:System.Windows.Forms.TreeNode.Text%2A> -und-Eigenschafts <xref:System.Windows.Forms.TreeNode> Werte von angezeigt <xref:System.Windows.Forms.TreeNode.Parent%2A> , die durch <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>die- <xref:System.Windows.Forms.TreeNode.Index%2A> Eigenschaft von dargestellt werden. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem-Steuerelement verfügen. Der <xref:System.Windows.Forms.TreeView> sollte über mindestens zwei Stamm Knoten verfügen, die jeweils über mindestens einen untergeordneten Knoten verfügen.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den vorherigen nebengeordneten Strukturknoten ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.TreeNode" />, der den vorherigen nebengeordneten Strukturknoten darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeNode.PrevNode%2A> ist das vorherige <xref:System.Windows.Forms.TreeNode> gleich geordnete Element in <xref:System.Windows.Forms.TreeNodeCollection> der, die <xref:System.Windows.Forms.TreeNode.Nodes%2A> in der-Eigenschaft des übergeordneten <xref:System.Windows.Forms.TreeNode>Struktur Knotens gespeichert ist. Wenn kein vorheriger Struktur Knoten vorhanden ist, gibt <xref:System.Windows.Forms.TreeNode.PrevNode%2A> die- `null`Eigenschaft zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die entsprechende <xref:System.Windows.Forms.TreeNode> Option ausgewählt, nachdem <xref:System.Windows.Forms.TreeNode> ermittelt wurde, ob die über <xref:System.Windows.Forms.TreeNode> gegebene ausgewählt ist und welche ausgewählt werden soll. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem <xref:System.Windows.Forms.TreeNodeCollection> -Steuerelement <xref:System.Windows.Forms.TreeNode> verfügen, das mehrere-Objekte enthält. Außerdem ist es erforderlich, dass über <xref:System.Windows.Forms.ComboBox> ein mit den folgenden Elementen verfügt: "Previous", "PreviousVisible", "Next", "NextVisible", "First" und "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="PrevVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrevVisibleNode : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den vorherigen sichtbaren Strukturknoten ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.TreeNode" />, der den vorherigen sichtbaren Strukturknoten darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> kann ein untergeordneter, gleich geordneter oder Struktur Knoten aus einer anderen Verzweigung sein. Wenn kein vorheriger Struktur Knoten vorhanden ist, gibt <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> die- `null`Eigenschaft zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die entsprechende <xref:System.Windows.Forms.TreeNode> Option ausgewählt, nachdem <xref:System.Windows.Forms.TreeNode> ermittelt wurde, ob die über <xref:System.Windows.Forms.TreeNode> gegebene ausgewählt ist und welche ausgewählt werden soll. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem <xref:System.Windows.Forms.TreeNodeCollection> -Steuerelement <xref:System.Windows.Forms.TreeNode> verfügen, das mehrere-Objekte enthält. Außerdem ist es erforderlich, dass über <xref:System.Windows.Forms.ComboBox> ein mit den folgenden Elementen verfügt: "Previous", "PreviousVisible", "Next", "NextVisible", "First" und "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="treeNode.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt den aktuellen Strukturknoten aus dem Strukturansicht-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.TreeNode.Remove%2A> -Methode aufgerufen wird, werden der Struktur Knoten und alle untergeordneten Struktur Knoten, die der <xref:System.Windows.Forms.TreeNode>zugewiesen sind, aus dem <xref:System.Windows.Forms.TreeView>entfernt. Die entfernten untergeordneten Knoten werden aus <xref:System.Windows.Forms.TreeView> entfernt, sind aber noch an diesen Struktur Knoten angefügt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.TreeNode> -Objekt entfernt, wenn der Benutzer mit der rechten Maustaste darauf klickt und es von erweitert auf reduziert umschaltet, wenn der Benutzer auf das Mausrad klickt. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem-Steuerelement verfügen. Das <xref:System.Windows.Forms.TreeView> -Element sollte über mindestens zwei Stamm Struktur Knoten verfügen, die jeweils über mindestens einen untergeordneten Knoten verfügen.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Indexwert des Bildes in der Bildliste ab, das für einen ausgewählten Strukturknoten angezeigt wird, oder legt diesen fest.</summary>
        <value>Ein nullbasierter Indexwert, der die Bildposition in einer <see cref="T:System.Windows.Forms.ImageList" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> -Wert ist der Indexwert <xref:System.Drawing.Image> eines in der <xref:System.Windows.Forms.ImageList> , der der <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> -Eigenschaft zugewiesen ist.  
  
> [!NOTE]
>  Der Standardwert <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> der-Eigenschaft ist identisch mit der <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> -Eigenschaft des <xref:System.Windows.Forms.TreeView> -Steuer Elements, <xref:System.Windows.Forms.TreeNode> dem der zugewiesen ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein erstellt und <xref:System.Windows.Forms.ImageList> einem- <xref:System.Windows.Forms.TreeView> Steuerelement zugewiesen, <xref:System.Windows.Forms.TreeView> und das <xref:System.Windows.Forms.TreeNode> -Steuerelement wird mit-Objekten gefüllt. Den Struktur Knoten werden Bilder aus dem <xref:System.Windows.Forms.ImageList> zugewiesen, das angezeigt wird, wenn sich der Struktur Knoten in einem ausgewählten oder nicht ausgewählten Zustand befindet. Für dieses Beispiel ist es erforderlich, <xref:System.Windows.Forms.Form> dass ein <xref:System.Windows.Forms.TreeView>enthält, das <xref:System.Collections.ArrayList> eine `Customer` enthält, sowie ein `Order` -Objekt, das-Objekte enthält. Außerdem müssen die `Customer` -und- `Order` Objekte definiert werden.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel des Bildes ab, das im Strukturknoten angezeigt wird, wenn dieser ausgewählt ist, oder legt diesen fest.</summary>
        <value>Der Schlüssel des Bildes, das angezeigt wird, wenn der Strukturknoten ausgewählt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der von dieser Eigenschaft zurückgegebene Bild Schlüssel ist in der <xref:System.Windows.Forms.TreeView.ImageList%2A> -Eigenschaft des über <xref:System.Windows.Forms.TreeView> geordneten-Steuer Elements enthalten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.Serialize : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="treeNode.Serialize (si, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="si">Die <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die das <see cref="T:System.Windows.Forms.TreeNode" /> beschreibt.</param>
        <param name="context">Der <see cref="T:System.Runtime.Serialization.StreamingContext" />, der während der Serialisierung den Zustand des Streams angibt.</param>
        <summary>Speichert den Zustand des <see cref="T:System.Windows.Forms.TreeNode" /> in der angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für Serialisierungsdienste. Zugehörige Enumeration:<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageIndex : int with get, set" Usage="System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index des Bilds ab, das den Zustand des <see cref="T:System.Windows.Forms.TreeNode" /> angibt, wenn die <see cref="T:System.Windows.Forms.TreeView" />-Eigenschaft der übergeordneten <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> auf <see langword="false" /> festgelegt ist, oder legt diesen fest.</summary>
        <value>Der Index des Bilds, das den Zustand des <see cref="T:System.Windows.Forms.TreeNode" /> angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der von dieser Eigenschaft zurückgegebene Bildindex ist in der <xref:System.Windows.Forms.TreeView.StateImageList%2A> -Eigenschaft des übergeordneten <xref:System.Windows.Forms.TreeView> -Steuer Elements enthalten.  
  
 Wenn für das <xref:System.Windows.Forms.TreeView> übergeordnete Kontrollkästchen aktiviert ist <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> , wird ignoriert, und der Knoten zeigt das erste oder zweite Bild in <xref:System.Windows.Forms.TreeView.StateImageList%2A> der Gruppe auf dem <xref:System.Windows.Forms.TreeView> übergeordneten Element an, um den Status "deaktiviert" oder "aktiviert" anzugeben. Das Umschalten der <xref:System.Windows.Forms.TreeNode.Checked%2A> Eigenschaft wirkt sich nicht <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>auf den Wert von aus.  
  
 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> Gibt-1 zurück, wenn kein Wert festgelegt ist. Die <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> Eigenschaften <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> und schließen sich gegenseitig aus, d. h., wenn eine festgelegt ist, wird die andere ignoriert. Wenn Sie die <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> -Eigenschaft festlegen, <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> wird die-Eigenschaft automatisch auf-1 festgelegt. Wenn Sie festlegen <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> wird von automatisch eine leere Zeichenfolge ("") festgelegt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Index ist kleiner als -1 oder größer als 14.</exception>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageKey" />
      </Docs>
    </Member>
    <Member MemberName="StateImageKey">
      <MemberSignature Language="C#" Value="public string StateImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageKey : string with get, set" Usage="System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel des Bilds ab, das den Zustand des <see cref="T:System.Windows.Forms.TreeNode" /> angibt, wenn die <see cref="T:System.Windows.Forms.TreeView" />-Eigenschaft der übergeordneten <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" /> auf <see langword="false" /> festgelegt ist, oder legt diesen fest.</summary>
        <value>Der Schlüssel des Bilds, das den Zustand des <see cref="T:System.Windows.Forms.TreeNode" /> angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der von dieser Eigenschaft zurückgegebene Bild Schlüssel ist in der <xref:System.Windows.Forms.TreeView.StateImageList%2A> -Eigenschaft des übergeordneten <xref:System.Windows.Forms.TreeView> Steuer Elements enthalten.  
  
 Wenn für das <xref:System.Windows.Forms.TreeView> übergeordnete Kontrollkästchen aktiviert ist <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> , wird ignoriert, und der Knoten zeigt das erste oder zweite Bild in <xref:System.Windows.Forms.TreeView.StateImageList%2A> der Gruppe auf dem <xref:System.Windows.Forms.TreeView> übergeordneten Element an, um den Status "deaktiviert" oder "aktiviert" anzugeben. Das Umschalten der <xref:System.Windows.Forms.TreeNode.Checked%2A> Eigenschaft wirkt sich nicht <xref:System.Windows.Forms.TreeNode.StateImageKey%2A>auf den Wert von aus.  
  
 Die <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> Eigenschaften <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> und schließen sich gegenseitig aus, d. h., wenn eine festgelegt ist, wird die andere ignoriert. Wenn Sie die <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> -Eigenschaft festlegen, <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> wird die-Eigenschaft automatisch auf-1 festgelegt. Wenn Sie festlegen <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> wird von automatisch eine leere Zeichenfolge ("") festgelegt. Legen Sie für den <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> auf ein Bild mit einem entsprechenden Index zwischen 0 und 14 fest. Sie können <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> für ein Bild mit einem Indexwert größer als 14 festlegen (eine Ausnahme wird nicht ausgelöst), das Bild wird jedoch möglicherweise nicht angezeigt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die Daten zum Serialisieren des <see cref="T:System.Windows.Forms.TreeNode" /> enthält.</param>
        <param name="context">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der Informationen zum Ziel dieser Serialisierung enthält.</param>
        <summary>Füllt ein Serialisierungsinformationsobjekt mit den Daten auf, die zum Serialisieren des <see cref="T:System.Windows.Forms.TreeNode" /> erforderlich sind.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für Serialisierungsdienste. Zugehörige Enumeration:<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.TreeNode.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das Daten über den Strukturknoten enthält, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das Daten über den Strukturknoten enthält. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle <xref:System.Object> abgeleiteten Typen können dieser Eigenschaft zugewiesen werden. Wenn diese Eigenschaft über den Windows Forms-Designer festgelegt wird, kann nur Text zugewiesen werden.  
  
> [!CAUTION]
>  Die <xref:System.Windows.Forms.TreeNode.Clone%2A> -Methode führt eine flache Kopie des Knotens aus. Wenn der Wert <xref:System.Windows.Forms.TreeNode.Tag%2A> der Eigenschaft ein Referenztyp ist, zeigen sowohl die ursprüngliche als auch die geklonte Kopie auf dieselbe einzelne Instanz <xref:System.Windows.Forms.TreeNode.Tag%2A> des Werts.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Stamm Struktur Knoten erstellt, dem untergeordnete Struktur Knoten zugewiesen werden. Ein untergeordneter Struktur Knoten für `Customer` jedes Objekt in <xref:System.Collections.ArrayList> einer wird dem Stamm Struktur Knoten sowie einem untergeordneten Struktur Knoten für jedes `Order` Objekt, das dem `Customer` Objekt zugewiesen ist, hinzugefügt. Das `Customer` -Objekt wird der <xref:System.Windows.Forms.TreeNode.Tag%2A> -Eigenschaft zugewiesen, und die Struktur Knoten `Customer` , die-Objekte <xref:System.Drawing.Color.Orange%2A> darstellen, werden mit Text angezeigt. `Customer` `customerArray` <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> `Order` Fürdieses<xref:System.Windows.Forms.TreeView> Beispiel ist es erforderlich, dass Sie ein-Objekt und ein-Objekt definiert haben, ein-Steuerelement für ein-Objekt und ein -Objektmit`Customer`  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den in der Bezeichnung des Strukturknotens angezeigten Text ab oder legt diesen fest.</summary>
        <value>Der in der Beschriftung des Strukturknotens angezeigte Text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die maximale Anzahl von Zeichen, die <xref:System.Windows.Forms.TreeNode> ein angezeigt werden kann, ist 259. Wenn dieser <xref:System.String> Eigenschaft eine zugewiesen ist, die mehr als 259 Zeichen aufweist, werden nur die ersten 259 Zeichen angezeigt.  
  
 Diese Eigenschaft kann vom Benutzer nicht festgelegt werden, <xref:System.Windows.Forms.TreeView.LabelEdit%2A> wenn die-Eigenschaft <xref:System.Windows.Forms.TreeView> des übergeordneten `false`Elements auf festgelegt ist. Die Alternative zum expliziten Festlegen dieser Eigenschaft besteht darin, den Struktur Knoten zu erstellen, indem <xref:System.Windows.Forms.TreeNode.%23ctor%2A> Sie einen der Konstruktoren verwenden, der über einen <xref:System.Windows.Forms.TreeNode.Text%2A> Zeichen folgen Parameter verfügt, der die Eigenschaft darstellt. Wenn eine Bezeichnung angezeigt wird, wird <xref:System.Windows.Forms.TreeNode> Sie neben dem Bild angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Stamm Struktur Knoten erstellt, dem untergeordnete Struktur Knoten zugewiesen werden. Ein untergeordneter Struktur Knoten für `Customer` jedes Objekt in <xref:System.Collections.ArrayList> einer wird dem Stamm Struktur Knoten sowie einem untergeordneten Struktur Knoten für jedes `Order` Objekt, das dem `Customer` Objekt zugewiesen ist, hinzugefügt. Das `Customer` -Objekt wird der <xref:System.Windows.Forms.TreeNode.Tag%2A> -Eigenschaft zugewiesen, und die Struktur Knoten `Customer` , die-Objekte <xref:System.Drawing.Color.Orange%2A> darstellen, werden mit Text angezeigt. `Customer` `customerArray` <xref:System.Windows.Forms.Form> <xref:System.Collections.ArrayList> `Order` Fürdieses<xref:System.Windows.Forms.TreeView> Beispiel ist es erforderlich, dass Sie ein-Objekt und ein-Objekt definiert haben, ein-Steuerelement für ein-Objekt und ein -Objektmit`Customer`  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.LabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public void Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Toggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Toggle" />
      <MemberSignature Language="VB.NET" Value="Public Sub Toggle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Toggle();" />
      <MemberSignature Language="F#" Value="member this.Toggle : unit -&gt; unit" Usage="treeNode.Toggle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wechselt zwischen dem erweiterten und dem reduzierten Zustand des Strukturknotens.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Struktur Knoten wird in den Zustand versetzt, der dem aktuellen Zustand entgegengesetzt ist, entweder erweitert oder reduziert.  
  
> [!NOTE]
>  Der Zustand <xref:System.Windows.Forms.TreeNode> eines wird persistent gespeichert. Wenn z. b. die nächste Ebene von untergeordneten Knoten zuvor nicht reduziert wurde, <xref:System.Windows.Forms.TreeNode.Expand%2A> werden beim Aufrufen der-Methode die untergeordneten Knoten in Ihrem zuvor erweiterten Zustand angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.TreeNode> -Objekt entfernt, wenn der Benutzer mit der rechten Maustaste darauf klickt und es von erweitert auf reduziert umschaltet, wenn der Benutzer auf das Mausrad klickt. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem-Steuerelement verfügen. Das <xref:System.Windows.Forms.TreeView> -Element sollte über mindestens zwei Stamm Struktur Knoten verfügen, die jeweils über mindestens einen untergeordneten Knoten verfügen.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der angezeigt wird, wenn mit dem Mauszeiger auf einen <see cref="T:System.Windows.Forms.TreeNode" /> gezeigt wird, oder legt diesen fest.</summary>
        <value>Ruft den Text ab, der angezeigt wird, wenn mit dem Mauszeiger auf einen <see cref="T:System.Windows.Forms.TreeNode" /> gezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen die <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> -Eigenschaft des übergeordneten <xref:System.Windows.Forms.TreeView> Elements auf festlegen <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> , `true` damit das zur Laufzeit sichtbar ist.  
  
 Wenn das <xref:System.Windows.Forms.TreeView> Steuerelement über eine QuickInfo verfügt und <xref:System.Windows.Forms.TreeNode> auch einen enthält <xref:System.Windows.Forms.ToolTip>, der über <xref:System.Windows.Forms.ToolTip> ein verfügt, wird nur der für den Knoten angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> -Eigenschaft und der- <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> Eigenschaft veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Windows Form ein, `InitializeTreeViewWithToolTips` und nennen Sie ihn aus dem Konstruktor oder <xref:System.Windows.Forms.Form.Load> Ereignishandler des Formulars.  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="treeNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die das aktuelle Objekt darstellt.</summary>
        <returns>Eine Zeichenfolge, die das aktuelle Objekt darstellt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeView TreeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeView TreeView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.TreeView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TreeView As TreeView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeView ^ TreeView { System::Windows::Forms::TreeView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TreeView : System.Windows.Forms.TreeView" Usage="System.Windows.Forms.TreeNode.TreeView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die übergeordnete Strukturansicht ab, der der Strukturknoten zugewiesen ist.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.TreeView" />, die die übergeordnete Strukturansicht darstellt, der der Strukturknoten zugeordnet ist, oder <see langword="null" />, wenn der Knoten keiner Strukturansicht zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die entsprechende <xref:System.Windows.Forms.TreeNode> Option ausgewählt, nachdem <xref:System.Windows.Forms.TreeNode> ermittelt wurde, ob die über <xref:System.Windows.Forms.TreeNode> gegebene ausgewählt ist und welche ausgewählt werden soll. Dieses Beispiel erfordert, dass Sie über <xref:System.Windows.Forms.Form> ein- <xref:System.Windows.Forms.TreeView> Steuerelement mit einem <xref:System.Windows.Forms.TreeNodeCollection> -Steuerelement <xref:System.Windows.Forms.TreeNode> verfügen, das mehrere-Objekte enthält. Außerdem ist es erforderlich, dass über <xref:System.Windows.Forms.ComboBox> ein mit den folgenden Elementen verfügt: "Previous", "PreviousVisible", "Next", "NextVisible", "First" und "Last".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>
