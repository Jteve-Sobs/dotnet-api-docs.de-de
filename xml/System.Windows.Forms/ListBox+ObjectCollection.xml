<Type Name="ListBox+ObjectCollection" FullName="System.Windows.Forms.ListBox+ObjectCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f37a26d99da05e5314728265ce68f8cc5ed8211" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70316801" /></Metadata><TypeSignature Language="C#" Value="public class ListBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::ObjectCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.ObjectCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Auflistung von Elementen in einem <see cref="T:System.Windows.Forms.ListBox" /> dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListBox.ObjectCollection> -Klasse speichert die Elemente, die <xref:System.Windows.Forms.ListBox>in der angezeigt werden. In der <xref:System.Windows.Forms.ListBox> -Klasse sind zwei weitere Sammlungen definiert, mit denen Sie bestimmen können, welche Elemente in dieser Auflistung ausgewählt werden. Die <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> -Klasse stellt Eigenschaften und Methoden bereit, um zu bestimmen, welche <xref:System.Windows.Forms.ListBox.ObjectCollection>Elemente innerhalb der <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> ausgewählt werden, während die-Klasse Ihnen <xref:System.Windows.Forms.ListBox.ObjectCollection> ermöglicht, zu bestimmen, welche Indizes in ausgewählt sind.  
  
 Es gibt eine Reihe von Möglichkeiten, der Auflistung Elemente hinzuzufügen. Die <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> -Methode bietet die Möglichkeit, der Auflistung ein einzelnes-Objekt hinzuzufügen. Wenn Sie der Auflistung eine Reihe von Objekten hinzufügen möchten, erstellen Sie ein Array von Elementen, und weisen <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> Sie es der-Methode zu. Wenn Sie ein Objekt an einer bestimmten Position in der Auflistung einfügen möchten, können Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> -Methode verwenden. Zum Entfernen von Elementen können Sie entweder die <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> -Methode oder die <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> -Methode verwenden, wenn Sie wissen, wo sich das Element in der Auflistung befindet. Mit <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> der-Methode können Sie alle Elemente aus der Auflistung entfernen, anstatt die <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> -Methode zu verwenden, um ein einzelnes Element gleichzeitig zu entfernen.  
  
 Mithilfe der <xref:System.Windows.Forms.ListBox> <xref:System.Windows.Forms.ListControl.DataSource%2A> -Eigenschaft können Sie auch die Elemente eines bearbeiten. Wenn Sie <xref:System.Windows.Forms.ListControl.DataSource%2A> die-Eigenschaft zum Hinzufügen von Elementen <xref:System.Windows.Forms.ListBox>zu verwenden, können Sie die Elemente in <xref:System.Windows.Forms.ListBox> der mithilfe <xref:System.Windows.Forms.ListBox.Items%2A> der-Eigenschaft anzeigen, aber Sie können der Liste keine Elemente hinzufügen <xref:System.Windows.Forms.ListBox.ObjectCollection>oder aus der Liste entfernen, indem Sie die Methoden von verwenden.  
  
 Zusätzlich zu den Methoden und Eigenschaften zum Hinzufügen und Entfernen von Elementen <xref:System.Windows.Forms.ListBox.ObjectCollection> stellt das auch Methoden zum Suchen von Elementen in der Auflistung bereit. Mit <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> der-Methode können Sie feststellen, ob ein Objekt ein Member der Auflistung ist. Wenn Sie wissen, dass sich das Element in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> -Methode verwenden, um zu bestimmen, wo sich das Element in der Auflistung befindet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein vom Besitzer gezeichneter <xref:System.Windows.Forms.ListBox> veranschaulicht, indem die `OwnerDrawVariable` <xref:System.Windows.Forms.ListBox.DrawMode%2A> -Eigenschaft auf den- <xref:System.Windows.Forms.ListBox.MeasureItem> Wert festgelegt und die <xref:System.Windows.Forms.ListBox.DrawItem> Ereignisse und behandelt werden. Außerdem wird das Festlegen der <xref:System.Windows.Forms.ListBox.BorderStyle%2A> Eigenschaften <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> und und die Verwendung <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> der-Methode veranschaulicht.  
  
 Um dieses Beispiel auszuführen, fügen Sie es in ein leeres Formular ein, <xref:System.Drawing> das den-Namespace und den <xref:System.Windows.Forms> -Namespace importiert. Ruft `InitializeOwnerDrawnListBox` den-Konstruktor oder `Load` die-Methode des Formulars auf.  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" />
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Windows.Forms.ListBox" />, die die Auflistung besitzt.</param>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz dieser Klasse erstellen, ohne Sie mit einem <xref:System.Windows.Forms.ListBox> -Steuerelement zu verknüpfen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * obj[] -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Windows.Forms.ListBox" />, die die Auflistung besitzt.</param>
        <param name="value">Ein Array von Objekten, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />, die ein Array von Objekten enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz dieser Klasse erstellen, ohne Sie mit einem <xref:System.Windows.Forms.ListBox> -Steuerelement zu verknüpfen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * System.Windows.Forms.ListBox.ObjectCollection -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Windows.Forms.ListBox" />, die die Auflistung besitzt.</param>
        <param name="value">Eine <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />, aus der der Inhalt in diese Auflistung kopiert wird.</param>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> auf der Grundlage einer anderen <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz dieser Klasse erstellen, ohne Sie mit einem <xref:System.Windows.Forms.ListBox> -Steuerelement zu verknüpfen. Diese Version des Konstruktors ermöglicht es Ihnen, die in einer vorhandenen Instanz der <xref:System.Windows.Forms.ListBox.ObjectCollection> -Klasse angegebenen Elemente zu verwenden, um der Auflistung bei der Erstellung Elemente hinzuzufügen. Sie können diesen Konstruktor verwenden, um die in einem anderen <xref:System.Windows.Forms.ListBox> Steuerelement angegebenen Elemente mit dieser Auflistung zu verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : obj -&gt; int" Usage="objectCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Ein Objekt, das das der Auflistung hinzuzufügende Element darstellt.</param>
        <summary>Fügt der Liste von Elementen für eine <see cref="T:System.Windows.Forms.ListBox" /> ein Element hinzu.</summary>
        <returns>Der nullbasierte Index des Elements in der Auflistung oder -1, wenn <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> aufgerufen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListBox.Sorted%2A> -Eigenschaft <xref:System.Windows.Forms.ListBox> von auf `true`festgelegt ist, wird das Element alphabetisch in die Liste eingefügt. Andernfalls wird das Element am Ende der Liste eingefügt. Um ein Element an einer bestimmten Position in das Listenfeld einzufügen, verwenden Sie <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> die-Methode. Verwenden Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> -Methode, um dem Listenfeld in einem einzelnen Vorgang einen Satz von Elementen hinzuzufügen. Wenn <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> Sie die <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> -Methode<xref:System.Windows.Forms.ListBox.EndUpdate%2A> verwenden möchten, um der Liste eine große Anzahl von Elementen hinzuzufügen, verwenden Sie die-Methode und die-Methode, um zu verhindern ,dassjedesMal,wenneinElementzurListehinzugefügtwird,neugezeichnetwird,bisalleElementezurListehinzugefügtwurden.<xref:System.Windows.Forms.ListBox> Beim Hinzufügen von Elementen <xref:System.Windows.Forms.ListBox>zu einer ist es effizienter, die Elemente zuerst zu sortieren und dann neue Elemente hinzuzufügen.  
  
 Wenn der Auflistung ein Objekt hinzugefügt wird, prüft <xref:System.Windows.Forms.ListBox> der erste, ob die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> -Eigenschaft der <xref:System.Windows.Forms.ListControl> -Klasse den Namen eines Members aus dem Objekt hat, das beim Abrufen des Element Texts referenziert werden soll. Wenn für <xref:System.Windows.Forms.ListControl.DisplayMember%2A> die-Eigenschaft kein-Member angegeben ist, <xref:System.Windows.Forms.ListBox> ruft <xref:System.Object.ToString%2A> die-Methode des-Objekts auf, um den in der Liste anzuzeigenden Text abzurufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.ListBox> Steuerelement erstellt wird, das mehrere Elemente in Spalten anzeigt und in der Liste des Steuer Elements mehr als ein Element ausgewählt werden kann. Der Code für das <xref:System.Windows.Forms.ListBox> Beispiel fügt der mithilfe der <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> -Methode der <xref:System.Windows.Forms.ListBox.ObjectCollection> -Klasse 50 Elemente hinzu und wählt dann mithilfe der <xref:System.Windows.Forms.ListBox.SetSelected%2A> -Methode drei Elemente aus der Liste aus. Der Code zeigt dann Werte aus der <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> -Auflistung an ( <xref:System.Windows.Forms.ListBox.SelectedItems%2A> über die-Eigenschaft <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> ) und ( <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> über die-Eigenschaft). Dieses Beispiel erfordert, dass sich der Code in einem befindet und von <xref:System.Windows.Forms.Form>einem aufgerufen wird.  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">Der verfügbare Speicherplatz reicht nicht aus, um der Liste ein neues Element hinzuzufügen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Liste von Elementen für eine <see cref="T:System.Windows.Forms.ListBox" /> eine Gruppe von Elementen hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : obj[] -&gt; unit" Usage="objectCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">Ein Array von Objekten, die der Liste hinzugefügt werden sollen.</param>
        <summary>Fügt der Liste von Elementen für eine <see cref="T:System.Windows.Forms.ListBox" /> ein Array von Elementen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListBox.Sorted%2A> -Eigenschaft <xref:System.Windows.Forms.ListBox> von auf `true`festgelegt ist, werden die Elemente alphabetisch in die Liste eingefügt. Andernfalls werden die Elemente in der Reihenfolge eingefügt, in der Sie innerhalb des Arrays auftreten. Diese Methode wird in der Regel an ein <xref:System.String> Array von-Objekten übermittelt, aber an diese Methode kann ein Array von einem beliebigen Objekttyp übermittelt werden. Wenn der Auflistung ein Objekt hinzugefügt wird, prüft <xref:System.Windows.Forms.ListBox> der erste, ob die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> -Eigenschaft der <xref:System.Windows.Forms.ListControl> -Klasse den Namen eines Members aus dem Objekt hat, das beim Abrufen des Element Texts referenziert werden soll. Wenn für <xref:System.Windows.Forms.ListControl.DisplayMember%2A> die-Eigenschaft kein-Member angegeben ist, <xref:System.Windows.Forms.ListBox> ruft <xref:System.Object.ToString%2A> die-Methode des-Objekts auf, um den in der Liste anzuzeigenden Text abzurufen. Wenn Sie diese Methode zum Hinzufügen von Elementen <xref:System.Windows.Forms.ListBox>hinzufügen, müssen Sie die-Methode <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> und <xref:System.Windows.Forms.ListBox.EndUpdate%2A> die-Methode nicht aufzurufen, um die Leistung zu optimieren. Beim Hinzufügen von Elementen <xref:System.Windows.Forms.ListBox>zu einer ist es effizienter, die Elemente zuerst zu sortieren und dann neue Elemente hinzuzufügen. Sie können diese Methode verwenden, um der Liste eine Gruppe von Elementen hinzuzufügen oder um die in einem anderen <xref:System.Windows.Forms.ListBox>gespeicherten Elemente wiederzuverwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein vom Besitzer gezeichneter <xref:System.Windows.Forms.ListBox> veranschaulicht, indem die `OwnerDrawVariable` <xref:System.Windows.Forms.ListBox.DrawMode%2A> -Eigenschaft auf den- <xref:System.Windows.Forms.ListBox.MeasureItem> Wert festgelegt und die <xref:System.Windows.Forms.ListBox.DrawItem> Ereignisse und behandelt werden. Außerdem wird das Festlegen der <xref:System.Windows.Forms.ListBox.BorderStyle%2A> Eigenschaften <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> und und die Verwendung <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> der-Methode veranschaulicht.  
  
 Um dieses Beispiel auszuführen, fügen Sie es in ein leeres Formular ein, <xref:System.Drawing> das den-Namespace und den <xref:System.Windows.Forms> -Namespace importiert. Ruft `InitializeOwnerDrawnListBox` den-Konstruktor oder `Load` die-Methode des Formulars auf.  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.ObjectCollection -&gt; unit" Usage="objectCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="value">Eine in diese Auflistung zu ladende <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</param>
        <summary>Fügt die Elemente einer vorhandenen <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> der Liste von Elementen in einer <see cref="T:System.Windows.Forms.ListBox" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListBox.Sorted%2A> -Eigenschaft <xref:System.Windows.Forms.ListBox> von auf `true`festgelegt ist, werden die Elemente alphabetisch in die Liste eingefügt. Andernfalls werden die Elemente in der Reihenfolge eingefügt, in der Sie innerhalb des Arrays auftreten. Diese Methode wird in der Regel an ein <xref:System.String> Array von-Objekten übermittelt, aber an diese Methode kann ein Array von einem beliebigen Objekttyp übermittelt werden. Wenn der Auflistung ein Objekt hinzugefügt wird, prüft <xref:System.Windows.Forms.ListBox> der erste, ob die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> -Eigenschaft der <xref:System.Windows.Forms.ListControl> -Klasse den Namen eines Members aus dem Objekt hat, das beim Abrufen des Element Texts referenziert werden soll. Wenn für <xref:System.Windows.Forms.ListControl.DisplayMember%2A> die-Eigenschaft kein-Member angegeben ist, <xref:System.Windows.Forms.ListBox> ruft <xref:System.Object.ToString%2A> die-Methode des-Objekts auf, um den in der Liste anzuzeigenden Text abzurufen.  
  
 Wenn Sie diese Methode zum Hinzufügen von Elementen <xref:System.Windows.Forms.ListBox>hinzufügen, müssen Sie die-Methode <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> und <xref:System.Windows.Forms.ListBox.EndUpdate%2A> die-Methode nicht aufzurufen, um die Leistung zu optimieren. Beim Hinzufügen von Elementen <xref:System.Windows.Forms.ListBox>zu einer ist es effizienter, die Elemente zuerst zu sortieren und dann neue Elemente hinzuzufügen. Sie können diese Methode verwenden, um die in einer anderen <xref:System.Windows.Forms.ListBox>gespeicherten Elemente wiederzuverwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="objectCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie Elemente aus der Liste entfernen, gehen alle Informationen zu den gelöschten Elementen verloren. Um ein einzelnes Element aus der <xref:System.Windows.Forms.ListBox>zu entfernen, verwenden Sie die-Methode oder <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> die <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> -Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="objectCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das das in der Auflistung zu suchende Element darstellt.</param>
        <summary>Bestimmt, ob das angegebene Element in der Auflistung enthalten ist.</summary>
        <returns><see langword="true" />, wenn das Element in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> der-Methode können Sie feststellen, ob ein Objekt ein Member der Auflistung ist. Wenn Sie wissen, dass sich das Element in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> -Methode verwenden, um zu bestimmen, wo sich das Element in der Auflistung befindet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (destination, arrayIndex)" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void CopyTo (object[] dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] dest, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (dest, arrayIndex)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Object[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dest" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">Das Objektarray, in das die Elemente aus der Collection kopiert werden sollen.</param>
        <param name="dest">Das Objektarray, in das die Elemente aus der Collection kopiert werden sollen.</param>
        <param name="arrayIndex">Die Position im Zielarray, an die die Elemente der Auflistung kopiert werden sollen.</param>
        <summary>Kopiert die gesamte Auflistung an eine angegebene Position in ein vorhandenes Array von Objekten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie die Elemente aus mehreren Auflistungen in einem einzelnen Array kombinieren. Anschließend können Sie dieses Array verwenden, um den Inhalt eines anderen <xref:System.Windows.Forms.ListBox> Steuer Elements mit der <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> -Methode der <xref:System.Windows.Forms.ListBox.ObjectCollection> -Klasse aufzufüllen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Anzahl der Elemente in der Auflistung</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht es Ihnen, die Anzahl der Elemente in der <xref:System.Windows.Forms.ListBox>zu bestimmen. Sie können diesen Wert dann verwenden, wenn Sie die Werte der Auflistung durchlaufen und eine Reihe von Iterationen bereitstellen müssen, um die Schleife auszuführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="objectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, mit dem die Elementauflistung durchlaufen werden soll.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der die Elementauflistung darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="objectCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das das in der Auflistung zu suchende Element darstellt.</param>
        <summary>Gibt den Index des angegebenen Elements in der Auflistung zurück.</summary>
        <returns>Der nullbasierte Index der Position des Elements in der Auflistung, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> der-Methode können Sie ermitteln, wo sich ein Element in der Auflistung befindet. Verwenden Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> -Methode, um zu bestimmen, ob sich ein Element in der Auflistung befindet, bevor Sie diese Methode aufrufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist null.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="objectCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Indexspeicherort, in den das Element eingefügt wird.</param>
        <param name="item">Ein Objekt, das das einzufügende Element repräsentiert.</param>
        <summary>Fügt ein Element am angegebenen Index in das Listenfeld ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie ein Element an einer bestimmten Position in <xref:System.Windows.Forms.ListBox>einfügen. Wenn die <xref:System.Windows.Forms.ListBox.Sorted%2A> -Eigenschaft <xref:System.Windows.Forms.ListBox> von auf true festgelegt ist, wird das Element unabhängig von `index` den im-Parameter angegebenen Werten an der korrekten Position in der sortierten Liste hinzugefügt. Wenn der Auflistung ein Objekt hinzugefügt wird, prüft <xref:System.Windows.Forms.ListBox> der erste, ob die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> -Eigenschaft der <xref:System.Windows.Forms.ListControl> -Klasse den Namen eines Members aus dem Objekt hat, das beim Abrufen des Element Texts referenziert werden soll. Wenn für <xref:System.Windows.Forms.ListControl.DisplayMember%2A> die-Eigenschaft kein-Member angegeben ist, <xref:System.Windows.Forms.ListBox> ruft <xref:System.Object.ToString%2A> die-Methode des-Objekts auf, um den in der Liste anzuzeigenden Text abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 (null) oder größer als der Wert der <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />-Klasse.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value><see langword="true" />, wenn diese Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für `false` diese Auflistung immer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.ListBox.ObjectCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Elements in der Auflistung, der abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft das Element am angegebenen Index in der Auflistung ab oder legt dieses fest.</summary>
        <value>Ein Objekt, das das Element am angegebenen Index in der Auflistung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie das Element abrufen <xref:System.Windows.Forms.ListBox> , das an einer bestimmten Position in der Auflistung gespeichert ist. Verwenden Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> -Methode, um den Index eines bestimmten Elements in der Auflistung zu bestimmen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />-Klasse.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="objectCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das das aus der Auflistung zu entfernende Element darstellt.</param>
        <summary>Entfernt das angegebene Objekt aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein Element aus der Liste entfernen, werden die Indizes für nachfolgende Elemente in der Liste geändert. Alle Informationen über das entfernte Element werden gelöscht. Mit dieser Methode können Sie ein bestimmtes Element aus der Liste entfernen, indem Sie das eigentliche Element angeben, das aus der Liste entfernt werden soll. Verwenden Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> -Methode, um den Index des Elements anzugeben, das anstelle des Elements selbst entfernt werden soll. Um alle Elemente aus der Liste zu entfernen, verwenden <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> Sie die-Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="objectCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
        <summary>Entfernt das Element am angegebenen Index in der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein Element aus der Liste entfernen, werden die Indizes für nachfolgende Elemente in der Liste geändert. Alle Informationen über das entfernte Element werden gelöscht. Mit dieser Methode können Sie ein bestimmtes Element aus der Liste entfernen, indem Sie den Index des Elements angeben, das aus der Liste entfernt werden soll. Verwenden Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> -Methode, um das Element anzugeben, das anstelle des Indexes für das Element entfernt werden soll. Um alle Elemente aus der Liste zu entfernen, verwenden <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> Sie die-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> -Eigenschaft mit <xref:System.Windows.Forms.ListBox.TopIndex%2A> der-Eigenschaft verwendet wird, um das aktuell ausgewählte Element an den Anfang der Liste der Elemente im Anzeigebereich <xref:System.Windows.Forms.ListBox>von zu verschieben. Im Beispiel wird das Entfernen <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> von Elementen mithilfe der-Methode der-Klasse und das Löschen der Elementauswahl mithilfe der <xref:System.Windows.Forms.ListBox.ClearSelected%2A> -Methode veranschaulicht. Der Code verschiebt zuerst das aktuell ausgewählte Element in <xref:System.Windows.Forms.ListBox> der an den Anfang der Liste. Der Code entfernt dann alle Elemente vor dem aktuell ausgewählten Element und löscht alle Auswahlmöglichkeiten in <xref:System.Windows.Forms.ListBox>. Für dieses Beispiel ist es <xref:System.Windows.Forms.ListBox> erforderlich, dass einem Formular ein enthaltende Element hinzugefügt wird und derzeit in der <xref:System.Windows.Forms.ListBox>ein Element ausgewählt ist.  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />-Klasse.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">Das eindimensionale Array, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente darstellt. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="dest">Das eindimensionale Array, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente darstellt. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="index">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die Elemente der Auflistung in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArrayTypeMismatchException">Der Arraytyp ist mit den Elementen in der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> nicht kompatibel.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
        <value><see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Das dem <see cref="T:System.Windows.Forms.ListBox" /> hinzuzufügende Objekt.</param>
        <summary>Fügt der <see cref="T:System.Windows.Forms.ListBox" />-Klasse ein Objekt hinzu.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die aktuelle <see cref="T:System.Windows.Forms.ListBox" /> verfügt über eine Datenquelle.</exception>
        <exception cref="T:System.SystemException">Es ist nicht genügend Speicherplatz verfügbar, um das neue Element zu speichern.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value><see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
