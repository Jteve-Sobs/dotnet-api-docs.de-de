<Type Name="ListBox+ObjectCollection" FullName="System.Windows.Forms.ListBox+ObjectCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c504d85eb49d2c563d5edd93ffa8c4b56dcfdf18" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53334690" /></Metadata><TypeSignature Language="C#" Value="public class ListBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::ObjectCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.ObjectCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Auflistung von Elementen in einem <see cref="T:System.Windows.Forms.ListBox" /> dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListBox.ObjectCollection> Klasse speichert, die in der angezeigten Elemente der <xref:System.Windows.Forms.ListBox>. Es gibt zwei Auflistungen, die definiert, die innerhalb der <xref:System.Windows.Forms.ListBox> Klasse, mit denen Sie bestimmen, welche Elemente in dieser Auflistung ausgewählt sind. Die <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> Klasse enthält Eigenschaften und Methoden zum Bestimmen der ausgewählten Elemente innerhalb der <xref:System.Windows.Forms.ListBox.ObjectCollection>, während die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> -Klasse ermöglicht Ihnen, die in Indizes bestimmt die <xref:System.Windows.Forms.ListBox.ObjectCollection> ausgewählt sind.  
  
 Es gibt zahlreiche Möglichkeiten, um der Auflistung Elemente hinzuzufügen. Die <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> Methode bietet die Möglichkeit, ein einzelnes Objekt der Auflistung hinzuzufügen. Um eine Reihe von Objekten zur Auflistung hinzuzufügen, erstellen Sie ein Array von Elementen, und weisen sie Sie der <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> Methode. Wenn Sie an einer bestimmten Stelle in der Auflistung ein Objekt einfügen möchten, können Sie mithilfe der <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> Methode. Um Elemente zu entfernen, verwenden Sie entweder die <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> Methode oder der <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> Methode, wenn Sie wissen, wo sich das Element in der Auflistung befindet. Die <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> Methode ermöglicht es Ihnen so entfernen Sie alle Elemente aus der Auflistung, anstatt die <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> Methode, um ein einzelnes Element zu einem Zeitpunkt zu entfernen.  
  
 Die Elemente können Sie auch Bearbeiten einer <xref:System.Windows.Forms.ListBox> mithilfe der <xref:System.Windows.Forms.ListControl.DataSource%2A> Eigenschaft. Bei Verwendung der <xref:System.Windows.Forms.ListControl.DataSource%2A> hinzuzufügenden Elemente, die Eigenschaft eine <xref:System.Windows.Forms.ListBox>, sehen Sie die Elemente in der <xref:System.Windows.Forms.ListBox> mit der <xref:System.Windows.Forms.ListBox.Items%2A> Eigenschaft jedoch nicht hinzufügen oder Entfernen von Elementen aus der Liste mit den Methoden der der <xref:System.Windows.Forms.ListBox.ObjectCollection>.  
  
 Zusätzlich zu Methoden und Eigenschaften zum Hinzufügen und Entfernen von Elementen die <xref:System.Windows.Forms.ListBox.ObjectCollection> stellt auch Methoden zum Suchen von Elementen in der Auflistung. Die <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> Methode ermöglicht es Ihnen, um zu bestimmen, ob ein Objekt einen Member der Auflistung. Sobald Sie wissen, dass das Element in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> Methode, um zu bestimmen, wo sich das Element in der Auflistung befindet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine Ownerdrawn- <xref:System.Windows.Forms.ListBox> durch Festlegen der <xref:System.Windows.Forms.ListBox.DrawMode%2A> Eigenschaft, um die `OwnerDrawVariable` Wert und Behandlung der <xref:System.Windows.Forms.ListBox.DrawItem> und <xref:System.Windows.Forms.ListBox.MeasureItem> Ereignisse. Außerdem zeigt es die Einstellung der <xref:System.Windows.Forms.ListBox.BorderStyle%2A> und <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> Eigenschaften und mithilfe der <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> Methode.  
  
 Um dieses Beispiel auszuführen, fügen Sie ihn in ein leeres Formular, das importiert die <xref:System.Drawing> Namespace und die <xref:System.Windows.Forms> Namespace. Rufen Sie `InitializeOwnerDrawnListBox` aus den Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedObjectCollection" />
    <altmember cref="T:System.Windows.Forms.ListBox.SelectedIndexCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Windows.Forms.ListBox" />, die die Auflistung besitzt.</param>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz dieser Klasse erstellen, ohne Zuordnung zu einem <xref:System.Windows.Forms.ListBox> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * obj[] -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Windows.Forms.ListBox" />, die die Auflistung besitzt.</param>
        <param name="value">Ein Array von Objekten, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />, die ein Array von Objekten enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz dieser Klasse erstellen, ohne Zuordnung zu einem <xref:System.Windows.Forms.ListBox> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ListBox owner, System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner, class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.#ctor(System.Windows.Forms.ListBox,System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox, value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ListBox ^ owner, System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.ObjectCollection : System.Windows.Forms.ListBox * System.Windows.Forms.ListBox.ObjectCollection -&gt; System.Windows.Forms.ListBox.ObjectCollection" Usage="new System.Windows.Forms.ListBox.ObjectCollection (owner, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="owner">Die <see cref="T:System.Windows.Forms.ListBox" />, die die Auflistung besitzt.</param>
        <param name="value">Eine <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />, aus der der Inhalt in diese Auflistung kopiert wird.</param>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> auf der Grundlage einer anderen <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können keine Instanz dieser Klasse erstellen, ohne Zuordnung zu einem <xref:System.Windows.Forms.ListBox> Steuerelement. Diese Version des Konstruktors ermöglicht es Ihnen, die in einer vorhandenen Instanz des angegebenen Elemente verwenden die <xref:System.Windows.Forms.ListBox.ObjectCollection> Klasse, um der Auflistung Elemente hinzugefügt, wenn es erstellt wird. Verwenden Sie diesen Konstruktor, der Elemente in einer anderen angegebenen <xref:System.Windows.Forms.ListBox> -Steuerelement mit dieser Auflistung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="member this.Add : obj -&gt; int" Usage="objectCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Ein Objekt, das das der Auflistung hinzuzufügende Element darstellt.</param>
        <summary>Fügt der Liste von Elementen für eine <see cref="T:System.Windows.Forms.ListBox" /> ein Element hinzu.</summary>
        <returns>Der nullbasierte Index des Elements in der Auflistung oder -1, wenn <see cref="M:System.Windows.Forms.ListBox.BeginUpdate" /> aufgerufen wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListBox.Sorted%2A> Eigenschaft der <xref:System.Windows.Forms.ListBox> nastaven NA hodnotu `true`, das Element in die Liste alphabetisch eingefügt wird. Andernfalls wird das Element am Ende der Liste eingefügt. Verwenden Sie zum Einfügen eines Elements in das Listenfeld an einer bestimmten Position der <xref:System.Windows.Forms.ListBox.ObjectCollection.Insert%2A> Methode. Um einen Satz von Elementen in das Listenfeld in einem einzigen Vorgang hinzuzufügen, verwenden die <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> Methode. Wenn Sie verwenden möchten die <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> Methode, um eine große Anzahl von Elementen zur Liste hinzuzufügen, verwenden Sie die <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> und <xref:System.Windows.Forms.ListBox.EndUpdate%2A> Methoden, um zu verhindern, dass die <xref:System.Windows.Forms.ListBox> jedes Mal aktualisiert wird ein Element zur Liste hinzugefügt, bis alle Elemente der Liste hinzugefügt werden. Beim Hinzufügen von Elementen zu einer <xref:System.Windows.Forms.ListBox>, es ist effizienter, sortieren die Elemente zuerst und anschließend neue Elemente hinzuzufügen.  
  
 Wenn ein Objekt der Auflistung hinzugefügt wird die <xref:System.Windows.Forms.ListBox> zuerst überprüft, ob die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft der <xref:System.Windows.Forms.ListControl> Klasse trägt den Namen eines Elements aus dem Objekt, das auf Verweis angegeben wird, wenn die zum Abrufen. Wenn die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft verfügt nicht über ein Element angegeben wird, die <xref:System.Windows.Forms.ListBox> ruft dann die <xref:System.Object.ToString%2A> -Methode des Objekts zum Abrufen des Texts in der Liste angezeigt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer <xref:System.Windows.Forms.ListBox> Steuerelement, das mehrere Elemente in Spalten angezeigt und kann mehr als ein Element in der Liste ausgewählt haben. Der Code für das Beispiel fügt 50 Elemente, die die <xref:System.Windows.Forms.ListBox> mithilfe der <xref:System.Windows.Forms.ListBox.ObjectCollection.Add%2A> -Methode der der <xref:System.Windows.Forms.ListBox.ObjectCollection> -Klasse, und wählt dann drei Elemente aus der Liste mithilfe der <xref:System.Windows.Forms.ListBox.SetSelected%2A> Methode. Der Code zeigt anschließend die Werte aus der <xref:System.Windows.Forms.ListBox.SelectedObjectCollection> Auflistung (über die <xref:System.Windows.Forms.ListBox.SelectedItems%2A> Eigenschaft) und die <xref:System.Windows.Forms.ListBox.SelectedIndexCollection> (über die <xref:System.Windows.Forms.ListBox.SelectedIndices%2A> Eigenschaft). Dieses Beispiel erfordert, dass der Code befindet sich in und aus dem Namen einer <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[Classic ListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ListBox Example/CS/source.cs#1)]
 [!code-vb[Classic ListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ListBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">Der verfügbare Speicherplatz reicht nicht aus, um der Liste ein neues Element hinzuzufügen.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Liste von Elementen für eine <see cref="T:System.Windows.Forms.ListBox" /> eine Gruppe von Elementen hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : obj[] -&gt; unit" Usage="objectCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">Ein Array von Objekten, die der Liste hinzugefügt werden sollen.</param>
        <summary>Fügt der Liste von Elementen für eine <see cref="T:System.Windows.Forms.ListBox" /> ein Array von Elementen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListBox.Sorted%2A> Eigenschaft der <xref:System.Windows.Forms.ListBox> nastaven NA hodnotu `true`, die Elemente in die Liste alphabetisch eingefügt werden. Andernfalls werden die Elemente in der Reihenfolge eingefügt, dass sie innerhalb des Arrays auftreten. Diese Methode wird in der Regel ein Array von übergeben <xref:System.String> Objekte, aber ein Array eines beliebigen Typs des Objekts an diese Methode übergeben werden kann. Wenn ein Objekt der Auflistung hinzugefügt wird die <xref:System.Windows.Forms.ListBox> zuerst überprüft, ob die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft der <xref:System.Windows.Forms.ListControl> Klasse trägt den Namen eines Elements aus dem Objekt, das auf Verweis angegeben wird, wenn die zum Abrufen. Wenn die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft verfügt nicht über ein Element angegeben wird, die <xref:System.Windows.Forms.ListBox> ruft dann die <xref:System.Object.ToString%2A> -Methode des Objekts zum Abrufen des Texts in der Liste angezeigt. Bei Verwendung dieser Methode zum Hinzufügen von Elementen, die <xref:System.Windows.Forms.ListBox>, Sie müssen nicht aufrufen, die <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> und <xref:System.Windows.Forms.ListBox.EndUpdate%2A> Methoden zum Optimieren der Leistung. Beim Hinzufügen von Elementen zu einer <xref:System.Windows.Forms.ListBox>, es ist effizienter, sortieren die Elemente zuerst und anschließend neue Elemente hinzuzufügen. Sie können diese Methode verwenden, um eine Gruppe von Elementen zur Liste hinzuzufügen oder die in einer anderen gespeicherten Elemente wiederverwenden <xref:System.Windows.Forms.ListBox>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine Ownerdrawn- <xref:System.Windows.Forms.ListBox> durch Festlegen der <xref:System.Windows.Forms.ListBox.DrawMode%2A> Eigenschaft, um die `OwnerDrawVariable` Wert und Behandlung der <xref:System.Windows.Forms.ListBox.DrawItem> und <xref:System.Windows.Forms.ListBox.MeasureItem> Ereignisse. Außerdem zeigt es die Einstellung der <xref:System.Windows.Forms.ListBox.BorderStyle%2A> und <xref:System.Windows.Forms.ListBox.ScrollAlwaysVisible%2A> Eigenschaften und mithilfe der <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> Methode.  
  
 Um dieses Beispiel auszuführen, fügen Sie ihn in ein leeres Formular, das importiert die <xref:System.Drawing> Namespace und die <xref:System.Windows.Forms> Namespace. Rufen Sie `InitializeOwnerDrawnListBox` aus den Konstruktor des Formulars oder `Load` Methode.  
  
 [!code-cpp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListBoxExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListBoxExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.ObjectCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/ObjectCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.AddRange(System.Windows.Forms.ListBox.ObjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.ObjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::ObjectCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.ObjectCollection -&gt; unit" Usage="objectCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+ObjectCollection" />
      </Parameters>
      <Docs>
        <param name="value">Eine in diese Auflistung zu ladende <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />.</param>
        <summary>Fügt die Elemente einer vorhandenen <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> der Liste von Elementen in einer <see cref="T:System.Windows.Forms.ListBox" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.ListBox.Sorted%2A> Eigenschaft der <xref:System.Windows.Forms.ListBox> nastaven NA hodnotu `true`, die Elemente in die Liste alphabetisch eingefügt werden. Andernfalls werden die Elemente in der Reihenfolge eingefügt, dass sie innerhalb des Arrays auftreten. Diese Methode wird in der Regel ein Array von übergeben <xref:System.String> Objekte, aber ein Array eines beliebigen Typs des Objekts an diese Methode übergeben werden kann. Wenn ein Objekt der Auflistung hinzugefügt wird die <xref:System.Windows.Forms.ListBox> zuerst überprüft, ob die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft der <xref:System.Windows.Forms.ListControl> Klasse trägt den Namen eines Elements aus dem Objekt, das auf Verweis angegeben wird, wenn die zum Abrufen. Wenn die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft verfügt nicht über ein Element angegeben wird, die <xref:System.Windows.Forms.ListBox> ruft dann die <xref:System.Object.ToString%2A> -Methode des Objekts zum Abrufen des Texts in der Liste angezeigt.  
  
 Bei Verwendung dieser Methode zum Hinzufügen von Elementen, die <xref:System.Windows.Forms.ListBox>, Sie müssen nicht aufrufen, die <xref:System.Windows.Forms.ListBox.BeginUpdate%2A> und <xref:System.Windows.Forms.ListBox.EndUpdate%2A> Methoden zum Optimieren der Leistung. Beim Hinzufügen von Elementen zu einer <xref:System.Windows.Forms.ListBox>, es ist effizienter, sortieren die Elemente zuerst und anschließend neue Elemente hinzuzufügen. Sie können diese Methode verwenden, um die in einer anderen gespeicherten Elemente wiederverwenden <xref:System.Windows.Forms.ListBox>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="objectCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie Elemente aus der Liste entfernen, wird alle Informationen über die gelöschten Elemente verloren. So entfernen Sie ein einzelnes Element aus der <xref:System.Windows.Forms.ListBox>, verwenden Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> oder <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="objectCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das das in der Auflistung zu suchende Element darstellt.</param>
        <summary>Bestimmt, ob das angegebene Element in der Auflistung enthalten ist.</summary>
        <returns><see langword="true" />, wenn das Element in der Auflistung enthalten ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> Methode ermöglicht es Ihnen, um zu bestimmen, ob ein Objekt einen Member der Auflistung. Sobald Sie wissen, dass das Element in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> Methode, um zu bestimmen, wo sich das Element in der Auflistung befindet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindString(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListBox.FindStringExact(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] dest, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ dest, int arrayIndex);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (dest, arrayIndex)" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.CopyTo : obj[] * int -&gt; unit" Usage="objectCollection.CopyTo (destination, arrayIndex)" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="destination" Type="System.Object[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">Das Objektarray, in das die Elemente aus der Collection kopiert werden sollen.</param>
        <param name="dest">Das Objektarray, in das die Elemente aus der Collection kopiert werden sollen.</param>
        <param name="arrayIndex">Die Position im Zielarray, an die die Elemente der Auflistung kopiert werden sollen.</param>
        <summary>Kopiert die gesamte Auflistung an eine angegebene Position in ein vorhandenes Array von Objekten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, kombinieren Sie die Elemente aus mehreren Sammlungen in ein einzelnes Array. Sie können den Inhalt eines anderen Füllen klicken Sie dann dieses Array <xref:System.Windows.Forms.ListBox> steuern mit der <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> Methode der <xref:System.Windows.Forms.ListBox.ObjectCollection> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.ObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Anzahl der Elemente in der Auflistung</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie bestimmen, die Anzahl der Elemente in der <xref:System.Windows.Forms.ListBox>. Sie können diesen Wert dann verwenden, wenn Sie die Werte der Auflistung durchlaufen werden, und Sie eine Reihe von Iterationen zum Durchführen des schleifenvorgangs angeben müssen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="objectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, mit dem die Elementauflistung durchlaufen werden soll.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der die Elementauflistung darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="objectCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das das in der Auflistung zu suchende Element darstellt.</param>
        <summary>Gibt den Index des angegebenen Elements in der Auflistung zurück.</summary>
        <returns>Der nullbasierte Index der Position des Elements in der Auflistung, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> Methode ermöglicht es Ihnen, um zu bestimmen, wo sich ein Element in der Auflistung befindet. Verwenden Sie zum bestimmen, ob ein Element in der Auflistung vor dem Aufrufen dieser Methode die <xref:System.Windows.Forms.ListBox.ObjectCollection.Contains%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist null.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="objectCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Indexspeicherort, in den das Element eingefügt wird.</param>
        <param name="item">Ein Objekt, das das einzufügende Element repräsentiert.</param>
        <summary>Fügt ein Element am angegebenen Index in das Listenfeld ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Methode können Sie zum Einfügen eines Elements an einer bestimmten Position in der <xref:System.Windows.Forms.ListBox>. Wenn die <xref:System.Windows.Forms.ListBox.Sorted%2A> Eigenschaft der <xref:System.Windows.Forms.ListBox> nastaven NA hodnotu "true", wird das Element hinzugefügt, in der richtigen Position in der sortierten Liste unabhängig von den Werten im angegebenen die `index` Parameter. Wenn ein Objekt der Auflistung hinzugefügt wird die <xref:System.Windows.Forms.ListBox> zuerst überprüft, ob die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft der <xref:System.Windows.Forms.ListControl> Klasse trägt den Namen eines Elements aus dem Objekt, das auf Verweis angegeben wird, wenn die zum Abrufen. Wenn die <xref:System.Windows.Forms.ListControl.DisplayMember%2A> Eigenschaft verfügt nicht über ein Element angegeben wird, die <xref:System.Windows.Forms.ListBox> ruft dann die <xref:System.Object.ToString%2A> -Methode des Objekts zum Abrufen des Texts in der Liste angezeigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 (null) oder größer als der Wert der <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />-Klasse.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListBox.ObjectCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value><see langword="true" />, wenn diese Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist immer `false` für diese Sammlung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.ListBox.ObjectCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Elements in der Auflistung, der abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft das Element am angegebenen Index in der Auflistung ab oder legt dieses fest.</summary>
        <value>Ein Objekt, das das Element am angegebenen Index in der Auflistung darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, zum Abrufen der <xref:System.Windows.Forms.ListBox> an einer bestimmten Stelle in der Auflistung gespeicherte Element. Um den Index eines bestimmten Elements in der Auflistung zu bestimmen, verwenden die <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />-Klasse.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="objectCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das das aus der Auflistung zu entfernende Element darstellt.</param>
        <summary>Entfernt das angegebene Objekt aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein Element aus der Liste entfernen, ändern die Indizes für die folgenden Elemente in der Liste aus. Alle Informationen über das entfernte Element wird gelöscht. Sie können diese Methode verwenden, um ein bestimmtes Element aus der Liste zu entfernen, indem Sie das Element aus der Liste zu entfernenden angeben. Verwenden Sie zum Angeben des Indexes des Elements, das statt des Elements selbst Entfernen der <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> Methode. Um alle Elemente aus der Liste zu entfernen, verwenden die <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="objectCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zu entfernenden Elements.</param>
        <summary>Entfernt das Element am angegebenen Index in der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie ein Element aus der Liste entfernen, ändern die Indizes für die folgenden Elemente in der Liste aus. Alle Informationen über das entfernte Element wird gelöscht. Sie können diese Methode verwenden, um ein bestimmtes Element aus der Liste zu entfernen, der Index des Elements, das aus der Liste entfernen. Um das zu entfernende anstatt den Index des Elements anzugeben, verwenden die <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> Methode. Um alle Elemente aus der Liste zu entfernen, verwenden die <xref:System.Windows.Forms.ListBox.ObjectCollection.Clear%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ListBox.SelectedIndex%2A> Eigenschaft mit dem die <xref:System.Windows.Forms.ListBox.TopIndex%2A> Eigenschaft, um das aktuell ausgewählte Element an den Anfang der Liste der Elemente in den Anzeigebereich des Verschieben der <xref:System.Windows.Forms.ListBox>. Darüber hinaus wird veranschaulicht, wie Entfernen von Elementen, die mit der <xref:System.Windows.Forms.ListBox.ObjectCollection.RemoveAt%2A> -Methode der der <xref:System.Windows.Forms.ListBox.ObjectCollection?displayProperty=nameWithType> -Klasse, und So löschen Sie alle Element Auswahl mithilfe der <xref:System.Windows.Forms.ListBox.ClearSelected%2A> Methode. Der Code wird zuerst das aktuell ausgewählte Element verschoben, der <xref:System.Windows.Forms.ListBox> am Anfang der Liste. Der Code dann entfernt alle Elemente, bevor Sie das aktuell ausgewählte Element und löscht die gesamte Auswahl in der <xref:System.Windows.Forms.ListBox>. In diesem Beispiel erfordert, dass eine <xref:System.Windows.Forms.ListBox> mit Elementen zu einem Formular hinzugefügt und ausgewählt haben, dass ein Element derzeit der <xref:System.Windows.Forms.ListBox>.  
  
 [!code-cpp[ListBox.SelectedIndex#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListBox.SelectedIndex/CPP/form1.cpp#1)]
 [!code-csharp[ListBox.SelectedIndex#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.SelectedIndex/CS/form1.cs#1)]
 [!code-vb[ListBox.SelectedIndex#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.SelectedIndex/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 (null) bzw. größer oder gleich dem Wert der <see cref="P:System.Windows.Forms.ListBox.ObjectCollection.Count" />-Eigenschaft der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />-Klasse.</exception>
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListBox.ObjectCollection.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="destination" Type="System.Array" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="index" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="destination">Das eindimensionale Array, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente darstellt. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="dest">Das eindimensionale Array, das das Ziel der aus der <see cref="T:System.Collections.ICollection" /> kopierten Elemente darstellt. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="index">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
        <summary>Kopiert die Elemente der Auflistung in ein Array, wobei an einem bestimmten Arrayindex begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArrayTypeMismatchException">Der Arraytyp ist mit den Elementen in der <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> nicht kompatibel.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
        <value><see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Das dem <see cref="T:System.Windows.Forms.ListBox" /> hinzuzufügende Objekt.</param>
        <summary>Fügt der <see cref="T:System.Windows.Forms.ListBox" />-Klasse ein Objekt hinzu.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArgumentNullException"><paramref name="item" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die aktuelle <see cref="T:System.Windows.Forms.ListBox" /> verfügt über eine Datenquelle.</exception>
        <exception cref="T:System.SystemException">Es ist nicht genügend Speicherplatz verfügbar, um das neue Element zu speichern.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value><see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.ObjectCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
