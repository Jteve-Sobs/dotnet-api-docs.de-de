<Type Name="NumericUpDown" FullName="System.Windows.Forms.NumericUpDown">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9eb6f37581538576400a5099bdf52668b508e18f" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74385281" /></Metadata><TypeSignature Language="C#" Value="public class NumericUpDown : System.Windows.Forms.UpDownBase, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NumericUpDown extends System.Windows.Forms.UpDownBase implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NumericUpDown" />
  <TypeSignature Language="VB.NET" Value="Public Class NumericUpDown&#xA;Inherits UpDownBase&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumericUpDown : System::Windows::Forms::UpDownBase, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type NumericUpDown = class&#xA;    inherit UpDownBase&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UpDownBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ValueChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Windows-Drehfeld (auch als Auf-Ab-Steuerelement bezeichnet) dar, in dem numerische Werte angezeigt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.NumericUpDown>-Steuerelement enthält einen einzelnen numerischen Wert, der durch Klicken auf die nach-oben-oder nach-unten-Schaltfläche des Steuer Elements erhöht oder verringert werden kann. Der Benutzer kann auch einen Wert eingeben, es sei denn, die <xref:System.Windows.Forms.UpDownBase.ReadOnly%2A>-Eigenschaft ist auf `true`festgelegt.  
  
 Die numerische Anzeige kann durch Festlegen der Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>oder <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A> formatiert werden. Wenn Sie hexadezimale Werte im-Steuerelement anzeigen möchten, legen Sie die <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>-Eigenschaft auf `true`fest. Um bei Bedarf ein Tausender Trennzeichen in Dezimalzahlen anzuzeigen, legen Sie die <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>-Eigenschaft auf `true`fest. Um die Anzahl der Ziffern anzugeben, die nach dem Dezimaltrennzeichen angezeigt werden, legen Sie die <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>-Eigenschaft auf die Anzahl der anzuzeigenden Dezimalstellen fest.  
  
 Legen Sie die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> und <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> fest, um den zulässigen Wertebereich für das Steuerelement anzugeben. Legen Sie den <xref:System.Windows.Forms.NumericUpDown.Increment%2A> Wert fest, um den Wert anzugeben, der für die <xref:System.Windows.Forms.NumericUpDown.Value%2A>-Eigenschaft erhöht oder dekrementiert werden soll, wenn der Benutzer auf die Schaltflächen nach oben oder nach unten klickt. Sie können die Geschwindigkeit erhöhen, die das Steuerelement durch die Zahlen bewegt, wenn der Benutzer den Pfeil nach oben oder nach unten durch Festlegen der <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A>-Eigenschaft fort setzt.  
  
 Wenn die Methoden <xref:System.Windows.Forms.NumericUpDown.UpButton%2A> oder <xref:System.Windows.Forms.NumericUpDown.DownButton%2A> aufgerufen werden, entweder im Code oder durch Klicken auf die nach-oben-oder nach-unten-Schaltflächen, wird der neue Wert überprüft, und das Steuerelement wird mit dem neuen Wert im entsprechenden Format aktualisiert. Insbesondere wenn die <xref:System.Windows.Forms.UpDownBase.UserEdit%2A>-Eigenschaft auf `true`festgelegt ist, wird die <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>-Methode vor dem validieren oder Aktualisieren des Werts aufgerufen. Der Wert wird dann als zwischen den Werten <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> und <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> überprüft, und die <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>-Methode wird aufgerufen.  
  
 Beginnend mit dem .NET Framework 4,6 wird die Größe des <xref:System.Windows.Forms.NumericUpDown> Steuer Elements basierend auf der System-dpi-Einstellung geändert, wenn die Datei "App. config" den folgenden Eintrag enthält:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.NumericUpDown> Steuerelement erstellt und initialisiert, einige der allgemeinen Eigenschaften festgelegt, und der Benutzer kann einige dieser Eigenschaften zur Laufzeit ändern. Dieser Code geht davon aus, dass drei <xref:System.Windows.Forms.CheckBox>-Steuerelemente in einem Formular platziert wurden und Handler für Ihre <xref:System.Windows.Forms.Control.Click> Ereignisse instanziiert wurden. Die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>und <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> werden für das <xref:System.Windows.Forms.Control.Click>-Ereignis jedes Kontrollkästchens festgelegt.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.UpDownBase" />
    <altmember cref="T:System.ComponentModel.ISupportInitialize" />
    <altmember cref="T:System.Windows.Forms.DomainUpDown" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumericUpDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumericUpDown();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.NumericUpDown" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.NumericUpDown> Steuerelement erstellt und initialisiert, einige der allgemeinen Eigenschaften festgelegt, und der Benutzer kann einige dieser Eigenschaften zur Laufzeit ändern. Dieser Code geht davon aus, dass drei <xref:System.Windows.Forms.CheckBox>-Steuerelemente in einem Formular platziert wurden und Handler für Ihre <xref:System.Windows.Forms.Control.Click> Ereignisse instanziiert wurden. Die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>und <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> werden für das <xref:System.Windows.Forms.Control.Click>-Ereignis jedes Kontrollkästchens festgelegt.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UpDownBase" />
      </Docs>
    </Member>
    <Member MemberName="Accelerations">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.NumericUpDownAccelerationCollection Accelerations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Accelerations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accelerations As NumericUpDownAccelerationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::NumericUpDownAccelerationCollection ^ Accelerations { System::Windows::Forms::NumericUpDownAccelerationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Accelerations : System.Windows.Forms.NumericUpDownAccelerationCollection" Usage="System.Windows.Forms.NumericUpDown.Accelerations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NumericUpDownAccelerationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von sortierten Beschleunigungsobjekten für das <see cref="T:System.Windows.Forms.NumericUpDown" />-Steuerelement ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.NumericUpDownAccelerationCollection" /> mit den sortierten Beschleunigungsobjekten für das <see cref="T:System.Windows.Forms.NumericUpDown" />-Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A>-Eigenschaft kann verwendet werden, um die Geschwindigkeit zu erhöhen, mit der das <xref:System.Windows.Forms.NumericUpDown> einen großen Satz von Zahlen durchläuft, wenn der Benutzer den Pfeil nach oben oder nach unten bewegt, entweder mit der Tastatur oder mit der Maus. Durch Festlegen dieser Eigenschaft wird die Anzahl der <xref:System.Windows.Forms.NumericUpDown.ValueChanged> Ereignisse verringert, die abhängig von den <xref:System.Windows.Forms.NumericUpDownAcceleration.Increment%2A>-und <xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A> Eigenschafts Werten sind, die für jedes <xref:System.Windows.Forms.NumericUpDownAcceleration> Objekt in der Auflistung angegeben werden. Die in der Auflistung enthaltenen <xref:System.Windows.Forms.NumericUpDownAcceleration> Objekte werden nach ihrer <xref:System.Windows.Forms.NumericUpDownAcceleration.Seconds%2A?displayProperty=nameWithType>-Eigenschaft sortiert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.NumericUpDown.Accelerations%2A>-Eigenschaft veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, und nennen Sie die `InitializeAcceleratedUpDown`-Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignis Behandlungsmethode. Wenn der Code ausgeführt wird, halten Sie die nach-oben-oder nach-unten-Taste gedrückt, um die Beschleunigung anzuzeigen.  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.MiscBugDriven#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.NumericUpDownAcceleration" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="numericUpDown.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beginnt die Initialisierung eines <see cref="T:System.Windows.Forms.NumericUpDown" />-Steuerelements, das in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="numericUpDown.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein neues Objekt für die Barrierefreiheit für das Steuerelement.</summary>
        <returns>Ein neues <see cref="T:System.Windows.Forms.AccessibleObject" /> für das Steuerelement.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      </Docs>
    </Member>
    <Member MemberName="DecimalPlaces">
      <MemberSignature Language="C#" Value="public int DecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DecimalPlaces { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DecimalPlaces : int with get, set" Usage="System.Windows.Forms.NumericUpDown.DecimalPlaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die im Drehfeld (auch als Auf-Ab-Steuerelement bezeichnet) anzuzeigende Anzahl von Dezimalstellen ab oder legt diese fest. Diese Eigenschaft hat keine Auswirkung auf die <see cref="P:System.Windows.Forms.NumericUpDown.Value" />-Eigenschaft.</summary>
        <value>Die Anzahl von Dezimalstellen, die im Drehfeld angezeigt werden. Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>-Eigenschaft festgelegt ist, wird die <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>-Methode aufgerufen, um die Anzeige des Drehfelds auf das neue Format zu aktualisieren.  
  
 Das entsprechende Dezimal Symbol wird von den regionalen Einstellungen des Betriebssystems des Benutzers bestimmt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.NumericUpDown> Steuerelement erstellt und initialisiert, einige der allgemeinen Eigenschaften festgelegt, und der Benutzer kann einige dieser Eigenschaften zur Laufzeit ändern. Dieser Code geht davon aus, dass drei <xref:System.Windows.Forms.CheckBox>-Steuerelemente in einem Formular platziert wurden und Handler für Ihre <xref:System.Windows.Forms.Control.Click> Ereignisse instanziiert wurden. Die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>und <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> werden für das <xref:System.Windows.Forms.Control.Click>-Ereignis jedes Kontrollkästchens festgelegt.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der zugewiesene Wert ist kleiner als 0.  
  
 - oder -  
  
 Der zugewiesene Wert ist größer als 99.</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="DownButton">
      <MemberSignature Language="C#" Value="public override void DownButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DownButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.DownButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DownButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DownButton();" />
      <MemberSignature Language="F#" Value="override this.DownButton : unit -&gt; unit" Usage="numericUpDown.DownButton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dekrementiert den Wert des Drehfelds (auch als Auf-Ab-Steuerelement bezeichnet).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.NumericUpDown.DownButton%2A>-Methode entweder im Code oder durch Klicken auf die nach-unten-Taste aufgerufen wird, wird der neue Wert überprüft, und das Steuerelement wird mit dem neuen Wert im entsprechenden Format aktualisiert. Insbesondere wenn die <xref:System.Windows.Forms.UpDownBase.UserEdit%2A>-Eigenschaft auf `true`festgelegt ist, wird die <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A>-Methode vor dem validieren oder Aktualisieren des Werts aufgerufen. Der Wert wird dann als zwischen den Werten <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> und <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> überprüft, und die <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>-Methode wird aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="numericUpDown.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die Initialisierung eines <see cref="T:System.Windows.Forms.NumericUpDown" />-Steuerelements, das in einem Formular oder von einer anderen Komponente verwendet wird. Die Initialisierung erfolgt zur Laufzeit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hexadecimal">
      <MemberSignature Language="C#" Value="public bool Hexadecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hexadecimal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property Hexadecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Hexadecimal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Hexadecimal : bool with get, set" Usage="System.Windows.Forms.NumericUpDown.Hexadecimal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der im Drehfeld (auch als Auf-Ab-Steuerelement bezeichnet) enthaltene Wert im Hexadezimalformat angezeigt werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Wert im Drehfeld im Hexadezimalformat angezeigt werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>-Eigenschaft festgelegt ist, wird die <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>-Methode aufgerufen, um die Anzeige des Drehfelds auf das neue Format zu aktualisieren.  
  
 Wenn die <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>-Eigenschaft auf `true`festgelegt ist, sollte die Eigenschaft <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> auf <xref:System.Int32.MaxValue?displayProperty=nameWithType> festgelegt werden, und die <xref:System.Windows.Forms.NumericUpDown.Minimum%2A>-Eigenschaft sollte auf <xref:System.Int32.MinValue?displayProperty=nameWithType>festgelegt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.NumericUpDown> Steuerelement erstellt und initialisiert, einige der allgemeinen Eigenschaften festgelegt, und der Benutzer kann einige dieser Eigenschaften zur Laufzeit ändern. Dieser Code geht davon aus, dass drei <xref:System.Windows.Forms.CheckBox>-Steuerelemente in einem Formular platziert wurden und Handler für Ihre <xref:System.Windows.Forms.Control.Click> Ereignisse instanziiert wurden. Die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>und <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> werden für das <xref:System.Windows.Forms.Control.Click>-Ereignis jedes Kontrollkästchens festgelegt.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public decimal Increment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Increment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Property Increment As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Increment { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberSignature Language="F#" Value="member this.Increment : decimal with get, set" Usage="System.Windows.Forms.NumericUpDown.Increment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert für das Inkrementieren oder Dekrementieren des Drehfelds (auch als Auf-Ab-Steuerelement bezeichnet) ab, wenn auf die Auf- bzw. Ab-Schaltfläche geklickt wird, oder legt diesen fest.</summary>
        <value>Der Wert, um den die <see cref="P:System.Windows.Forms.NumericUpDown.Value" />-Eigenschaft inkrementiert oder dekrementiert werden soll, wenn im Drehfeld auf die Auf- bzw. Ab-Schaltflächen geklickt wird. Der Standardwert ist 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie auf die Schaltfläche "nach oben" klicken, wird die <xref:System.Windows.Forms.NumericUpDown.Value%2A>-Eigenschaft um den von der <xref:System.Windows.Forms.NumericUpDown.Increment%2A>-Eigenschaft angegebenen Betrag erhöht und die <xref:System.Windows.Forms.NumericUpDown.Maximum%2A>-Eigenschaft an die Wenn Sie auf die Schaltfläche "nach unten" klicken, wird die <xref:System.Windows.Forms.NumericUpDown.Value%2A>-Eigenschaft um den von der <xref:System.Windows.Forms.NumericUpDown.Increment%2A>-Eigenschaft angegebenen Betrag dekrementiert, und die <xref:System.Windows.Forms.NumericUpDown.Minimum%2A>-Eigenschaft  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.NumericUpDown> Steuerelement erstellt und initialisiert, einige der allgemeinen Eigenschaften festgelegt, und der Benutzer kann einige dieser Eigenschaften zur Laufzeit ändern. Dieser Code geht davon aus, dass drei <xref:System.Windows.Forms.CheckBox>-Steuerelemente in einem Formular platziert wurden und Handler für Ihre <xref:System.Windows.Forms.Control.Click> Ereignisse instanziiert wurden. Die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>und <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> werden für das <xref:System.Windows.Forms.Control.Click>-Ereignis jedes Kontrollkästchens festgelegt.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der zugewiesene Wert ist nicht größer oder gleich 0 (null).</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public decimal Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public Property Maximum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Maximum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberSignature Language="F#" Value="member this.Maximum : decimal with get, set" Usage="System.Windows.Forms.NumericUpDown.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den maximalen Wert für das Drehfeld (auch als Auf-Ab-Steuerelement bezeichnet) ab oder legt diesen fest.</summary>
        <value>Der maximale Wert für das Drehfeld. Der Standardwert ist 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.NumericUpDown.Maximum%2A>-Eigenschaft festgelegt ist, wird die <xref:System.Windows.Forms.NumericUpDown.Minimum%2A>-Eigenschaft ausgewertet und die <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>-Methode aufgerufen. Wenn die <xref:System.Windows.Forms.NumericUpDown.Minimum%2A>-Eigenschaft größer als die neue <xref:System.Windows.Forms.NumericUpDown.Maximum%2A>-Eigenschaft ist, wird der <xref:System.Windows.Forms.NumericUpDown.Minimum%2A>-Eigenschafts Wert auf den <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> Wert festgelegt. , Wenn der aktuelle <xref:System.Windows.Forms.NumericUpDown.Value%2A> größer als der neue <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> Wert ist. der Wert der <xref:System.Windows.Forms.NumericUpDown.Value%2A>-Eigenschaft ist auf den <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> Wert festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.NumericUpDown> Steuerelement erstellt und initialisiert, einige der allgemeinen Eigenschaften festgelegt, und der Benutzer kann einige dieser Eigenschaften zur Laufzeit ändern. Dieser Code geht davon aus, dass drei <xref:System.Windows.Forms.CheckBox>-Steuerelemente in einem Formular platziert wurden und Handler für Ihre <xref:System.Windows.Forms.Control.Click> Ereignisse instanziiert wurden. Die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>und <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> werden für das <xref:System.Windows.Forms.Control.Click>-Ereignis jedes Kontrollkästchens festgelegt.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public decimal Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public Property Minimum As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Minimum { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberSignature Language="F#" Value="member this.Minimum : decimal with get, set" Usage="System.Windows.Forms.NumericUpDown.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den kleinsten zulässigen Wert für das Drehfeld (auch als Auf-Ab-Steuerelement bezeichnet) ab oder legt diesen fest.</summary>
        <value>Der kleinste zulässige Wert für das Drehfeld. Der Standardwert ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.NumericUpDown.Minimum%2A>-Eigenschaft festgelegt ist, wird die <xref:System.Windows.Forms.NumericUpDown.Maximum%2A>-Eigenschaft ausgewertet und die <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>-Methode aufgerufen. Wenn der neue <xref:System.Windows.Forms.NumericUpDown.Minimum%2A>-Eigenschafts Wert größer als der <xref:System.Windows.Forms.NumericUpDown.Maximum%2A>-Eigenschafts Wert ist, wird der <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> Wert auf den <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> Wert festgelegt. Wenn die <xref:System.Windows.Forms.NumericUpDown.Value%2A> kleiner als der neue <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> Wert ist, wird die <xref:System.Windows.Forms.NumericUpDown.Value%2A>-Eigenschaft ebenfalls auf den <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> Wert festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.NumericUpDown> Steuerelement erstellt und initialisiert, einige der allgemeinen Eigenschaften festgelegt, und der Benutzer kann einige dieser Eigenschaften zur Laufzeit ändern. Dieser Code geht davon aus, dass drei <xref:System.Windows.Forms.CheckBox>-Steuerelemente in einem Formular platziert wurden und Handler für Ihre <xref:System.Windows.Forms.Control.Click> Ereignisse instanziiert wurden. Die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>und <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> werden für das <xref:System.Windows.Forms.Control.Click>-Ereignis jedes Kontrollkästchens festgelegt.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Increment" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="numericUpDown.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.NumericUpDown.OnKeyDown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass die <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />-Methode der Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="numericUpDown.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.KeyUp" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.NumericUpDown.OnKeyUp%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass die <see cref="M:System.Windows.Forms.NumericUpDown.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />-Methode der Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="numericUpDown.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.LostFocus" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.NumericUpDown.OnLostFocus%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass die <see cref="M:System.Windows.Forms.NumericUpDown.OnLostFocus(System.EventArgs)" />-Methode der Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnTextBoxKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnTextBoxKeyPress (object source, System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextBoxKeyPress(object source, class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextBoxKeyPress (source As Object, e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextBoxKeyPress(System::Object ^ source, System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextBoxKeyPress : obj * System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="numericUpDown.OnTextBoxKeyPress (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyPressEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.KeyPress" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.NumericUpDown> Steuerelement akzeptiert nur Ziffern, das negative Vorzeichen, den Dezimaltrennzeichen und das Bearbeiten von Tastatureingaben, z. b. RÜCKTASTE. Wenn die <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A>-Eigenschaft auf `true`festgelegt ist, akzeptiert <xref:System.Windows.Forms.NumericUpDown> hexadezimale Ziffern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValueChanged : EventArgs -&gt; unit&#xA;override this.OnValueChanged : EventArgs -&gt; unit" Usage="numericUpDown.OnValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.NumericUpDown.ValueChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.NumericUpDown.OnValueChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass die <see cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />-Methode der Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.NumericUpDown.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen den Rändern eines <see cref="T:System.Windows.Forms.NumericUpDown" />-Steuerelements und dessen Inhalt ab oder legt diesen fest.</summary>
        <value><see cref="F:System.Windows.Forms.Padding.Empty" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Festlegen der <xref:System.Windows.Forms.NumericUpDown.Padding%2A>-Eigenschaft hat keine Auswirkung auf die Darstellung des <xref:System.Windows.Forms.NumericUpDown> Steuer Elements.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.NumericUpDown.Padding" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseEditText">
      <MemberSignature Language="C#" Value="protected void ParseEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ParseEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ParseEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ParseEditText();" />
      <MemberSignature Language="F#" Value="member this.ParseEditText : unit -&gt; unit" Usage="numericUpDown.ParseEditText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Konvertiert den im Drehfeld (auch als Auf-Ab-Steuerelement bezeichnet) angezeigten Text in einen numerischen Wert und wertet diesen aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.UpDownBase.UserEdit%2A>-Eigenschaft auf `true`festgelegt ist, wird der angezeigte Text in einen numerischen Wert konvertiert, damit er zwischen den Eigenschaften Werten <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> und <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> überprüft werden kann.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.UpDownBase.UserEdit" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.NumericUpDown.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den im <see cref="T:System.Windows.Forms.NumericUpDown" />-Steuerelement anzuzeigenden Text ab oder legt diesen fest.</summary>
        <value><see langword="Null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.NumericUpDown.Text%2A> hat keine Auswirkung auf die Darstellung des <xref:System.Windows.Forms.NumericUpDown> Steuer Elements. Daher wird Sie im Designer und aus IntelliSense ausgeblendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.NumericUpDown.Text" />-Eigenschaft ändert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public bool ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThousandsSeparator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThousandsSeparator : bool with get, set" Usage="System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Drehfeld (auch als Auf-Ab-Steuerelement bezeichnet) ggf. ein Tausendertrennzeichen angezeigt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn im Drehfeld ggf. ein Tausendertrennzeichen angezeigt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>-Eigenschaft festgelegt ist, wird die <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>-Methode aufgerufen, um die Anzeige des Drehfelds auf das neue Format zu aktualisieren.  
  
 Das entsprechende Tausender Trennzeichen hängt von den regionalen Einstellungen des Betriebssystems des Benutzers ab.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.NumericUpDown> Steuerelement erstellt und initialisiert, einige der allgemeinen Eigenschaften festgelegt, und der Benutzer kann einige dieser Eigenschaften zur Laufzeit ändern. Dieser Code geht davon aus, dass drei <xref:System.Windows.Forms.CheckBox>-Steuerelemente in einem Formular platziert wurden und Handler für Ihre <xref:System.Windows.Forms.Control.Click> Ereignisse instanziiert wurden. Die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>und <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> werden für das <xref:System.Windows.Forms.Control.Click>-Ereignis jedes Kontrollkästchens festgelegt.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="numericUpDown.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die das <see cref="T:System.Windows.Forms.NumericUpDown" />-Steuerelement darstellt.</summary>
        <returns>Eine Zeichenfolge, die das aktuelle <see cref="T:System.Windows.Forms.NumericUpDown" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Rückgabe Zeichenfolge enthält den Typ und die Werte für die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> und <xref:System.Windows.Forms.NumericUpDown.Maximum%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpButton">
      <MemberSignature Language="C#" Value="public override void UpButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpButton ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpButton();" />
      <MemberSignature Language="F#" Value="override this.UpButton : unit -&gt; unit" Usage="numericUpDown.UpButton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inkrementiert den Wert des Drehfelds (auch als Auf-Ab-Steuerelement bezeichnet).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.NumericUpDown.UpButton%2A>-Methode entweder im Code oder durch Klicken auf die Schaltfläche nach oben aufgerufen wird, wird der neue Wert überprüft, und das Steuerelement wird mit dem neuen Wert im entsprechenden Format aktualisiert. Insbesondere, wenn <xref:System.Windows.Forms.UpDownBase.UserEdit%2A> auf `true`festgelegt ist, wird <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> vor dem validieren oder Aktualisieren des Werts aufgerufen. Der Wert wird dann als zwischen den Werten <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> und <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> überprüft, und die <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>-Methode wird aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.DownButton" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="UpdateEditText">
      <MemberSignature Language="C#" Value="protected override void UpdateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateEditText();" />
      <MemberSignature Language="F#" Value="override this.UpdateEditText : unit -&gt; unit" Usage="numericUpDown.UpdateEditText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zeigt den aktuellen Wert des Drehfelds (auch als Auf-Ab-Steuerelement bezeichnet) im entsprechenden Format an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Drehfeld nicht initialisiert wird, wird der aktuelle Wert als zwischen den Werten für <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> und <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> überprüft und in das richtige Format für die Anzeige im Steuerelement konvertiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.DecimalPlaces" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Hexadecimal" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.ThousandsSeparator" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEditText">
      <MemberSignature Language="C#" Value="protected override void ValidateEditText ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateEditText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NumericUpDown.ValidateEditText" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateEditText ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateEditText();" />
      <MemberSignature Language="F#" Value="override this.ValidateEditText : unit -&gt; unit" Usage="numericUpDown.ValidateEditText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Validiert und aktualisiert den im Drehfeld (auch als Auf-Ab-Steuerelement bezeichnet) angezeigten Text.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.NumericUpDown.ValidateEditText%2A>-Methode ruft die Methoden <xref:System.Windows.Forms.NumericUpDown.ParseEditText%2A> und <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A> auf, um die Anzeige des Drehfelds zu überprüfen und zu aktualisieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.ParseEditText" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public decimal Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NumericUpDown.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal Value { System::Decimal get(); void set(System::Decimal value); };" />
      <MemberSignature Language="F#" Value="member this.Value : decimal with get, set" Usage="System.Windows.Forms.NumericUpDown.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den dem Drehfeld (auch als Auf-Ab-Steuerelement bezeichnet) zugewiesenen Wert ab oder legt diesen fest.</summary>
        <value>Der numerische Wert des <see cref="T:System.Windows.Forms.NumericUpDown" />-Steuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.NumericUpDown.Value%2A>-Eigenschaft festgelegt ist, wird der neue Wert zwischen den Werten <xref:System.Windows.Forms.NumericUpDown.Minimum%2A> und <xref:System.Windows.Forms.NumericUpDown.Maximum%2A> überprüft. Danach wird die <xref:System.Windows.Forms.NumericUpDown.UpdateEditText%2A>-Methode aufgerufen, um die Anzeige des Drehfelds mit dem neuen Wert im entsprechenden Format zu aktualisieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.NumericUpDown> Steuerelement erstellt und initialisiert, einige der allgemeinen Eigenschaften festgelegt, und der Benutzer kann einige dieser Eigenschaften zur Laufzeit ändern. Dieser Code geht davon aus, dass drei <xref:System.Windows.Forms.CheckBox>-Steuerelemente in einem Formular platziert wurden und Handler für Ihre <xref:System.Windows.Forms.Control.Click> Ereignisse instanziiert wurden. Die Eigenschaften <xref:System.Windows.Forms.NumericUpDown.DecimalPlaces%2A>, <xref:System.Windows.Forms.NumericUpDown.ThousandsSeparator%2A>und <xref:System.Windows.Forms.NumericUpDown.Hexadecimal%2A> werden für das <xref:System.Windows.Forms.Control.Click>-Ereignis jedes Kontrollkästchens festgelegt.  
  
 [!code-cpp[Classic NumericUpDown Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic NumericUpDown Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumericUpDown Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic NumericUpDown Example/CS/source.cs#1)]
 [!code-vb[Classic NumericUpDown Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic NumericUpDown Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der zugewiesene Wert ist kleiner als der <see cref="P:System.Windows.Forms.NumericUpDown.Minimum" />-Eigenschaftswert.  
  
- oder - 
Der zugewiesene Wert ist größer als der <see cref="P:System.Windows.Forms.NumericUpDown.Maximum" />-Eigenschaftswert.</exception>
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Maximum" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Minimum" />
        <altmember cref="M:System.Windows.Forms.NumericUpDown.UpdateEditText" />
      </Docs>
    </Member>
    <Member MemberName="ValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.NumericUpDown.ValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueChanged;" />
      <MemberSignature Language="F#" Value="member this.ValueChanged : EventHandler " Usage="member this.ValueChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="P:System.Windows.Forms.NumericUpDown.Value" />-Eigenschaft geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Damit das <xref:System.Windows.Forms.NumericUpDown.ValueChanged> Ereignis auftritt, kann die <xref:System.Windows.Forms.NumericUpDown.Value%2A>-Eigenschaft im Code geändert werden, indem Sie auf die nach-oben-oder nach-unten-Schaltfläche klicken oder der Benutzer einen neuen Wert eingibt, der vom Steuerelement gelesen wird. Der neue Wert wird gelesen, wenn der Benutzer die EINGABETASTE trifft oder aus dem Steuerelement navigiert. Wenn der Benutzer einen neuen Wert eingibt und dann auf die nach-oben-oder nach-unten-Schaltfläche klickt, tritt das <xref:System.Windows.Forms.NumericUpDown.ValueChanged> Ereignis zweimal auf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.NumericUpDown.ValueChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.NumericUpDown> mit dem Namen `NumericUpDown1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.NumericUpDown.ValueChanged>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#515](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#515)]
 [!code-vb[System.Windows.Forms.EventExamples#515](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#515)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NumericUpDown.OnValueChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.NumericUpDown.Value" />
      </Docs>
    </Member>
  </Members>
</Type>
