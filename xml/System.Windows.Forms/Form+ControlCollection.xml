<Type Name="Form+ControlCollection" FullName="System.Windows.Forms.Form+ControlCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="849a9eec1601bb318e8ef1bb82861dc22401ac49" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83526224" /></Metadata><TypeSignature Language="C#" Value="public class Form.ControlCollection : System.Windows.Forms.Control.ControlCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Form/ControlCollection extends System.Windows.Forms.Control/ControlCollection" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Form.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class Form.ControlCollection&#xA;Inherits Control.ControlCollection" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Form::ControlCollection : System::Windows::Forms::Control::ControlCollection" />
  <TypeSignature Language="F#" Value="type Form.ControlCollection = class&#xA;    inherit Control.ControlCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control+ControlCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0;dotnet-plat-ext-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Auflistung von Steuerelemente auf dem Formular dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt die Auflistung von Steuerelementen dar, die in einem Formular enthalten sind. Sie können die <xref:System.Windows.Forms.Form.ControlCollection.Add%2A>-Methode verwenden, um dem Formular ein-Steuerelement hinzuzufügen, und die <xref:System.Windows.Forms.Form.ControlCollection.Remove%2A>-Methode, um das Steuerelement aus dem Formular zu entfernen. Die von dieser Klasse dargestellte Steuerelement Auflistung kann nicht erstellt werden, ohne Sie an ein bestimmtes Formular zu binden. Daher können Sie nicht mehrere Instanzen dieser Steuerelement Sammlung erstellen und Sie mit einem aktiven Formular austauschen, um unterschiedliche Steuerelement Layouts bereitzustellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Steuerelement Auflistung eines Formulars ein <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.Label>-Steuerelement hinzugefügt. Für das Beispiel muss ein Formular erstellt und `Form1`benannt werden.  
  
 [!code-cpp[Classic Form.ControlCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Windows.Forms.Form owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ControlCollection.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Windows::Forms::Form ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Form.ControlCollection : System.Windows.Forms.Form -&gt; System.Windows.Forms.Form.ControlCollection" Usage="new System.Windows.Forms.Form.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="owner">Das <see cref="T:System.Windows.Forms.Form" />, das die Steuerelemente enthält, die der Steuerelementauflistung hinzugefügt werden sollen.</param>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Windows.Forms.Form.ControlCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Konstruktor können Sie die Steuerelement Auflistung ordnungsgemäß an das Formular binden, um das Hinzufügen von Steuerelementen zum Formular zu aktivieren.  
  
> [!NOTE]
>  Da die Steuerelement Auflistung mit einem angegebenen Formular erstellt werden muss, können Sie nicht mehrere Auflistungen von Steuerelementen erstellen und Sie mit dem Formular austauschen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ControlCollection.Add(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Windows.Forms.Control" />, das dem Formular hinzugefügt werden soll.</param>
        <summary>Fügt dem Formular ein Steuerelement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie dem Formular Steuerelemente hinzufügen. Wenn Sie dem Formular eine Gruppe bereits erstellter Steuerelemente hinzufügen möchten, verwenden Sie die <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A?displayProperty=nameWithType>-Methode der <xref:System.Windows.Forms.Control.ControlCollection>-Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Steuerelement Auflistung eines Formulars ein <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.Label>-Steuerelement hinzugefügt. Für das Beispiel muss ein Formular erstellt und `Form1`benannt werden.  
  
 [!code-cpp[Classic Form.ControlCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Einem übergeordneten MDI-Formular (Multiple Document Interface) dürfen keine Steuerelemente hinzugefügt werden.</exception>
        <altmember cref="M:System.Windows.Forms.Form.ControlCollection.Remove(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override void Remove (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Remove(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ControlCollection.Remove(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Remove(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="override this.Remove : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Windows.Forms.Control" />, das aus dem Formular entfernt werden soll.</param>
        <summary>Entfernt ein Steuerelement aus dem Formular.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, um Steuerelemente zu entfernen, die Sie nicht mehr in Ihrem Formular benötigen. Wenn Sie ein Steuerelement nach dem Entfernen anzeigen möchten, müssen Sie das Steuerelement mit der <xref:System.Windows.Forms.Form.ControlCollection.Add%2A>-Methode wieder dem Formular hinzufügen. Damit ein Steuerelement im Formular verbleibt, aber nicht angezeigt wird, verwenden Sie die <xref:System.Windows.Forms.Control.Visible%2A>-Eigenschaft des-Steuer Elements.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>
