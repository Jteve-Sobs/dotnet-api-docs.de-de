<Type Name="IMessageFilter" FullName="System.Windows.Forms.IMessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6efedc5dd9602f566f706ee3eabe76ea52a3ffaf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36520420" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageFilter" />
  <TypeSignature Language="F#" Value="type IMessageFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Meldungsfilterschnittstelle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ermöglicht einer Anwendung eine Nachricht zu erfassen, bevor sie zu einem Steuerelement oder das Formular gesendet wird.  
  
 Eine Klasse, implementiert die <xref:System.Windows.Forms.IMessageFilter> Schnittstelle Nachrichtensystem herausfiltern eine Nachricht oder andere Vorgänge ausführen, bevor die Nachricht, zu einem Formular oder Steuerelement gesendet wird der Anwendung hinzugefügt werden kann. Verwenden Sie zum Hinzufügen der Meldungsfilter Meldungsverteilschleife für eine Anwendung die <xref:System.Windows.Forms.Application.AddMessageFilter%2A> Methode in der <xref:System.Windows.Forms.Application> Klasse.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.IMessageFilter" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
  </Docs>
  <Members>
    <Member MemberName="PreFilterMessage">
      <MemberSignature Language="C#" Value="public bool PreFilterMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreFilterMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreFilterMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool PreFilterMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterMessage :  -&gt; bool" Usage="iMessageFilter.PreFilterMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Die zu sendende Meldung. Diese Meldung kann nicht geändert werden.</param>
        <summary>Filtert eine Meldung, bevor sie gesendet wird.</summary>
        <returns>
          <see langword="true" />, um die Meldung zu filtern und das Senden zu verhindern, <see langword="false" />, um das Senden der Meldung bis zum nächsten Filter oder Steuerelement zu ermöglichen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendung <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> um eine Nachricht zu filtern, bevor sie zu einem Steuerelement oder das Formular gesendet wird. Beispielsweise, um das Beenden der <xref:System.Windows.Forms.Control.Click> -Ereignis für eine <xref:System.Windows.Forms.Button> Steuerelement an das Steuerelement gesendet wird, implementieren Sie die <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> -Methode und der Rückgabewert eine `true` Wert der <xref:System.Windows.Forms.Control.Click> Meldung wird angezeigt. Sie können diese Methode auch verwenden, mit Code Arbeiten ausführen, die möglicherweise vor dem die Nachricht weitergeleitet wird.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Erfordert <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> Berechtigung zum Zeitpunkt der Verknüpfung.</permission>
      </Docs>
    </Member>
  </Members>
</Type>