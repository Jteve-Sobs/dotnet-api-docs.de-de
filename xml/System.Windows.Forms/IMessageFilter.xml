<Type Name="IMessageFilter" FullName="System.Windows.Forms.IMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77055c0da1541773927a86aaf1800a1a24c16628" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69187635" /></Metadata><TypeSignature Language="C#" Value="public interface IMessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageFilter" />
  <TypeSignature Language="F#" Value="type IMessageFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Meldungsfilterschnittstelle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ermöglicht es einer Anwendung, eine Nachricht zu erfassen, bevor Sie an ein Steuerelement oder Formular gesendet wird.  
  
 Eine Klasse, die die <xref:System.Windows.Forms.IMessageFilter> -Schnittstelle implementiert, kann der nachrichtenpump der Anwendung hinzugefügt werden, um eine Nachricht auszufiltern oder andere Vorgänge auszuführen, bevor die Nachricht an ein Formular oder Steuerelement gesendet wird. Verwenden Sie die <xref:System.Windows.Forms.Application.AddMessageFilter%2A> -Methode in der <xref:System.Windows.Forms.Application> -Klasse, um den Nachrichtenfilter der Nachrichten Pumpe einer Anwendung hinzuzufügen.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.IMessageFilter" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
  </Docs>
  <Members>
    <Member MemberName="PreFilterMessage">
      <MemberSignature Language="C#" Value="public bool PreFilterMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreFilterMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreFilterMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool PreFilterMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterMessage :  -&gt; bool" Usage="iMessageFilter.PreFilterMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Die zu sendende Meldung. Diese Meldung kann nicht geändert werden.</param>
        <summary>Filtert eine Meldung, bevor sie gesendet wird.</summary>
        <returns><see langword="true" />, um die Meldung zu filtern und das Senden zu verhindern, <see langword="false" />, um das Senden der Meldung bis zum nächsten Filter oder Steuerelement zu ermöglichen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> Sie, um eine Nachricht auszufiltern, bevor Sie an ein Steuerelement oder Formular gesendet wird. Um beispielsweise zu verhindern, <xref:System.Windows.Forms.Control.Click> dass das- <xref:System.Windows.Forms.Button> Ereignis eines-Steuer Elements an das-Steuerelement gesendet <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> wird, implementieren Sie `true` die-Methode <xref:System.Windows.Forms.Control.Click> und geben einen Wert zurück, wenn die Meldung auftritt. Sie können diese Methode auch verwenden, um Code Aufgaben auszuführen, die Sie möglicherweise ausführen müssen, bevor die Nachricht gesendet wird.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Erfordert <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> die-Berechtigung zur Verknüpfungs Zeit.</permission>
      </Docs>
    </Member>
  </Members>
</Type>
