<Type Name="IMessageFilter" FullName="System.Windows.Forms.IMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="950814523017bf4bad1813ba90130de55d5c3a49" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39979114" /></Metadata><TypeSignature Language="C#" Value="public interface IMessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageFilter" />
  <TypeSignature Language="F#" Value="type IMessageFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Meldungsfilterschnittstelle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle ermöglicht eine Anwendung eine Nachricht zu erfassen, bevor sie zu einem Steuerelement oder Formular gesendet wird.  
  
 Eine Klasse, implementiert die <xref:System.Windows.Forms.IMessageFilter> Schnittstelle kann hinzugefügt werden, um Nachrichtensystem der Anwendung, eine Nachricht zu filtern oder andere Vorgänge ausführen, bevor die Meldung zu einem Formular oder Steuerelement gesendet wird. Verwenden Sie zum Hinzufügen des Nachrichtenfilters Meldungsverteilschleife einer Anwendung die <xref:System.Windows.Forms.Application.AddMessageFilter%2A> -Methode in der die <xref:System.Windows.Forms.Application> Klasse.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.IMessageFilter" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
  </Docs>
  <Members>
    <Member MemberName="PreFilterMessage">
      <MemberSignature Language="C#" Value="public bool PreFilterMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreFilterMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreFilterMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool PreFilterMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterMessage :  -&gt; bool" Usage="iMessageFilter.PreFilterMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Die zu sendende Meldung. Diese Meldung kann nicht geändert werden.</param>
        <summary>Filtert eine Meldung, bevor sie gesendet wird.</summary>
        <returns><see langword="true" />, um die Meldung zu filtern und das Senden zu verhindern, <see langword="false" />, um das Senden der Meldung bis zum nächsten Filter oder Steuerelement zu ermöglichen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendung <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> um eine Nachricht zu filtern, bevor sie zu einem Steuerelement oder Formular gesendet wird. Beispielsweise zum Beenden der <xref:System.Windows.Forms.Control.Click> Ereignis eine <xref:System.Windows.Forms.Button> Steuerelement auf das Steuerelement gesendet wird, implementieren Sie die <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> Methode, und geben eine `true` Wert fest, wenn die <xref:System.Windows.Forms.Control.Click> Meldung wird angezeigt. Sie können diese Methode auch verwenden, mit Code Arbeiten ausführen, die Sie möglicherweise durchführen müssen, bevor die Nachricht weitergeleitet wird.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Erfordert <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> Berechtigung zum Zeitpunkt der Verknüpfung.</permission>
      </Docs>
    </Member>
  </Members>
</Type>