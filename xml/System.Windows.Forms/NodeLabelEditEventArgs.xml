<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62815453c17b9b846b7fd77ddac56214dd4126de" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517440" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeLabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type NodeLabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="17fff-101">Stellt Daten für das <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />-Ereignis und das <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />-Ereignis bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="17fff-101">Provides data for the <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> and <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17fff-102">Die <xref:System.Windows.Forms.TreeView.AfterLabelEdit> Ereignis tritt auf, wenn der Benutzer hat die Textbearbeitung für einen Strukturknoten.</span><span class="sxs-lookup"><span data-stu-id="17fff-102">The <xref:System.Windows.Forms.TreeView.AfterLabelEdit> event occurs when the user finishes editing the text for a tree node.</span></span> <span data-ttu-id="17fff-103">Die <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> Ereignis tritt auf, wenn der Benutzer beginnt, bearbeiten den Text für einen Strukturknoten.</span><span class="sxs-lookup"><span data-stu-id="17fff-103">The <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> event occurs when the user begins editing the text for a tree node.</span></span> <span data-ttu-id="17fff-104">Ein <xref:System.Windows.Forms.NodeLabelEditEventArgs> -Objekt gibt den neuen Text zuordnen zu den Strukturknoten, der mit der Bezeichnung in den Bearbeitungsmodus, und gibt an, ob die Bearbeitungsoperation wurde abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="17fff-104">A <xref:System.Windows.Forms.NodeLabelEditEventArgs> object specifies the new text to associate with the tree node, the tree node that contains the label to edit, and whether the edit operation has been canceled.</span></span>  
  
 <span data-ttu-id="17fff-105">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="17fff-105">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17fff-106">Das folgende Beispiel ermöglicht dem Benutzer so bearbeiten Sie die Strukturknoten mit einem <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="17fff-106">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="17fff-107">Wenn der Benutzer mit der rechten Maustaste auf die Maus klickt der <xref:System.Windows.Forms.TreeNode> Position bestimmt ist, und die an, die in einer benannten Variablen gespeichert `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="17fff-107">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="17fff-108">Wenn ein Strukturknoten ausgewählt wurde, wird es in einem bearbeitbaren Zustand versetzt ermöglicht die Benutzer, der die knotenbezeichnung bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="17fff-108">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="17fff-109">Nachdem der Benutzer das Bearbeiten der Bezeichnung des Strukturknotens beendet, ist der neue Bezeichnungstext ausgewertet und gespeichert.</span><span class="sxs-lookup"><span data-stu-id="17fff-109">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="17fff-110">In diesem Beispiel werden mehrere Zeichen nicht in den Bezeichnungstext gültig angesehen.</span><span class="sxs-lookup"><span data-stu-id="17fff-110">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="17fff-111">Wenn eine ungültiges Zeichen gemäß der in der Bezeichnungszeichenfolge ist, oder die Zeichenfolge leer ist, wird der Benutzer des Fehlers benachrichtigt, und die Bezeichnung wird an seinen vorherigen Text zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="17fff-111">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.NodeLabelEditEventHandler" />
    <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17fff-112">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="17fff-113">Der Strukturknoten, der den zu bearbeitenden Text enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-113">The tree node containing the text to edit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17fff-114">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />-Klasse für den angegebenen <see cref="T:System.Windows.Forms.TreeNode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17fff-115">Die <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> Eigenschaft zugewiesen ist die `node` Parameterwert.</span><span class="sxs-lookup"><span data-stu-id="17fff-115">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode * string -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs (node, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">
          <span data-ttu-id="17fff-116">Der Strukturknoten, der den zu bearbeitenden Text enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-116">The tree node containing the text to edit.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="17fff-117">Der neue Text, der dem Strukturknoten zugeordnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-117">The new text to associate with the tree node.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17fff-118">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />-Klasse für den angegebenen <see cref="T:System.Windows.Forms.TreeNode" /> und den angegebenen Text, mit dem die Strukturknotenbezeichnung aktualisiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-118">Initializes a new instance of the <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> class for the specified <see cref="T:System.Windows.Forms.TreeNode" /> and the specified text with which to update the tree node label.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17fff-119">Die <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> Eigenschaft zugewiesen ist die `node` Parameterwert, und die <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> Eigenschaft zugewiesen ist die `label` Parameterwert.</span><span class="sxs-lookup"><span data-stu-id="17fff-119">The <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> property is assigned the `node` parameter value, and the <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> property is assigned the `label` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17fff-120">Ruft einen Wert ab, der angibt, ob die Bearbeitung abgebrochen wurde, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-120">Gets or sets a value indicating whether the edit has been canceled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17fff-121">
            <see langword="true" />, wenn die Bearbeitung abgebrochen wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-121">
              <see langword="true" /> if the edit has been canceled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17fff-122">Das folgende Beispiel ermöglicht dem Benutzer so bearbeiten Sie die Strukturknoten mit einem <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="17fff-122">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="17fff-123">Wenn der Benutzer mit der rechten Maustaste auf die Maus klickt der <xref:System.Windows.Forms.TreeNode> Position bestimmt ist, und die an, die in einer benannten Variablen gespeichert `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="17fff-123">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="17fff-124">Wenn ein Strukturknoten ausgewählt wurde, wird es in einem bearbeitbaren Zustand versetzt ermöglicht die Benutzer, der die knotenbezeichnung bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="17fff-124">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="17fff-125">Nachdem der Benutzer das Bearbeiten der Bezeichnung des Strukturknotens beendet, ist der neue Bezeichnungstext ausgewertet und gespeichert.</span><span class="sxs-lookup"><span data-stu-id="17fff-125">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="17fff-126">In diesem Beispiel werden mehrere Zeichen nicht in den Bezeichnungstext gültig angesehen.</span><span class="sxs-lookup"><span data-stu-id="17fff-126">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="17fff-127">Wenn eine ungültiges Zeichen gemäß der in der Bezeichnungszeichenfolge ist, oder die Zeichenfolge leer ist, wird der Benutzer des Fehlers benachrichtigt, und die Bezeichnung wird an seinen vorherigen Text zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="17fff-127">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17fff-128">Ruft den neuen Text ab, der dem Strukturknoten zugeordnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-128">Gets the new text to associate with the tree node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17fff-129">Der Zeichenfolgenwert, der die neue <see cref="T:System.Windows.Forms.TreeNode" />-Bezeichnung darstellt, oder <see langword="null" />, wenn der Benutzer den Bearbeitungsvorgang abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-129">The string value that represents the new <see cref="T:System.Windows.Forms.TreeNode" /> label or <see langword="null" /> if the user cancels the edit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17fff-130">Der Wert dieser Eigenschaft ist `null` , wenn der Benutzer drückt die ESC-Taste, um die Bearbeitung abgebrochen oder die EINGABETASTE drückt, ohne den Bezeichnungstext zu ändern.</span><span class="sxs-lookup"><span data-stu-id="17fff-130">The value of this property is `null` if the user presses ESC to cancel the edit or presses ENTER without modifying the label text.</span></span> <span data-ttu-id="17fff-131">Wenn der Benutzer den Text der strukturknotenbezeichnung bearbeitet wird, ist der Wert dieser Eigenschaft den neuen Bezeichnungstext an.</span><span class="sxs-lookup"><span data-stu-id="17fff-131">If the user edits the label text, the value of this property is the new label text.</span></span> <span data-ttu-id="17fff-132">Dies gilt auch, wenn der endgültige Wert des bearbeiteten Bezeichnungstext, den ursprünglichen Wert entspricht.</span><span class="sxs-lookup"><span data-stu-id="17fff-132">This is true even if the final value of edited label text is the same as its original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17fff-133">Das folgende Beispiel ermöglicht dem Benutzer so bearbeiten Sie die Strukturknoten mit einem <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="17fff-133">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="17fff-134">Wenn der Benutzer mit der rechten Maustaste auf die Maus klickt der <xref:System.Windows.Forms.TreeNode> Position bestimmt ist, und die an, die in einer benannten Variablen gespeichert `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="17fff-134">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="17fff-135">Wenn ein Strukturknoten ausgewählt wurde, wird es in einem bearbeitbaren Zustand versetzt ermöglicht die Benutzer, der die knotenbezeichnung bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="17fff-135">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="17fff-136">Nachdem der Benutzer das Bearbeiten der Bezeichnung des Strukturknotens beendet, ist der neue Bezeichnungstext ausgewertet und gespeichert.</span><span class="sxs-lookup"><span data-stu-id="17fff-136">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="17fff-137">In diesem Beispiel werden mehrere Zeichen nicht in den Bezeichnungstext gültig angesehen.</span><span class="sxs-lookup"><span data-stu-id="17fff-137">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="17fff-138">Wenn eine ungültiges Zeichen gemäß der in der Bezeichnungszeichenfolge ist, oder die Zeichenfolge leer ist, wird der Benutzer des Fehlers benachrichtigt, und die Bezeichnung wird an seinen vorherigen Text zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="17fff-138">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17fff-139">Ruft den Strukturknoten ab, der den zu bearbeitenden Text enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-139">Gets the tree node containing the text to edit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17fff-140">Ein <see cref="T:System.Windows.Forms.TreeNode" />, der den Strukturknoten mit dem zu bearbeitenden Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17fff-140">A <see cref="T:System.Windows.Forms.TreeNode" /> that represents the tree node containing the text to edit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17fff-141">Das folgende Beispiel ermöglicht dem Benutzer so bearbeiten Sie die Strukturknoten mit einem <xref:System.Windows.Forms.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="17fff-141">The following example allows the user to edit nonroot tree nodes by using a <xref:System.Windows.Forms.ContextMenu>.</span></span> <span data-ttu-id="17fff-142">Wenn der Benutzer mit der rechten Maustaste auf die Maus klickt der <xref:System.Windows.Forms.TreeNode> Position bestimmt ist, und die an, die in einer benannten Variablen gespeichert `mySelectedNode`.</span><span class="sxs-lookup"><span data-stu-id="17fff-142">When the user right clicks the mouse, the <xref:System.Windows.Forms.TreeNode> at that position is determined and stored in a variable named `mySelectedNode`.</span></span> <span data-ttu-id="17fff-143">Wenn ein Strukturknoten ausgewählt wurde, wird es in einem bearbeitbaren Zustand versetzt ermöglicht die Benutzer, der die knotenbezeichnung bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="17fff-143">If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label.</span></span> <span data-ttu-id="17fff-144">Nachdem der Benutzer das Bearbeiten der Bezeichnung des Strukturknotens beendet, ist der neue Bezeichnungstext ausgewertet und gespeichert.</span><span class="sxs-lookup"><span data-stu-id="17fff-144">After the user stops editing the tree node label, the new label text is evaluated and saved.</span></span> <span data-ttu-id="17fff-145">In diesem Beispiel werden mehrere Zeichen nicht in den Bezeichnungstext gültig angesehen.</span><span class="sxs-lookup"><span data-stu-id="17fff-145">For this example, several characters are considered not valid in the label text.</span></span> <span data-ttu-id="17fff-146">Wenn eine ungültiges Zeichen gemäß der in der Bezeichnungszeichenfolge ist, oder die Zeichenfolge leer ist, wird der Benutzer des Fehlers benachrichtigt, und die Bezeichnung wird an seinen vorherigen Text zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="17fff-146">If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</span></span>  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
  </Members>
</Type>