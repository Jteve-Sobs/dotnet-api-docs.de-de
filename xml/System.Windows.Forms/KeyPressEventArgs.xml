<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc850724cf3d7d1b84a333ad7249356489ecc0d2" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70316870" /></Metadata><TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.Control.KeyPress" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.KeyPressEventArgs> gibt das Zeichen an, das zusammengesetzt wird, wenn der Benutzer eine Taste drückt. Wenn der Benutzer beispielsweise UMSCHALT + k drückt, gibt die <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> -Eigenschaft den Großbuchstaben K zurück.  
  
 Ein <xref:System.Windows.Forms.Control.KeyPress> -Ereignis tritt auf, wenn der Benutzer eine Taste drückt. Zwei Ereignisse, die eng mit dem <xref:System.Windows.Forms.Control.KeyPress> Ereignis verknüpft sind, sind <xref:System.Windows.Forms.Control.KeyUp> und <xref:System.Windows.Forms.Control.KeyDown>. Das <xref:System.Windows.Forms.Control.KeyDown> Ereignis geht vor jedem <xref:System.Windows.Forms.Control.KeyPress> Ereignis vor, wenn der Benutzer eine Taste drückt, <xref:System.Windows.Forms.Control.KeyUp> und ein-Ereignis tritt auf, wenn der Benutzer eine Taste loslässt. Wenn der Benutzer einen Schlüssel enthält, treten bei <xref:System.Windows.Forms.Control.KeyDown> jeder <xref:System.Windows.Forms.Control.KeyPress> Wiederholung des Zeichens doppelte-Ereignisse und-Ereignisse auf. Ein <xref:System.Windows.Forms.Control.KeyUp> Ereignis wird bei der Freigabe generiert.  
  
 Bei jedem <xref:System.Windows.Forms.Control.KeyPress> Ereignis wird eine <xref:System.Windows.Forms.KeyPressEventArgs> übermittelt. Ein <xref:System.Windows.Forms.KeyEventArgs> -Wert wird mit <xref:System.Windows.Forms.Control.KeyDown> jedem <xref:System.Windows.Forms.Control.KeyUp> -Ereignis und einem-Ereignis Ein <xref:System.Windows.Forms.KeyEventArgs> gibt an, ob eine Modifizierertaste (STRG, UMSCHALT oder alt) zusammen mit einem anderen Schlüssel gedrückt wurde. (Diese Modifiziererinformationen können auch über die <xref:System.Windows.Forms.Control.ModifierKeys%2A> -Eigenschaft <xref:System.Windows.Forms.Control> der-Klasse abgerufen werden.)  
  
 Legen <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> Sie `true` auf fest, `KeyPress` um das Ereignis abzubrechen. Dadurch wird verhindert, dass das Steuerelement die Tastenkombination verarbeitet.  
  
> [!NOTE]
>  Einige Steuerelemente verarbeiten bestimmte Tastenkombinationen auf <xref:System.Windows.Forms.Control.KeyDown>. Beispielsweise verarbeitet <xref:System.Windows.Forms.RichTextBox> die EINGABETASTE, bevor <xref:System.Windows.Forms.Control.KeyPress> aufgerufen wird. In solchen Fällen kann das <xref:System.Windows.Forms.Control.KeyPress> Ereignis nicht abgebrochen werden, und es muss stattdessen der Schlüssel Strich von <xref:System.Windows.Forms.Control.KeyDown> abgebrochen werden.  
  
 Weitere Informationen zum Ereignis Modell finden Sie unter [behandeln und Auswerfen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung <xref:System.Windows.Forms.KeyPressEventArgs> von, um Schlüssel zu zählen, während Sie gedrückt werden, und um die Ergebnisse nach dem Drücken der Tastenkombination anzuzeigen. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>wird dann auf "true" festgelegt, damit das Betriebssystem den Schlüssel nicht weiterverarbeitet. Im Beispiel wird davon ausgegangen, dass <xref:System.Windows.Forms.TextBox> ein Formular mit einem platziert ist.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 Sie müssen eine neue Instanz dieser Klasse erstellen. Sie müssen auch den-Ereignishandler festlegen. Dies können Sie im Konstruktor für die Klasse durchführen.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 Wenn das angegebene Ereignis im-Steuerelement ausgelöst wird, wird die angefügte-Methode aufgerufen, und die Anwendung kann Code als Reaktion auf das-Ereignis ausführen.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar">Das ASCII-Zeichen, das der vom Benutzer gedrückten Taste entspricht.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.KeyPressEventArgs" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> die-Eigenschaft, um den aktuellen Zustand der modifiziererschlüssel zu erhalten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein Meldungs Feld angezeigt, das den aktuellen Zustand der Umschalttaste anzeigt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="E:System.Windows.Forms.Control.KeyPress" />-Ereignis behandelt wurde, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Ereignis behandelt wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Ereignis nicht behandelt wird, wird es zur Standard Verarbeitung an das Betriebssystem gesendet. Legen <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> Sie `true` auf fest, `KeyPress` um das Ereignis abzubrechen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Forms.TextBox> -Steuerelement erstellt. Die `keypressed` -Methode verwendet <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> die-Eigenschaft, um zu überprüfen, ob die EINGABETASTE gedrückt wird. Wenn die EINGABETASTE gedrückt wird, wird <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> die-Eigenschaft auf `true`festgelegt, was bedeutet, dass das Ereignis behandelt wird.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public char KeyChar { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyChar As Char" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zeichen ab, das der gedrückten Taste entspricht, oder legt dieses fest.</summary>
        <value>Das resultierende ASCII-Zeichen. Wenn der Benutzer beispielsweise UMSCHALT+K drückt, gibt diese Eigenschaft ein großes K zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> die-Eigenschaft, um zur Laufzeit Stichproben von Tastatureingaben auszuführen und Tastatureingaben unter bestimmten Lauf Zeit Bedingungen zu ändern. Beispielsweise können Sie verwenden <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> , um nicht numerische Tastatureingaben zu deaktivieren, wenn der Benutzer eine Postleitzahl eingibt, alle alphabetischen keypressen in Großbuchstaben in einem Dateneingabefeld ändern oder das Tastatur-oder andere Schlüsseleingabe Gerät für bestimmte Tastenkombinationen überwachen.  
  
 Sie können die folgenden Schlüssel erhalten oder festlegen:  
  
-   a-z, a-z.  
  
-   DRÜCKEN.  
  
-   Interpunktions Zeichen.  
  
-   Zahlenschlüssel, sowohl über dem oberen Rand der Tastatur als auch auf der numerischen Tastatur.  
  
-   EINGEHEN.  
  
 Die folgenden Schlüssel können nicht festgelegt oder festgelegt werden:  
  
-   TAB-TASTE  
  
-   Einfügen und löschen.  
  
-   TRAUM.  
  
-   SCHLIESSLICH.  
  
-   Bild-auf und Bild-ab.  
  
-   F1-F2.  
  
-   ALT.  
  
-   Pfeiltasten.  
  
> [!NOTE]
>  Informationen dazu, wie Sie die oben erwähnten nicht-Zeichen Schlüssel erkennen, finden Sie unter der <xref:System.Windows.Forms.KeyEventArgs> -Klasse.  
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Forms.TextBox> -Steuerelement erstellt. Die `keypressed` Methode verwendet die <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> -Eigenschaft, um zu überprüfen, ob die EINGABETASTE gedrückt wurde. Wenn die EINGABETASTE gedrückt wird, wird <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> die-Eigenschaft auf `true`festgelegt, was bedeutet, dass das Ereignis behandelt wird.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>
