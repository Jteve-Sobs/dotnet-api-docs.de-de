<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25038ad91908b5dabca4612a74eb04e74f6e6cab" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56361357" /></Metadata><TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.Control.KeyPress" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.KeyPressEventArgs> gibt das Zeichen, die zusammengesetzt ist, wenn der Benutzer eine Taste drückt. Z. B. wenn der Benutzer drückt UMSCHALT + K, die <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Eigenschaft gibt eine in Großbuchstaben k zurück.  
  
 Ein <xref:System.Windows.Forms.Control.KeyPress> Ereignis tritt auf, wenn der Benutzer eine Taste drückt. Zwei Ereignisse, die auf eng miteinander verknüpft sind die <xref:System.Windows.Forms.Control.KeyPress> Ereignis sind <xref:System.Windows.Forms.Control.KeyUp> und <xref:System.Windows.Forms.Control.KeyDown>. Die <xref:System.Windows.Forms.Control.KeyDown> Ereignis vorangestellt ist, jede <xref:System.Windows.Forms.Control.KeyPress> Ereignis aus, wenn der Benutzer eine Taste drückt und <xref:System.Windows.Forms.Control.KeyUp> Ereignis tritt auf, wenn der Benutzer eine Taste loslässt. Wenn der Benutzer eine Taste gedrückt hält, doppelte <xref:System.Windows.Forms.Control.KeyDown> und <xref:System.Windows.Forms.Control.KeyPress> Ereignisse auftreten, jedes Mal, die das Zeichen wird wiederholt. Eine <xref:System.Windows.Forms.Control.KeyUp> Ereignis wird generiert, sobald es veröffentlicht.  
  
 Mit jedem <xref:System.Windows.Forms.Control.KeyPress> Ereignis eine <xref:System.Windows.Forms.KeyPressEventArgs> übergeben wird. Ein <xref:System.Windows.Forms.KeyEventArgs> übergeben wird, mit jedem <xref:System.Windows.Forms.Control.KeyDown> und <xref:System.Windows.Forms.Control.KeyUp> Ereignis. Ein <xref:System.Windows.Forms.KeyEventArgs> gibt an, ob Modifizierertasten (STRG, UMSCHALTTASTE und ALT) zusammen mit einer anderen Taste gedrückt wurden. (Diese Modifiziererinformationen erhalten Sie auch über die <xref:System.Windows.Forms.Control.ModifierKeys%2A> Eigenschaft der <xref:System.Windows.Forms.Control> Klasse.)  
  
 Legen Sie <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> zu `true` zum Abbrechen der `KeyPress` Ereignis. Dadurch wird verhindert, dass das Steuerelement Drücken der Taste verarbeitet werden.  
  
> [!NOTE]
>  Einige Steuerelemente verarbeiten bestimmter Tastenanschläge auf <xref:System.Windows.Forms.Control.KeyDown>. Z. B. <xref:System.Windows.Forms.RichTextBox> verarbeitet die EINGABETASTE, bevor Sie <xref:System.Windows.Forms.Control.KeyPress> aufgerufen wird. In solchen Fällen kann nicht abgebrochen werden die <xref:System.Windows.Forms.Control.KeyPress> -Ereignis, und müssen den Schlüssel Strich aus Abbrechen <xref:System.Windows.Forms.Control.KeyDown> stattdessen.  
  
 Informationen über das Ereignismodell, finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.KeyPressEventArgs> zum Zählen von gedrückten Tasten und zum Anzeigen der Ergebnisse nach jedem Tastendruck. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> Klicken Sie dann verarbeitet auf true festgelegt sind das Betriebssystem zu verhindern von weiteren den Schlüssel. Im Beispiel wird angenommen, ein Formular mit einem <xref:System.Windows.Forms.TextBox> platziert.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 Sie müssen eine neue Instanz dieser Klasse erstellen. Sie müssen auch den Ereignishandler festlegen. Sie können im Konstruktor für die Klasse dazu.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 Wenn das angegebene Ereignis in das Steuerelement ausgelöst wird, die angefügte Methode wird aufgerufen, und die Anwendung kann Code in Reaktion auf das Ereignis ausführen.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar">Das ASCII-Zeichen, das der vom Benutzer gedrückten Taste entspricht.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.KeyPressEventArgs" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> Eigenschaft, um den aktuellen Zustand der Modifizierertasten abzurufen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt ein Meldungsfeld an, die den aktuellen Zustand der UMSCHALTTASTE anzeigt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="E:System.Windows.Forms.Control.KeyPress" />-Ereignis behandelt wurde, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Ereignis behandelt wurde, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Ereignis nicht behandelt wird, wird sie an das Betriebssystem für die standardverarbeitung gesendet werden. Legen Sie <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> zu `true` zum Abbrechen der `KeyPress` Ereignis.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.Forms.TextBox> Steuerelement. Die `keypressed` -Methode verwendet die <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Eigenschaft zu überprüfen, ob die EINGABETASTE gedrückt wird. Wenn Sie die EINGABETASTE gedrückt wird, die <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> -Eigenschaftensatz auf `true`, wodurch das Ereignis behandelt wird.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Zeichen ab, das der gedrückten Taste entspricht, oder legt dieses fest.</summary>
        <value>Das resultierende ASCII-Zeichen. Wenn der Benutzer beispielsweise UMSCHALT+K drückt, gibt diese Eigenschaft ein großes K zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Eigenschaft, um Tastatureingaben zur Laufzeit und Tastatureingaben unter bestimmten Umständen der Laufzeit zu ändern. Beispielsweise können Sie <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> um nicht numerische Tastenanschläge deaktivieren, wenn der Benutzer eine Postleitzahl eingibt, alle alphabetischen Tastenanschläge in einem Datenfeld der Eintrag in Großbuchstaben oder überwachen Sie die Tastatur oder andere wichtige Eingabegeräts bestimmte Tastenkombinationen.  
  
 Sie können zu erhalten, oder legen Sie die folgenden Schlüssel:  
  
-   a-z, A-Z.  
  
-   CTRL.  
  
-   Satzzeichen.  
  
-   Anzahl von Schlüsseln, sowohl im oberen Bereich der Tastatur und auf der Zehnertastatur.  
  
-   GEBEN SIE EIN.  
  
 Sie können nicht abrufen oder Festlegen von die folgenden Schlüssel:  
  
-   Die TAB-TASTE.  
  
-   INSERT- und DELETE.  
  
-   STARTSEITE.  
  
-   DAS ENDE.  
  
-   Bild-auf und Bild-ab.  
  
-   F1-F2.  
  
-   ALT-TASTE.  
  
-   Pfeiltasten.  
  
> [!NOTE]
>  Informationen dazu, wie Sie einen der oben genannten Nichtzeichen Schlüssel ermitteln, finden Sie unter den <xref:System.Windows.Forms.KeyEventArgs> Klasse.  
  
-  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.Forms.TextBox> Steuerelement. Die `keypressed` -Methode verwendet die <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Eigenschaft zu überprüfen, ob die EINGABETASTE gedrückt. Wenn Sie die EINGABETASTE gedrückt wird, die <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> -Eigenschaftensatz auf `true`, wodurch das Ereignis behandelt wird.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>