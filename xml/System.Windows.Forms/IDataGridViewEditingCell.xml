<Type Name="IDataGridViewEditingCell" FullName="System.Windows.Forms.IDataGridViewEditingCell">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66bd955d543f0299c4b1d7fa21ef1d2b8a722ea5" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37510971" /></Metadata><TypeSignature Language="C#" Value="public interface IDataGridViewEditingCell" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingCell" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingCell" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingCell" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingCell" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingCell = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert allgemeine Funktionen für eine Zelle mit veränderbarem Wert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Schnittstelle wird von Klassen implementiert, z. B. <xref:System.Windows.Forms.DataGridViewCheckBoxCell> , abgeleitet <xref:System.Windows.Forms.DataGridViewCell> , und geben Sie eine Benutzeroberfläche (UI) zum Angeben von Werten ohne zu einem Bearbeitungssteuerelement hosten. In diesem Fall wird die Benutzeroberfläche angezeigt, unabhängig davon, ob die Zelle im Bearbeitungsmodus befindet.  
  
 Andere Zelle Typen, z. B. <xref:System.Windows.Forms.DataGridViewButtonCell>, stellen eine Benutzeroberfläche bereit, aber keine Benutzer angegebene Werte speichern. In diesem Fall der Zellentyp nicht implementiert <xref:System.Windows.Forms.IDataGridViewEditingCell> oder ein Edit-Steuerelement hosten.  
  
 Zellentypen, die eine Bearbeitung anzeigen zu steuern, wie z. B. wenn die Zelle im Bearbeitungsmodus befindet, ist <xref:System.Windows.Forms.DataGridViewTextBoxCell>, implementieren keine <xref:System.Windows.Forms.IDataGridViewEditingCell> jedoch stattdessen eine Begleitklasse, die implementiert <xref:System.Windows.Forms.IDataGridViewEditingControl>. Z. B. <xref:System.Windows.Forms.DataGridViewTextBoxCell> bietet eine <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl> abgeleitet, die die <xref:System.Windows.Forms.TextBox> -Steuerelement und implementiert <xref:System.Windows.Forms.IDataGridViewEditingControl>. In diesem Fall die Zelle <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> -Eigenschaftensatz auf eine <xref:System.Type> Objekt, das den Typ des Bearbeitungssteuerelements darstellt. Informationen zum Implementieren <xref:System.Windows.Forms.IDataGridViewEditingControl>, finden Sie unter [Vorgehensweise: Hosten von-Steuerelementen in Windows Forms-DataGridView-Zellen](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
  </Docs>
  <Members>
    <Member MemberName="EditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingCellFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingCellFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingCellFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingCellFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingCellFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den formatierten Wert der Zelle ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das den Wert der Zelle enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der formatierte Wert stellt den Wert dar, wie er in der Benutzeroberfläche der Zelle angezeigt wird. Der formatierte Wert kann in absoluten Wert und sogar-Datentyp der tatsächliche Wert, der in der Zelle enthaltene abweichen.  
  
 Implementierungen dieser Eigenschaft wird in der Regel einen Wert abgerufen, die durch den Aufruf zurückgeben dem <xref:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue%2A> -Methode und übergeben die <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Formatting> Wert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingCellValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingCellValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingCellValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingCellValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingCellValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingCellValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob sich der Wert der Zelle geändert hat, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn sich der Wert der Zelle geändert hat; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird festgelegt, um `true` , um anzugeben, dass der Wert der Zelle geändert wurde und die Benutzeroberfläche (UI) möglicherweise aktualisiert werden, damit die Änderung im Wert berücksichtigt muss. Der besitzenden Zelle oder die Tabelle sollte diese Eigenschaft auf Zurücksetzen `false` nach einem Update.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingCellFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingCellFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingCellFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingCellFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingCellFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingCell.GetEditingCellFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />-Werten, die den Kontext angibt, in dem die Daten benötigt werden.</param>
        <summary>Ruft den formatierten Wert der Zelle ab.</summary>
        <returns>Ein <see cref="T:System.Object" />, das die formatierte Version des Zelleninhalts darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der formatierte Wert stellt den Wert dar, wie er in der Benutzeroberfläche der Zelle angezeigt wird. Der formatierte Wert kann in absoluten Wert und sogar-Datentyp der tatsächliche Wert, der in der Zelle enthaltene abweichen.  
  
 Verwenden Sie zum Festlegen des formatierten Wert der Zelle die <xref:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingCellForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingCellForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingCellForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingCell.PrepareEditingCellForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingCellForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingCellForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingCellForEdit : bool -&gt; unit" Usage="iDataGridViewEditingCell.PrepareEditingCellForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll"><see langword="true" />, um die Zelleninhalte auszuwählen, andernfalls <see langword="false" />.</param>
        <summary>Bereitet die derzeit ausgewählte Zelle zur Bearbeitung vor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode dient zum Bearbeiten der Zelle und dessen Inhalt vorbereiten. Beispielsweise empfiehlt es sich um die Einfügemarke am Ende des Zelleninhalts setzen oder zu ändern, wie der Inhalt ausgerichtet werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>