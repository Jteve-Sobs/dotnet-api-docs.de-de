<Type Name="Menu+MenuItemCollection" FullName="System.Windows.Forms.Menu+MenuItemCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de115ce20406516a62fa7bd6f6f399760bb02b54" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75178536" /></Metadata><TypeSignature Language="C#" Value="public class Menu.MenuItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Menu/MenuItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Menu.MenuItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu.MenuItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Menu::MenuItemCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type Menu.MenuItemCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Auflistung von<see cref="T:System.Windows.Forms.MenuItem" />-Objekten dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse stellt die Auflistung von <xref:System.Windows.Forms.MenuItem> Objekten dar, die in einem <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>oder <xref:System.Windows.Forms.MenuItem>gespeichert sind. Bei den Klassen <xref:System.Windows.Forms.MainMenu> und <xref:System.Windows.Forms.ContextMenu> stellt diese Auflistung die gesamte Menüstruktur für das Steuerelement dar. Bei der <xref:System.Windows.Forms.MenuItem>-Klasse stellt diese Auflistung die Liste der unter Menü Elemente dar, die der <xref:System.Windows.Forms.MenuItem>zugeordnet sind.  
  
 Mit den Methoden <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> und <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A> können Sie einzelne Menü Elemente aus der Auflistung hinzufügen und daraus entfernen. Sie können auch die <xref:System.Windows.Forms.Menu.MenuItemCollection.Clear%2A>-Methode verwenden, um alle Menü Elemente aus der Auflistung zu entfernen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection (System.Windows.Forms.Menu owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Menu owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.#ctor(System.Windows.Forms.Menu)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Menu)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection(System::Windows::Forms::Menu ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Menu.MenuItemCollection : System.Windows.Forms.Menu -&gt; System.Windows.Forms.Menu.MenuItemCollection" Usage="new System.Windows.Forms.Menu.MenuItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Menu" />
      </Parameters>
      <Docs>
        <param name="owner">Das <see cref="T:System.Windows.Forms.Menu" />, das diese Auflistung besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse erfordert, dass Sie die Auflistung einer Klasse zuordnen, die von <xref:System.Windows.Forms.Menu>abgeleitet ist, z. b. die <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>oder <xref:System.Windows.Forms.MenuItem> Klasse. Da Sie ein Menü angeben müssen, das dieser Sammlung zugeordnet ist, können Sie nicht mehrere Menü Element Auflistungen erstellen und Sie nach Bedarf einem Menü zuordnen. Um die Menü Elemente zu wechseln, die einem Menü zugeordnet sind, müssen Sie die Auflistung der Elemente löschen und die Menü Elemente hinzufügen, die der Auflistung angezeigt werden sollen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Auflistung eine neue <see cref="T:System.Windows.Forms.MenuItem" />-Instanz hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem Add (string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem Add(string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (caption As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ Add(System::String ^ caption);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.MenuItem&#xA;override this.Add : string -&gt; System.Windows.Forms.MenuItem" Usage="menuItemCollection.Add caption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="caption">Die Beschriftung des Menüelements.</param>
        <summary>Fügt am Ende des aktuellen Menüs ein neues <see cref="T:System.Windows.Forms.MenuItem" /> mit angegebener Beschriftung hinzu.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.MenuItem" />, das das derzeit der Auflistung hinzugefügte Menüelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Windows.Forms.MenuItem> kann nur in jeweils einem Menü enthalten sein und kann dem gleichen Menü nicht mehrmals hinzugefügt werden. Verwenden Sie die <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>-Methode der <xref:System.Windows.Forms.MenuItem>-Klasse, um eine <xref:System.Windows.Forms.MenuItem> in mehr als einem Menü wiederzuverwenden. Um eine <xref:System.Windows.Forms.MenuItem> zu entfernen, die Sie zuvor hinzugefügt haben, verwenden Sie die <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mithilfe der abgeleiteten-Klasse <xref:System.Windows.Forms.MainMenu> ein Hauptmenü, `mainMenu1`, erstellt, dem zwei <xref:System.Windows.Forms.MenuItem>-Objekte <xref:System.Windows.Forms.Menu.MenuItems%2A> hinzugefügt wurden. Der Code weist dann `mainMenu1` der <xref:System.Windows.Forms.Form.Menu%2A>-Eigenschaft der <xref:System.Windows.Forms.Form>zu. Dieses Beispiel erfordert, dass sich der in diesem Beispiel definierte Code in einem Formular befindet.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.MenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.MenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::MenuItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.MenuItem -&gt; int&#xA;override this.Add : System.Windows.Forms.MenuItem -&gt; int" Usage="menuItemCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="item">Das hinzuzufügende <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <summary>Fügt am Ende des aktuellen Menüs ein bereits erstelltes <see cref="T:System.Windows.Forms.MenuItem" /> hinzu.</summary>
        <returns>Der nullbasierte Index, an dem das Element in der Auflistung gespeichert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Windows.Forms.MenuItem> kann nur in jeweils einem Menü enthalten sein und kann dem gleichen Menü nicht mehrmals hinzugefügt werden. Verwenden Sie die <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>-Methode der <xref:System.Windows.Forms.MenuItem>-Klasse, um eine <xref:System.Windows.Forms.MenuItem> in mehr als einem Menü wiederzuverwenden. Um eine <xref:System.Windows.Forms.MenuItem> zu entfernen, die Sie zuvor hinzugefügt haben, verwenden Sie die <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A>-Methode.  
  
 Diese Version der <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>-Methode ermöglicht Ihnen das Hinzufügen von zuvor erstellten <xref:System.Windows.Forms.MenuItem> Objekten am Ende der Auflistung der Menü Elemente.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Instanz der abgeleiteten-Klasse erstellt, <xref:System.Windows.Forms.MainMenu>und eine <xref:System.Windows.Forms.MenuItem> der Auflistung von <xref:System.Windows.Forms.MenuItem>-Objekten hinzugefügt. Dieses Beispiel setzt voraus, dass sich die in diesem Beispiel definierte-Methode in der-Klasse für ein Formular befindet und von einer Methode in dieser Formular Klasse aufgerufen wird.  
  
 [!code-cpp[Classic Menu.MenuItems Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItems Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (int index, System.Windows.Forms.MenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(int32 index, class System.Windows.Forms.MenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.Int32,System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (index As Integer, item As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(int index, System::Windows::Forms::MenuItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : int * System.Windows.Forms.MenuItem -&gt; int&#xA;override this.Add : int * System.Windows.Forms.MenuItem -&gt; int" Usage="menuItemCollection.Add (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="index">Die Position, an der das neue Element hinzugefügt werden soll.</param>
        <param name="item">Das hinzuzufügende <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <summary>Fügt am angegebenen Index innerhalb der Auflistung der Menüelemente ein zuvor erstelltes<see cref="T:System.Windows.Forms.MenuItem" /> hinzu.</summary>
        <returns>Der nullbasierte Index, an dem das Element in der Auflistung gespeichert ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Windows.Forms.MenuItem> kann nur in jeweils einem Menü enthalten sein und kann dem gleichen Menü nicht mehrmals hinzugefügt werden. Verwenden Sie die <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>-Methode der <xref:System.Windows.Forms.MenuItem>-Klasse, um eine <xref:System.Windows.Forms.MenuItem> in mehr als einem Menü wiederzuverwenden. Um eine <xref:System.Windows.Forms.MenuItem> zu entfernen, die Sie zuvor hinzugefügt haben, verwenden Sie die <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A>-Methode.  
  
 Diese Version der <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>-Methode ermöglicht Ihnen das Hinzufügen von zuvor erstellten <xref:System.Windows.Forms.MenuItem> Objekten zu einer bestimmten Indexposition in der Auflistung. Alle <xref:System.Windows.Forms.MenuItem>, die sich derzeit an diesem Index befinden, und alle <xref:System.Windows.Forms.MenuItem> Objekte hinter diesem Index werden auf den nächstniedrigsten Index in der Auflistung verschoben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Instanz der abgeleiteten-Klasse erstellt, <xref:System.Windows.Forms.MainMenu>und der Auflistung von <xref:System.Windows.Forms.MenuItem> Objekten an einer bestimmten Position in der Auflistung der Menü Elemente ein <xref:System.Windows.Forms.MenuItem> Objekt hinzugefügt. Dieses Beispiel setzt voraus, dass sich die in diesem Beispiel definierte-Methode in der-Klasse für ein Formular befindet und von einer Methode in dieser Formular Klasse aufgerufen wird.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.Add4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.Add4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add4 Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.Add4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Das hinzugefügte <see cref="T:System.Windows.Forms.MenuItem" /> wird bereits verwendet.</exception>
        <exception cref="T:System.ArgumentException">Der im <paramref name="index" />-Parameter angegebene Index ist größer als die Größe der Auflistung.</exception>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem Add (string caption, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem Add(string caption, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (caption As String, onClick As EventHandler) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ Add(System::String ^ caption, EventHandler ^ onClick);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * EventHandler -&gt; System.Windows.Forms.MenuItem&#xA;override this.Add : string * EventHandler -&gt; System.Windows.Forms.MenuItem" Usage="menuItemCollection.Add (caption, onClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="caption">Die Beschriftung des Menüelements.</param>
        <param name="onClick">Ein <see cref="T:System.EventHandler" />, der den Ereignishandler darstellt, der aufgerufen wird, wenn auf das Element geklickt wird oder wenn eine Zugriffstaste oder Tastenkombination für das Menüelement gedrückt wird.</param>
        <summary>Fügt am Ende des aktuellen Menüs ein neues <see cref="T:System.Windows.Forms.MenuItem" /> mit angegebener Beschriftung und einem angegebenen Ereignishandler für das <see cref="E:System.Windows.Forms.MenuItem.Click" />-Ereignis hinzu.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.MenuItem" />, das das derzeit der Auflistung hinzugefügte Menüelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Windows.Forms.MenuItem> kann nur in jeweils einem Menü enthalten sein und kann dem gleichen Menü nicht mehrmals hinzugefügt werden. Verwenden Sie die <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>-Methode der <xref:System.Windows.Forms.MenuItem>-Klasse, um eine <xref:System.Windows.Forms.MenuItem> in mehr als einem Menü wiederzuverwenden. Um eine <xref:System.Windows.Forms.MenuItem> zu entfernen, die Sie zuvor hinzugefügt haben, verwenden Sie die <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A>-Methode.  
  
 Mit dieser Version der <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>-Methode können Sie eine Beschriftung für das Menü Element und einen Delegaten angeben, um das <xref:System.Windows.Forms.MenuItem.Click> Ereignis zu behandeln. Sie können diese Version der <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>-Methode verwenden, wenn die Anwendung bereits über einen Ereignishandler zum Behandeln des <xref:System.Windows.Forms.MenuItem.Click> Ereignisses verfügt.  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.MenuItem.Click>-Ereignis wird für eine <xref:System.Windows.Forms.MenuItem>, die unter Menü Elemente enthält, nicht ausgelöst.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mithilfe der abgeleiteten-Klasse <xref:System.Windows.Forms.MainMenu> ein Hauptmenü, `mainMenu1`, erstellt, dem zwei <xref:System.Windows.Forms.MenuItem>-Objekte <xref:System.Windows.Forms.Menu.MenuItems%2A> hinzugefügt wurden. Der Code verwendet diese Version der <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>-Methode, um einen Ereignishandler für das <xref:System.Windows.Forms.MenuItem.Click> Ereignis des zweiten Menü Elements zu definieren, das der Auflistung hinzugefügt wurde. Der Code weist dann `mainMenu1` der <xref:System.Windows.Forms.Form.Menu%2A>-Eigenschaft der <xref:System.Windows.Forms.Form>zu. Dieses Beispiel setzt voraus, dass sich der in diesem Beispiel definierte Code in einem Formular befindet.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.Add1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem Add (string caption, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem Add(string caption, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (caption As String, items As MenuItem()) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ Add(System::String ^ caption, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem&#xA;override this.Add : string * System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MenuItem" Usage="menuItemCollection.Add (caption, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="caption">Die Beschriftung des Menüelements.</param>
        <param name="items">Ein Array von <see cref="T:System.Windows.Forms.MenuItem" />-Objekten, die in diesem <see cref="T:System.Windows.Forms.MenuItem" /> enthalten sind.</param>
        <summary>Fügt am Ende dieses Menüs ein neues <see cref="T:System.Windows.Forms.MenuItem" /> mit angegebener Beschriftung, <see cref="E:System.Windows.Forms.MenuItem.Click" />-Ereignishandler und Elementen hinzu.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.MenuItem" />, das das derzeit der Auflistung hinzugefügte Menüelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine <xref:System.Windows.Forms.MenuItem> kann nur in jeweils einem Menü enthalten sein und kann dem gleichen Menü nicht mehrmals hinzugefügt werden. Verwenden Sie die <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>-Methode der <xref:System.Windows.Forms.MenuItem>-Klasse, um eine <xref:System.Windows.Forms.MenuItem> in mehr als einem Menü wiederzuverwenden. Um eine <xref:System.Windows.Forms.MenuItem> zu entfernen, die Sie zuvor hinzugefügt haben, verwenden Sie die <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A>-Methode.  
  
 Mit dieser Version der <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>-Methode können Sie eine Beschriftung für das Menü Element und einen Delegaten angeben, der sein <xref:System.Windows.Forms.MenuItem.Click> Ereignis behandelt. Sie können diese Version der <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>-Methode verwenden, wenn die Anwendung bereits über einen Ereignishandler zum Behandeln des <xref:System.Windows.Forms.MenuItem.Click> Ereignisses verfügt. Mit dieser Version der-Methode können Sie auch ein Array von zuvor erstellten <xref:System.Windows.Forms.MenuItem>-Objekten angeben, die Sie der Auflistung hinzufügen möchten. Sie können diese Funktion verwenden, um vorhandene <xref:System.Windows.Forms.MenuItem> Objekte wiederzuverwenden, die mit der <xref:System.Windows.Forms.MenuItem.CloneMenu%2A>-Methode geklont wurden. Wenn der `items`-Parameter nicht leer oder `null`ist, enthält der <xref:System.Windows.Forms.MenuItem>, der der Auflistung hinzugefügt wird, unter Menü Elemente.  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.MenuItem.Click>-Ereignis wird für eine <xref:System.Windows.Forms.MenuItem>, die unter Menü Elemente enthält, nicht ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.AddRange(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.MenuItem[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.MenuItem[] -&gt; unit" Usage="menuItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="items">Ein Array von <see cref="T:System.Windows.Forms.MenuItem" />-Objekten, die die der Auflistung hinzuzufügenden Menüelemente darstellen.</param>
        <summary>Fügt der Auflistung ein Array von zuvor erstellten <see cref="T:System.Windows.Forms.MenuItem" />-Objekten hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der-Methode können Sie schnell eine Gruppe von zuvor erstellten <xref:System.Windows.Forms.MenuItem> Objekten zur Auflistung hinzufügen, anstatt jede <xref:System.Windows.Forms.MenuItem> mithilfe der <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>-Methode manuell der Auflistung hinzuzufügen. Wenn die Auflistung bereits <xref:System.Windows.Forms.MenuItem>-Objekte enthält, werden beim Aufrufen dieser Methode die neuen <xref:System.Windows.Forms.MenuItem> Objekte am Ende der Collection hinzugefügt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Array erstellt und die <xref:System.Windows.Forms.Menu.MenuItemCollection> Objekte aus zwei <xref:System.Windows.Forms.MenuItem> Objekten in das-Array kopiert. Im Beispiel wird dann das Array von <xref:System.Windows.Forms.MenuItem>-Objekten für eine <xref:System.Windows.Forms.ContextMenu> mit dem Namen `contextMenu1`in die Steuerelement Sammlung kopiert. Für dieses Beispiel ist es erforderlich, dass zwei <xref:System.Windows.Forms.MenuItem>-Objekte vorhanden sind, die unter Menü Elemente mit dem Namen `menuItem1` und `menuItem2`enthalten.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="menuItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle <see cref="T:System.Windows.Forms.MenuItem" />-Objekte aus der Auflistung von Menüelementen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie die gesamte Auflistung von Menü Elementen aus einem Menü löschen. Verwenden Sie die <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A>-Methode, um ein einzelnes Menü Element aus der Auflistung zu entfernen. Um der Auflistung neue <xref:System.Windows.Forms.MenuItem> Objekte hinzuzufügen, verwenden Sie die <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>-Methode.  
  
   
  
## Examples  
 In diesem Beispiel erstellen Sie ein Hauptmenü, `myMainMenu`, mit zwei <xref:System.Windows.Forms.MenuItem> Objekten `File` und `Edit`. Das Menü `File` enthält drei unter Menü Elemente, `New`, `Open`und `Exit`. Wenn Sie die `Clear`-Methode verwenden, entfernen Sie alle <xref:System.Windows.Forms.MenuItem>-Objekte in der `File` Menü Auflistung. Dieses Programm erfordert, dass Sie bereits eine <xref:System.Windows.Forms.Form> mit dem Namen `Form1`erstellt haben.  
  
 [!code-cpp[ClearItems#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClearItems/CPP/clearitems.cpp#1)]
 [!code-csharp[ClearItems#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClearItems/CS/clearitems.cs#1)]
 [!code-vb[ClearItems#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClearItems/VB/clearitems.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Menu.MenuItems" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Contains(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As MenuItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.MenuItem -&gt; bool" Usage="menuItemCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Windows.Forms.MenuItem" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob das angegebene <see cref="T:System.Windows.Forms.MenuItem" /> ein Member der Auflistung ist.</summary>
        <returns><see langword="true" />, wenn das <see cref="T:System.Windows.Forms.MenuItem" /> ein Member der Auflistung ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie bestimmen, ob ein <xref:System.Windows.Forms.MenuItem> Mitglied der Auflistung ist, bevor Sie versuchen, Vorgänge für die <xref:System.Windows.Forms.MenuItem>auszuführen. Mit dieser Methode können Sie überprüfen, ob ein <xref:System.Windows.Forms.MenuItem> hinzugefügt wurde oder noch ein Member der Auflistung ist.  
  
   
  
## Examples  
 In diesem Beispiel erstellen Sie ein Hauptmenü, `myMainMenu`, mit zwei <xref:System.Windows.Forms.MenuItem> Objekten `File` und `Edit`. Das Menü `File` enthält drei unter Menü Elemente, `New`, `Open`und `Exit`. Wenn Sie die <xref:System.Windows.Forms.Menu.MenuItemCollection.Contains%2A>-Methode verwenden, überprüfen Sie, ob die `File` Menü Auflistung das Element `Open`enthält. Wenn das Element vorhanden ist, wird das Ergebnis in einem Textfeld angezeigt. Dieses Programm erfordert, dass Sie bereits eine <xref:System.Windows.Forms.Form> mit dem Namen `Form1`erstellt haben.  
  
 [!code-cpp[ContainsItems#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ContainsItems/CPP/containsitems.cpp#1)]
 [!code-csharp[ContainsItems#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ContainsItems/CS/containsitems.cs#1)]
 [!code-vb[ContainsItems#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContainsItems/VB/containsitems.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="menuItemCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu suchenden Elements.</param>
        <summary>Bestimmt, ob die Auflistung ein Element mit dem angegebenen Schlüssel enthält.</summary>
        <returns><see langword="true" />, wenn die Auflistung ein Element mit dem angegebenen Schlüssel enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Menu.Name%2A>-Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.MenuItem> im <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet. Wenn der `key`-Parameter `null` oder eine leere Zeichenfolge ist, gibt <xref:System.Windows.Forms.Menu.MenuItemCollection.ContainsKey%2A> zurück `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="menuItemCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Das Zielarray.</param>
        <param name="index">Der Index im Zielarray, an dem mit dem Speichern begonnen wird.</param>
        <summary>Kopiert die gesamte Auflistung an eine angegebene Position in einem vorhandenen Array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie <xref:System.Windows.Forms.MenuItem> Objekte aus mehreren Auflistungen in einem einzelnen Array kombinieren. Mit dieser Funktion können Sie problemlos zwei oder mehr Sätze von Menü Elementen für die Verwendung in einem <xref:System.Windows.Forms.ContextMenu> oder <xref:System.Windows.Forms.MainMenu>kombinieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Array erstellt und die <xref:System.Windows.Forms.Menu.MenuItemCollection> Objekte aus zwei <xref:System.Windows.Forms.MenuItem> Objekten in das-Array kopiert. Im Beispiel wird dann das Array von <xref:System.Windows.Forms.MenuItem>-Objekten für eine <xref:System.Windows.Forms.ContextMenu> mit dem Namen `contextMenu1`in die Steuerelement Sammlung kopiert. Für dieses Beispiel ist es erforderlich, dass zwei <xref:System.Windows.Forms.MenuItem>-Objekte vorhanden sind, die unter Menü Elemente mit dem Namen `menuItem1` und `menuItem2`enthalten.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.Menu.MenuItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Gesamtanzahl von <see cref="T:System.Windows.Forms.MenuItem" />-Objekten in der Auflistung angibt.</summary>
        <value>Die Anzahl von <see cref="T:System.Windows.Forms.MenuItem" />-Objekten in der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Count`-Eigenschaft enthält die Anzahl der <xref:System.Windows.Forms.MenuItem> Objekte, die der Auflistung zugewiesen sind. Sie können den `Count`-Eigenschafts Wert als obere Begrenzung einer Schleife verwenden, um eine Auflistung zu durchlaufen. Beachten Sie, dass der Indexwert einer Auflistung ein NULL basierter Index ist. Daher müssen Sie einen Wert von der Schleifen Variablen subtrahieren. Wenn Sie dies nicht berücksichtigen, überschreiten Sie die oberen Begrenzungen der Auflistung und lösen eine Ausnahme aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Hauptmenü, `myMainMenu`, mit einem <xref:System.Windows.Forms.MenuItem>, `File`, erstellt wird, das drei unter Menü Elemente enthält: `New`, `Open`und `Exit`. Wenn Sie die `Count`-Eigenschaft verwenden, zählen Sie die Anzahl der Objekte im Menü `File` und zeigen diese Zahl in einem Meldungs Feld an. Für dieses Beispiel ist es erforderlich, dass Sie bereits eine <xref:System.Windows.Forms.Form> mit dem Namen `Form1`erstellt haben.  
  
 [!code-cpp[CountProperty#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CountProperty/CPP/countitems.cpp#1)]
 [!code-csharp[CountProperty#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CountProperty/CS/countitems.cs#1)]
 [!code-vb[CountProperty#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CountProperty/VB/countitems.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Menu.MenuItems" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuItem[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MenuItem[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllChildren As Boolean) As MenuItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ Find(System::String ^ key, bool searchAllChildren);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.MenuItem[]" Usage="menuItemCollection.Find (key, searchAllChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu suchenden Menüelements.</param>
        <param name="searchAllChildren"><see langword="true" />, um untergeordnete Menüelemente zu suchen, andernfalls <see langword="false" />.</param>
        <summary>Sucht die Elemente mit dem angegebenen Schlüssel und durchsucht optional die Untermenüelemente.</summary>
        <returns>Ein Array von <see cref="T:System.Windows.Forms.MenuItem" />-Objekten, deren jeweilige <see cref="P:System.Windows.Forms.Menu.Name" />-Eigenschaft dem angegebenen <paramref name="key" /> entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet. Wenn der `key`-Parameter `null` oder eine leere Zeichenfolge ist oder keine Übereinstimmungen vorhanden sind, gibt <xref:System.Windows.Forms.Menu.MenuItemCollection.Find%2A> ein leeres Array zurück.  
  
 Die <xref:System.Windows.Forms.Menu.Name%2A>-Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.MenuItem> im <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="key" /> ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="menuItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der zum Durchlaufen der Auflistung von Menüelementen verwendet werden kann.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der die Auflistung des Menüelements darstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.IndexOf(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::MenuItem ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.MenuItem -&gt; int" Usage="menuItemCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Windows.Forms.MenuItem" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Ruft den Index eines bestimmten Elements in der Auflistung ab.</summary>
        <returns>Der nullbasierte Index des in der Auflistung gefundenen Elements, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie ein Hauptmenü, `myMainMenu`, mit zwei <xref:System.Windows.Forms.MenuItem> Objekten erstellt wird, `File` und `Edit`. Das Menü `File` enthält drei unter Menü Elemente: `New`, `Open`und `Exit`. Wenn Sie die <xref:System.Windows.Forms.Menu.MenuItemCollection.IndexOf%2A>-Methode verwenden, rufen Sie den Index des `Exit` Elements in der `File` Menü Auflistung ab, und zeigen Sie dann den Wert in einem Meldungs Feld an. Für dieses Beispiel ist es erforderlich, dass Sie bereits eine <xref:System.Windows.Forms.Form> mit dem Namen `Form1`erstellt haben.  
  
 [!code-cpp[IndexOf#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[IndexOf#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IndexOf/CS/indexof.cs#1)]
 [!code-vb[IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="menuItemCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu suchenden Menüelements.</param>
        <summary>Sucht den Index des ersten Strukturknotens eines Menüelements mit dem angegebenen Schlüssel.</summary>
        <returns>Der nullbasierte Index des ersten Menüelements mit dem angegebenen Schlüssel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.Menu.MenuItemCollection.IndexOfKey%2A> nacheinander aufgerufen wird, wird der zuletzt zurückgegebene Index zuerst auf eine Schlüssel Übereinstimmung geprüft. wenn keine Entsprechung vorhanden ist, beginnt die Suche am Anfang der Auflistung.  
  
 Die <xref:System.Windows.Forms.Menu.Name%2A>-Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.MenuItem> im <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet. Wenn der `key`-Parameter `null` oder eine leere Zeichenfolge ist oder keine Übereinstimmungen vorhanden sind, gibt <xref:System.Windows.Forms.Menu.MenuItemCollection.IndexOfKey%2A>-1 zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.Menu.MenuItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value><see langword="true" />, wenn die Auflistung schreibgeschützt ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ein Element der Sammlung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::MenuItem ^ default[int] { System::Windows::Forms::MenuItem ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.MenuItem" Usage="System.Windows.Forms.Menu.MenuItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die indizierte Position des <see cref="T:System.Windows.Forms.MenuItem" /> in der Auflistung.</param>
        <summary>Ruft <see cref="T:System.Windows.Forms.MenuItem" /> an der angegebenen indizierten Position in der Auflistung ab.</summary>
        <value>Die <see cref="T:System.Windows.Forms.MenuItem" /> an der angegebenen Position.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie <xref:System.Windows.Forms.MenuItem> Objekte einem bestimmten Speicherort zuweisen oder Sie aus dem <xref:System.Windows.Forms.Menu.MenuItemCollection>abrufen möchten, können Sie auf das Auflistungs Objekt mit einem bestimmten Indexwert verweisen. Der Indexwert des <xref:System.Windows.Forms.Menu.MenuItemCollection> ist ein NULL basierter Index.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Parameter <paramref name="value" /> ist <see langword="null" />.  
  
oder 
Die <paramref name="index" />-Parameter ist kleiner als 0 (null).  
  
oder 
Der <paramref name="index" />-Parameter ist größer als die Anzahl der Menüelemente in der Auflistung, und die Auflistung der Menüelemente ist nicht <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Forms.Menu.MenuItemCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::MenuItem ^ default[System::String ^] { System::Windows::Forms::MenuItem ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.MenuItem" Usage="System.Windows.Forms.Menu.MenuItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des Elements, das aus der Auflistung abgerufen werden soll.</param>
        <summary>Ruft ein Element mit dem angegebenen Schlüssel aus der Auflistung ab.</summary>
        <value>Das <see cref="T:System.Windows.Forms.MenuItem" /> mit dem angegebenen Schlüssel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Menu.Name%2A>-Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.MenuItem> im <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet. Wenn der `key`-Parameter `null` oder eine leere Zeichenfolge ist, gibt <xref:System.Windows.Forms.Menu.MenuItemCollection.Item%2A> zurück `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.MenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.MenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (item As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::MenuItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.MenuItem -&gt; unit&#xA;override this.Remove : System.Windows.Forms.MenuItem -&gt; unit" Usage="menuItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="item">Das zu entfernende <see cref="T:System.Windows.Forms.MenuItem" />-Element.</param>
        <summary>Entfernt das angegebene <see cref="T:System.Windows.Forms.MenuItem" /> aus der Auflistung der Menüelemente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Windows.Forms.MenuItem> aus der Auflistung der Menü Elemente entfernt wird, werden alle nachfolgenden Menü Elemente in der Auflistung um eine Position nach oben verschoben. Sie können diese Version des `Remove` verwenden, um mithilfe eines Verweises auf das zu entfernende <xref:System.Windows.Forms.MenuItem> eine bestimmte <xref:System.Windows.Forms.MenuItem> aus der Sammlung zu entfernen. Wenn Sie nicht über einen Verweis auf die <xref:System.Windows.Forms.MenuItem> verfügen, die Sie entfernen möchten, können Sie die andere Version dieser Methode verwenden, die als Parameter einen Index annimmt, der dem zu entfernenden <xref:System.Windows.Forms.MenuItem> entspricht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie ein Hauptmenü, `myMainMenu`, mit zwei <xref:System.Windows.Forms.MenuItem> Objekten erstellt wird, `File` und `Edit`. Das Menü `File` enthält drei unter Menü Elemente: `New`, `Open`und `Exit`. Wenn Sie die `Remove`-Methode verwenden, entfernen Sie das `Open` Element aus der `File` Menü Auflistung. Für dieses Beispiel ist es erforderlich, dass Sie bereits eine <xref:System.Windows.Forms.Form> mit dem Namen `Form1`erstellt haben.  
  
 [!code-cpp[RemoveMenuItems#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RemoveMenuItems/CPP/removeitems.cpp#1)]
 [!code-csharp[RemoveMenuItems#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RemoveMenuItems/CS/removeitems.cs#1)]
 [!code-vb[RemoveMenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RemoveMenuItems/VB/removeitems.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="menuItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index der zu entfernenden <see cref="T:System.Windows.Forms.MenuItem" />-Klasse.</param>
        <summary>Entfernt ein <see cref="T:System.Windows.Forms.MenuItem" /> am angegebenen Index aus der Auflistung von Menüelementen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Windows.Forms.MenuItem> aus der Auflistung der Menü Elemente entfernt wird, werden alle nachfolgenden Menü Elemente in der Auflistung um eine Position nach oben verschoben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie ein Hauptmenü, `myMainMenu`, mit zwei <xref:System.Windows.Forms.MenuItem> Objekten erstellt wird, `File` und `Edit`. Das Menü `File` enthält drei unter Menü Elemente: `New`, `Open`und `Exit`. Wenn Sie die `RemoveAt`-Methode verwenden, entfernen Sie das `Exit` Element mithilfe der Indexnummer aus der `File` Menü Auflistung. Für dieses Beispiel ist es erforderlich, dass Sie bereits eine <xref:System.Windows.Forms.Form> mit dem Namen `Form1`erstellt haben.  
  
 [!code-cpp[RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RemoveAt/CPP/removeat.cpp#1)]
 [!code-csharp[RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RemoveAt/CS/removeat.cs#1)]
 [!code-vb[RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RemoveAt/VB/removeat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="menuItemCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Der Name des zu entfernenden Menüelements.</param>
        <summary>Entfernt das Menüelement mit dem angegebenen Schlüssel aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Menu.Name%2A>-Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.MenuItem> im <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 Beim Schlüssel Vergleich wird die Groß-/Kleinschreibung nicht beachtet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
        <value><see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Menu.MenuItemCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Menu.MenuItemCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der der Auflistung hinzuzufügende <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>Die Position, an der das <see cref="T:System.Windows.Forms.MenuItem" /> eingefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Menu.MenuItemCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Objekt, das in der Auflistung gesucht werden soll.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
        <returns><see langword="true" />, wenn das angegebene Objekt eine <see cref="T:System.Windows.Forms.MenuItem" /> in der Auflistung ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Menu.MenuItemCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Windows.Forms.MenuItem" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
        <returns>Der nullbasierte Index, wenn <paramref name="value" /> ein <see cref="T:System.Windows.Forms.MenuItem" /> in der Auflistung ist, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Menu.MenuItemCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem das <see cref="T:System.Windows.Forms.MenuItem" /> eingefügt werden soll.</param>
        <param name="value">Die <see cref="T:System.Windows.Forms.MenuItem" />, die in die <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" /> eingefügt werden soll.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Menu.MenuItemCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value><see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Menu.MenuItemCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des abzurufenden Elements.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Der <see cref="T:System.Windows.Forms.MenuItem" /> am angegebenen Index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Menu.MenuItemCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das zu entfernende <see cref="T:System.Windows.Forms.MenuItem" />-Element.</param>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.Menu.MenuItemCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
