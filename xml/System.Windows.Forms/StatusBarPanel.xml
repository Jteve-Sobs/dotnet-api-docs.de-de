<Type Name="StatusBarPanel" FullName="System.Windows.Forms.StatusBarPanel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c46b150f274917b48ed69eec49510c490b344bc" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86727092" /></Metadata><TypeSignature Language="C#" Value="public class StatusBarPanel : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatusBarPanel extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.StatusBarPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class StatusBarPanel&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatusBarPanel : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type StatusBarPanel = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Text")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Text")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DesignTimeVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DesignTimeVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItem(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItem(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Panel in einem <see cref="T:System.Windows.Forms.StatusBar" />-Steuerelement dar.
    
Diese Klasse ist in .net 5,0 und höheren Versionen nicht verfügbar. Verwenden Sie <see cref="T:System.Windows.Forms.StatusStrip" /> stattdessen das-Steuerelement, das das-Steuerelement ersetzt und erweitert <see cref="T:System.Windows.Forms.StatusBar" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

Diese Klasse ist in .net 5,0 und höheren Versionen nicht verfügbar. Verwenden Sie <see cref="T:System.Windows.Forms.StatusStrip" /> stattdessen das-Steuerelement.

 Ein <xref:System.Windows.Forms.StatusBarPanel> stellt einen einzelnen Bereich in der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> eines- <xref:System.Windows.Forms.StatusBar> Steuer Elements dar. Ein <xref:System.Windows.Forms.StatusBarPanel> kann Text und/oder ein Symbol enthalten, das verwendet werden kann, um den Status einer Anwendung widerzuspiegeln. Verwenden <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> Sie, auf die über die- <xref:System.Windows.Forms.StatusBar.Panels%2A?displayProperty=nameWithType> Eigenschaft eines-Steuer Elements zugegriffen <xref:System.Windows.Forms.StatusBar> werden kann, um eine Einzelperson abzurufen, hinzuzufügen oder zu entfernen <xref:System.Windows.Forms.StatusBarPanel> .  
  
 <xref:System.Windows.Forms.StatusBarPanel>Stellt Eigenschaften bereit, mit denen Sie das Anzeigeverhalten eines Panels innerhalb eines-Steuer Elements ändern können <xref:System.Windows.Forms.StatusBar> . Sie können die- <xref:System.Windows.Forms.StatusBarPanel.Icon%2A> Eigenschaft verwenden, um ein Symbol innerhalb eines Panels anzuzeigen. Diese Eigenschaft kann verwendet werden, um eine grafische Darstellung des Zustands in einer Anwendung bereitzustellen. Mithilfe der- <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> Eigenschaft können Sie angeben, wie Text und/oder ein Symbol innerhalb des Panels ausgerichtet werden. Um sicherzustellen, dass der Bereich ordnungsgemäß an den Text des Panels angepasst ist, können Sie die- <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> Eigenschaft verwenden, um die Größe des Panels automatisch an den Text des Panels anzupassen oder den verbleibenden Platz im <xref:System.Windows.Forms.StatusBar> Steuerelement auszufüllen. Mit der- <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A> Eigenschaft können Sie eine minimale Breite für den Bereich angeben, um sicherzustellen, dass er nicht kleiner ist als die Daten, die er anzeigen soll.  
  
 Das- <xref:System.Windows.Forms.StatusBar> Steuerelement wird normalerweise verwendet, um Hilfe Informationen oder Zustandsinformationen zu Ihrer Anwendung anzuzeigen. Häufig ist es wichtig, dass zusätzliche Informationen zu den in einem Panel dargestellten Daten angezeigt werden. Mit der-Eigenschaft können Sie <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> Informationen anzeigen, wenn sich der Mauszeiger auf einem Panel befindet.  
  
 Obwohl das- <xref:System.Windows.Forms.StatusBar> Steuerelement normalerweise zum Anzeigen von Textinformationen verwendet wird, können Sie auch einen eigenen Anzeigetyp für einen bereitstellen <xref:System.Windows.Forms.StatusBarPanel> . Mit der- <xref:System.Windows.Forms.StatusBarPanel.Style%2A> Eigenschaft können Sie angeben, wie der gezeichnet werden soll <xref:System.Windows.Forms.StatusBarPanel> . Standardmäßig wird die- <xref:System.Windows.Forms.StatusBarPanel.Style%2A> Eigenschaft verwendet, um den Wert der <xref:System.Windows.Forms.StatusBarPanel.Text%2A> -Eigenschaft anzuzeigen (und ein-Symbol, wenn Sie in der-Eigenschaft angegeben ist <xref:System.Windows.Forms.StatusBarPanel.Icon%2A> ). Wenn die-Eigenschaft auf festgelegt ist <xref:System.Windows.Forms.StatusBarPanelStyle.OwnerDraw> , können Sie eigene Informationen in das Panel zeichnen. Mit dieser Funktion können Sie eine Statusanzeige oder ein animiertes Symbol im Panel zeichnen.  
  
 Wenn Sie eine Instanz der <xref:System.Windows.Forms.StatusBarPanel> -Klasse erstellen, werden die Lese-/Schreibeigenschaften auf Anfangswerte festgelegt. Eine Liste dieser Werte finden Sie unter dem- <xref:System.Windows.Forms.StatusBarPanel.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.StatusBar> -Steuerelement auf einem Formular erstellt und zwei-Objekte hinzugefügt <xref:System.Windows.Forms.StatusBarPanel> . Der erste <xref:System.Windows.Forms.StatusBarPanel> , benannte `panel1` , zeigt den Status Text für eine Anwendung an. Der zweite <xref:System.Windows.Forms.StatusBarPanel> mit dem Namen `panel2` zeigt das aktuelle Datum an und verwendet die- <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> Eigenschaft der-Klasse, <xref:System.Windows.Forms.StatusBarPanel> um die aktuelle Uhrzeit anzuzeigen. Im Beispiel wird die <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> -Eigenschaft verwendet, um sicherzustellen, dass die Panels anstelle eines Standard Bereichs angezeigt werden, und die-Eigenschaft wird verwendet, um auf <xref:System.Windows.Forms.StatusBar.Panels%2A> die-Methode der zuzugreifen, um die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> Panels hinzuzufügen <xref:System.Windows.Forms.StatusBar> . Im Beispiel werden auch die <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> Eigenschaften,, und verwendet, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> <xref:System.Windows.Forms.StatusBarPanel.Text%2A> um die-Objekte zu initialisieren <xref:System.Windows.Forms.StatusBarPanel> . In diesem Beispiel wird davon ausgegangen, dass die im Beispiel definierte Methode definiert und vom Konstruktor einer aufgerufen wird <xref:System.Windows.Forms.Form> .  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusBarPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StatusBarPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.StatusBarPanel" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine Instanz von erstellen <xref:System.Windows.Forms.StatusBarPanel> , werden die folgenden Lese-/Schreibeigenschaften auf Anfangswerte festgelegt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.StatusBarPanel.Alignment%2A>|<xref:System.Windows.Forms.HorizontalAlignment.Left>|  
|<xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>|<xref:System.Windows.Forms.StatusBarPanelAutoSize.None>|  
|<xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>|<xref:System.Windows.Forms.StatusBarPanelBorderStyle.Sunken>|  
|<xref:System.Windows.Forms.StatusBarPanel.Icon%2A>|`null`|  
|<xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A>|10|  
|<xref:System.Windows.Forms.StatusBarPanel.Style%2A>|<xref:System.Windows.Forms.StatusBarPanelStyle.Text>|  
|<xref:System.Windows.Forms.StatusBarPanel.Text%2A>|Eine Zeichenfolge der Länge 0 (null).|  
|<xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>|Eine Zeichenfolge der Länge 0 (null).|  
|<xref:System.Windows.Forms.StatusBarPanel.Width%2A>|100|  
  
 Sie können den Wert für jede dieser Eigenschaften durch einen separaten aufrufsbefehl ändern.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.StatusBar> -Steuerelement auf einem Formular erstellt und zwei-Objekte hinzugefügt <xref:System.Windows.Forms.StatusBarPanel> . Der erste <xref:System.Windows.Forms.StatusBarPanel> , benannte `panel1` , zeigt den Status Text für eine Anwendung an. Der zweite <xref:System.Windows.Forms.StatusBarPanel> mit dem Namen `panel2` zeigt das aktuelle Datum an und verwendet die- <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> Eigenschaft der-Klasse, <xref:System.Windows.Forms.StatusBarPanel> um die aktuelle Uhrzeit anzuzeigen. Im Beispiel wird die <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> -Eigenschaft verwendet, um sicherzustellen, dass die Panels anstelle eines Standard Bereichs angezeigt werden, und die-Eigenschaft wird verwendet, um auf <xref:System.Windows.Forms.StatusBar.Panels%2A> die-Methode der zuzugreifen, um die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> Panels hinzuzufügen <xref:System.Windows.Forms.StatusBar> . Im Beispiel werden auch die <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> Eigenschaften,, und verwendet, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> <xref:System.Windows.Forms.StatusBarPanel.Text%2A> um die-Objekte zu initialisieren <xref:System.Windows.Forms.StatusBarPanel> . In diesem Beispiel wird davon ausgegangen, dass die im Beispiel definierte Methode definiert und vom Konstruktor einer aufgerufen wird <xref:System.Windows.Forms.Form> .  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment Alignment { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.StatusBarPanel.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausrichtung von Text und Symbole innerhalb des Statusleistenbereichs ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um den Text und/oder das Symbol, der der <xref:System.Windows.Forms.StatusBarPanel.Icon%2A> Eigenschaft innerhalb der Rahmen des Panels zugewiesen ist, horizontal auszurichten. Text und Symbole können Links, rechts oder zentriert ausgerichtet werden <xref:System.Windows.Forms.StatusBarPanel> . Es gibt keine Möglichkeit, ein Symbol innerhalb von einzeln zu positionieren <xref:System.Windows.Forms.StatusBarPanel> . Beispielsweise können Sie ein Symbol nicht auf der linken Seite des positionieren, <xref:System.Windows.Forms.StatusBarPanel> während Sie den Text auf der rechten Seite ausrichten. Das Symbol wird immer auf der linken Seite des Texts positioniert, unabhängig davon, wie der Text ausgerichtet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.StatusBar.SizingGrip%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> Eigenschaften,,, und verwendet <xref:System.Windows.Forms.StatusBarPanel.Width%2A> <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> werden und wie das-Ereignis behandelt wird <xref:System.Windows.Forms.StatusBar.PanelClick?displayProperty=nameWithType> .  
  
 Fügen Sie den folgenden Code in ein Formular ein, um das Beispiel auszuführen. Ruft die `InitializeStatusBarPanels` -Methode im Konstruktor des Formulars oder der <xref:System.Windows.Forms.Form.Load> Ereignis Behandlungsmethode auf.  
  
 [!code-cpp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Wert, der der Eigenschaft zugewiesen wurde, ist kein Member der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Enumeration.</exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.Icon" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBarPanelAutoSize AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.StatusBarPanelAutoSize AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSize As StatusBarPanelAutoSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBarPanelAutoSize AutoSize { System::Windows::Forms::StatusBarPanelAutoSize get(); void set(System::Windows::Forms::StatusBarPanelAutoSize value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : System.Windows.Forms.StatusBarPanelAutoSize with get, set" Usage="System.Windows.Forms.StatusBarPanel.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanelAutoSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Größe des Statusleistenbereichs automatisch angepasst wird, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.StatusBarPanelAutoSize.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel> -Objekte <xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents> haben Vorrang vor den Bereichen, die auf den-Wert festgelegt sind <xref:System.Windows.Forms.StatusBarPanelAutoSize.Spring> . Beispielsweise wird ein <xref:System.Windows.Forms.StatusBarPanel> , dessen-Eigenschaft auf festgelegt ist, verkürzt, wenn ein-Objekt, dessen-Eigenschaft <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanelAutoSize.Spring> <xref:System.Windows.Forms.StatusBarPanel> <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> auf festgelegt ist <xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents> , dieses Leerzeichen erfordert  
  
 Mithilfe von können Sie <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> sicherstellen, dass der Inhalt einer <xref:System.Windows.Forms.StatusBarPanel> ordnungsgemäß in einem-Steuerelement angezeigt wird <xref:System.Windows.Forms.StatusBar> , das mehr als einen Panel enthält. Beispielsweise möchten Sie möglicherweise, dass ein Bereich, der Text enthält, automatisch an den angezeigten Text angepasst wird ( <xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents> ), während ein anderer Bereich auf dem, der <xref:System.Windows.Forms.StatusBar> eine von einem Besitzer gezeichnete Statusanzeige anzeigt, eine festgelegte Größe aufweisen muss ( <xref:System.Windows.Forms.StatusBarPanelAutoSize.None> ).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.StatusBar> -Steuerelement auf einem Formular erstellt und zwei-Objekte hinzugefügt <xref:System.Windows.Forms.StatusBarPanel> . Der erste <xref:System.Windows.Forms.StatusBarPanel> , benannte `panel1` , zeigt den Status Text für eine Anwendung an. Der zweite <xref:System.Windows.Forms.StatusBarPanel> mit dem Namen `panel2` zeigt das aktuelle Datum an und verwendet die- <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> Eigenschaft der-Klasse, <xref:System.Windows.Forms.StatusBarPanel> um die aktuelle Uhrzeit anzuzeigen. Im Beispiel wird die <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> -Eigenschaft verwendet, um sicherzustellen, dass die Panels anstelle eines Standard Bereichs angezeigt werden, und die-Eigenschaft wird verwendet, um auf <xref:System.Windows.Forms.StatusBar.Panels%2A> die-Methode der zuzugreifen, um die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> Panels hinzuzufügen <xref:System.Windows.Forms.StatusBar> . Im Beispiel werden auch die <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> Eigenschaften,, und verwendet, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> <xref:System.Windows.Forms.StatusBarPanel.Text%2A> um die-Objekte zu initialisieren <xref:System.Windows.Forms.StatusBarPanel> . In diesem Beispiel wird davon ausgegangen, dass die im Beispiel definierte Methode definiert und vom Konstruktor einer aufgerufen wird <xref:System.Windows.Forms.Form> .  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Wert, der der Eigenschaft zugewiesen wurde, ist kein Member der <see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />-Enumeration.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="statusBarPanel.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet die Initialisierung eines <see cref="T:System.Windows.Forms.StatusBarPanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um die Initialisierung einer Komponente zu starten, die in einem Formular oder von einer anderen Komponente verwendet wird. Die- <xref:System.Windows.Forms.StatusBarPanel.EndInit%2A> Methode beendet die Initialisierung. Die Verwendung der <xref:System.Windows.Forms.StatusBarPanel.BeginInit%2A> -Methode und der- <xref:System.Windows.Forms.StatusBarPanel.EndInit%2A> Methode verhindert, dass das Steuerelement verwendet wird, bevor es vollständig initialisiert  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBarPanel.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBarPanelBorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.StatusBarPanelBorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As StatusBarPanelBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBarPanelBorderStyle BorderStyle { System::Windows::Forms::StatusBarPanelBorderStyle get(); void set(System::Windows::Forms::StatusBarPanelBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.StatusBarPanelBorderStyle with get, set" Usage="System.Windows.Forms.StatusBarPanel.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(-504)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(-504)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanelBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart des Statusleistenbereichs ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.StatusBarPanelBorderStyle" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.StatusBarPanelBorderStyle.Sunken" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um einen Bereich von anderen Bereichen in einem-Steuerelement zu unterscheiden <xref:System.Windows.Forms.StatusBar> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.StatusBar> -Steuerelement auf einem Formular erstellt und zwei-Objekte hinzugefügt <xref:System.Windows.Forms.StatusBarPanel> . Der erste <xref:System.Windows.Forms.StatusBarPanel> , benannte `panel1` , zeigt den Status Text für eine Anwendung an. Der zweite <xref:System.Windows.Forms.StatusBarPanel> mit dem Namen `panel2` zeigt das aktuelle Datum an und verwendet die- <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> Eigenschaft der-Klasse, <xref:System.Windows.Forms.StatusBarPanel> um die aktuelle Uhrzeit anzuzeigen. Im Beispiel wird die <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> -Eigenschaft verwendet, um sicherzustellen, dass die Panels anstelle eines Standard Bereichs angezeigt werden, und die-Eigenschaft wird verwendet, um auf <xref:System.Windows.Forms.StatusBar.Panels%2A> die-Methode der zuzugreifen, um die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> Panels hinzuzufügen <xref:System.Windows.Forms.StatusBar> . Im Beispiel werden auch die <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> Eigenschaften,, und verwendet, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> <xref:System.Windows.Forms.StatusBarPanel.Text%2A> um die-Objekte zu initialisieren <xref:System.Windows.Forms.StatusBarPanel> . In diesem Beispiel wird davon ausgegangen, dass die im Beispiel definierte Methode definiert und vom Konstruktor einer aufgerufen wird <xref:System.Windows.Forms.Form> .  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Wert, der der Eigenschaft zugewiesen wurde, ist kein Member der <see cref="T:System.Windows.Forms.StatusBarPanelBorderStyle" />-Enumeration.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanelBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="statusBarPanel.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.Windows.Forms.StatusBarPanel" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der öffentlichen `Dispose()` -Methode und der- <xref:System.Object.Finalize%2A> Methode aufgerufen. `Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode auf, wobei der- `disposing` Parameter auf festgelegt ist `true` . <xref:System.Object.Finalize%2A> Ruft `Dispose` `disposing` auf, wobei auf gesetzt ist `false` .  
  
 Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Windows.Forms.StatusBarPanel> verweist. Diese Methode ruft die `Dispose()`-Methode jedes referenzierten Objekts auf.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Wenn Sie überschreiben, sollten <see langword="Dispose(Boolean)" /> Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in einem früheren-Aufrufpunkt verworfen wurden <see langword="Dispose" /> . Weitere Informationen zum Implementieren von finden Sie <see langword="Dispose(Boolean)" /> unter [Implementieren einer](/dotnet/standard/garbage-collection/implementing-dispose)verwerfen-Methode.  
  
Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" /> finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged) und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="statusBarPanel.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die Initialisierung eines <see cref="T:System.Windows.Forms.StatusBarPanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um die Initialisierung einer Komponente zu beenden, die von einer anderen Komponente verwendet wird. Die- <xref:System.Windows.Forms.StatusBarPanel.BeginInit%2A> Methode startet die Initialisierung. Die Verwendung der <xref:System.Windows.Forms.StatusBarPanel.BeginInit%2A> -Methode und der- <xref:System.Windows.Forms.StatusBarPanel.EndInit%2A> Methode verhindert, dass das Steuerelement verwendet wird, bevor es vollständig initialisiert  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBarPanel.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.StatusBarPanel.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das im Statusleistenbereich anzuzeigende Symbol ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Icon" />, das das in dem Bereich anzuzeigende Symbol darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um ein Symbol anzuzeigen, das den Zustand der Anwendung oder einen Prozess in der Anwendung darstellt. Beispielsweise können Sie ein Symbol in einer anzeigen <xref:System.Windows.Forms.StatusBarPanel> , um anzugeben, ob ein Dateispeicher Vorgang ausgeführt wird oder abgeschlossen ist.  
  
> [!NOTE]
>  Es gibt keine Möglichkeit, ein Symbol innerhalb von einzeln zu positionieren <xref:System.Windows.Forms.StatusBarPanel> . Beispielsweise können Sie ein Symbol nicht auf der linken Seite des positionieren, <xref:System.Windows.Forms.StatusBarPanel> während Sie den Text mithilfe der-Eigenschaft auf der rechten Seite ausrichten <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> . Das Symbol wird immer auf der linken Seite des Text Bereichs positioniert, unabhängig davon, wie der Text ausgerichtet wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Icon" />
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public int MinWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MinWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinWidth : int with get, set" Usage="System.Windows.Forms.StatusBarPanel.MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(10)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(10)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimal zulässige Breite des Statusleistenbereichs innerhalb des <see cref="T:System.Windows.Forms.StatusBar" />-Steuerelements ab oder legt diese fest.</summary>
        <value>Die minimale Breite für das <see cref="T:System.Windows.Forms.StatusBarPanel" /> in Pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A> Eigenschaft wird verwendet, wenn die- <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> Eigenschaft auf oder festgelegt wird <xref:System.Windows.Forms.StatusBarPanelAutoSize.Contents> <xref:System.Windows.Forms.StatusBarPanelAutoSize.Spring> , um zu verhindern, <xref:System.Windows.Forms.StatusBarPanel> dass die Größe von automatisch an eine zu kleine Breite angepasst wird. Wenn die- <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> Eigenschaft auf festgelegt ist <xref:System.Windows.Forms.StatusBarPanelAutoSize.None> , wird die- <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A> Eigenschaft automatisch auf denselben Wert wie die-Eigenschaft festgelegt <xref:System.Windows.Forms.StatusBarPanel.Width%2A> .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Eigenschaft ist ein Wert zugewiesen, der kleiner als 0 (null) ist.</exception>
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" />
        <altmember cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.StatusBarPanel.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den auf das <see cref="T:System.Windows.Forms.StatusBarPanel" /> anzuwendenden Namen ab oder legt diesen fest.</summary>
        <value>Der Name von <see cref="T:System.Windows.Forms.StatusBarPanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Windows.Forms.StatusBarPanel.Name%2A> Eigenschaft entspricht dem Schlüssel für eine <xref:System.Windows.Forms.StatusBarPanel> in der <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBar Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBar Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As StatusBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBar ^ Parent { System::Windows::Forms::StatusBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.StatusBar" Usage="System.Windows.Forms.StatusBarPanel.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Forms.StatusBar" />-Steuerelement ab, das als Host für den Statusleistenbereich fungiert.</summary>
        <value>Die <see cref="T:System.Windows.Forms.StatusBar" />, die den Bereich enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um das Steuerelement zu bestimmen <xref:System.Windows.Forms.StatusBar> , in dem ein <xref:System.Windows.Forms.StatusBarPanel> enthalten ist. <xref:System.Windows.Forms.StatusBarPanel> -Objekte werden einem-Steuerelement hinzugefügt, <xref:System.Windows.Forms.StatusBar> indem die- <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> Methode der-Klasse aufgerufen wird <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> . Auf den eines-Steuer Elements kann <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> <xref:System.Windows.Forms.StatusBar> über die-Eigenschaft zugegriffen werden <xref:System.Windows.Forms.StatusBar.Panels%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.StatusBar" />
        <altmember cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.StatusBarPanelStyle Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.StatusBarPanelStyle Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As StatusBarPanelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::StatusBarPanelStyle Style { System::Windows::Forms::StatusBarPanelStyle get(); void set(System::Windows::Forms::StatusBarPanelStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Forms.StatusBarPanelStyle with get, set" Usage="System.Windows.Forms.StatusBarPanel.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stil des Statusleistenbereichs ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.StatusBarPanelStyle" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.StatusBarPanelStyle.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie angeben, ob ein <xref:System.Windows.Forms.StatusBarPanel> Text anzeigt oder ob der Bereich als vom Besitzer gezeichneter Bereich verwaltet wird <xref:System.Windows.Forms.StatusBarPanel> . <xref:System.Windows.Forms.StatusBarPanel>Erstellen Sie einen Ereignishandler für das-Ereignis des-Steuer Elements, um zu bestimmen, wann eine gezeichnet werden muss <xref:System.Windows.Forms.StatusBar.DrawItem> <xref:System.Windows.Forms.StatusBar> . Der <xref:System.Windows.Forms.StatusBarDrawItemEventArgs> als Parameter an einen Ereignishandler des Ereignisses übergebenen <xref:System.Windows.Forms.StatusBar.DrawItem> ermöglicht es Ihnen, zu bestimmen, welcher Bereich gezeichnet werden muss. <xref:System.Windows.Forms.StatusBarDrawItemEventArgs>Bietet auch ein- <xref:System.Drawing.Graphics> Objekt, das Sie verwenden können, um Zeichnungs Aufgaben im auszuführen <xref:System.Windows.Forms.StatusBarPanel> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.StatusBarPanel.Style%2A> -Eigenschaft, des Delegaten <xref:System.Windows.Forms.StatusBarDrawItemEventHandler> , der <xref:System.Windows.Forms.StatusBarDrawItemEventArgs> -Klasse, der <xref:System.Windows.Forms.StatusBarPanelStyle> -Enumeration und der- <xref:System.Windows.Forms.StatusBarDrawItemEventArgs.Panel%2A?displayProperty=nameWithType> Eigenschaft veranschaulicht. Fügen Sie den folgenden Code in ein Formular ein, um das Beispiel auszuführen. Die `InitializeStatusBarPanels` -Methode wird im Konstruktor des Formulars oder in der <xref:System.Windows.Forms.Form.Load> Ereignismethode aufgerufen.  
  
 [!code-cpp[System.Windows.Forms.StatusBarDrawItemEventHandler#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarDrawItemEventHandler/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.StatusBarDrawItemEventHandler#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarDrawItemEventHandler/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.StatusBarDrawItemEventHandler#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.StatusBarDrawItemEventHandler/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Wert, der der Eigenschaft zugewiesen wurde, ist kein Member der <see cref="T:System.Windows.Forms.StatusBarPanelStyle" />-Enumeration.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanelStyle" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.StatusBarPanel.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das Daten über das <see cref="T:System.Windows.Forms.StatusBarPanel" /> enthält, oder legt dieses Objekt fest.</summary>
        <value>Das <see cref="T:System.Object" />, das Daten über das <see cref="T:System.Windows.Forms.StatusBarPanel" /> enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.StatusBarPanel.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text des Statusleistenbereichs ab oder legt diesen fest.</summary>
        <value>Der in dem Bereich angezeigte Text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft stellt den Text dar, der angezeigt wird, wenn die- <xref:System.Windows.Forms.StatusBarPanel.Style%2A> Eigenschaft auf festgelegt ist <xref:System.Windows.Forms.StatusBarPanelStyle.Text> . Mit dieser Eigenschaft können Sie Informationen zu Ihrer Anwendung in einem-Steuerelement anzeigen <xref:System.Windows.Forms.StatusBar> . Beispielsweise können Sie die- <xref:System.Windows.Forms.StatusBarPanel.Text%2A> Eigenschaft verwenden, um Hilfe Informationen anzuzeigen, wenn der Benutzer die Maus über ein Menü bewegt oder den Namen und den Speicherort einer Datei anzeigt, die in einer Anwendung geöffnet ist. Um den Text in einem auszurichten <xref:System.Windows.Forms.StatusBarPanel> , verwenden Sie die- <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.StatusBar> -Steuerelement auf einem Formular erstellt und zwei-Objekte hinzugefügt <xref:System.Windows.Forms.StatusBarPanel> . Der erste <xref:System.Windows.Forms.StatusBarPanel> , benannte `panel1` , zeigt den Status Text für eine Anwendung an. Der zweite <xref:System.Windows.Forms.StatusBarPanel> mit dem Namen `panel2` zeigt das aktuelle Datum an und verwendet die- <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> Eigenschaft der-Klasse, <xref:System.Windows.Forms.StatusBarPanel> um die aktuelle Uhrzeit anzuzeigen. Im Beispiel wird die <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> -Eigenschaft verwendet, um sicherzustellen, dass die Panels anstelle eines Standard Bereichs angezeigt werden, und die-Eigenschaft wird verwendet, um auf <xref:System.Windows.Forms.StatusBar.Panels%2A> die-Methode der zuzugreifen, um die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> Panels hinzuzufügen <xref:System.Windows.Forms.StatusBar> . Im Beispiel werden auch die <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> Eigenschaften,, und verwendet, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> <xref:System.Windows.Forms.StatusBarPanel.Text%2A> um die-Objekte zu initialisieren <xref:System.Windows.Forms.StatusBarPanel> . In diesem Beispiel wird davon ausgegangen, dass die im Beispiel definierte Methode definiert und vom Konstruktor einer aufgerufen wird <xref:System.Windows.Forms.Form> .  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTipText : string with get, set" Usage="System.Windows.Forms.StatusBarPanel.ToolTipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den QuickInfo-Text ab, der dem Statusleistenbereich zugeordnet ist, oder legt diesen fest.</summary>
        <value>Der QuickInfo-Text für den Bereich.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie weitere Informationen in einer QuickInfo anzeigen, wenn sich der Mauszeiger auf einem befindet <xref:System.Windows.Forms.StatusBarPanel> . Beispielsweise können Sie eine QuickInfo anzeigen, die Datenübertragungsgeschwindigkeit für einen bereitstellt, <xref:System.Windows.Forms.StatusBarPanel> der den Status einer Dateiübertragung anzeigt.  
  
 Verwenden Sie das-Steuerelement, um Quick Infos für andere Steuerelemente in der Anwendung anzuzeigen <xref:System.Windows.Forms.ToolTip> .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.StatusBar> -Steuerelement auf einem Formular erstellt und zwei-Objekte hinzugefügt <xref:System.Windows.Forms.StatusBarPanel> . Der erste <xref:System.Windows.Forms.StatusBarPanel> , benannte `panel1` , zeigt den Status Text für eine Anwendung an. Der zweite <xref:System.Windows.Forms.StatusBarPanel> mit dem Namen `panel2` zeigt das aktuelle Datum an und verwendet die- <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> Eigenschaft der-Klasse, <xref:System.Windows.Forms.StatusBarPanel> um die aktuelle Uhrzeit anzuzeigen. Im Beispiel wird die <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> -Eigenschaft verwendet, um sicherzustellen, dass die Panels anstelle eines Standard Bereichs angezeigt werden, und die-Eigenschaft wird verwendet, um auf <xref:System.Windows.Forms.StatusBar.Panels%2A> die-Methode der zuzugreifen, um die <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> Panels hinzuzufügen <xref:System.Windows.Forms.StatusBar> . Im Beispiel werden auch die <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> Eigenschaften,, und verwendet, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> <xref:System.Windows.Forms.StatusBarPanel.Text%2A> um die-Objekte zu initialisieren <xref:System.Windows.Forms.StatusBarPanel> . In diesem Beispiel wird davon ausgegangen, dass die im Beispiel definierte Methode definiert und vom Konstruktor einer aufgerufen wird <xref:System.Windows.Forms.Form> .  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBarPanel.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="statusBarPanel.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die Informationen über den Bereich enthält.</summary>
        <returns>Gibt eine Zeichenfolge zurück, die den Klassennamen für das Steuerelement und den darin enthaltenen Text enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBarPanel.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Forms.StatusBarPanel.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(100)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(100)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Breite des Statusleistenbereichs innerhalb des <see cref="T:System.Windows.Forms.StatusBar" />-Steuerelements ab oder legt diese fest.</summary>
        <value>Die Breite des <see cref="T:System.Windows.Forms.StatusBarPanel" /> in Pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.StatusBarPanel.Width%2A> -Eigenschaft gibt immer die tatsächliche Breite eines an <xref:System.Windows.Forms.StatusBarPanel> und darf nicht kleiner als die- <xref:System.Windows.Forms.StatusBarPanel.MinWidth%2A> Eigenschaft sein. Um die Breite des- <xref:System.Windows.Forms.StatusBarPanel> Objekts automatisch auf den Inhalt des zu ändern <xref:System.Windows.Forms.StatusBarPanel> , können Sie die- <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> Eigenschaft verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.StatusBar.SizingGrip%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.StatusBarPanel.Alignment%2A> Eigenschaften,,, und verwendet <xref:System.Windows.Forms.StatusBarPanel.Width%2A> <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A> <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A> werden und wie das-Ereignis behandelt wird <xref:System.Windows.Forms.StatusBar.PanelClick?displayProperty=nameWithType> .  
  
 Fügen Sie den folgenden Code in ein Formular ein, um das Beispiel auszuführen. Ruft die `InitializeStatusBarPanels` -Methode im Konstruktor des Formulars oder der <xref:System.Windows.Forms.Form.Load> Ereignis Behandlungsmethode auf.  
  
 [!code-cpp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.StatusBarPanelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.StatusBarPanelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die angegebene Breite ist kleiner als der Wert der <see cref="P:System.Windows.Forms.StatusBarPanel.MinWidth" />-Eigenschaft.</exception>
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.MinWidth" />
        <altmember cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" />
      </Docs>
    </Member>
  </Members>
</Type>
