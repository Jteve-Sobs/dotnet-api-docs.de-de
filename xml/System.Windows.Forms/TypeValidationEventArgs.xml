<Type Name="TypeValidationEventArgs" FullName="System.Windows.Forms.TypeValidationEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa45ed34e6e357c43d7de71734d68f409e58e806" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70574761" /></Metadata><TypeSignature Language="C#" Value="public class TypeValidationEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeValidationEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TypeValidationEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeValidationEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeValidationEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type TypeValidationEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> Ereignis tritt auf, <xref:System.Windows.Forms.MaskedTextBox> wenn ein Steuerelement eine optionale Typvalidierung ausführt. Die Typüberprüfung findet nur statt <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType> , <xref:System.Windows.Forms.MaskedTextBox> wenn die `null` -Eigenschaft nicht ist und eine kausale Aktion auftritt *Typvalidierung* ist die Möglichkeit, die formatierte Eingabe Zeichenfolge in den Typ zu <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> konvertieren, der durch die-Eigenschaft dargestellt wird. Weitere Informationen zum typvalidierungs Prozess finden Sie unter dem <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> -Ereignis.  
  
 Wenn ein Ereignishandler für <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted>implementiert ist, empfängt der Handler einen Parameter vom Typ. <xref:System.Windows.Forms.TypeValidationEventArgs> Dieser Parameter enthält Informationen zum Ereignis, z. b. ob der Typkonvertierungs Prozess erfolgreich war, der Validierungstyp usw.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Typs veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.MaskedTextBox> des `MaskedTextBox1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
    <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
    <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
    <related type="Article" href="https://msdn.microsoft.com/library/df60565e-5447-4110-92a6-be1f6ff5faa3">Exemplarische Vorgehensweise: Arbeiten mit dem MaskedTextBox-Steuerelement</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeValidationEventArgs (Type validatingType, bool isValidInput, object returnValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type validatingType, bool isValidInput, object returnValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TypeValidationEventArgs.#ctor(System.Type,System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validatingType As Type, isValidInput As Boolean, returnValue As Object, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeValidationEventArgs(Type ^ validatingType, bool isValidInput, System::Object ^ returnValue, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TypeValidationEventArgs : Type * bool * obj * string -&gt; System.Windows.Forms.TypeValidationEventArgs" Usage="new System.Windows.Forms.TypeValidationEventArgs (validatingType, isValidInput, returnValue, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="validatingType" Type="System.Type" />
        <Parameter Name="isValidInput" Type="System.Boolean" />
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validatingType">Der <see cref="T:System.Type" />, anhand dessen die formatierte Eingabezeichenfolge validiert wurde.</param>
        <param name="isValidInput">Ein <see cref="T:System.Boolean" />-Wert, der angibt, ob die formatierte Zeichenfolge erfolgreich in den Validierungstyp konvertiert wurde.</param>
        <param name="returnValue">Ein <see cref="T:System.Object" />, das das Ergebnis der Konvertierung der formatierten Zeichenfolge in den Zieltyp darstellt.</param>
        <param name="message">Ein <see cref="T:System.String" />, der eine Beschreibung des Konvertierungsvorgangs enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.TypeValidationEventArgs" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Parameter für den <xref:System.Windows.Forms.TypeValidationEventArgs.%23ctor%2A> Konstruktor werden verwendet, um die entsprechenden schreibgeschützten Eigenschaften dieser Klasse zu initialisieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.Message" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Property Cancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cancel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Cancel : bool with get, set" Usage="System.Windows.Forms.TypeValidationEventArgs.Cancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Ereignis abgebrochen werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn durch das <see cref="T:System.Windows.Forms.MaskedTextBox" />-Steuerelement das Ereignis abgebrochen und der Fokus beibehalten werden soll, andernfalls <see langword="false" />, um mit dem Validierungsvorgang fortzufahren.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> Ereignis tritt unmittelbar vor dem <xref:System.Windows.Forms.Control.Validating> -Ereignis auf.  
  
 Wenn Sie <xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> die- `true` Eigenschaft im <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> Ereignishandler auf festlegen, wird das-Ereignis <xref:System.Windows.Forms.MaskedTextBox> abgebrochen, sodass das Steuerelement den <xref:System.Windows.Forms.Control.Validating> <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType> Fokus erhält, es sei denn, das nachfolgende Ereignis legt seine Version der Eigenschaft fest an `false`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.MaskedTextBox> des `MaskedTextBox1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="IsValidInput">
      <MemberSignature Language="C#" Value="public bool IsValidInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValidInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValidInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValidInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValidInput : bool" Usage="System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die formatierte Eingabezeichenfolge erfolgreich in den Validierungstyp konvertiert wurde.</summary>
        <value><see langword="true" />, wenn die formatierte Eingabezeichenfolge in den von der <see cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />-Eigenschaft angegebenen Typ konvertiert werden kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> -Eigenschaft gibt den Erfolg `Parse` der Methode in der <xref:System.Type> an, die durch <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> die-Eigenschaft dargestellt wird. Dieser Typ muss Methoden `Parse` enthalten, die mindestens eine der folgenden Signaturen aufweisen:  
  
 `public static Object Parse(string)`  
  
 `public static Object Parse(string, IFormatProvider)`  
  
 `Parse`wird aufgerufen, bevor <xref:System.Windows.Forms.MaskedTextBox> das-Steuer <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> Element das-Ereignis auslöst. Diese Methode wird mit dem Inhalt der- <xref:System.Windows.Forms.MaskedTextBox.Text%2A> Eigenschaft <xref:System.Windows.Forms.MaskedTextBox> der-Klasse mit dem Inhalt, abzüglich der Eingabe Aufforderungs Zeichen, aufgerufen. Bei erfolgreicher Ausführung wird das konvertierte Objekt zurückgegeben. Andernfalls wird zurück `null`gegeben.  
  
 Weitere Informationen zum typvalidierungs Prozess finden Sie unter dem <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> -Ereignis.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.MaskedTextBox> des `MaskedTextBox1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Windows.Forms.TypeValidationEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Textmeldung ab, in der der Konvertierungsprozess beschrieben wird.</summary>
        <value>Ein <see cref="T:System.String" />, der eine Beschreibung des Konvertierungsvorgangs enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Überprüfungsprozess umfasst die Typformatierung der formatierten Benutzereingaben in den von <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> der-Eigenschaft definierten Typ. Die <xref:System.Windows.Forms.TypeValidationEventArgs.Message%2A> -Eigenschaft enthält eine Textbeschreibung des Konvertierungsprozesses. <xref:System.Windows.Forms.TypeValidationEventArgs.Message%2A>ist vor allem nützlich, wenn die Konvertierung fehlschlägt, <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> wie durch einen `false`-Eigenschafts Wert von angegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.MaskedTextBox> des `MaskedTextBox1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput" />
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das aus der Konvertierung der formatierten Eingabezeichenfolge resultiert.</summary>
        <value>Wenn die Validierung erfolgreich ist, ein <see cref="T:System.Object" />, das den konvertierten Typ darstellt, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim typvalidierungs Prozess wird versucht, die formatierte Eingabe Zeichenfolge ohne Eingabe Aufforderungs Zeichen in den von der <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> -Eigenschaft angegebenen Typ zu konvertieren. Die <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A> -Eigenschaft stellt das Ergebnis des Konvertierungs Versuchs dar und entspricht dem Wert, der von der <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> -Methode der <xref:System.Windows.Forms.MaskedTextBox> -Klasse zurückgegeben wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.MaskedTextBox> des `MaskedTextBox1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
      </Docs>
    </Member>
    <Member MemberName="ValidatingType">
      <MemberSignature Language="C#" Value="public Type ValidatingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidatingType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidatingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ValidatingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidatingType : Type" Usage="System.Windows.Forms.TypeValidationEventArgs.ValidatingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ ab, anhand dessen die formatierte Eingabezeichenfolge validiert wird.</summary>
        <value>Der Ziel-<see cref="T:System.Type" /> des Konvertierungsvorgangs. Dieser darf in keinem Fall <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Überprüfungsprozess tritt nur <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.MaskedTextBox> auf, wenn die-Eigenschaft der `null`-Klasse nicht ist. Die <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> -Eigenschaft verweist auf denselben Typ, der den Zieltyp des Konvertierungsprozesses darstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.MaskedTextBox> des `MaskedTextBox1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted?displayProperty=nameWithType> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#488](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#488)]
 [!code-vb[System.Windows.Forms.EventExamples#488](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#488)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
      </Docs>
    </Member>
  </Members>
</Type>
