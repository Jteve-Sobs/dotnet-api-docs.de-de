<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcde4d2684289aff83686689b00672e824862370" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51314667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewGroupCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Auflistung von Gruppen in einem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> -Eigenschaft zum Abrufen der <xref:System.Windows.Forms.ListViewGroupCollection> zugeordnet eine <xref:System.Windows.Forms.ListView> Steuerelement. Diese Sammlung enthält die <xref:System.Windows.Forms.ListViewGroup> im Steuerelement angezeigten Gruppen darstellende – Objekte bei der <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> Eigenschaft auf einen Wert festgelegt ist als <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>. Alle Elemente, die nicht zu einer Gruppe zugewiesen sind werden angezeigt, in der Gruppe "Standard", die die headerbezeichnung "DefaultGroup{0}". Die Standardgruppe ist nicht Bestandteil der <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> -Auflistung, und kann nicht geändert werden. Es ist in erster Linie hilfreich beim Debuggen, um sicherzustellen, dass alle Elemente ordnungsgemäß zu Gruppen hinzugefügt wurden. Wenn es keine Gruppen in sind der <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> -Auflistung, die Grouping-Funktion ist deaktiviert.  
  
 Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> Methode, um der Auflistung eine Gruppe hinzuzufügen. Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> Methode, um eine Gruppe an einem bestimmten Index in der Auflistung hinzufügen. Um eine Gruppe zu entfernen, verwenden die <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> Methode. Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> Methode, um die Gruppe an einem bestimmten Index zu entfernen.  
  
 Sie können nicht hinzugefügt werden eine <xref:System.Windows.Forms.ListViewGroup> der Auflistung, die mehr als einmal. Wenn eine Gruppe in der Auflistung verschieben möchten, muss er zunächst werden aus der Auflistung entfernt, und klicken Sie dann auf die gewünschte Stelle eingefügt. Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> Methode, um zu bestimmen, ob eine bestimmte Gruppe bereits in der Auflistung vorhanden ist. Verwenden Sie zum Abrufen des Indexes einer Gruppe in der Auflistung der <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> Methode. Sie können auch abrufen oder festlegen, dass die Gruppe an einem bestimmten Index mit der <xref:System.Windows.Forms.ListViewGroupCollection.Item%2A> Indexer.  
  
 Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode, um der Auflistung mehrere Gruppen hinzugefügt. Sie können entweder als Array von Gruppen oder als mehrere Gruppen hinzufügen einer <xref:System.Windows.Forms.ListViewGroupCollection> , die Sie durch Abrufen der <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> Eigenschaft eines anderen <xref:System.Windows.Forms.ListView> Steuerelement. Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methode, um alle Gruppen aus der Auflistung zu entfernen.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>, <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>, und <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methoden entfernen Sie Gruppen aus der Auflistung, aber entfernen Sie keine Elemente aus der <xref:System.Windows.Forms.ListView> Steuerelement. Wenn es keine Gruppen in sind der <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> -Auflistung, die Grouping-Funktion ist deaktiviert, und alle Elemente im Steuerelement werden normal angezeigt.  
  
 Die <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> und <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methoden sind hilfreich, wenn Sie, geben Sie mehrere Möglichkeiten zur Gruppierung der Elemente in möchten einem <xref:System.Windows.Forms.ListView> Steuerelement. Zu diesem Zweck erstellen Sie mehrere Gruppenarrays. Um die Gruppierung zu ändern, verwenden Sie zunächst die <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methode, um alle Gruppen aus der Sammlung entfernen, und Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode, um das nächste Array von anzuzeigenden Gruppen hinzuzufügen.  
  
 Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> Methode, um die Gruppen in einer Auflistung in ein kompatibles Array, beginnend am angegebenen Index zu kopieren. Dies ist nützlich, z. B. Wenn Sie zum Sortieren der Gruppen in der Auflistung mithilfe möchten der <xref:System.Array.Sort%2A?displayProperty=nameWithType> Methode. Hierzu kopieren Sie die Gruppen in ein kompatibles Array, und dann sortieren Sie das Array zu. Verwenden Sie als Nächstes die <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methode, um alle Gruppen aus der Sammlung entfernen, und Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode, um das sortierte Array an die Sammlung hinzuzufügen.  
  
 Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> Eigenschaft, um zu bestimmen, wie viele Gruppen in der Auflistung sind. Um der Auflistung zu durchlaufen, verwenden die <xref:System.Collections.IEnumerator> zurückgegeben, die von der <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> Methode.  
  
> [!NOTE]
>  Die Grouping-Funktion ist nur unter Windows XP und Windows Server 2003-Familie verfügbar, wenn die Anwendung aufruft der <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> Methode. Unter früheren Betriebssystemen Code im Zusammenhang mit Gruppen werden ignoriert, und die Gruppen werden nicht angezeigt. Daher kann die jeglicher Code, der die gruppenfunktion hängt nicht ordnungsgemäß. Sie können möchten, einen Test enthalten, der bestimmt, ob die gruppenfunktion verfügbar ist und eine andere Funktionalität bereitstellen, wenn sie nicht verfügbar ist. Beispielsweise empfiehlt es sich, geben Sie die alternative Sortierung, wenn unter Betriebssystemen ausgeführt werden, die Sortierung nach Gruppen nicht unterstützen.  
>   
>  Die einfügemarkenfunktion wird von der gleichen Bibliothek bereitgestellt, die das Designfeature des Betriebssystems enthält. Um die Verfügbarkeit dieser Bibliothek finden, rufen Sie die <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> -methodenüberladung, und übergeben Sie die <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> Wert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListView> gruppenfunktion Elemente nach dem Wert eines Unterelements in der Detailansicht zu organisieren. Diese Form der Gruppierung ähnelt der Gruppierung, die in Windows Explorer verwendet. Im Beispiel werden die Gruppen dynamisch erstellt. Für jede Unterelementspalte wird eine Gruppe für jeden eindeutigen Unterelementwert erstellt. Für das übergeordnete Element-Spalte wird eine Gruppe für jeden eindeutigen Anfangsbuchstaben erstellt. Klicken Sie auf den Header einer Spalte sortiert die Elemente in den Gruppen, die für diese Spalte erstellt. Klicken Sie erneut auf die gleiche Spaltenüberschrift kehrt die Reihenfolge der Gruppen.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Auflistung eine <see cref="T:System.Windows.Forms.ListViewGroup" /> hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.Add group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">Der der Auflistung hinzuzufügende <see cref="T:System.Windows.Forms.ListViewGroup" />.</param>
        <summary>Fügt der Auflistung den angegebenen <see cref="T:System.Windows.Forms.ListViewGroup" /> hinzu.</summary>
        <returns>Der Index der Gruppe innerhalb der Auflistung, oder -1, wenn die Gruppe bereits in der Auflistung enthalten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode zum Hinzufügen von einer vorhandenen <xref:System.Windows.Forms.ListViewGroup> der Auflistung. Sie können nicht hinzugefügt werden eine <xref:System.Windows.Forms.ListViewGroup> der Auflistung, die mehr als einmal. Beim Aufruf der <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> Methode mit einem <xref:System.Windows.Forms.ListViewGroup> , der sich bereits in der Auflistung, die fehl, und-1 zurückgegeben.  
  
 Verwenden Sie zum Hinzufügen mehrerer Gruppen auf die Auflistung der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="group" /> enthält mindestens ein <see cref="T:System.Windows.Forms.ListViewItem" />, das zu einem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement gehört, das nicht das Steuerelement ist, das diese <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> besitzt.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Windows.Forms.ListViewGroup" Usage="listViewGroupCollection.Add (key, headerText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Anfangswert der <see cref="P:System.Windows.Forms.ListViewGroup.Name" />-Eigenschaft für die neue Gruppe.</param>
        <param name="headerText">Der Anfangswert der <see cref="P:System.Windows.Forms.ListViewGroup.Header" />-Eigenschaft für die neue Gruppe.</param>
        <summary>Fügt der Auflistung eine neue <see cref="T:System.Windows.Forms.ListViewGroup" /> unter Verwendung der angegebenen Werte zum Initialisieren der <see cref="P:System.Windows.Forms.ListViewGroup.Name" />-Eigenschaft und der <see cref="P:System.Windows.Forms.ListViewGroup.Header" />-Eigenschaft hinzu.</summary>
        <returns>Die neue <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Auflistung mehrere Gruppen hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroup[] -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">Ein Array vom Typ <see cref="T:System.Windows.Forms.ListViewGroup" />, das die Gruppen angibt, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung ein Array von Gruppen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version von der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> -Methode der Auflistung ein Array von Gruppen hinzu. Diese Methode ist nützlich, wenn Sie mehrere erstellen <xref:System.Windows.Forms.ListViewGroup> Objekte und der Auflistung mit einem einzelnen Methodenaufruf hinzugefügt werden soll. Um der Auflistung einzelne Gruppen hinzuzufügen, verwenden Sie die <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> Methode.  
  
 Diese Methode ist auch nützlich, wenn Sie, geben Sie mehrere Möglichkeiten zur Gruppierung der Elemente in möchten einem <xref:System.Windows.Forms.ListView> Steuerelement. Zu diesem Zweck erstellen Sie mehrere Gruppenarrays. Um die Gruppierung zu ändern, verwenden Sie zunächst die <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methode, um alle Gruppen aus der Sammlung entfernen, und Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode, um ein anderes Array von Gruppen hinzuzufügen.  
  
 Im Gegensatz zu den <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> -Methode, die <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode verfügt nicht über einen Rückgabewert, der verwendet werden kann, um zu bestimmen, ob eine hinzugefügte Gruppe bereits in der Auflistung vorhanden ist. Wenn Sie diese Informationen benötigen, verwenden Sie die <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> Methode vor der Verwendung der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode kann verwendet werden, in einer Anwendung, die organisiert <xref:System.Windows.Forms.ListView> Elemente nach dem Wert eines Unterelements in der Detailansicht. Diese Form der Gruppierung ähnelt der Gruppierung, die in Windows Explorer verwendet. Im Beispiel werden die Gruppen dynamisch erstellt. Für jede Unterelementspalte wird eine Gruppe für jeden eindeutigen Unterelementwert erstellt. Für das übergeordnete Element-Spalte wird eine Gruppe für jeden eindeutigen Anfangsbuchstaben erstellt. Die Gruppen erstellt für jede Spalte werden in einer Hashtabelle zusammen mit dem Unterelementtext oder Anfangsbuchstabens gespeichert. Wenn Sie eine Spaltenüberschrift klicken, die <xref:System.Windows.Forms.ListViewGroupCollection> deaktiviert ist. Die Hashtabelle, die für die Spalte geklickt wird dann abgerufen, und jedes Element wird der entsprechenden Gruppe zugewiesen. Schließlich wird ein sortiertes Array mit den Gruppen in der Hashtabelle hinzugefügt, um die <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Das vollständige Beispiel finden Sie unter den <xref:System.Windows.Forms.ListViewGroupCollection> Referenzthema zur Übersicht über.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> enthält mindestens eine Gruppe mit mindestens einem <see cref="T:System.Windows.Forms.ListViewItem" />, das zu einem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement gehört, das nicht das Steuerelement ist, das diese <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> besitzt.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroupCollection -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups">Eine <see cref="T:System.Windows.Forms.ListViewGroupCollection" />, die die Gruppen enthält, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung die Gruppen in einer vorhandenen <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Version der der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode zum Hinzufügen der Elemente von einer <xref:System.Windows.Forms.ListViewGroupCollection> , die Sie durch Abrufen der <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> Eigenschaft eines anderen <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 Im Gegensatz zu den <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> -Methode, die <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode verfügt nicht über einen Rückgabewert, der verwendet werden kann, um zu bestimmen, ob eine hinzugefügte Gruppe bereits in der Auflistung vorhanden ist. Wenn Sie diese Informationen benötigen, verwenden Sie die <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> Methode vor der Verwendung der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> enthält mindestens eine Gruppe mit mindestens einem <see cref="T:System.Windows.Forms.ListViewItem" />, das zu einem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement gehört, das nicht das Steuerelement ist, das diese <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> besitzt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewGroupCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Gruppen aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um alle Gruppen aus der Auflistung entfernt. Beachten Sie, dass das Entfernen von Gruppen der <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> Auflistung wird nicht entfernt Elemente aus der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 Diese Methode ist nützlich, um die Grouping-Funktion zu deaktivieren. Wenn es keine Gruppen in sind einer <xref:System.Windows.Forms.ListView> zu steuern, die Elemente werden normal angezeigt. Um einzelne Gruppen aus der Auflistung zu entfernen, verwenden die <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> oder <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> Methode.  
  
 Diese Methode ist auch nützlich, wenn Sie mehrere Möglichkeiten zur Gruppierung der Elemente bereitstellen möchten. Um die Gruppierung zu ändern, verwenden Sie zunächst die <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methode, um alle Gruppen aus der Sammlung entfernen, und Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode, um ein anderes Array von Gruppen hinzuzufügen.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methode kann verwendet werden, in einer Anwendung, die organisiert <xref:System.Windows.Forms.ListView> Elemente nach dem Wert eines Unterelements in der Detailansicht. Diese Form der Gruppierung ähnelt der Gruppierung, die in Windows Explorer verwendet. Im Beispiel werden die Gruppen dynamisch erstellt. Für jede Unterelementspalte wird eine Gruppe für jeden eindeutigen Unterelementwert erstellt. Für das übergeordnete Element-Spalte wird eine Gruppe für jeden eindeutigen Anfangsbuchstaben erstellt. Die Gruppen erstellt für jede Spalte werden in einer Hashtabelle zusammen mit dem Unterelementtext oder Anfangsbuchstabens gespeichert. Wenn Sie eine Spaltenüberschrift klicken, die <xref:System.Windows.Forms.ListViewGroupCollection> deaktiviert ist. Die Hashtabelle, die für die Spalte geklickt wird dann abgerufen, und jedes Element wird der entsprechenden Gruppe zugewiesen. Schließlich wird ein sortiertes Array mit den Gruppen in der Hashtabelle hinzugefügt, um die <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Das vollständige Beispiel finden Sie unter den <xref:System.Windows.Forms.ListViewGroupCollection> Referenzthema zur Übersicht über.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewGroup -&gt; bool" Usage="listViewGroupCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Windows.Forms.ListViewGroup" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt, ob die angegebene Gruppe in der Auflistung enthalten ist.</summary>
        <returns>
          <see langword="true" />, wenn sich die Gruppe in der Auflistung befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können nicht hinzugefügt werden eine <xref:System.Windows.Forms.ListViewGroup> der Auflistung, die mehr als einmal. Es wird versucht, eine andere Kopie hinzufügen löst sich jedoch nicht auf eine Ausnahme aus. Stattdessen wird die Addition einfach fehlschlagen. Die <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> Methode gibt einen Wert von – 1 zurück, in diesem Fall. Die <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> und <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> Methoden, sind jedoch keine Werte zurückgeben. Verwenden Sie beim Hinzufügen von Gruppen mithilfe einer der folgenden Methoden der <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> Methode, um zu bestimmen, ob eine bestimmte <xref:System.Windows.Forms.ListViewGroup> ist bereits in der Auflistung.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewGroupCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Das <see cref="T:System.Array" />, in das die Gruppen kopiert werden.</param>
        <param name="index">Der erste Index innerhalb des Arrays, in das die Gruppen kopiert werden.</param>
        <summary>Kopiert die Gruppen in der Auflistung in ein kompatibles eindimensionales <see cref="T:System.Array" />, beginnend ab dem angegebenen Index im Zielarray.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> Methode zum Kopieren von Gruppen in einer Auflistung (einschließlich der enthaltenen Elementverweise) in ein kompatibles Array, beginnend am angegebenen Index. Dies ist nützlich, z. B. Wenn Sie zum Sortieren der Gruppen in der Auflistung mithilfe möchten der <xref:System.Array.Sort%2A?displayProperty=nameWithType> Methode. Hierzu kopieren Sie die Gruppen in ein kompatibles Array, und dann sortieren Sie das Array zu. Verwenden Sie als Nächstes die <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methode, um alle Gruppen aus der Sammlung entfernen, und Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> Methode, um das sortierte Array an die Sammlung hinzuzufügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Gruppen in der Auflistung ab.</summary>
        <value>Die Anzahl der Gruppen in der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um die Anzahl der Gruppen in der Auflistung zu bestimmen. Dies ist nützlich, wenn die Auflistung durchlaufen, und führen Sie den gleichen Vorgang für jede Gruppe werden sollen. Können Sie auch die <xref:System.Collections.IEnumerator> zurückgegebenes der <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> Methode zum Durchlaufen der Auflistung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewGroupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, mit dem die Auflistung durchlaufen werden kann.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, das die Auflistung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, beim Durchlaufen der Auflistung zum Ausführen des gleichen Vorgangs für jede Gruppe werden sollen. Sie können auch die Auflistung durchlaufen und einmal für jede Gruppe mithilfe der <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> Eigenschaft, um die Anzahl von Schleifen zu bestimmen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Windows.Forms.ListViewGroup" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Gibt den Index der angegebenen <see cref="T:System.Windows.Forms.ListViewGroup" /> in der Auflistung zurück.</summary>
        <returns>Der nullbasierte Index der Gruppe in der Auflistung, oder -1, wenn die Gruppe nicht in der Auflistung enthalten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um den Index einer Gruppe in der Auflistung zu bestimmen. Dies ist nützlich, z. B., um den Index der einzelnen Gruppen zu bestimmen, wenn Sie die Sammlung mit durchlaufen die <xref:System.Collections.IEnumerator> zurückgegebenes der <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Insert (index, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">Der Index in der Auflistung, an dem die Gruppe eingefügt werden soll.</param>
        <param name="group">Die in die Auflistung einzufügende <see cref="T:System.Windows.Forms.ListViewGroup" />-Klasse.</param>
        <summary>Fügt die angegebene <see cref="T:System.Windows.Forms.ListViewGroup" />-Klasse am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode eine vorhandene einzufügende <xref:System.Windows.Forms.ListViewGroup> an einem bestimmten Index in der Auflistung.  
  
 Sie können nicht hinzugefügt werden eine <xref:System.Windows.Forms.ListViewGroup> der Auflistung, die mehr als einmal. Beim Aufrufen der <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> Methode, die eine Gruppe, die bereits in der Auflistung, die die Einfügemarke ist einfach ein Fehler auftritt. Verwenden der <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> Methode vor dem Einfügen, um zu bestimmen, ob eine bestimmte Gruppe bereits in der Auflistung vorhanden ist. Sie müssen zum Ändern der Position einer Gruppenstatus in der Auflistung, entfernen und dann an den gewünschten Index einfügen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft eine <see cref="T:System.Windows.Forms.ListViewGroup" /> in der Auflistung ab oder legt diese fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index der <see cref="T:System.Windows.Forms.ListViewGroup" /> innerhalb der Auflistung, die abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft eine <see cref="T:System.Windows.Forms.ListViewGroup" /> am angegebenen Index in der Auflistung ab oder legt diese fest.</summary>
        <value>Der <see cref="T:System.Windows.Forms.ListViewGroup" /> am angegebenen Index der Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um die Gruppe am angegebenen Index in der Auflistung abzurufen. Wenn Sie einen Verweis auf die Gruppe und den Index benötigen, verwenden Sie die <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) oder größer oder gleich <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Der Name der abzurufenden oder festzulegenden Gruppe.</param>
        <summary>Ruft die <see cref="T:System.Windows.Forms.ListViewGroup" /> mit dem angegebenen <see cref="P:System.Windows.Forms.ListViewGroup.Name" />-Eigenschaftswert ab oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Windows.Forms.ListViewGroup" /> mit dem angegebenen Namen oder <see langword="null" />, wenn keine solche <see cref="T:System.Windows.Forms.ListViewGroup" /> vorhanden ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Remove group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">Die aus der Auflistung zu entfernende <see cref="T:System.Windows.Forms.ListViewGroup" />.</param>
        <summary>Entfernt den angegebenen <see cref="T:System.Windows.Forms.ListViewGroup" /> aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um eine Gruppe aus der Sammlung entfernen, wenn Sie einen Verweis auf die Gruppe haben. Beachten Sie, eine Gruppe von Entfernen der <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> Auflistung wird nicht entfernt Elemente aus der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 Verwenden Sie zum Entfernen einer Gruppenstatus an einem bestimmten Index der <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> Methode stattdessen. Um alle Gruppen aus der Auflistung zu entfernen, verwenden die <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewGroupCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index der zu entfernenden <see cref="T:System.Windows.Forms.ListViewGroup" /> innerhalb der Auflistung.</param>
        <summary>Entfernt die <see cref="T:System.Windows.Forms.ListViewGroup" /> am angegebenen Index aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um eine Gruppe aus der Sammlung entfernen, wenn Sie den Index der Gruppe in der Auflistung verfügen. Beachten Sie, dass das Entfernen von Gruppen der <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> Auflistung wird nicht entfernt Elemente aus der <xref:System.Windows.Forms.ListView> Steuerelement.  
  
 Verwenden Sie zum Entfernen einer Gruppenstatus einen Verweis auf das Objekt mithilfe der <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> Methode stattdessen. Um alle Gruppen aus der Auflistung zu entfernen, verwenden die <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> Methode. Wenn Sie ein Element aus der Auflistung entfernen, ändern die Indizes für die folgenden Elemente in der Auflistung ein. Alle Informationen über das entfernte Element wird gelöscht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert ist (threadsicher).</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
        <value>Das Objekt, mit dem die Auflistung synchronisiert wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Windows.Forms.ListViewGroup" />, das in <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> eingefügt werden soll.</param>
        <summary>Fügt der <see cref="T:System.Windows.Forms.ListViewGroup" /> eine neue <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> hinzu.</summary>
        <returns>Der Index, an dem der <see cref="T:System.Windows.Forms.ListViewGroup" /> hinzugefügt wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> ist keine <see cref="T:System.Windows.Forms.ListViewGroup" />.  
  
- oder -  
 <paramref name="value" /> enthält mindestens ein <see cref="T:System.Windows.Forms.ListViewItem" />, das zu einem <see cref="T:System.Windows.Forms.ListView" />-Steuerelement gehört, das nicht das Steuerelement ist, das diese <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> besitzt.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein Objekt, das die in der Auflistung zu suchende <see cref="T:System.Windows.Forms.ListViewGroup" /> darstellt.</param>
        <summary>Bestimmt, ob die angegebene Wert in der Auflistung enthalten ist.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="value" /> eine in der Auflistung enthaltene <see cref="T:System.Windows.Forms.ListViewGroup" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Windows.Forms.ListViewGroup" />, der in der <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> gesucht werden soll.</param>
        <summary>Gibt den Index des angegebenen Werts in der Auflistung zurück.</summary>
        <returns>Der nullbasierte Index des <paramref name="value" />, wenn sich dieser in der Auflistung befindet, andernfalls -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Die Position, an der die <see cref="T:System.Windows.Forms.ListViewGroup" /> der Auflistung hinzugefügt wird.</param>
        <param name="value">Der der Auflistung hinzuzufügende <see cref="T:System.Windows.Forms.ListViewGroup" />.</param>
        <summary>Fügt eine <see cref="T:System.Windows.Forms.ListViewGroup" /> in die <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `value` keine <xref:System.Windows.Forms.ListViewGroup>, nicht zur Auflistung hinzugefügt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft eine <see cref="T:System.Windows.Forms.ListViewGroup" /> am angegebenen Index in der Auflistung ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ListViewGroup" />, das das Element am angegebenen Index in der Auflistung darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der <see cref="T:System.Windows.Forms.ListViewGroup" />, der aus der <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> entfernt werden soll.</param>
        <summary>Entfernt den <see cref="T:System.Windows.Forms.ListViewGroup" /> aus der <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>