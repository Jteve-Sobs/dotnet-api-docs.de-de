<Type Name="DataGridViewCheckBoxCell" FullName="System.Windows.Forms.DataGridViewCheckBoxCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad742aceaf074deef068874932ab9ed1aec7b8d9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30641714" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewCheckBoxCell : System.Windows.Forms.DataGridViewCell, System.Windows.Forms.IDataGridViewEditingCell" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCheckBoxCell extends System.Windows.Forms.DataGridViewCell implements class System.Windows.Forms.IDataGridViewEditingCell" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCheckBoxCell" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCheckBoxCell&#xA;Inherits DataGridViewCell&#xA;Implements IDataGridViewEditingCell" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCheckBoxCell : System::Windows::Forms::DataGridViewCell, System::Windows::Forms::IDataGridViewEditingCell" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCell</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataGridViewEditingCell</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zeigt eine Benutzeroberfläche mit Kontrollkästchen für die Verwendung in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell> Klasse ist ein spezialisierter Typ von <xref:System.Windows.Forms.DataGridViewCell> verwendet, um binäre oder ternäre Informationen angezeigt, die durch ein Kontrollkästchen UI anzuzeigen. In der Standardeinstellung Binärmodus Zellen können Werte enthalten, der `true` oder `false`. Im ternäre Modus nehmen die Zellen eines der <xref:System.Windows.Forms.CheckState> Werte. Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> -Eigenschaft bestimmt, ob binäre oder ternäre Modus aktiviert ist.  
  
 Die <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> der Spaltentyp spezialisiert ist verwenden, um Zellen dieses Typs enthalten. Wird standardmäßig die <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A?displayProperty=nameWithType> initialisiert wird, um ein neues <xref:System.Windows.Forms.DataGridViewCheckBoxCell>. Um die Zellen innerhalb einer Spalte nach einem vorhandenen Muster <xref:System.Windows.Forms.DataGridViewCheckBoxCell>, legen Sie die Spalte <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate%2A> Eigenschaft auf die Zelle, die als ein Muster verwendet.  
  
 Die Zelle-bezogenen Eigenschaften der Spalte sind Wrapper für die ähnlich benannten Eigenschaften der Vorlagenzelle. Ändern die Eigenschaftswerte der Vorlagenzelle wirkt sich auf nur die Zellen, die basierend auf der Vorlage aus, die nach der Änderung hinzugefügt werden. Ändern die Zelle bezogene Eigenschaftenwerte der Spalte, allerdings wird aktualisieren Sie die Vorlagenzelle und alle anderen Zellen in der Spalte, und aktualisieren Sie die Spaltenanzeige bei Bedarf.  
  
 Wenn die aktuelle Zelle befindet sich eine <xref:System.Windows.Forms.DataGridViewCheckBoxCell>, <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A?displayProperty=nameWithType> Eigenschaft ist immer `true`.  
  
 In der Regel sind Zellwerte das Kontrollkästchen für die Speicherung, wie alle anderen Daten oder zum Ausführen von Massenvorgängen vorgesehen. Wenn Sie reagieren sofort, wenn Benutzer auf eine Zelle Kontrollkästchen klicken, können Sie behandeln möchten die <xref:System.Windows.Forms.DataGridView.CellClick?displayProperty=nameWithType> Ereignis, aber dieses Ereignis tritt auf, bevor der Wert der Zelle aktualisiert wird. Wenn Sie den neuen Wert zum Zeitpunkt der klicken möchten, ist eine Option zu berechnen, was dem erwarteten Wert basierend auf den aktuellen Wert. Ein anderer Ansatz besteht darin, die Änderung sofort übernehmen und behandeln die <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType> Ereignis, um darauf zu reagieren. Um die Änderung zu übernehmen, wenn die Zelle geklickt wird, müssen Sie behandeln die <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType> Ereignis. Wenn die aktuelle Zelle ein Kontrollkästchen-Zelle ist, rufen Sie in den Handler auf, die <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType> Methode und übergeben der <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> Wert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit einem <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> verfolgen, welche Mitarbeiter im Büro sind. Die Spalte besteht aus <xref:System.Windows.Forms.DataGridViewCheckBoxCell> Objekte. In diesem Beispiel ist Teil eines umfangreicheren Beispiels zur Verfügung, in der <xref:System.Windows.Forms.DataGridViewComboBoxColumn> Übersichtsthema.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#20)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Beim Ableiten von <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" /> und der abgeleiteten Klasse neue Eigenschaften hinzugefügt haben, achten Sie darauf, dass Sie überschreiben die <see cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.Clone" /> Methode, um die neuen Eigenschaften bei Klonvorgängen kopiert. Sie sollten auch der Basisklasse aufrufen, <see cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.Clone" /> Methode, damit die Eigenschaften der Basisklasse in die neue Zelle kopiert werden.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCheckBoxColumn" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />-Klasse.</summary>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCheckBoxCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCheckBoxCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />-Klasse im Standardzustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> Eigenschaftswert an `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCheckBoxCell (bool threeState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool threeState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (threeState As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCheckBoxCell(bool threeState);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="threeState" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="threeState">
          <see langword="true" /> zum Aktivieren des ternären Zustands, <see langword="false" /> zum Aktivieren des binären Zustands.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />-Klasse und aktiviert den binären oder ternären Zustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardfunktionsweise eines Kontrollkästchens ermöglicht zwei Zustände: checked und unchecked. Wenn die `threeState` Parameter auf festgelegt ist `true`, ein zusätzlicher, unbestimmter Zustand ist zulässig, die durch eine graue partielle Check-visuell gekennzeichnet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine genaue Kopie dieser Zelle.</summary>
        <returns>Ein <see cref="T:System.Object" />, das die geklonte <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überschreiben Sie die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.Clone%2A> -Methode auf, wenn Sie von ableiten <xref:System.Windows.Forms.DataGridViewCheckBoxCell> und der abgeleiteten Klasse neue Eigenschaften hinzufügen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.Clone" /> rufen Sie in einer abgeleiteten Klasse die Basisklasse <see cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.Clone" /> Methode, damit die Eigenschaften der Basisklasse in die neue Zelle kopiert werden, und achten Sie darauf, dass Sie auch die Werte der Eigenschaften kopieren, die der abgeleiteten Klasse hinzugefügt wurden.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ContentClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool ContentClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ContentClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.ContentClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ContentClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ContentClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz der <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />-Klasse, die Daten über den Mausklick enthält.</param>
        <summary>Gibt an, ob die Freigabe der die Zelle enthaltenden Zeile aufgehoben wird, wenn auf den Zellinhalt geklickt wird.</summary>
        <returns>
          <see langword="true" />, wenn sich die Zelle im Bearbeitungsmodus befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ContentClickUnsharesRow%2A> wird aufgerufen, kurz bevor <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentClick%2A>. Sie muss zurückgeben `true` Wenn der Aufruf von <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentClick%2A> wirkt sich die Freigabe der Zeile, die die Zelle enthält. Es sollte zurückgeben `false` andernfalls.  
  
 Weitere Informationen zum Freigeben von Zeilen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentDoubleClickUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool ContentDoubleClickUnsharesRow (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ContentDoubleClickUnsharesRow(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.ContentDoubleClickUnsharesRow(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ContentDoubleClickUnsharesRow (e As DataGridViewCellEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ContentDoubleClickUnsharesRow(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz der <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />-Klasse, die Daten über den Doppelklick enthält.</param>
        <summary>Gibt an, ob die Freigabe der die Zelle enthaltenden Zeile aufgehoben wird, wenn auf den Zellinhalt geklickt wird.</summary>
        <returns>
          <see langword="true" />, wenn sich die Zelle im Bearbeitungsmodus befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ContentDoubleClickUnsharesRow%2A> wird aufgerufen, kurz bevor <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentDoubleClick%2A>. Sie muss zurückgeben `true` Wenn der Aufruf von <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentDoubleClick%2A> wirkt sich die Freigabe der Zeile, die die Zelle enthält. Es sollte zurückgeben `false` andernfalls.  
  
 Weitere Informationen zum Freigeben von Zeilen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein neues barrierefreies Objekt für die <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />.</summary>
        <returns>Ein neues <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell.DataGridViewCheckBoxCellAccessibleObject" /> für die <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.CreateAccessibilityInstance%2A>-Methode nicht explizit aufrufen, wird sie beim Verweis auf die <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A>-Eigenschaft aufgerufen.  
  
> [!NOTE]
>  Zum Abrufen oder festlegen <xref:System.Windows.Forms.DataGridViewCell.AccessibilityObject%2A>, müssen Sie einen Verweis zum Hinzufügen der `Accessibility` Assembly, die mit .NET Framework installiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCheckBoxCell.DataGridViewCheckBoxCellAccessibleObject" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.AccessibilityObject" />
      </Docs>
    </Member>
    <Member MemberName="EditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public virtual object EditingCellFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingCellFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.EditingCellFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditingCellFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ EditingCellFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den formatierten Wert des Steuerelements ab, das von der Zelle im Bearbeitungsmodus gehostet wird, oder legt diesen Wert fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das den Wert der Zelle darstellt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Der <see cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType" />-Eigenschaftswert ist <see langword="null" />.  
  
 - oder -   
  
 Der zugewiesene Wert ist <see langword="null" /> oder entspricht nicht dem von der <see cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType" />-Eigenschaft angegebenen Typ.  
  
 - oder -   
  
 Der zugewiesene Wert ist weder vom Typ <see cref="T:System.Boolean" /> noch vom Typ <see cref="T:System.Windows.Forms.CheckState" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType" />-Eigenschaftswert ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingCellValueChanged">
      <MemberSignature Language="C#" Value="public virtual bool EditingCellValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingCellValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.EditingCellValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditingCellValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EditingCellValueChanged { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Flag ab, das angibt, dass der Wert für diese Zelle geändert wurde, oder legt dieses Flag fest.</summary>
        <value>
          <see langword="true" />, wenn sich der Wert der Zelle geändert hat, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Wert einer Zelle ändert, wird es als bis geändert, dass der Wert gespeichert wird, oder die Zelle wird erneut initialisiert, mit Daten aus ihrer Datenquelle gekennzeichnet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditType">
      <MemberSignature Language="C#" Value="public override Type EditType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EditType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.EditType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EditType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ EditType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des gehosteten Bearbeitungssteuerelements der Zelle ab.</summary>
        <value>Der <see cref="T:System.Type" /> des zugrunde liegenden Bearbeitungssteuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese überschriebenen Eigenschaft gibt immer zurück `null` da Kontrollkästchen nur Aktivierung und Deaktivierung zulassen, nicht bearbeiten.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="FalseValue">
      <MemberSignature Language="C#" Value="public object FalseValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FalseValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FalseValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FalseValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den zugrunde liegenden Wert ab, der dem Zellwert <see langword="false" /> entspricht, oder legt diesen Wert fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das dem Zellwert <see langword="false" /> entspricht. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A>, <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A>, und <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> Eigenschaften bestimmen die zugeordneten Werte dieser Zustände, wie sie in der zugrunde liegenden Datenquelle auftreten.  
  
 Festlegen der <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue%2A> -Eigenschaft der besitzenden Spalte setzt auch die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A> -Eigenschaft für jede Zelle in der Spalte und Aktualisierungen in der Spalte angezeigt. Um den angegebenen Wert für einzelne Zellen zu überschreiben, legen Sie die Zellenwerte, nach dem Festlegen der Wert der Spalte.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit einem <xref:System.Windows.Forms.DataGridViewCheckBoxCell> den Status des Office-Beleuchtung verfolgen. Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A> -Eigenschaft ordnet "TurnedOff" `false`, <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A> Eigenschaft ordnet "ausgeschalteter" `true`, und die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> Eigenschaft ordnet "unknown" einem unbestimmten Zustand.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/cpp/trivaluevirtualcheckbox.cpp#0)]
 [!code-csharp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/CS/trivaluevirtualcheckbox.cs#0)]
 [!code-vb[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/VB/trivaluevirtualcheckbox.vb#0)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue" />
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die flache Darstellung der Benutzeroberfläche mit Kontrollkästchen ab oder legt sie fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.FlatStyle" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.FlatStyle.Standard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.FlatStyle.Popup> flache wird von dieser Zellentyp nicht unterstützt.  
  
 Festlegen der <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FlatStyle%2A> -Eigenschaft der besitzenden Spalte setzt auch die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FlatStyle%2A> -Eigenschaft für jede Zelle in der Spalte und Aktualisierungen in der Spalte angezeigt. Um den angegebenen Wert für einzelne Zellen zu überschreiben, legen Sie die Zellenwerte, nach dem Festlegen der Wert der Spalte.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.FlatStyle%2A?displayProperty=nameWithType> -Eigenschaft, die diese Eigenschaft ähnelt. In diesem Beispiel ist Teil eines umfangreicheren Beispiels zur Verfügung, in der <xref:System.Windows.Forms.DataGridViewComboBoxColumn> Übersichtsthema.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.FlatStyle" />-Wert.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.FlatStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxColumn.FlatStyle" />
      </Docs>
    </Member>
    <Member MemberName="FormattedValueType">
      <MemberSignature Language="C#" Value="public override Type FormattedValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FormattedValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FormattedValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ FormattedValueType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des Zellanzeigewerts ab.</summary>
        <value>Ein <see cref="T:System.Type" />, der den Anzeigetyp der Zelle darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> Eigenschaftswert ist `false`, der Wert dieser Eigenschaft ist die <xref:System.Boolean> geben; andernfalls ist der <xref:System.Windows.Forms.CheckState> Typ.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A?displayProperty=nameWithType> Eigenschaft zum Bestimmen des Typs, der den Zelleninhalt. In diesem Beispiel wird die <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A?displayProperty=nameWithType> Eigenschaft wird verwendet, um zu bestimmen, ob die Zelle enthält eine <xref:System.String> vor dem Versuch, den Wert zu konvertieren. In diesem Beispiel ist Teil eines umfangreicheren Beispiels zur Verfügung, in dem <xref:System.Windows.Forms.DataGridView.SelectionChanged?displayProperty=nameWithType> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetContentBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetContentBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.GetContentBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetContentBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">Der Grafikkontext für die Zelle.</param>
        <param name="cellStyle">Der <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der auf die Zelle angewendet werden soll.</param>
        <param name="rowIndex">Der Index der übergeordneten Zeile der Zelle.</param>
        <summary>Gibt das den Inhaltsbereich einer Zelle umschließende Rechteck zurück, das mithilfe der angegebenen <see cref="T:System.Drawing.Graphics" />-Klasse und des Zellstils berechnet wird.</summary>
        <returns>Das <see cref="T:System.Drawing.Rectangle" />, das den Inhalt der Zelle umschließt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public virtual object GetEditingCellFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingCellFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditingCellFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditingCellFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />-Werte, die den Kontext beschreibt, in dem Formatierungsfehler auftreten.</param>
        <summary>Ruft den formatierten Wert der Zelle ab, während diese sich im Bearbeitungsmodus befindet.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den formatierten Wert der Bearbeitungszelle darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `context` enthält die <xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent> Wert ist, wird diese Methode gibt ein <xref:System.Object> , die Sie können eine Umwandlung in eine <xref:System.String> Darstellung des Werts. Diese Methode hingegen gibt eine <xref:System.Boolean> oder ein <xref:System.Windows.Forms.CheckState> Wert abhängig vom Wert der <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType" />-Eigenschaftswert ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorIconBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetErrorIconBounds (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetErrorIconBounds(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetErrorIconBounds(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics">Der Grafikkontext für die Zelle.</param>
        <param name="cellStyle">Der <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der auf die Zelle angewendet werden soll.</param>
        <param name="rowIndex">Der Index der übergeordneten Zeile der Zelle.</param>
        <summary>Gibt das das Fehlersymbol der Zelle, sofern angezeigt, umschließende Rechteck zurück.</summary>
        <returns>Das <see cref="T:System.Drawing.Rectangle" />, das das Fehlersymbol der Zelle bindet, sofern angezeigt, andernfalls <see cref="F:System.Drawing.Rectangle.Empty" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetErrorIconBounds(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormattedValue">
      <MemberSignature Language="C#" Value="protected override object GetFormattedValue (object value, int rowIndex, ref System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter valueTypeConverter, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetFormattedValue(object value, int32 rowIndex, class System.Windows.Forms.DataGridViewCellStyle&amp; cellStyle, class System.ComponentModel.TypeConverter valueTypeConverter, class System.ComponentModel.TypeConverter formattedValueTypeConverter, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetFormattedValue (value As Object, rowIndex As Integer, ByRef cellStyle As DataGridViewCellStyle, valueTypeConverter As TypeConverter, formattedValueTypeConverter As TypeConverter, context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetFormattedValue(System::Object ^ value, int rowIndex, System::Windows::Forms::DataGridViewCellStyle ^ % cellStyle, System::ComponentModel::TypeConverter ^ valueTypeConverter, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle&amp;" RefType="ref" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="value">Der zu formatierende Wert.</param>
        <param name="rowIndex">Der Index der übergeordneten Zeile der Zelle.</param>
        <param name="cellStyle">Der <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> für die Zelle.</param>
        <param name="valueTypeConverter">Ein dem Werttyp zugeordneter <see cref="T:System.ComponentModel.TypeConverter" />, der eine benutzerdefinierte Konvertierung in den formatierten Werttyp ermöglicht, oder <see langword="null" />, wenn solch eine benutzerdefinierte Konvertierung nicht erforderlich ist.</param>
        <param name="formattedValueTypeConverter">Ein dem formatierten Werttyp zugeordneter <see cref="T:System.ComponentModel.TypeConverter" />, der eine benutzerdefinierte Konvertierung aus dem Werttyp ermöglicht, oder <see langword="null" />, wenn solch eine benutzerdefinierte Konvertierung nicht erforderlich ist.</param>
        <param name="context">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />-Werten, die den Kontext beschreibt, in dem der formatierte Wert benötigt wird.</param>
        <summary>Ruft den formatierten Wert der Zelldaten ab.</summary>
        <returns>Der Wert der Zelldaten nach Übernahme der Formatierung, oder <see langword="null" />, wenn die Zelle kein Bestandteil eines <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView> Steuerelement ruft diese Methode, um einen Zellenwert in eine entsprechende Anzeigewert der vom angegebenen Typ konvertieren die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType%2A> Eigenschaft. Das Steuerelement übergibt der Wert der Zelle an diese Methode in der `value` Parameter.  
  
 Diese Methode versucht zuerst, konvertieren `value` auf eine <xref:System.Boolean> oder <xref:System.Windows.Forms.CheckState> mithilfe der <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A>, <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A>, und <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> Eigenschaften, wenn sie festgelegt wurden.  
  
 Wenn die Konvertierung erfolgreich ist, ist die <xref:System.Windows.Forms.DataGridView.DataError?displayProperty=nameWithType> Ereignis auftritt. Wenn kein für dieses Ereignis oder der Handler legt Handler die <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> Eigenschaft `true`, wird eine Ausnahme ausgelöst.  
  
 Wenn die Konvertierung erfolgreich ist, oder es ein Handler für wird die <xref:System.Windows.Forms.DataGridView.DataError> Ereignis und seine nicht fest der <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A?displayProperty=nameWithType> Eigenschaft `true`, die <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> Ereignis tritt auf.  
  
 Ein <xref:System.Windows.Forms.DataGridView.CellFormatting> Ereignishandler kann beide ändern `value` und `cellStyle`. Wenn der Handler nicht festgelegt ist die <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> Eigenschaft `true`, diese Methode jedoch formatiert `value` mithilfe der Formatierungseigenschaften des der `cellStyle` Objekt. Dadurch kann ein zusätzliches <xref:System.Windows.Forms.DataGridView.DataError> Ereignis.  
  
 Wenn Formatierung erfolgreich ist und die `context` Parameterwert umfasst die <xref:System.Windows.Forms.DataGridViewDataErrorContexts.ClipboardContent> -Wert, gibt diese Methode die <xref:System.String> Version von den formatierten Wert für das Kopieren in die Zwischenablage. Andernfalls gibt diese Methode den formatierten Wert für die Anzeige in der <xref:System.Windows.Forms.DataGridView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Windows.Forms.CheckState" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size GetPreferredSize (System.Drawing.Graphics graphics, System.Windows.Forms.DataGridViewCellStyle cellStyle, int rowIndex, System.Drawing.Size constraintSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(class System.Drawing.Graphics graphics, class System.Windows.Forms.DataGridViewCellStyle cellStyle, int32 rowIndex, valuetype System.Drawing.Size constraintSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Graphics ^ graphics, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, int rowIndex, System::Drawing::Size constraintSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="constraintSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="graphics">Die zum Zeichnen der Zelle verwendete <see cref="T:System.Drawing.Graphics" />.</param>
        <param name="cellStyle">Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der den Stil der Zelle darstellt.</param>
        <param name="rowIndex">Der auf 0 (null) basierende Zeilenindex der Zelle.</param>
        <param name="constraintSize">Die maximal zulässige Größe der Zelle.</param>
        <summary>Berechnet die geeignete Größe der Zelle (in Pixel).</summary>
        <returns>Eine <see cref="T:System.Drawing.Size" />, die die bevorzugte Größe der Zelle in Pixel darstellt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetPreferredSize(System.Drawing.Graphics,System.Windows.Forms.DataGridViewCellStyle,System.Int32,System.Drawing.Size)" />
      </Docs>
    </Member>
    <Member MemberName="IndeterminateValue">
      <MemberSignature Language="C#" Value="public object IndeterminateValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndeterminateValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue" />
      <MemberSignature Language="VB.NET" Value="Public Property IndeterminateValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndeterminateValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den zugrunde liegenden Wert ab, der einem unbestimmten oder <see langword="null" />-Zellwert entspricht, oder legt diesen Wert fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das einem unbestimmten oder <see langword="null" />-Zellwert entspricht. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A>, <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A>, und <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> Eigenschaften bestimmen die zugeordneten Werte dieser Zustände, wie sie in der zugrunde liegenden Datenquelle auftreten.  
  
 Festlegen der <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue%2A> -Eigenschaft der besitzenden Spalte setzt auch die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> -Eigenschaft für jede Zelle in der Spalte und Aktualisierungen in der Spalte angezeigt. Um den angegebenen Wert für einzelne Zellen zu überschreiben, legen Sie die Zellenwerte, nach dem Festlegen der Wert der Spalte.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit einem <xref:System.Windows.Forms.DataGridViewCheckBoxCell> den Status des Office-Beleuchtung verfolgen. Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A> -Eigenschaft ordnet "TurnedOff" `false`, <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A> Eigenschaft ordnet "ausgeschalteter" `true`, und die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> Eigenschaft ordnet "unknown" einem unbestimmten Zustand.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/cpp/trivaluevirtualcheckbox.cpp#0)]
 [!code-csharp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/CS/trivaluevirtualcheckbox.cs#0)]
 [!code-vb[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/VB/trivaluevirtualcheckbox.vb#0)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool KeyDownUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool KeyDownUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function KeyDownUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool KeyDownUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz der <see cref="T:System.Windows.Forms.KeyEventArgs" />-Klasse, die Daten über das Drücken der Taste enthält.</param>
        <param name="rowIndex">Der Index der Zeile, die die Zelle enthält.</param>
        <summary>Gibt an, ob die Freigabe der die Zelle enthaltenden Zeile aufgehoben wird, wenn eine Taste gedrückt wird, während die Zelle den Fokus besitzt.</summary>
        <returns>
          <see langword="true" />, wenn die LEERTASTE gedrückt wird und die Tasten STRG, ALT sowie die UMSCHALTTASTE nicht gedrückt werden, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCheckBoxCell.KeyDownUnsharesRow%2A> wird aufgerufen, kurz bevor <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyDown%2A>. Sie muss zurückgeben `true` Wenn der Aufruf von <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyDown%2A> mit dem gleichen <xref:System.Windows.Forms.KeyEventArgs> Argument wirkt sich die Freigabe der Zeile, die die Zelle enthält. Es sollte zurückgeben `false` andernfalls.  
  
 Weitere Informationen zum Freigeben von Zeilen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool KeyUpUnsharesRow (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool KeyUpUnsharesRow(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function KeyUpUnsharesRow (e As KeyEventArgs, rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool KeyUpUnsharesRow(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz der <see cref="T:System.Windows.Forms.KeyEventArgs" />-Klasse, die Daten über das Drücken der Taste enthält.</param>
        <param name="rowIndex">Der Index der Zeile, die die Zelle enthält.</param>
        <summary>Gibt an, ob die Freigabe der die Zelle enthaltenden Zeile aufgehoben wird, wenn eine Taste losgelassen wird, während die Zelle den Fokus besitzt.</summary>
        <returns>
          <see langword="true" />, wenn die LEERTASTE losgelassen wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCheckBoxCell.KeyUpUnsharesRow%2A> wird aufgerufen, kurz bevor <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyUp%2A>. Sie muss zurückgeben `true` Wenn der Aufruf von <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyUp%2A> mit dem gleichen <xref:System.Windows.Forms.KeyEventArgs> Argument wirkt sich die Freigabe der Zeile, die die Zelle enthält. Es sollte zurückgeben `false` andernfalls.  
  
 Weitere Informationen zum Freigeben von Zeilen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MouseDownUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseDownUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseDownUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseDownUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseDownUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz der <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />-Klasse, die Daten über den Mausklick enthält.</param>
        <summary>Gibt an, ob die Freigabe einer Zeile aufgehoben wird, die die Zelle enthält, wenn die Maustaste gedrückt wird, während sich der Mauszeiger über der Zelle befindet.</summary>
        <returns>Immer <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Drücken die Maustaste los immer hebt die Freigabe einer Zeile, die eine Zelle dieses Typs enthält.  
  
 <xref:System.Windows.Forms.DataGridViewCheckBoxCell.MouseDownUnsharesRow%2A> wird aufgerufen, kurz bevor <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseDown%2A>. Sie muss zurückgeben `true` Wenn der Aufruf von <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseDown%2A> wirkt sich die Freigabe der Zeile, die die Zelle enthält. Es sollte zurückgeben `false` andernfalls.  
  
 Weitere Informationen zum Freigeben von Zeilen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnterUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseEnterUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseEnterUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.MouseEnterUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseEnterUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseEnterUnsharesRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, die die Zelle enthält.</param>
        <summary>Gibt an, ob die Freigabe der die Zelle enthaltenden Zeile aufgehoben wird, wenn der Mauszeiger über die Zelle bewegt wird.</summary>
        <returns>
          <see langword="true" />, wenn die Zelle die letzte Zelle war, in der ein Mausklick erfolgt ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCheckBoxCell.MouseUpUnsharesRow%2A> wird aufgerufen, kurz bevor <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A>. Sie muss zurückgeben `true` Wenn der Aufruf von <xref:System.Windows.Forms.DataGridViewCell.OnMouseEnter%2A> wirkt sich die Freigabe der Zeile, die die Zelle enthält. Es sollte zurückgeben `false` andernfalls.  
  
 Weitere Informationen zum Freigeben von Zeilen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnMouseEnter(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseLeaveUnsharesRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseLeaveUnsharesRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.MouseLeaveUnsharesRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseLeaveUnsharesRow (rowIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseLeaveUnsharesRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, die die Zelle enthält.</param>
        <summary>Gibt an, ob die Freigabe der die Zelle enthaltenden Zeile aufgehoben wird, wenn der Mauszeiger die Zelle verlässt.</summary>
        <returns>
          <see langword="true" />, wenn sich die Maustaste nicht im normalen Zustand befindet. <see langword="false" />, wenn die Maustaste gedrückt ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridViewCheckBoxCell.MouseLeaveUnsharesRow%2A> wird aufgerufen, kurz bevor <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseLeave%2A>. Sie muss zurückgeben `true` Wenn der Aufruf von <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseLeave%2A> wirkt sich die Freigabe der Zeile, die die Zelle enthält. Es sollte zurückgeben `false` andernfalls.  
  
 Weitere Informationen zum Freigeben von Zeilen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseLeave(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MouseUpUnsharesRow">
      <MemberSignature Language="C#" Value="protected override bool MouseUpUnsharesRow (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool MouseUpUnsharesRow(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MouseUpUnsharesRow (e As DataGridViewCellMouseEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool MouseUpUnsharesRow(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz der <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />-Klasse, die Daten über den Mausklick enthält.</param>
        <summary>Gibt an, ob die Freigabe einer die Zelle enthaltenden Zeile aufgehoben wird, wenn die Maustaste losgelassen wird, während sich der Mauszeiger über der Zelle befindet.</summary>
        <returns>Immer <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für diesen Zellentyp hebt die Freigeben der Maus während der Mauszeiger über der Zelle, immer befindet die Zeile, die die Zelle enthält Freigabe.  
  
 <xref:System.Windows.Forms.DataGridViewCheckBoxCell.MouseUpUnsharesRow%2A> wird aufgerufen, kurz bevor <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseUp%2A>. Sie muss zurückgeben `true` Wenn der Aufruf von <xref:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseUp%2A> wirkt sich die Freigabe der Zeile, die die Zelle enthält. Es sollte zurückgeben `false` andernfalls.  
  
 Weitere Informationen zum Freigeben von Zeilen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentClick">
      <MemberSignature Language="C#" Value="protected override void OnContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird beim Klicken auf den Inhalt der Zelle aufgerufen.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird beim Doppelklicken auf den Inhalt der Zelle aufgerufen.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.OnContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyDown(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <param name="rowIndex">Der Zeilenindex der aktuellen Zelle oder -1, wenn die Zelle nicht zu einer Zeile gehört.</param>
        <summary>Wird aufgerufen, wenn eine Zeichentaste gedrückt wird, während der Fokus auf einer Zelle ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn durch Drücken der LEERTASTE aktiviert wird, wird dadurch die Zelle Benutzeroberfläche (UI) aktualisiert werden.  
  
 Diese Methode ähnelt der <xref:System.Windows.Forms.Control.OnKeyDown%2A?displayProperty=nameWithType> Methode. Wird aufgerufen, in der gleichen Umständen, unter denen eine <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> Ereignis wird ausgelöst, aber wird nicht tatsächlich das Ereignis ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.KeyDownUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnKeyUp(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <param name="rowIndex">Der Zeilenindex der aktuellen Zelle oder -1, wenn die Zelle nicht zu einer Zeile gehört.</param>
        <summary>Wird aufgerufen, wenn eine Zeichentaste losgelassen wird, während der Fokus auf einer Zelle liegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn durch Drücken der LEERTASTE aktiviert (entspricht der <xref:System.Windows.Forms.Keys.Space?displayProperty=nameWithType> Wert), diese Methode wird die Zelle aktualisiert die Benutzeroberfläche (UI) und löst die <xref:System.Windows.Forms.DataGridView.OnCellClick%2A> -Ereignis für die besitzende <xref:System.Windows.Forms.DataGridView>.  
  
 Diese Methode ähnelt der <xref:System.Windows.Forms.Control.OnKeyUp%2A?displayProperty=nameWithType> Methode. Wird aufgerufen, in der gleichen Umständen, unter denen eine <xref:System.Windows.Forms.Control.KeyUp?displayProperty=nameWithType> Ereignis wird ausgelöst, aber wird nicht tatsächlich das Ereignis ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.KeyUpUnsharesRow(System.Windows.Forms.KeyEventArgs,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (int rowIndex, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(int32 rowIndex, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnLeave(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (rowIndex As Integer, throughMouseClick As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(int rowIndex, bool throughMouseClick);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Zeilenindex der aktuellen Zelle oder -1, wenn die Zelle nicht zu einer Zeile gehört.</param>
        <param name="throughMouseClick">
          <see langword="true" />, wenn die Zelle infolge eines Mausklicks und nicht infolge einer programmgesteuerten Zelländerung verlassen wurde, andernfalls <see langword="false" />.</param>
        <summary>Wird aufgerufen, wenn eine Zelle den Fokus verliert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Schaltfläche "" im gedrückten Zustand befindet, aktualisiert diese Methode die Zelle Benutzeroberfläche (UI).  
  
 Diese Methode ähnelt der <xref:System.Windows.Forms.Control.OnLeave%2A?displayProperty=nameWithType> Methode. Wird aufgerufen, in der gleichen Umständen, unter denen eine <xref:System.Windows.Forms.Control.Leave?displayProperty=nameWithType> Ereignis wird ausgelöst, aber wird nicht tatsächlich das Ereignis ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn die Maustaste gedrückt gehalten wird, während sich der Mauszeiger in einer Zelle befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bewirkt, dass die Zelle Benutzeroberfläche (UI) aktualisiert werden.  
  
 Diese Methode ähnelt der <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType> Methode. Wird aufgerufen, in der gleichen Umständen, unter denen eine <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> Ereignis wird ausgelöst, aber wird nicht tatsächlich das Ereignis ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.MouseDownUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseLeave(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Zeilenindex der aktuellen Zelle oder -1, wenn die Zelle nicht zu einer Zeile gehört.</param>
        <summary>Wird aufgerufen, wenn der Mauszeiger aus einer Zelle heraus bewegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Zelle aktuelle's <xref:System.Windows.Forms.ButtonState> ist ein normales Verhalten, diese Methode bewirkt, dass die Zelle Benutzeroberfläche (UI) aktualisiert werden.  
  
 Diese Methode ähnelt der <xref:System.Windows.Forms.Control.OnMouseLeave%2A> Methode. Wird aufgerufen, in der gleichen Umständen, unter denen eine <xref:System.Windows.Forms.Control.MouseLeave> Ereignis wird ausgelöst, aber wird nicht tatsächlich das Ereignis ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.MouseLeaveUnsharesRow(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn der Mauszeiger innerhalb einer Zelle bewegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bewirkt, dass die Zelle Benutzeroberfläche (UI) aktualisiert werden.  
  
 Diese Methode ähnelt der <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType> Methode. Wird aufgerufen, in der gleichen Umständen, unter denen eine <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> Ereignis wird ausgelöst, aber wird nicht tatsächlich das Ereignis ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.OnMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn die Maustaste losgelassen wird, während sich der Mauszeiger in einer Zelle befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird der Benutzeroberfläche (UI) die Zelle aktualisiert.  
  
 Diese Methode ähnelt der <xref:System.Windows.Forms.Control.OnMouseUp%2A> Methode. Wird aufgerufen, in der gleichen Umständen, unter denen eine <xref:System.Windows.Forms.Control.MouseUp> Ereignis wird ausgelöst, aber wird nicht tatsächlich das Ereignis ausgelöst.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.MouseUpUnsharesRow(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected override void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle cellBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates elementState, object value, object formattedValue, string errorText, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle cellBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates elementState, object value, object formattedValue, string errorText, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.Windows.Forms.DataGridViewAdvancedBorderStyle advancedBorderStyle, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle cellBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates elementState, System::Object ^ value, System::Object ^ formattedValue, System::String ^ errorText, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ advancedBorderStyle, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="cellBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="elementState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="advancedBorderStyle" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">Das <see cref="T:System.Drawing.Graphics" />, das zum Zeichnen der Zelle verwendet wird.</param>
        <param name="clipBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Fläche der erneut zu zeichnenden <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</param>
        <param name="cellBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen der gezeichneten Zelle enthält.</param>
        <param name="rowIndex">Der Zeilenindex der gezeichneten Zelle.</param>
        <param name="elementState">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werte, die den aktuellen Zustand der Zelle angibt.</param>
        <param name="value">Die Daten der gezeichneten Zelle.</param>
        <param name="formattedValue">Die formatierten Daten der Zelle, die gezeichnet wird.</param>
        <param name="errorText">Eine Fehlermeldung, die der Zelle zugeordnet ist.</param>
        <param name="cellStyle">Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der Formatierungs- und Stilinformationen über die Zelle enthält.</param>
        <param name="advancedBorderStyle">Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> mit Rahmenarten für die Zelle, die gezeichnet wird.</param>
        <param name="paintParts">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.DataGridViewPaintParts" />-Werte, die angibt, welche Teile der Zelle gezeichnet werden müssen.</param>
        <summary>Zeichnet die aktuelle <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseFormattedValue">
      <MemberSignature Language="C#" Value="public override object ParseFormattedValue (object formattedValue, System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.ComponentModel.TypeConverter valueTypeConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ParseFormattedValue(object formattedValue, class System.Windows.Forms.DataGridViewCellStyle cellStyle, class System.ComponentModel.TypeConverter formattedValueTypeConverter, class System.ComponentModel.TypeConverter valueTypeConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ParseFormattedValue (formattedValue As Object, cellStyle As DataGridViewCellStyle, formattedValueTypeConverter As TypeConverter, valueTypeConverter As TypeConverter) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ParseFormattedValue(System::Object ^ formattedValue, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, System::ComponentModel::TypeConverter ^ formattedValueTypeConverter, System::ComponentModel::TypeConverter ^ valueTypeConverter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formattedValue" Type="System.Object" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="formattedValueTypeConverter" Type="System.ComponentModel.TypeConverter" />
        <Parameter Name="valueTypeConverter" Type="System.ComponentModel.TypeConverter" />
      </Parameters>
      <Docs>
        <param name="formattedValue">Der Anzeigewert der Zelle.</param>
        <param name="cellStyle">Der <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> für die Zelle.</param>
        <param name="formattedValueTypeConverter">Ein <see cref="T:System.ComponentModel.TypeConverter" /> für den Anzeigewerttyp oder <see langword="null" />, wenn der Standardkonverter verwendet werden soll.</param>
        <param name="valueTypeConverter">Ein <see cref="T:System.ComponentModel.TypeConverter" /> für den Zellwerttyp oder <see langword="null" />, wenn der Standardkonverter verwendet werden soll.</param>
        <summary>Konvertiert einen zum Anzeigen formatierten Wert in einen tatsächlichen Zellwert.</summary>
        <returns>Der Zellwert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Benutzer einen Zellwert bearbeitet und führt einen Commit für die Änderung der <xref:System.Windows.Forms.DataGridView> Steuerelement ruft diese Methode zum Konvertieren des angezeigten Wert aus der <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> auf die <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A>. Das Steuerelement legt dann die zugrunde liegenden Zellenwert oder Datenquellenwert dem konvertierten Wert fest.  
  
 Diese Methode konvertiert den Anzeigewert der Zelle in einen tatsächlichen Zellwert mithilfe der Werte der <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A>, <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A>, und <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> Eigenschaften, wenn sie festgelegt wurden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cellStyle" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Der <see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />-Eigenschaftswert ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="formattedValue" /> ist <see langword="null" />.  
  
 \- oder –  
  
 Der Typ von <paramref name="formattedValue" /> stimmt nicht mit dem von der <see cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />-Eigenschaft angegebenen Typ überein.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingCellForEdit">
      <MemberSignature Language="C#" Value="public virtual void PrepareEditingCellForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingCellForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.PrepareEditingCellForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PrepareEditingCellForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PrepareEditingCellForEdit(bool selectAll);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataGridViewEditingCell.PrepareEditingCellForEdit(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">Dieser Parameter wird ignoriert.</param>
        <summary>Diese Methode hat für den genannten Typ keine Bedeutung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist keine Vorbereitung erforderlich für diesen Zellentyp.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ThreeState">
      <MemberSignature Language="C#" Value="public bool ThreeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreeState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThreeState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der ternäre Modus für das gehostete Kontrollkästchen-Steuerelement aktiviert wurde, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" /> bei Aktivierung des ternären Modus, <see langword="false" /> bei Aktivierung des binären Modus. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der dritte Zustand im ternäre Modus stellt normalerweise einen nicht initialisierten oder unbestimmten Wert dar.  
  
 Festlegen der <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A> -Eigenschaft der besitzenden Spalte setzt auch die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> -Eigenschaft für jede Zelle in der Spalte und Aktualisierungen in der Spalte angezeigt. Um den angegebenen Wert für einzelne Zellen zu überschreiben, legen Sie die Zellenwerte, nach dem Festlegen der Wert der Spalte.  
  
 Im Gegensatz zu den Spalten <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState%2A> -Eigenschaft, die die Zelle <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> Eigenschaft wird nicht automatisch aktualisiert. die <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaft der zugeordneten Zellenstil, wenn Sie den Wert ändern. Wenn Sie die Zelle ändern <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> Eigenschaftswert angibt, `true`, müssen Sie festlegen der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> -Eigenschaft des Objekts zurückgegeben wird, indem Sie die <xref:System.Windows.Forms.DataGridViewCell.Style%2A> Eigenschaft, um <xref:System.Windows.Forms.CheckState.Indeterminate>. Wenn Sie ändern die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState%2A> Eigenschaftswert angibt, `false`, müssen Sie festlegen der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaft `false`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit einem <xref:System.Windows.Forms.DataGridViewCheckBoxCell> den Status des Office-Beleuchtung verfolgen. Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A> -Eigenschaft ordnet "TurnedOff" `false`, <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A> Eigenschaft ordnet "ausgeschalteter" `true`, und die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> Eigenschaft ordnet "unknown" einem unbestimmten Zustand.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/cpp/trivaluevirtualcheckbox.cpp#0)]
 [!code-csharp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/CS/trivaluevirtualcheckbox.cs#0)]
 [!code-vb[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/VB/trivaluevirtualcheckbox.vb#0)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCheckBoxCell.#ctor(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCheckBoxCell.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Zeichenfolgendarstellung der Zelle zurück.</summary>
        <returns>Ein <see cref="T:System.String" />, der die aktuelle Zelle darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Zeichenfolgendarstellung der Zelle enthält den Zeilenindex und den Spaltenindex der Zelle.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />
      </Docs>
    </Member>
    <Member MemberName="TrueValue">
      <MemberSignature Language="C#" Value="public object TrueValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TrueValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TrueValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TrueValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den zugrunde liegenden Wert ab, der dem Zellwert <see langword="true" /> entspricht, oder legt diesen Wert fest.</summary>
        <value>Ein <see cref="T:System.Object" />, das dem Zellwert <see langword="true" /> entspricht. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A>, <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A>, und <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> Eigenschaften bestimmen die zugeordneten Werte dieser Zustände, wie sie in der zugrunde liegenden Datenquelle auftreten.  
  
 Festlegen der <xref:System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue%2A> -Eigenschaft der besitzenden Spalte setzt auch die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A> -Eigenschaft für jede Zelle in der Spalte und Aktualisierungen in der Spalte angezeigt. Um den angegebenen Wert für einzelne Zellen zu überschreiben, legen Sie die Zellenwerte, nach dem Festlegen der Wert der Spalte.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit einem <xref:System.Windows.Forms.DataGridViewCheckBoxCell> den Status des Office-Beleuchtung verfolgen. Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue%2A> -Eigenschaft ordnet "TurnedOff" `false`, <xref:System.Windows.Forms.DataGridViewCheckBoxCell.TrueValue%2A> Eigenschaft ordnet "ausgeschalteter" `true`, und die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue%2A> Eigenschaft ordnet "unknown" einem unbestimmten Zustand.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/cpp/trivaluevirtualcheckbox.cpp#0)]
 [!code-csharp[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/CS/trivaluevirtualcheckbox.cs#0)]
 [!code-vb[System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox/VB/trivaluevirtualcheckbox.vb#0)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.IndeterminateValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.FalseValue" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCheckBoxCell.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datentyp der Werte in der Zelle ab.</summary>
        <value>Der <see cref="T:System.Type" /> des zugrunde liegenden Werts der Zelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ValueType%2A> -Eigenschaft der Zelle nicht festgelegt wurde, und klicken Sie dann die <xref:System.Windows.Forms.DataGridViewColumn.ValueType%2A> -Eigenschaft für den besitzenden <xref:System.Windows.Forms.DataGridViewCheckBoxColumn> verwendet wird, wenn die Spalte vorhanden ist.  
  
 Wenn keine besitzende Spalte vorhanden ist, diese Eigenschaft wird festgelegt, auf den Standardwert für den zugehörigen Modus geeignet: <xref:System.Boolean> im Binärmodus und <xref:System.Windows.Forms.CheckState> für ternäre Modus.  
  
 Die <xref:System.Windows.Forms.DataGridViewCell.Value%2A> das tatsächliche Datenobjekt in der Zelle enthalten ist, während die <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> Eigenschaft ist für die formatierte Darstellung dieses Objekts. Die <xref:System.Windows.Forms.DataGridViewCheckBoxCell.ValueType%2A> und <xref:System.Windows.Forms.DataGridViewCheckBoxCell.FormattedValueType%2A> Eigenschaften entsprechen den Datentypen der entsprechenden Werte.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCheckBoxCell.ThreeState" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.ValueType" />
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
  </Members>
</Type>