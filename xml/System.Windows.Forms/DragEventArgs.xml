<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5fdb1590bb2a538ce927d45c5f0c2a1e2e5ece9a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70528011" /></Metadata><TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="10b50-101">Stellt Daten für das <see cref="E:System.Windows.Forms.Control.DragDrop" />-Ereignis, das <see cref="E:System.Windows.Forms.Control.DragEnter" />-Ereignis oder das <see cref="E:System.Windows.Forms.Control.DragOver" />-Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="10b50-101">Provides data for the <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, or <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10b50-102">Das <xref:System.Windows.Forms.Control.DragDrop> Ereignis tritt auf, wenn der Benutzer einen Drag & Drop-Vorgang abschließt, indem ein Objekt über das Steuerelement gezogen und dann auf dem Steuerelement abgelegt wird, indem die Maustaste losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="10b50-102">The <xref:System.Windows.Forms.Control.DragDrop> event occurs when the user completes a drag-and-drop operation by dragging an object over the control and then dropping it onto the control by releasing the mouse button.</span></span> <span data-ttu-id="10b50-103">Das <xref:System.Windows.Forms.Control.DragEnter> Ereignis tritt auf, wenn der Benutzer den Mauszeiger auf das Steuerelement bewegt, während er ein Objekt mit der Maus zieht.</span><span class="sxs-lookup"><span data-stu-id="10b50-103">The <xref:System.Windows.Forms.Control.DragEnter> event occurs when the user moves the mouse pointer onto the control while dragging an object with the mouse.</span></span> <span data-ttu-id="10b50-104">Das <xref:System.Windows.Forms.Control.DragOver> Ereignis tritt auf, wenn der Benutzer den Mauszeiger über das Steuerelement bewegt, während er ein Objekt mit der Maus zieht.</span><span class="sxs-lookup"><span data-stu-id="10b50-104">The <xref:System.Windows.Forms.Control.DragOver> event occurs when the user moves the mouse pointer over the control while dragging an object with the mouse.</span></span>  
  
 <span data-ttu-id="10b50-105">Ein <xref:System.Windows.Forms.DragEventArgs> -Objekt gibt alle Daten an, die diesem Ereignis zugeordnet sind, den aktuellen Zustand der UMSCHALTTASTE, STRG-Taste und Alt-Taste, die Position des Mauszeigers und die Drag & amp; Drop-Effekte, die von der Quelle und dem Ziel des Zieh Ereignisses zugelassen werden.</span><span class="sxs-lookup"><span data-stu-id="10b50-105">A <xref:System.Windows.Forms.DragEventArgs> object specifies any data associated with this event; the current state of the SHIFT, CTRL, and ALT keys; the location of the mouse pointer; and the drag-and-drop effects allowed by the source and target of the drag event.</span></span>  
  
 <span data-ttu-id="10b50-106">Weitere Informationen zum Ereignis Modell finden Sie unter [behandeln und Auswerfen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="10b50-106">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10b50-107">Im folgenden Beispiel wird ein Drag & Drop-Vorgang zwischen zwei <xref:System.Windows.Forms.ListBox> -Steuerelementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-107">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="10b50-108">Im Beispiel wird die <xref:System.Windows.Forms.Control.DoDragDrop%2A> -Methode aufgerufen, wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="10b50-108">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="10b50-109">Die Zieh Aktion wird gestartet, wenn die Maus während des <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> Ereignisses mehr als die Mausposition bewegt hat.</span><span class="sxs-lookup"><span data-stu-id="10b50-109">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="10b50-110">Die <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> -Methode wird verwendet, um den Index des Elements zu bestimmen, das `MouseDown` während des-Ereignisses gezogen werden soll.</span><span class="sxs-lookup"><span data-stu-id="10b50-110">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="10b50-111">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="10b50-111">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="10b50-112">Im Beispiel wird davon ausgegangen, dass zwei `3dwarro.cur` Cursor `3dwno.cur`Dateien, und, im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="10b50-112">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="10b50-113">Die benutzerdefinierten Cursor werden verwendet, wenn `UseCustomCursorsCheck` das <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="10b50-113">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="10b50-114">Die benutzerdefinierten Cursor werden im <xref:System.Windows.Forms.Control.GiveFeedback> -Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-114">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="10b50-115">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht `ListBox`ausgewertet, um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der UMSCHALTTASTE, STRG, alt oder STRG + ALT-Taste basiert.</span><span class="sxs-lookup"><span data-stu-id="10b50-115">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="10b50-116">Der Speicherort in `ListBox` der, an dem der Ablage Vorgang stattfindet, `DragOver` wird auch während des Ereignisses festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-116">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="10b50-117">Wenn es sich bei den zu Lösch Endes `String`Daten nicht um <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> handelt, wird <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>der auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-117">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="10b50-118">Schließlich wird der Status der Ablage in der `DropLocationLabel` <xref:System.Windows.Forms.Label>angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10b50-118">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="10b50-119">Die Daten, die auf der rechten `ListBox` Seite abgelegt werden, <xref:System.Windows.Forms.Control.DragDrop> werden im-Ereignis `String` Handler bestimmt, und der-Wert wird an `ListBox`der entsprechenden Stelle in der hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="10b50-119">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="10b50-120">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im <xref:System.Windows.Forms.Control.QueryContinueDrag> -Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="10b50-120">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="10b50-121">In diesem Code Ausschnitt wird die <xref:System.Windows.Forms.DragEventArgs> Verwendung der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-121">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="10b50-122">Das gesamte <xref:System.Windows.Forms.Control.DoDragDrop%2A> Codebeispiel finden Sie unter der-Methode.</span><span class="sxs-lookup"><span data-stu-id="10b50-122">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 <span data-ttu-id="10b50-123">Im folgenden Beispiel wird veranschaulicht <xref:System.Windows.Forms.DragEventArgs> , wie zwischen Quelle und Ziel eines Drag & Drop-Vorgangs übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="10b50-123">The following example illustrates how <xref:System.Windows.Forms.DragEventArgs> are passed between the source and target of a drag-and-drop operation.</span></span> <span data-ttu-id="10b50-124">In diesem Beispiel ist ein <xref:System.Windows.Forms.ListBox> -Steuerelement die Quelle der Daten, und das <xref:System.Windows.Forms.RichTextBox> -Steuerelement ist das Ziel.</span><span class="sxs-lookup"><span data-stu-id="10b50-124">In this example, a <xref:System.Windows.Forms.ListBox> control is the source of the data, and the <xref:System.Windows.Forms.RichTextBox> control is the target.</span></span> <span data-ttu-id="10b50-125">Im Beispiel wird davon ausgegangen <xref:System.Windows.Forms.ListBox> , dass das Steuerelement mit einer Liste gültiger Dateinamen aufgefüllt wurde.</span><span class="sxs-lookup"><span data-stu-id="10b50-125">The example assumes that the <xref:System.Windows.Forms.ListBox> control has been populated with a list of valid filenames.</span></span> <span data-ttu-id="10b50-126">Wenn der Benutzer einen der angezeigten Dateinamen aus dem <xref:System.Windows.Forms.ListBox> -Steuerelement auf das <xref:System.Windows.Forms.RichTextBox> -Steuerelement zieht, wird die Datei, auf die im Dateinamen verwiesen wird, geöffnet.</span><span class="sxs-lookup"><span data-stu-id="10b50-126">When the user drags one of the displayed filenames from the <xref:System.Windows.Forms.ListBox> control onto the <xref:System.Windows.Forms.RichTextBox> control, the file referenced in the filename is opened.</span></span>  
  
 <span data-ttu-id="10b50-127">Der Vorgang wird im mousdown-Ereignis des <xref:System.Windows.Forms.ListBox> Steuer Elements initiiert.</span><span class="sxs-lookup"><span data-stu-id="10b50-127">The operation is initiated in the <xref:System.Windows.Forms.ListBox> control's MouseDown event.</span></span> <span data-ttu-id="10b50-128">Im- <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> <xref:System.Windows.Forms.RichTextBox> <xref:System.Windows.Forms.DragDropEffects> Ereignishandler verwendet das Beispiel die-Methode, um zu überprüfen, ob die Daten in einem Format vorliegen, das das Steuerelement anzeigen kann. Anschließend wird die-Eigenschaft festgelegt, um anzugeben, dass Daten aus der Quell Code Verwaltung kopiert werden sollen <xref:System.Windows.Forms.RichTextBox.DragEnter> zum Ziel Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="10b50-128">In the <xref:System.Windows.Forms.RichTextBox.DragEnter> event handler, the example uses the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to verify that the data is in a format that the <xref:System.Windows.Forms.RichTextBox> control can display and then sets the <xref:System.Windows.Forms.DragDropEffects> property to specify that data should be copied from the source control to the target control.</span></span> <span data-ttu-id="10b50-129">Schließlich verwendet der DragDrop-Ereignishandler des <xref:System.Windows.Forms.IDataObject.GetData%2A> Steuer Elements die-Methode, um den zu öffnenden Dateinamen abzurufen. <xref:System.Windows.Forms.RichTextBox></span><span class="sxs-lookup"><span data-stu-id="10b50-129">Finally, the <xref:System.Windows.Forms.RichTextBox> control's DragDrop event handler uses the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the filename to open.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DragEventArgs : System.Windows.Forms.IDataObject * int * int * int * System.Windows.Forms.DragDropEffects * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragEventArgs" Usage="new System.Windows.Forms.DragEventArgs (data, keyState, x, y, allowedEffect, effect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="10b50-130">Die diesem Ereignis zugeordneten Daten.</span><span class="sxs-lookup"><span data-stu-id="10b50-130">The data associated with this event.</span></span></param>
        <param name="keyState"><span data-ttu-id="10b50-131">Der aktuelle Zustand von UMSCHALTTASTE, STRG und ALT.</span><span class="sxs-lookup"><span data-stu-id="10b50-131">The current state of the SHIFT, CTRL, and ALT keys.</span></span></param>
        <param name="x"><span data-ttu-id="10b50-132">Die x-Koordinate des Mauszeigers in Pixel.</span><span class="sxs-lookup"><span data-stu-id="10b50-132">The x-coordinate of the mouse cursor in pixels.</span></span></param>
        <param name="y"><span data-ttu-id="10b50-133">Die y-Koordinate des Mauszeigers in Pixel.</span><span class="sxs-lookup"><span data-stu-id="10b50-133">The y-coordinate of the mouse cursor in pixels.</span></span></param>
        <param name="allowedEffect"><span data-ttu-id="10b50-134">Einer der <see cref="T:System.Windows.Forms.DragDropEffects" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="10b50-134">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></param>
        <param name="effect"><span data-ttu-id="10b50-135">Einer der <see cref="T:System.Windows.Forms.DragDropEffects" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="10b50-135">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></param>
        <summary><span data-ttu-id="10b50-136">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DragEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="10b50-136">Initializes a new instance of the <see cref="T:System.Windows.Forms.DragEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedEffect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10b50-137">Ruft ab, welche Drag &amp;amp; Drop-Operationen für den Ursprung (oder die Quelle) des Ziehereignisses zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="10b50-137">Gets which drag-and-drop operations are allowed by the originator (or source) of the drag event.</span></span></summary>
        <value><span data-ttu-id="10b50-138">Einer der <see cref="T:System.Windows.Forms.DragDropEffects" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="10b50-138">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10b50-139">Wenn ein-Steuerelement einen Drag & Drop-Vorgang initiiert, indem <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> die-Methode aufgerufen wird, gibt es die zulässigen Auswirkungen des Vorgangs an.</span><span class="sxs-lookup"><span data-stu-id="10b50-139">When a control initiates a drag-and-drop operation by calling the <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> method, it specifies the permissible effects of the operation.</span></span> <span data-ttu-id="10b50-140">Wenn Sie z. b. eine Datei aus einer Quelle ziehen, wenn die Datei schreibgeschützt ist (oder von einem schreibgeschützten Speichermedium wie z. b. einer CD), gibt die Quelle an, dass die Datei in das Ziel kopiert, aber nicht übertragen werden kann.</span><span class="sxs-lookup"><span data-stu-id="10b50-140">For example, when you drag a file from a source, if the file is read-only (or from a read-only storage medium such as a CD), the source will indicate that the file can be copied, but not transferred, to the target.</span></span>  
  
 <span data-ttu-id="10b50-141">Bevor Sie versuchen, einen Vorgang für die gezogenen Daten auszuführen, sollten Sie diese Eigenschaft überprüfen, um sicherzustellen, dass der Vorgang zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="10b50-141">Before attempting to perform an operation on the dragged data, you should examine this property to ensure that the operation is allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10b50-142">Im folgenden Beispiel wird ein Drag & Drop-Vorgang zwischen zwei <xref:System.Windows.Forms.ListBox> -Steuerelementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-142">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="10b50-143">Im Beispiel wird die <xref:System.Windows.Forms.Control.DoDragDrop%2A> -Methode aufgerufen, wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="10b50-143">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="10b50-144">Die Zieh Aktion wird gestartet, wenn die Maus während des <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> Ereignisses mehr als die Mausposition bewegt hat.</span><span class="sxs-lookup"><span data-stu-id="10b50-144">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="10b50-145">Die <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> -Methode wird verwendet, um den Index des Elements zu bestimmen, das `MouseDown` während des-Ereignisses gezogen werden soll.</span><span class="sxs-lookup"><span data-stu-id="10b50-145">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="10b50-146">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="10b50-146">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="10b50-147">Im Beispiel wird davon ausgegangen, dass zwei `3dwarro.cur` Cursor `3dwno.cur`Dateien, und, im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="10b50-147">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="10b50-148">Die benutzerdefinierten Cursor werden verwendet, wenn `UseCustomCursorsCheck` das <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="10b50-148">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="10b50-149">Die benutzerdefinierten Cursor werden im <xref:System.Windows.Forms.Control.GiveFeedback> -Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-149">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="10b50-150">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht `ListBox`ausgewertet, um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der UMSCHALTTASTE, STRG, alt oder STRG + ALT-Taste basiert.</span><span class="sxs-lookup"><span data-stu-id="10b50-150">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="10b50-151">Der Speicherort in `ListBox` der, an dem der Ablage Vorgang stattfindet, `DragOver` wird auch während des Ereignisses festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-151">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="10b50-152">Wenn es sich bei den zu Lösch Endes `String`Daten nicht um <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> handelt, wird <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>der auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-152">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="10b50-153">Schließlich wird der Status der Ablage in der `DropLocationLabel` <xref:System.Windows.Forms.Label>angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10b50-153">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="10b50-154">Die Daten, die auf der rechten `ListBox` Seite abgelegt werden, <xref:System.Windows.Forms.Control.DragDrop> werden im-Ereignis `String` Handler bestimmt, und der-Wert wird an `ListBox`der entsprechenden Stelle in der hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="10b50-154">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="10b50-155">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im <xref:System.Windows.Forms.Control.QueryContinueDrag> -Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="10b50-155">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="10b50-156">In diesem Code Ausschnitt wird die <xref:System.Windows.Forms.DragEventArgs> Verwendung der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-156">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="10b50-157">Das gesamte <xref:System.Windows.Forms.Control.DoDragDrop%2A> Codebeispiel finden Sie unter der-Methode.</span><span class="sxs-lookup"><span data-stu-id="10b50-157">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.DragEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10b50-158">Ruft das <see cref="T:System.Windows.Forms.IDataObject" /> ab, das die diesem Ereignis zugeordneten Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="10b50-158">Gets the <see cref="T:System.Windows.Forms.IDataObject" /> that contains the data associated with this event.</span></span></summary>
        <value><span data-ttu-id="10b50-159">Die diesem Ereignis zugeordneten Daten.</span><span class="sxs-lookup"><span data-stu-id="10b50-159">The data associated with this event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10b50-160">Im Text des Ereignis Handlers können Sie mithilfe der <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> -Methode ermitteln, ob die Daten mit den Formatanforderungen des Steuer Elements übereinstimmen, an das die Daten gezogen werden.</span><span class="sxs-lookup"><span data-stu-id="10b50-160">In the body of your event handler, you can use the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether the data matches the format requirements of the control onto which the data is being dragged.</span></span> <span data-ttu-id="10b50-161">Sie können auch angeben, ob Sie versuchen möchten, die Daten zu konvertieren, um Ihre Formatanforderungen zu erfüllen.</span><span class="sxs-lookup"><span data-stu-id="10b50-161">You also can specify whether you want to attempt to convert the data to meet your format requirements.</span></span> <span data-ttu-id="10b50-162">Wenn die gezogenen Daten Ihren Formatanforderungen entsprechen, verwenden Sie <xref:System.Windows.Forms.IDataObject.GetData%2A> die-Methode, um die Daten abzurufen.</span><span class="sxs-lookup"><span data-stu-id="10b50-162">If the dragged data meets your format requirements, use the <xref:System.Windows.Forms.IDataObject.GetData%2A> method to retrieve the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10b50-163">Im folgenden Beispiel wird ein Drag & Drop-Vorgang zwischen zwei <xref:System.Windows.Forms.ListBox> -Steuerelementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-163">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="10b50-164">Im Beispiel wird die <xref:System.Windows.Forms.Control.DoDragDrop%2A> -Methode aufgerufen, wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="10b50-164">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="10b50-165">Die Zieh Aktion wird gestartet, wenn die Maus während des <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> Ereignisses mehr als die Mausposition bewegt hat.</span><span class="sxs-lookup"><span data-stu-id="10b50-165">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="10b50-166">Die <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> -Methode wird verwendet, um den Index des Elements zu bestimmen, das `MouseDown` während des-Ereignisses gezogen werden soll.</span><span class="sxs-lookup"><span data-stu-id="10b50-166">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="10b50-167">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="10b50-167">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="10b50-168">Im Beispiel wird davon ausgegangen, dass zwei `3dwarro.cur` Cursor `3dwno.cur`Dateien, und, im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="10b50-168">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="10b50-169">Die benutzerdefinierten Cursor werden verwendet, wenn `UseCustomCursorsCheck` das <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="10b50-169">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="10b50-170">Die benutzerdefinierten Cursor werden im <xref:System.Windows.Forms.Control.GiveFeedback> -Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-170">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="10b50-171">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht `ListBox`ausgewertet, um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der UMSCHALTTASTE, STRG, alt oder STRG + ALT-Taste basiert.</span><span class="sxs-lookup"><span data-stu-id="10b50-171">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="10b50-172">Der Speicherort in `ListBox` der, an dem der Ablage Vorgang stattfindet, `DragOver` wird auch während des Ereignisses festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-172">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="10b50-173">Wenn es sich bei den zu Lösch Endes `String`Daten nicht um <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> handelt, wird <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>der auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-173">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="10b50-174">Schließlich wird der Status der Ablage in der `DropLocationLabel` <xref:System.Windows.Forms.Label>angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10b50-174">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="10b50-175">Die Daten, die auf der rechten `ListBox` Seite abgelegt werden, <xref:System.Windows.Forms.Control.DragDrop> werden im-Ereignis `String` Handler bestimmt, und der-Wert wird an `ListBox`der entsprechenden Stelle in der hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="10b50-175">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="10b50-176">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im <xref:System.Windows.Forms.Control.QueryContinueDrag> -Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="10b50-176">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="10b50-177">In diesem Code Ausschnitt wird die <xref:System.Windows.Forms.DragEventArgs> Verwendung der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-177">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="10b50-178">Das gesamte <xref:System.Windows.Forms.Control.DoDragDrop%2A> Codebeispiel finden Sie unter der-Methode.</span><span class="sxs-lookup"><span data-stu-id="10b50-178">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects with get, set" Usage="System.Windows.Forms.DragEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10b50-179">Ruft das Ziel des Ablageeffekts in einer Drag &amp;amp; Drop-Operation ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="10b50-179">Gets or sets the target drop effect in a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="10b50-180">Einer der <see cref="T:System.Windows.Forms.DragDropEffects" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="10b50-180">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10b50-181">Standardmäßig bestimmt der angewendete Effekt den Mauszeiger für das Ziel eines Drag & Drop-Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="10b50-181">By default, the effect applied determines the mouse cursor for the target of a drag-and-drop operation.</span></span> <span data-ttu-id="10b50-182">Dies ist hilfreich, um dem Benutzer Feedback zum Vorgang bereitzustellen, der ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="10b50-182">This is useful to provide feedback to the user on the operation that will occur.</span></span> <span data-ttu-id="10b50-183">Wenn Sie z. b. die STRG-Taste gedrückt halten, wenn Sie eine Datei aus einer <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> Quelle ziehen, geben Sie an, um anzugeben, dass das Ziel versucht, einen Kopiervorgang auszuführen.</span><span class="sxs-lookup"><span data-stu-id="10b50-183">For example, if you press the CTRL key when you drag a file from a source, specify <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType> to indicate the target will try to perform a copy operation.</span></span>  
  
 <span data-ttu-id="10b50-184">Informationen zum Verwenden benutzerdefinierter Cursor für einen Zieh Vorgang <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>finden Sie unter.</span><span class="sxs-lookup"><span data-stu-id="10b50-184">To use custom cursors for a drag operation, see <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10b50-185">Im folgenden Beispiel wird ein Drag & Drop-Vorgang zwischen zwei <xref:System.Windows.Forms.ListBox> -Steuerelementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-185">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="10b50-186">Im Beispiel wird die <xref:System.Windows.Forms.Control.DoDragDrop%2A> -Methode aufgerufen, wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="10b50-186">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="10b50-187">Die Zieh Aktion wird gestartet, wenn die Maus während des <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> Ereignisses mehr als die Mausposition bewegt hat.</span><span class="sxs-lookup"><span data-stu-id="10b50-187">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="10b50-188">Die <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> -Methode wird verwendet, um den Index des Elements zu bestimmen, das `MouseDown` während des-Ereignisses gezogen werden soll.</span><span class="sxs-lookup"><span data-stu-id="10b50-188">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="10b50-189">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="10b50-189">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="10b50-190">Im Beispiel wird davon ausgegangen, dass zwei `3dwarro.cur` Cursor `3dwno.cur`Dateien, und, im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="10b50-190">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="10b50-191">Die benutzerdefinierten Cursor werden verwendet, wenn `UseCustomCursorsCheck` das <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="10b50-191">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="10b50-192">Die benutzerdefinierten Cursor werden im <xref:System.Windows.Forms.Control.GiveFeedback> -Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-192">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="10b50-193">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht `ListBox`ausgewertet, um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der UMSCHALTTASTE, STRG, alt oder STRG + ALT-Taste basiert.</span><span class="sxs-lookup"><span data-stu-id="10b50-193">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="10b50-194">Der Speicherort in `ListBox` der, an dem der Ablage Vorgang stattfindet, `DragOver` wird auch während des Ereignisses festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-194">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="10b50-195">Wenn es sich bei den zu Lösch Endes `String`Daten nicht um <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> handelt, wird <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>der auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-195">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="10b50-196">Schließlich wird der Status der Ablage in der `DropLocationLabel` <xref:System.Windows.Forms.Label>angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10b50-196">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="10b50-197">Die Daten, die auf der rechten `ListBox` Seite abgelegt werden, <xref:System.Windows.Forms.Control.DragDrop> werden im-Ereignis `String` Handler bestimmt, und der-Wert wird an `ListBox`der entsprechenden Stelle in der hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="10b50-197">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="10b50-198">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im <xref:System.Windows.Forms.Control.QueryContinueDrag> -Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="10b50-198">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="10b50-199">In diesem Code Ausschnitt wird die <xref:System.Windows.Forms.DragEventArgs> Verwendung der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-199">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="10b50-200">Das gesamte <xref:System.Windows.Forms.Control.DoDragDrop%2A> Codebeispiel finden Sie unter der-Methode.</span><span class="sxs-lookup"><span data-stu-id="10b50-200">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10b50-201">Ruft den aktuellen Zustand von UMSCHALTTASTE, STRG, ALT sowie den Zustand der Maustasten ab.</span><span class="sxs-lookup"><span data-stu-id="10b50-201">Gets the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.</span></span></summary>
        <value><span data-ttu-id="10b50-202">Der aktuelle Zustand von UMSCHALTTASTE, STRG, ALT sowie der Maustasten.</span><span class="sxs-lookup"><span data-stu-id="10b50-202">The current state of the SHIFT, CTRL, and ALT keys and of the mouse buttons.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10b50-203">Sie können die Auswirkung eines Drag & Drop-Vorgangs auf den Zustand eines bestimmten Schlüssels setzen.</span><span class="sxs-lookup"><span data-stu-id="10b50-203">You can make the effect of a drag-and-drop operation to depend on the state of a particular key.</span></span> <span data-ttu-id="10b50-204">Beispielsweise können Sie Daten abhängig davon kopieren oder verschieben, ob die STRG-Taste oder die UMSCHALTTASTE während des Drag & Drop-Vorgangs gedrückt werden.</span><span class="sxs-lookup"><span data-stu-id="10b50-204">For example, you may decide to copy or move data depending on whether the CTRL or SHIFT keys are pressed during the drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="10b50-205">Die Bits, die in der <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> -Eigenschaft festgelegt sind, identifizieren die Schlüssel oder Maustasten, die während des Vorgangs gedrückt wurden.</span><span class="sxs-lookup"><span data-stu-id="10b50-205">The bits that are set in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation.</span></span> <span data-ttu-id="10b50-206">Wenn z. b. die linke Maustaste gedrückt wird, wird das erste Bit in <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> der-Eigenschaft festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-206">For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.DragEventArgs.KeyState%2A> property is set.</span></span> <span data-ttu-id="10b50-207">Sie können den bitweisen AND-Operator verwenden, um auf einen bestimmten Schlüssel Zustand zu testen.</span><span class="sxs-lookup"><span data-stu-id="10b50-207">You can use the bitwise AND operator to test for a given key state.</span></span>  
  
 <span data-ttu-id="10b50-208">In der folgenden Tabelle sind die Werte aufgeführt, die für ein angegebenes Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="10b50-208">The following table lists the values that are used for a specified event.</span></span>  
  
|<span data-ttu-id="10b50-209">Wert</span><span class="sxs-lookup"><span data-stu-id="10b50-209">Value</span></span>|<span data-ttu-id="10b50-210">Key</span><span class="sxs-lookup"><span data-stu-id="10b50-210">Key</span></span>|  
|-----------|---------|  
|<span data-ttu-id="10b50-211">1 (Bit 0)</span><span class="sxs-lookup"><span data-stu-id="10b50-211">1 (bit 0)</span></span>|<span data-ttu-id="10b50-212">Die linke Maustaste.</span><span class="sxs-lookup"><span data-stu-id="10b50-212">The left mouse button.</span></span>|  
|<span data-ttu-id="10b50-213">2 (Bit 1)</span><span class="sxs-lookup"><span data-stu-id="10b50-213">2 (bit 1)</span></span>|<span data-ttu-id="10b50-214">Die rechte Maustaste.</span><span class="sxs-lookup"><span data-stu-id="10b50-214">The right mouse button.</span></span>|  
|<span data-ttu-id="10b50-215">4 (Bit 2)</span><span class="sxs-lookup"><span data-stu-id="10b50-215">4 (bit 2)</span></span>|<span data-ttu-id="10b50-216">Die UMSCHALTTASTE.</span><span class="sxs-lookup"><span data-stu-id="10b50-216">The SHIFT key.</span></span>|  
|<span data-ttu-id="10b50-217">8 (Bit 3)</span><span class="sxs-lookup"><span data-stu-id="10b50-217">8 (bit 3)</span></span>|<span data-ttu-id="10b50-218">Die CTRL-TASTE.</span><span class="sxs-lookup"><span data-stu-id="10b50-218">The CTRL key.</span></span>|  
|<span data-ttu-id="10b50-219">16 (Bit 4)</span><span class="sxs-lookup"><span data-stu-id="10b50-219">16 (bit 4)</span></span>|<span data-ttu-id="10b50-220">Die mittlere Maustaste.</span><span class="sxs-lookup"><span data-stu-id="10b50-220">The middle mouse button.</span></span>|  
|<span data-ttu-id="10b50-221">32 (Bit 5)</span><span class="sxs-lookup"><span data-stu-id="10b50-221">32 (bit 5)</span></span>|<span data-ttu-id="10b50-222">Die ALT-TASTE.</span><span class="sxs-lookup"><span data-stu-id="10b50-222">The ALT key.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="10b50-223">Im folgenden Beispiel wird ein Drag & Drop-Vorgang zwischen zwei <xref:System.Windows.Forms.ListBox> -Steuerelementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-223">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="10b50-224">Im Beispiel wird die <xref:System.Windows.Forms.Control.DoDragDrop%2A> -Methode aufgerufen, wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="10b50-224">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="10b50-225">Die Zieh Aktion wird gestartet, wenn die Maus während des <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> Ereignisses mehr als die Mausposition bewegt hat.</span><span class="sxs-lookup"><span data-stu-id="10b50-225">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="10b50-226">Die <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> -Methode wird verwendet, um den Index des Elements zu bestimmen, das `MouseDown` während des-Ereignisses gezogen werden soll.</span><span class="sxs-lookup"><span data-stu-id="10b50-226">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="10b50-227">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="10b50-227">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="10b50-228">Im Beispiel wird davon ausgegangen, dass zwei `3dwarro.cur` Cursor `3dwno.cur`Dateien, und, im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="10b50-228">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="10b50-229">Die benutzerdefinierten Cursor werden verwendet, wenn `UseCustomCursorsCheck` das <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="10b50-229">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="10b50-230">Die benutzerdefinierten Cursor werden im <xref:System.Windows.Forms.Control.GiveFeedback> -Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-230">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="10b50-231">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht `ListBox`ausgewertet, um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der UMSCHALTTASTE, STRG, alt oder STRG + ALT-Taste basiert.</span><span class="sxs-lookup"><span data-stu-id="10b50-231">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="10b50-232">Der Speicherort in `ListBox` der, an dem der Ablage Vorgang stattfindet, `DragOver` wird auch während des Ereignisses festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-232">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="10b50-233">Wenn es sich bei den zu Lösch Endes `String`Daten nicht um <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> handelt, wird <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>der auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-233">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="10b50-234">Schließlich wird der Status der Ablage in der `DropLocationLabel` <xref:System.Windows.Forms.Label>angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10b50-234">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="10b50-235">Die Daten, die auf der rechten `ListBox` Seite abgelegt werden, <xref:System.Windows.Forms.Control.DragDrop> werden im-Ereignis `String` Handler bestimmt, und der-Wert wird an `ListBox`der entsprechenden Stelle in der hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="10b50-235">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="10b50-236">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im <xref:System.Windows.Forms.Control.QueryContinueDrag> -Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="10b50-236">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="10b50-237">In diesem Code Ausschnitt wird die <xref:System.Windows.Forms.DragEventArgs> Verwendung der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-237">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="10b50-238">Das gesamte <xref:System.Windows.Forms.Control.DoDragDrop%2A> Codebeispiel finden Sie unter der-Methode.</span><span class="sxs-lookup"><span data-stu-id="10b50-238">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.DragEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10b50-239">Ruft die x-Koordinate des Mauszeigers in Bildschirmkoordinaten ab.</span><span class="sxs-lookup"><span data-stu-id="10b50-239">Gets the x-coordinate of the mouse pointer, in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="10b50-240">Die x-Koordinate des Mauszeigers in Pixel.</span><span class="sxs-lookup"><span data-stu-id="10b50-240">The x-coordinate of the mouse pointer in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10b50-241">Im folgenden Beispiel wird ein Drag & Drop-Vorgang zwischen zwei <xref:System.Windows.Forms.ListBox> -Steuerelementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-241">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="10b50-242">Im Beispiel wird die <xref:System.Windows.Forms.Control.DoDragDrop%2A> -Methode aufgerufen, wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="10b50-242">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="10b50-243">Die Zieh Aktion wird gestartet, wenn die Maus während des <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> Ereignisses mehr als die Mausposition bewegt hat.</span><span class="sxs-lookup"><span data-stu-id="10b50-243">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="10b50-244">Die <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> -Methode wird verwendet, um den Index des Elements zu bestimmen, das `MouseDown` während des-Ereignisses gezogen werden soll.</span><span class="sxs-lookup"><span data-stu-id="10b50-244">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="10b50-245">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="10b50-245">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="10b50-246">Im Beispiel wird davon ausgegangen, dass zwei `3dwarro.cur` Cursor `3dwno.cur`Dateien, und, im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="10b50-246">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="10b50-247">Die benutzerdefinierten Cursor werden verwendet, wenn `UseCustomCursorsCheck` das <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="10b50-247">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="10b50-248">Die benutzerdefinierten Cursor werden im <xref:System.Windows.Forms.Control.GiveFeedback> -Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-248">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="10b50-249">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht `ListBox`ausgewertet, um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der UMSCHALTTASTE, STRG, alt oder STRG + ALT-Taste basiert.</span><span class="sxs-lookup"><span data-stu-id="10b50-249">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="10b50-250">Der Speicherort in `ListBox` der, an dem der Ablage Vorgang stattfindet, `DragOver` wird auch während des Ereignisses festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-250">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="10b50-251">Wenn es sich bei den zu Lösch Endes `String`Daten nicht um <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> handelt, wird <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>der auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-251">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="10b50-252">Schließlich wird der Status der Ablage in der `DropLocationLabel` <xref:System.Windows.Forms.Label>angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10b50-252">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="10b50-253">Die Daten, die auf der rechten `ListBox` Seite abgelegt werden, <xref:System.Windows.Forms.Control.DragDrop> werden im-Ereignis `String` Handler bestimmt, und der-Wert wird an `ListBox`der entsprechenden Stelle in der hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="10b50-253">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="10b50-254">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im <xref:System.Windows.Forms.Control.QueryContinueDrag> -Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="10b50-254">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="10b50-255">In diesem Code Ausschnitt wird die <xref:System.Windows.Forms.DragEventArgs> Verwendung der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-255">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="10b50-256">Das gesamte <xref:System.Windows.Forms.Control.DoDragDrop%2A> Codebeispiel finden Sie unter der-Methode.</span><span class="sxs-lookup"><span data-stu-id="10b50-256">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.DragEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="10b50-257">Ruft die y-Koordinate des Mauszeigers in Bildschirmkoordinaten ab.</span><span class="sxs-lookup"><span data-stu-id="10b50-257">Gets the y-coordinate of the mouse pointer, in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="10b50-258">Die y-Koordinate des Mauszeigers in Pixel.</span><span class="sxs-lookup"><span data-stu-id="10b50-258">The y-coordinate of the mouse pointer in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="10b50-259">Im folgenden Beispiel wird ein Drag & Drop-Vorgang zwischen zwei <xref:System.Windows.Forms.ListBox> -Steuerelementen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-259">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="10b50-260">Im Beispiel wird die <xref:System.Windows.Forms.Control.DoDragDrop%2A> -Methode aufgerufen, wenn die Zieh Aktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="10b50-260">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="10b50-261">Die Zieh Aktion wird gestartet, wenn die Maus während des <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown> Ereignisses mehr als die Mausposition bewegt hat.</span><span class="sxs-lookup"><span data-stu-id="10b50-261">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="10b50-262">Die <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> -Methode wird verwendet, um den Index des Elements zu bestimmen, das `MouseDown` während des-Ereignisses gezogen werden soll.</span><span class="sxs-lookup"><span data-stu-id="10b50-262">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="10b50-263">Das Beispiel zeigt auch die Verwendung von benutzerdefinierten Cursorn für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="10b50-263">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="10b50-264">Im Beispiel wird davon ausgegangen, dass zwei `3dwarro.cur` Cursor `3dwno.cur`Dateien, und, im Anwendungsverzeichnis vorhanden sind, für die benutzerdefinierten Drag-und No-Drop-Cursor.</span><span class="sxs-lookup"><span data-stu-id="10b50-264">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="10b50-265">Die benutzerdefinierten Cursor werden verwendet, wenn `UseCustomCursorsCheck` das <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="10b50-265">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="10b50-266">Die benutzerdefinierten Cursor werden im <xref:System.Windows.Forms.Control.GiveFeedback> -Ereignishandler festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-266">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="10b50-267">Der Tastatur Zustand wird im <xref:System.Windows.Forms.Control.DragOver> Ereignishandler für das Recht `ListBox`ausgewertet, um zu bestimmen, welcher Zieh Vorgang auf dem Zustand der UMSCHALTTASTE, STRG, alt oder STRG + ALT-Taste basiert.</span><span class="sxs-lookup"><span data-stu-id="10b50-267">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="10b50-268">Der Speicherort in `ListBox` der, an dem der Ablage Vorgang stattfindet, `DragOver` wird auch während des Ereignisses festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-268">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="10b50-269">Wenn es sich bei den zu Lösch Endes `String`Daten nicht um <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> handelt, wird <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>der auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="10b50-269">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="10b50-270">Schließlich wird der Status der Ablage in der `DropLocationLabel` <xref:System.Windows.Forms.Label>angezeigt.</span><span class="sxs-lookup"><span data-stu-id="10b50-270">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="10b50-271">Die Daten, die auf der rechten `ListBox` Seite abgelegt werden, <xref:System.Windows.Forms.Control.DragDrop> werden im-Ereignis `String` Handler bestimmt, und der-Wert wird an `ListBox`der entsprechenden Stelle in der hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="10b50-271">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="10b50-272">Wenn der Zieh Vorgang außerhalb der Begrenzungen des Formulars verschoben wird, wird der Drag & Drop-Vorgang im <xref:System.Windows.Forms.Control.QueryContinueDrag> -Ereignishandler abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="10b50-272">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="10b50-273">In diesem Code Ausschnitt wird die <xref:System.Windows.Forms.DragEventArgs> Verwendung der-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="10b50-273">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventArgs> class.</span></span> <span data-ttu-id="10b50-274">Das gesamte <xref:System.Windows.Forms.Control.DoDragDrop%2A> Codebeispiel finden Sie unter der-Methode.</span><span class="sxs-lookup"><span data-stu-id="10b50-274">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>
