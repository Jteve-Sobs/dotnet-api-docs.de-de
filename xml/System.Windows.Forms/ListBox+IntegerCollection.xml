<Type Name="ListBox+IntegerCollection" FullName="System.Windows.Forms.ListBox+IntegerCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8eb94855402df233346fe1f7256c34aa4e28c98a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69185532" /></Metadata><TypeSignature Language="C#" Value="public class ListBox.IntegerCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/IntegerCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.IntegerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.IntegerCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::IntegerCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.IntegerCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d7b41-101">Stellt eine Auflistung ganzer Zahlen in einem <see cref="T:System.Windows.Forms.ListBox" /> dar.</span><span class="sxs-lookup"><span data-stu-id="d7b41-101">Represents a collection of integers in a <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-102"><xref:System.Windows.Forms.ListBox.IntegerCollection>ist eine sortierte Auflistung, an die Elemente mithilfe der- <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> Methode <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> und der-Methode angefügt werden.</span><span class="sxs-lookup"><span data-stu-id="d7b41-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> is a sorted collection to which items are appended by using the <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> and <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> methods.</span></span> <span data-ttu-id="d7b41-103">Doppelte Werte werden entfernt.</span><span class="sxs-lookup"><span data-stu-id="d7b41-103">Duplicate values are removed.</span></span>  
  
 <span data-ttu-id="d7b41-104">Der <xref:System.Windows.Forms.ListBox.IntegerCollection> wird hauptsächlich von der <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> -Eigenschaft verwendet.</span><span class="sxs-lookup"><span data-stu-id="d7b41-104">The <xref:System.Windows.Forms.ListBox.IntegerCollection> is used mainly by the <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.IntegerCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.IntegerCollection" Usage="new System.Windows.Forms.ListBox.IntegerCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="d7b41-105">Die <see cref="T:System.Windows.Forms.ListBox" />, die die Auflistung besitzt.</span><span class="sxs-lookup"><span data-stu-id="d7b41-105">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span></span></param>
        <summary><span data-ttu-id="d7b41-106">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d7b41-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-107">Sie können keine Instanz der <xref:System.Windows.Forms.ListBox.IntegerCollection> -Klasse erstellen, ohne Sie mit einem <xref:System.Windows.Forms.ListBox> -Steuerelement zu verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-107">You cannot create an instance of the <xref:System.Windows.Forms.ListBox.IntegerCollection> class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(int item);" />
      <MemberSignature Language="F#" Value="member this.Add : int -&gt; int" Usage="integerCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d7b41-108">Die der Auflistung hinzuzufügende ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="d7b41-108">The integer to add to the collection.</span></span></param>
        <summary><span data-ttu-id="d7b41-109">Fügt der Auflistung in sortierter Reihenfolge eine eindeutige ganze Zahl hinzu.</span><span class="sxs-lookup"><span data-stu-id="d7b41-109">Adds a unique integer to the collection in sorted order.</span></span></summary>
        <returns><span data-ttu-id="d7b41-110">Der Index des hinzugefügten Elements.</span><span class="sxs-lookup"><span data-stu-id="d7b41-110">The index of the added item.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="d7b41-111">Es ist nicht genügend Speicherplatz verfügbar, um das neue Element zu speichern.</span><span class="sxs-lookup"><span data-stu-id="d7b41-111">There is insufficient space available to store the new item.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7b41-112">Fügt der Auflistung eine Gruppe von ganzen Zahlen hinzu.</span><span class="sxs-lookup"><span data-stu-id="d7b41-112">Adds a group of integers to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;int&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int[] -&gt; unit" Usage="integerCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="d7b41-113">Das Array von ganzen Zahlen, die der Auflistung hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-113">The array of integers to add to the collection.</span></span></param>
        <summary><span data-ttu-id="d7b41-114">Fügt der Auflistung ein Array von ganzen Zahlen hinzu.</span><span class="sxs-lookup"><span data-stu-id="d7b41-114">Adds an array of integers to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-115">Das Array von ganzen Zahlen wird an die Auflistung angehängt, und Duplikate werden aus der Auflistung entfernt.</span><span class="sxs-lookup"><span data-stu-id="d7b41-115">The array of integers is appended to the collection, and duplicates are removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.IntegerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/IntegerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Windows.Forms.ListBox.IntegerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.IntegerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::IntegerCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.IntegerCollection -&gt; unit" Usage="integerCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+IntegerCollection" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7b41-116">Die einer anderen Auflistung hinzuzufügende <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d7b41-116">The <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to add to another collection.</span></span></param>
        <summary><span data-ttu-id="d7b41-117">Fügt einer anderen Auflistung den Inhalt einer vorhandenen <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="d7b41-117">Adds the contents of an existing <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to another collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-118">Der Inhalt der vorhandenen <xref:System.Windows.Forms.ListBox.IntegerCollection> wird an die aktuelle Auflistung angehängt, und Duplikate werden aus der kombinierten Auflistung entfernt.</span><span class="sxs-lookup"><span data-stu-id="d7b41-118">The contents of the existing <xref:System.Windows.Forms.ListBox.IntegerCollection> are appended to the current collection, and duplicates are removed from the combined collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="integerCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7b41-119">Entfernt alle ganzen Zahlen aus der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d7b41-119">Removes all integers from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int item);" />
      <MemberSignature Language="F#" Value="member this.Contains : int -&gt; bool" Usage="integerCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d7b41-120">Die ganze Zahl, die in der Auflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-120">The integer to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="d7b41-121">Bestimmt, ob die angegebene ganze Zahl in der Auflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="d7b41-121">Determines whether the specified integer is in the collection.</span></span></summary>
        <returns><span data-ttu-id="d7b41-122"><see langword="true" />, wenn die angegebene ganze Zahl in der Auflistung vorhanden ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7b41-122"><see langword="true" /> if the specified integer is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-123">Verwenden Sie <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> die-Methode, um zu bestimmen, ob eine ganze <xref:System.Windows.Forms.ListBox.IntegerCollection>Zahl ein Member von ist.</span><span class="sxs-lookup"><span data-stu-id="d7b41-123">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method to determine whether an integer is a member of the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="d7b41-124">Wenn Sie wissen, dass sich das Element in der Auflistung befindet, können Sie die <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> -Methode verwenden, um zu bestimmen, wo sich das Element in der Auflistung befindet.</span><span class="sxs-lookup"><span data-stu-id="d7b41-124">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="integerCollection.CopyTo (destination, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="d7b41-125">Das Array, in das die <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-125">The array into which the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> is copied.</span></span></param>
        <param name="index"><span data-ttu-id="d7b41-126">Die Position im Zielarray, an die die <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-126">The location within the destination array to which to copy the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d7b41-127">Kopiert die gesamte <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> an eine angegebene Position in ein vorhandenes Array von ganzen Zahlen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-127">Copies the entire <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> into an existing array of integers at a specified location within the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-128">Verwenden Sie <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> die-Methode, um die ganzen Zahlen aus mehreren Auflistungen in einem einzelnen Array zu kombinieren.</span><span class="sxs-lookup"><span data-stu-id="d7b41-128">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> method to combine the integers from multiple collections into a single array.</span></span> <span data-ttu-id="d7b41-129">Anschließend können Sie dieses Array verwenden, um den Inhalt eines anderen <xref:System.Windows.Forms.ListBox> Steuer Elements mit der <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> -Methode aufzufüllen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-129">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7b41-130">Ruft die Anzahl der ausgewählten Elemente in der <see cref="T:System.Windows.Forms.ListBox" /> ab.</span><span class="sxs-lookup"><span data-stu-id="d7b41-130">Gets the number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="d7b41-131">Die Anzahl der ausgewählten Elemente in der <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="d7b41-131">The number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-132">Verwenden Sie <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> die-Eigenschaft, um die Anzahl der ausgewählten Elemente <xref:System.Windows.Forms.ListBox.IntegerCollection>in der zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-132">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> property to determine the number of selected items in the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="d7b41-133">Sie können diesen Wert dann verwenden, wenn Sie die Elemente durchlaufen und eine Reihe von Iterationen bereitstellen müssen, um die Schleife auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-133">You can then use this value when you are looping through the items and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int item);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : int -&gt; int" Usage="integerCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d7b41-134">Die ganze Zahl, für die der Index abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-134">The integer for which to retrieve the index.</span></span></param>
        <summary><span data-ttu-id="d7b41-135">Ruft den Index der angegeben ganzen Zahl in der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> ab.</span><span class="sxs-lookup"><span data-stu-id="d7b41-135">Retrieves the index within the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> of the specified integer.</span></span></summary>
        <returns><span data-ttu-id="d7b41-136">Der nullbasierte Index der ganzen Zahl in der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="d7b41-136">The zero-based index of the integer in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-137">Verwenden Sie <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> die-Methode, um zu bestimmen, wo sich ein Element in der Auflistung befindet.</span><span class="sxs-lookup"><span data-stu-id="d7b41-137">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where an item is located within the collection.</span></span> <span data-ttu-id="d7b41-138">Verwenden Sie die <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> -Methode, um zu bestimmen, ob sich ein Element in der Auflistung befindet, bevor Sie diese Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-138">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); void set(int index, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : int with get, set" Usage="System.Windows.Forms.ListBox.IntegerCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d7b41-139">Die Position von <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-139">The position of the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> in the collection.</span></span></param>
        <summary><span data-ttu-id="d7b41-140">Ruft das <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> mit dem angegebenen Index ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="d7b41-140">Gets or sets the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> having the specified index.</span></span></summary>
        <value><span data-ttu-id="d7b41-141">Das ausgewählte <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> an der angegebenen Position.</span><span class="sxs-lookup"><span data-stu-id="d7b41-141">The selected <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> at the specified position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int item);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="integerCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d7b41-142">Die ganze Zahl, die aus der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-142">The integer to remove from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d7b41-143">Entfernt die angegebene ganze Zahl aus der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d7b41-143">Removes the specified integer from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-144">Wenn Sie eine ganze Zahl aus dem <xref:System.Windows.Forms.ListBox.IntegerCollection>entfernen, werden die Indizes für nachfolgende ganze Zahlen in der Auflistung geändert.</span><span class="sxs-lookup"><span data-stu-id="d7b41-144">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="d7b41-145">Alle Informationen über die entfernte Ganzzahl werden gelöscht.</span><span class="sxs-lookup"><span data-stu-id="d7b41-145">All information about the removed integer is deleted.</span></span> <span data-ttu-id="d7b41-146">Sie können die <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> -Methode verwenden, um ein bestimmtes Element aus der Liste zu entfernen, indem Sie das eigentliche Element angeben, das aus der Liste entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-146">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="d7b41-147">Verwenden Sie die <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> -Methode, um den Index der zu entfernenden Ganzzahl anstelle der ganzzahligen selbst zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-147">To specify the index of the integer to remove instead of the integer itself, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="d7b41-148">Wenn die Ganzzahl nicht in der <xref:System.Windows.Forms.ListBox.IntegerCollection>ist, führt diese Methode keine Aktion aus.</span><span class="sxs-lookup"><span data-stu-id="d7b41-148">If the integer is not in the <xref:System.Windows.Forms.ListBox.IntegerCollection>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="integerCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d7b41-149">Der nullbasierte Index der zu entfernenden ganzen Zahl.</span><span class="sxs-lookup"><span data-stu-id="d7b41-149">The zero-based index of the integer to remove.</span></span></param>
        <summary><span data-ttu-id="d7b41-150">Entfernt die ganze Zahl am angegebenen Index aus der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d7b41-150">Removes the integer at the specified index from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-151">Wenn Sie eine ganze Zahl aus dem <xref:System.Windows.Forms.ListBox.IntegerCollection>entfernen, werden die Indizes für nachfolgende ganze Zahlen in der Auflistung geändert.</span><span class="sxs-lookup"><span data-stu-id="d7b41-151">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="d7b41-152">Alle Informationen über die entfernte Ganzzahl werden gelöscht.</span><span class="sxs-lookup"><span data-stu-id="d7b41-152">All information about the removed integer is deleted.</span></span> <span data-ttu-id="d7b41-153">Sie können die <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> -Methode verwenden, um eine bestimmte Ganzzahl aus der Liste zu entfernen, indem Sie den Index der Ganzzahl angeben, die aus der Liste entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-153">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method to remove a specific integer from the list by specifying the index of the integer to remove from the list.</span></span> <span data-ttu-id="d7b41-154">Verwenden Sie die <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> -Methode, um das Element anzugeben, das anstelle des Indexes für das Element entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-154">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7b41-155">Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert ist (threadsicher).</span><span class="sxs-lookup"><span data-stu-id="d7b41-155">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="d7b41-156"><see langword="true" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-156"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-157">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-157">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-158">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-158">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7b41-159">Ruft ein Objekt ab, mit dem der Zugriff auf die Steuerelementauflistung synchronisiert werden kann</span><span class="sxs-lookup"><span data-stu-id="d7b41-159">Gets an object that can be used to synchronize access to the collection of controls.</span></span></summary>
        <value><span data-ttu-id="d7b41-160">Das zum Synchronisieren mit der Auflistung verwendete Objekt.</span><span class="sxs-lookup"><span data-stu-id="d7b41-160">The object used to synchronize to the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-161">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-162">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-162">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7b41-163">Ruft eine Enumeration aller ganzen Zahlen in der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> ab.</span><span class="sxs-lookup"><span data-stu-id="d7b41-163">Retrieves an enumeration of all the integers in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <returns><span data-ttu-id="d7b41-164">Ein <see cref="T:System.Collections.IEnumerator" /> für das <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d7b41-164">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-165">Diese Methode erstellt einen Enumerator, der eine Momentaufnahme der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="d7b41-165">This method creates an enumerator that contains a snapshot of the collection.</span></span> <span data-ttu-id="d7b41-166">Sie können die Sammlung ändern, indem Sie den Enumerator ändern. mehrere Enumeratoren können gleichzeitig auf dieselbe Auflistung zugreifen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-166">You can change the collection by changing the enumerator; however, multiple enumerators can simultaneously access the same collection.</span></span> <span data-ttu-id="d7b41-167">Wenn Sie die Sammlung (entweder direkt oder über einen anderen Enumerator) ändern <xref:System.Collections.IEnumerator.Current%2A> , <xref:System.Collections.IEnumerator.MoveNext%2A> kann dies dazu führen, dass oder eine Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="d7b41-167">Changing the collection (either directly or through another enumerator) can thus cause <xref:System.Collections.IEnumerator.Current%2A> or <xref:System.Collections.IEnumerator.MoveNext%2A> to throw an exception.</span></span>  
  
 <span data-ttu-id="d7b41-168">Zwei Enumeratoren, die aus derselben Auflistung gleichzeitig erstellt werden, können unterschiedliche Momentaufnahmen enthalten.</span><span class="sxs-lookup"><span data-stu-id="d7b41-168">Two enumerators created from the same collection at the same time can contain different snapshots.</span></span>  
  
 <span data-ttu-id="d7b41-169">Durch das Entfernen von Objekten aus dem Enumerator werden diese auch aus der Auflistung entfernt.</span><span class="sxs-lookup"><span data-stu-id="d7b41-169">Removing objects from the enumerator also removes them from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d7b41-170">Der der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> hinzuzufügende Tabstopp.</span><span class="sxs-lookup"><span data-stu-id="d7b41-170">The tab stop to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d7b41-171">Fügt der Auflistung einen Tabstopp hinzu.</span><span class="sxs-lookup"><span data-stu-id="d7b41-171">Adds a tab stop to the collection.</span></span></summary>
        <returns><span data-ttu-id="d7b41-172">Der Index, an dem die ganze Zahl der Auflistung hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="d7b41-172">The index at which the integer was added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-173">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-174">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-174">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7b41-175"><paramref name="item" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7b41-175"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7b41-176"><paramref name="item" /> ist keine 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-176"><paramref name="item" /> is not an 32-bit signed integer.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="d7b41-177">Es ist nicht genügend Speicherplatz verfügbar, um das neue Element in der Auflistung zu speichern.</span><span class="sxs-lookup"><span data-stu-id="d7b41-177">There is insufficient space to store the new item in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7b41-178">Löscht alle Tabstopps aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-178">Clears all the tab stops from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-179">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-180">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-180">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d7b41-181">Der Tabstopp, der in der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-181">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d7b41-182">Bestimmt, ob der angegebene Tabstopp in der Auflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="d7b41-182">Determines whether the specified tab stop is in the collection.</span></span></summary>
        <returns><span data-ttu-id="d7b41-183"><see langword="true" />, wenn das Element eine in der Auflistung enthaltene ganze Zahl ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7b41-183"><see langword="true" /> if item is an integer located in the IntegerCollection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-184">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-185">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-185">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="d7b41-186">Der Tabstopp, der in der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-186">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d7b41-187">Gibt den Index des angegebenen Tabstopps in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="d7b41-187">Returns the index of the specified tab stop in the collection.</span></span></summary>
        <returns><span data-ttu-id="d7b41-188">Der nullbasierte Index des Elements, wenn es in der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> gefunden wurde, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="d7b41-188">The zero-based index of item if it was found in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-189">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-190">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-190">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d7b41-191">Der nullbasierte Index, an dem der Wert eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-191">The zero-based index at which value should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="d7b41-192">Das in die <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> einzufügende Objekt.</span><span class="sxs-lookup"><span data-stu-id="d7b41-192">The object to insert into the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d7b41-193">Fügt ein Element am angegebenen Index in die Auflistung ein.</span><span class="sxs-lookup"><span data-stu-id="d7b41-193">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-194">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-195">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-195">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d7b41-196">Wird immer ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d7b41-196">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7b41-197">Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</span><span class="sxs-lookup"><span data-stu-id="d7b41-197">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="d7b41-198"><see langword="true" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-198"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-199">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-200">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-200">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7b41-201">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="d7b41-201">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="d7b41-202"><see langword="false" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="d7b41-202"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-203">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-204">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-204">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d7b41-205">Der nullbasierte Index, der den abzurufenden Tabstopp angibt.</span><span class="sxs-lookup"><span data-stu-id="d7b41-205">The zero-based index that specifies which tab stop to get.</span></span></param>
        <summary><span data-ttu-id="d7b41-206">Ruft den Tabstopp am angegebenen Index ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="d7b41-206">Gets or sets the tab stop at the specified index.</span></span></summary>
        <value><span data-ttu-id="d7b41-207">Der Tabstopp, der an der angegebenen Position in der <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="d7b41-207">The tab stop that is stored at the specified location in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-208">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-209">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-209">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7b41-210">Das Objekt ist keine ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="d7b41-210">The object is not an integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7b41-211">Das Objekt, das <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7b41-211">The object to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="d7b41-212">Entfernt das erste Vorkommen eines Elements aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-212">Removes the first occurrence of an item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-213">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-214">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-214">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d7b41-215">Wird immer ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d7b41-215">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d7b41-216">Der Index des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="d7b41-216">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="d7b41-217">Entfernt das Element am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="d7b41-217">Removes the item at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7b41-218">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="d7b41-218">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d7b41-219">Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.ListBox.IntegerCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d7b41-219">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d7b41-220">Wird immer ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d7b41-220">Always thrown.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
