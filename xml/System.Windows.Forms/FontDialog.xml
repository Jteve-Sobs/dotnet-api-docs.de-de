<Type Name="FontDialog" FullName="System.Windows.Forms.FontDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="698238e7bb494c1eef4b10288f58c36a0b617549" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48743631" /></Metadata><TypeSignature Language="C#" Value="public class FontDialog : System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontDialog extends System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FontDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class FontDialog&#xA;Inherits CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontDialog : System::Windows::Forms::CommonDialog" />
  <TypeSignature Language="F#" Value="type FontDialog = class&#xA;    inherit CommonDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Apply")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Font")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fordert den Benutzer auf, eine der auf dem lokalen Computer installierten Schriftarten auszuwählen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die geerbten Member <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> aufgerufen werden muss, um diese bestimmte Standarddialogfeld zu erstellen. <xref:System.Windows.Forms.CommonDialog.HookProc%2A> kann überschrieben werden, um bestimmte Hookfunktionen zu implementieren.  
  
 Beim Erstellen einer Instanz von <xref:System.Windows.Forms.FontDialog>, einige der Eigenschaften mit Lese-/Schreibzugriff auf die ursprünglichen Werte festgelegt. Eine Liste dieser Werte finden Sie in der <xref:System.Windows.Forms.FontDialog.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> zum Anzeigen einer <xref:System.Windows.Forms.FontDialog>. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.Form> wurde bereits mit einem <xref:System.Windows.Forms.TextBox> und Schaltfläche platziert sind. Sie erfordert außerdem, dass die `fontDialog1` erstellt wurde. Die <xref:System.Drawing.Font> der Größeninformationen aber nicht die Farbinformationen enthält.  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Drawing.Font" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.FontDialog" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Erstellen einer Instanz von <xref:System.Windows.Forms.FontDialog>, die folgenden Lese-/Schreibeigenschaften werden initialisiert.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.FontDialog.AllowSimulations%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowVectorFonts%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowVerticalFonts%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowScriptChange%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.Color%2A>|`Color.Black`|  
|<xref:System.Windows.Forms.FontDialog.FixedPitchOnly%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.MaxSize%2A>|0|  
|<xref:System.Windows.Forms.FontDialog.MinSize%2A>|0|  
|<xref:System.Windows.Forms.FontDialog.ScriptsOnly%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowApply%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowColor%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowEffects%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.ShowHelp%2A>|`false`|  
  
 Sie können den Wert für eine dieser Eigenschaften über einen separaten Aufruf der Eigenschaft ändern.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="AllowScriptChange">
      <MemberSignature Language="C#" Value="public bool AllowScriptChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowScriptChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowScriptChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowScriptChange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowScriptChange : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowScriptChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Benutzer den im Kombinationsfeld **Skript** angegebenen Zeichensatz ändern kann, sodass anstelle des aktuellen ein anderer Zeichensatz angezeigt wird, oder legt diesen fest.</summary>
        <value><see langword="true" /> Wenn der Benutzer den angegebenen Zeichensatz ändern kann die **Skript** Kombinationsfeld ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die **Skript** finden Sie im Kombinationsfeld auf der **Schriftart** Dialogfeld enthält die Zeichensätze, die die ausgewählte Schriftart zugeordnet.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowSimulations">
      <MemberSignature Language="C#" Value="public bool AllowSimulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSimulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowSimulations" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSimulations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSimulations { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSimulations : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowSimulations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob GDI-Schriftartsimulationen (Graphics Device Interface) für das Dialogfeld zugelassen sind, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Schriftartsimulationen zulässig sind, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowVectorFonts">
      <MemberSignature Language="C#" Value="public bool AllowVectorFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowVectorFonts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowVectorFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowVectorFonts { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowVectorFonts : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowVectorFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Vektorschriftarten im Dialogfeld ausgewählt werden können, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn Vektorschriftarten zulässig sind, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowVerticalFonts">
      <MemberSignature Language="C#" Value="public bool AllowVerticalFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowVerticalFonts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowVerticalFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowVerticalFonts { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowVerticalFonts : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Dialogfeld vertikale und horizontale Schriftarten oder nur horizontale Schriftarten angezeigt werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn vertikale und horizontale Schriftarten zulässig sind, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public event EventHandler Apply;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Apply" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.FontDialog.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Apply As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Apply;" />
      <MemberSignature Language="F#" Value="member this.Apply : EventHandler " Usage="member this.Apply : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer im Dialogfeld für die Schriftart auf die Schaltfläche **Übernehmen** klickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Mal, wenn die **übernehmen** Schaltfläche geklickt wird, eine andere <xref:System.Windows.Forms.FontDialog.Apply> Ereignis wird ausgelöst.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> und <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> Mitglieder und Behandlung der <xref:System.Windows.Forms.FontDialog.Apply> Ereignis. Zum Ausführen dieses Beispiels fügen Sie den folgenden code in ein Formular mit einem <xref:System.Windows.Forms.FontDialog> mit dem Namen `FontDialog1` und <xref:System.Windows.Forms.Button> mit dem Namen `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Windows.Forms.FontDialog.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ausgewählte Schriftfarbe ab oder legt diese fest.</summary>
        <value>Die Farbe der ausgewählten Schriftart. Der Standardwert ist <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> zum Anzeigen einer <xref:System.Windows.Forms.FontDialog>. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.Form> wurde bereits mit einem <xref:System.Windows.Forms.TextBox> und Schaltfläche platziert sind. Sie erfordert außerdem, dass die `fontDialog1` erstellt wurde. Die <xref:System.Drawing.Font> der Größeninformationen aber nicht die Farbinformationen enthält.  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.FontDialog.Font" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
      </Docs>
    </Member>
    <Member MemberName="EventApply">
      <MemberSignature Language="C#" Value="protected static readonly object EventApply;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly object EventApply" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.FontDialog.EventApply" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly EventApply As Object " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Object ^ EventApply;" />
      <MemberSignature Language="F#" Value=" staticval mutable EventApply : obj" Usage="System.Windows.Forms.FontDialog.EventApply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Besitzt das <see cref="E:System.Windows.Forms.FontDialog.Apply" />-Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedPitchOnly">
      <MemberSignature Language="C#" Value="public bool FixedPitchOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedPitchOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedPitchOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedPitchOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FixedPitchOnly : bool with get, set" Usage="System.Windows.Forms.FontDialog.FixedPitchOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Dialogfeld nur Schriftarten mit fester Schriftbreite ausgewählt werden können, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn nur Schriftarten mit fester Schriftbreite ausgewählt werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FontMustExist" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.FontDialog.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ausgewählte Schriftart ab oder legt diese fest.</summary>
        <value>Die ausgewählte Schriftart.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> zum Anzeigen einer <xref:System.Windows.Forms.FontDialog>. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.Form> wurde bereits mit einem <xref:System.Windows.Forms.TextBox> und Schaltfläche platziert sind. Sie erfordert außerdem, dass die `fontDialog1` erstellt wurde. Die <xref:System.Drawing.Font> der Größeninformationen aber nicht die Farbinformationen enthält.  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.FontDialog.Color" />
      </Docs>
    </Member>
    <Member MemberName="FontMustExist">
      <MemberSignature Language="C#" Value="public bool FontMustExist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FontMustExist" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.FontMustExist" />
      <MemberSignature Language="VB.NET" Value="Public Property FontMustExist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FontMustExist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FontMustExist : bool with get, set" Usage="System.Windows.Forms.FontDialog.FontMustExist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Dialogfeld eine Fehlerbedingung angegeben wird, wenn der Benutzer eine nicht vorhandene Schriftart oder ein nicht vorhandenes Format auswählt, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn im Dialogfeld eine Fehlerbedingung angezeigt wird, wenn der Benutzer eine nicht vorhanden Schriftart bzw. ein nicht vorhandenes Format auswählt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> und <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> Mitglieder und Behandlung der <xref:System.Windows.Forms.FontDialog.Apply> Ereignis. Zum Ausführen dieses Beispiels fügen Sie den folgenden code in ein Formular mit einem <xref:System.Windows.Forms.FontDialog> mit dem Namen `FontDialog1` und <xref:System.Windows.Forms.Button> mit dem Namen `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance native int HookProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HookProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="override this.HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="fontDialog.HookProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">Das Handle für das Dialogfeldfenster.</param>
        <param name="msg">Die empfangene Meldung.</param>
        <param name="wparam">Zusätzliche Informationen zur Meldung.</param>
        <param name="lparam">Zusätzliche Informationen zur Meldung.</param>
        <summary>Gibt für Standarddialogfelder die Hookprozedur an, die überschrieben wird, um einem Standarddialogfeld bestimmte Funktionen hinzuzufügen.</summary>
        <returns>Ein Wert von 0, wenn die Meldung von der Prozedur für Standarddialogfelder verarbeitet wird. Ein Wert ungleich 0, wenn die Meldung von dieser Prozedur ignoriert wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Hookprozedur ist ein Mechanismus, mit dem eine Funktion Ereignisse abfangen kann, bevor sie eine Anwendung erreichen. Beim Überschreiben der <xref:System.Windows.Forms.CommonDialog.HookProc%2A?displayProperty=nameWithType> -Methode für eine <xref:System.Windows.Forms.CommonDialog> -Klasse, die das Betriebssystem ruft Ihre Überschreibung der Funktion können Sie Betriebssystem-Nachrichten an das Fenster zu senden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Windows.Forms.FontDialog.HookProc%2A> Methode. Das Beispiel besteht aus einer Klasse, erbt die <xref:System.Windows.Forms.FontDialog> Klasse. In der Klasse <xref:System.Windows.Forms.FontDialog.HookProc%2A> "Override", "im Beispiel wertet der Methode `msg` Parameter für konstante Werte für bestimmte Windows-Nachrichten. Wenn die `msg` Parameter gleich die angegebene Konstante ist, das Beispiel schreibt die Ausgabe der Ablaufverfolgung, identifiziert die Windows-Meldung, die übergeben wurde die <xref:System.Windows.Forms.FontDialog.HookProc%2A> Methode. In diesem Beispiel erfordert, dass die Klasse, in der die <xref:System.Windows.Forms.FontDialog.HookProc%2A> Methode deklariert ist, erbt die <xref:System.Windows.Forms.FontDialog> Klasse.  
  
 [!code-cpp[HookProc Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/HookProc Example/CPP/fontdialogoverride.cpp#1)]
 [!code-csharp[HookProc Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/HookProc Example/CS/fontdialogoverride.cs#1)]
 [!code-vb[HookProc Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/HookProc Example/VB/fontdialogoverride.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> Methode.</para></block>
        <altmember cref="T:System.Windows.Forms.CommonDialog" />
      </Docs>
    </Member>
    <Member MemberName="MaxSize">
      <MemberSignature Language="C#" Value="public int MaxSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.MaxSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxSize : int with get, set" Usage="System.Windows.Forms.FontDialog.MaxSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den größten Schriftgrad ab, den der Benutzer auswählen kann, oder legt diesen fest.</summary>
        <value>Der größte Schriftgrad, den der Benutzer auswählen kann. Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Damit die maximale und minimale größeneinstellungen wirksam <xref:System.Windows.Forms.FontDialog.MaxSize%2A> muss größer sein als <xref:System.Windows.Forms.FontDialog.MinSize%2A>, und beide müssen größer als 0 sein.  
  
 Versuche zum Festlegen dieser Eigenschaft auf Werte kleiner als 0 führt den Wert 0 verwendet wird. Setzen Sie <xref:System.Windows.Forms.FontDialog.MaxSize%2A> auf einen Wert kleiner als <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MinSize%2A> nastaven NA hodnotu <xref:System.Windows.Forms.FontDialog.MaxSize%2A>. Die Auswirkungen der Einstellung <xref:System.Windows.Forms.FontDialog.MinSize%2A> und <xref:System.Windows.Forms.FontDialog.MaxSize%2A> an, auf die gleichen Werte wird die Größe einer einzelnen Größe beschränken.  
  
 Wenn die Größe 0 ist, gibt es keine größenbeschränkungen Schriftart.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> und <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> Mitglieder und Behandlung der <xref:System.Windows.Forms.FontDialog.Apply> Ereignis. Zum Ausführen dieses Beispiels fügen Sie den folgenden code in ein Formular mit einem <xref:System.Windows.Forms.FontDialog> mit dem Namen `FontDialog1` und <xref:System.Windows.Forms.Button> mit dem Namen `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.MinSize" />
      </Docs>
    </Member>
    <Member MemberName="MinSize">
      <MemberSignature Language="C#" Value="public int MinSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.MinSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MinSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinSize : int with get, set" Usage="System.Windows.Forms.FontDialog.MinSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den kleinsten Schriftgrad ab, den der Benutzer auswählen kann, oder legt diesen fest.</summary>
        <value>Der kleinste Schriftgrad, den der Benutzer auswählen kann. Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Damit die maximale und minimale größeneinstellungen wirksam <xref:System.Windows.Forms.FontDialog.MaxSize%2A> muss größer sein als <xref:System.Windows.Forms.FontDialog.MinSize%2A>, und beide müssen größer als 0 sein.  
  
 Versuche zum Festlegen dieser Eigenschaft auf Werte kleiner als 0 führt den Wert 0 verwendet wird. Setzen Sie <xref:System.Windows.Forms.FontDialog.MinSize%2A> auf einen Wert größer als <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A> festgelegt ist, auf den Wert der <xref:System.Windows.Forms.FontDialog.MinSize%2A>. Die Auswirkungen der Einstellung <xref:System.Windows.Forms.FontDialog.MinSize%2A> und <xref:System.Windows.Forms.FontDialog.MaxSize%2A> auf den gleichen Wert ist, um die Größe einer einzelnen Größe beschränken.  
  
 Wenn die Größe 0 ist, gibt es keine größenbeschränkungen Schriftart.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> und <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> Mitglieder und Behandlung der <xref:System.Windows.Forms.FontDialog.Apply> Ereignis. Zum Ausführen dieses Beispiels fügen Sie den folgenden code in ein Formular mit einem <xref:System.Windows.Forms.FontDialog> mit dem Namen `FontDialog1` und <xref:System.Windows.Forms.Button> mit dem Namen `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.MaxSize" />
      </Docs>
    </Member>
    <Member MemberName="OnApply">
      <MemberSignature Language="C#" Value="protected virtual void OnApply (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApply(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApply (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApply(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnApply : EventArgs -&gt; unit&#xA;override this.OnApply : EventArgs -&gt; unit" Usage="fontDialog.OnApply e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz von <see cref="T:System.EventArgs" />, die die Daten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.FontDialog.Apply" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass der Basisklasse aufrufen <see cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" /> Methode.</para></block>
        <altmember cref="E:System.Windows.Forms.FontDialog.Apply" />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected int Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Options" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Options" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Options As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Options { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : int" Usage="System.Windows.Forms.FontDialog.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Werte für die Initialisierung von <see cref="T:System.Windows.Forms.FontDialog" /> ab.</summary>
        <value>Eine bitweise Kombination von internen Werten, die das <see cref="T:System.Windows.Forms.FontDialog" /> initialisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.FontDialog.Options%2A> Eigenschaft entspricht den Flags verwendet, um ein Dialogfeld mit Win32 zu initialisieren. Verwenden Sie die Eigenschaften der <xref:System.Windows.Forms.FontDialog> Klasse zum Abrufen und Festlegen der Options.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="fontDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt alle Optionen im Dialogfeld auf die Standardwerte zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Optionen zurücksetzen, die Durchstreichen, unterstreichen und die Farbe Effekte sind sind aktiviert. Die aufgeführten Schriftarten enthalten nur die Bildschirmschriftarten, die vom System unterstützt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hWndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hWndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RunDialog (hWndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool RunDialog(IntPtr hWndOwner);" />
      <MemberSignature Language="F#" Value="override this.RunDialog : nativeint -&gt; bool" Usage="fontDialog.RunDialog hWndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWndOwner">Das Fensterhandle des Besitzerfensters für das Standarddialogfeld.</param>
        <summary>Gibt ein Dateidialogfeld an.</summary>
        <returns><see langword="true" />, wenn das Dialogfeld erfolgreich ausgeführt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.FontDialog.RunDialog%2A> Methode wird aufgerufen, wenn der Benutzer das Dialogfeld Schriftart Ruft die <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptsOnly">
      <MemberSignature Language="C#" Value="public bool ScriptsOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScriptsOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptsOnly : bool with get, set" Usage="System.Windows.Forms.FontDialog.ScriptsOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Dialogfeld Schriftarten für alle Nicht-OEM-Zeichensätze und Symbolzeichensätze sowie der ANSI-Zeichensatz ausgewählt werden können, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn alle Nicht-OEM-Zeichensätze und Symbolzeichensätze sowie der ANSI-Zeichensatz ausgewählt werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
        <altmember cref="P:System.Windows.Forms.FontDialog.FontMustExist" />
      </Docs>
    </Member>
    <Member MemberName="ShowApply">
      <MemberSignature Language="C#" Value="public bool ShowApply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowApply" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowApply" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowApply As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowApply { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowApply : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowApply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Dialogfeld die Schaltfläche **Übernehmen** enthält, oder legt diesen fest.</summary>
        <value><see langword="true" /> Wenn das Dialogfeld enthält eine **übernehmen** Schaltfläche; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Auswahl in Anwenden einer <xref:System.Windows.Forms.FontDialog> auf den Text in eine <xref:System.Windows.Forms.RichTextBox>. In dieser Handler, der im Dialogfeld angezeigt, die im Beispiel initialisiert der <xref:System.Windows.Forms.FontDialog.ShowApply%2A> Eigenschaft `true` und zeigt dann die <xref:System.Windows.Forms.FontDialog>. In der <xref:System.Windows.Forms.FontDialog.Apply> -Ereignishandler der <xref:System.Windows.Forms.FontDialog.Font%2A> -Eigenschaft zugewiesen, die <xref:System.Windows.Forms.Control.Font%2A?displayProperty=nameWithType> Eigenschaft.  
  
 [!code-cpp[FontDialog.ShowApply#1](~/samples/snippets/cpp/VS_Snippets_Winforms/FontDialog.ShowApply/CPP/form1.cpp#1)]
 [!code-csharp[FontDialog.ShowApply#1](~/samples/snippets/csharp/VS_Snippets_Winforms/FontDialog.ShowApply/CS/form1.cs#1)]
 [!code-vb[FontDialog.ShowApply#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/FontDialog.ShowApply/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowColor">
      <MemberSignature Language="C#" Value="public bool ShowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowColor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowColor : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Dialogfeld die Farbauswahl angezeigt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn im Dialogfeld die Farbauswahl angezeigt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel verwendet <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> zum Anzeigen einer <xref:System.Windows.Forms.FontDialog>. Dieser Code erfordert, dass eine <xref:System.Windows.Forms.Form> wurde bereits mit einem <xref:System.Windows.Forms.TextBox> und Schaltfläche platziert sind. Sie erfordert außerdem, dass die `fontDialog1` erstellt wurde. Die <xref:System.Drawing.Font> der Größeninformationen aber nicht die Farbinformationen enthält.  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.Color" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowEffects">
      <MemberSignature Language="C#" Value="public bool ShowEffects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowEffects" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowEffects" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowEffects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowEffects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowEffects : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowEffects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Dialogfeld Steuerelemente enthält, mit denen der Benutzer Optionen zum Durchstreichen, Unterstreichen und für die Textfarbe angeben kann, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Dialogfeld Steuerelemente enthält, mit denen das Durchstreichen, Unterstreichen und die Textfarbe festgelegt werden können, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.FontDialog.MinSize%2A>, <xref:System.Windows.Forms.FontDialog.MaxSize%2A>, <xref:System.Windows.Forms.FontDialog.ShowEffects%2A> und <xref:System.Windows.Forms.FontDialog.FontMustExist%2A> Mitglieder und Behandlung der <xref:System.Windows.Forms.FontDialog.Apply> Ereignis. Zum Ausführen dieses Beispiels fügen Sie den folgenden code in ein Formular mit einem <xref:System.Windows.Forms.FontDialog> mit dem Namen `FontDialog1` und <xref:System.Windows.Forms.Button> mit dem Namen `Button1`.  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowHelp">
      <MemberSignature Language="C#" Value="public bool ShowHelp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHelp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowHelp" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowHelp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowHelp { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHelp : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob im Dialogfeld die Hilfeschaltfläche angezeigt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Dialogfeld die Schaltfläche Hilfe enthält, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="fontDialog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die den Namen der derzeit im Dialogfeld ausgewählten Schriftart enthält.</summary>
        <returns>Eine Zeichenfolge, die den Namen der derzeit ausgewählten Schriftart enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>