<Type Name="ToolStripControlHost" FullName="System.Windows.Forms.ToolStripControlHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="347863e6dd532ca8ce52828e7a0735f0becd4c55" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650954" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolStripControlHost : System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStripControlHost extends System.Windows.Forms.ToolStripItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripControlHost" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolStripControlHost&#xA;Inherits ToolStripItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripControlHost : System::Windows::Forms::ToolStripItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStripItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ea652-101">Hostet benutzerdefinierte Steuerelemente oder Windows Forms-Steuerelemente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ea652-101">Hosts custom controls or Windows Forms controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-102"><xref:System.Windows.Forms.ToolStripControlHost> ist die abstrakte Basisklasse für <xref:System.Windows.Forms.ToolStripComboBox>, <xref:System.Windows.Forms.ToolStripTextBox>, und <xref:System.Windows.Forms.ToolStripProgressBar>.</span><span class="sxs-lookup"><span data-stu-id="ea652-102"><xref:System.Windows.Forms.ToolStripControlHost> is the abstract base class for <xref:System.Windows.Forms.ToolStripComboBox>, <xref:System.Windows.Forms.ToolStripTextBox>, and <xref:System.Windows.Forms.ToolStripProgressBar>.</span></span> <span data-ttu-id="ea652-103"><xref:System.Windows.Forms.ToolStripControlHost> andere Steuerelemente, einschließlich der benutzerdefinierten Steuerelemente auf zwei Arten können gehostet werden:</span><span class="sxs-lookup"><span data-stu-id="ea652-103"><xref:System.Windows.Forms.ToolStripControlHost> can host other controls, including custom controls, in two ways:</span></span>  
  
-   <span data-ttu-id="ea652-104">Erstellen einer <xref:System.Windows.Forms.ToolStripControlHost> mit einer Klasse, die abgeleitet <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="ea652-104">Construct a <xref:System.Windows.Forms.ToolStripControlHost> with a class that derives from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="ea652-105">Um das gehostete Steuerelement und die Eigenschaften vollständig zugreifen zu können, müssen Sie eine Umwandlung der <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> Eigenschaft, um die tatsächliche Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="ea652-105">To fully access the hosted control and properties, you must cast the <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> property back to the actual class it represents.</span></span>  
  
-   <span data-ttu-id="ea652-106">Erweitern <xref:System.Windows.Forms.ToolStripControlHost>, und rufen Sie in der geerbten Klasse trivialen Konstruktor den Basisklassenkonstruktor, übergeben eine Klasse, die abgeleitet <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="ea652-106">Extend <xref:System.Windows.Forms.ToolStripControlHost>, and in the inherited class's default constructor, call the base class constructor passing a class that derives from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="ea652-107">Mit dieser Option können Sie allgemeine Steuerelementmethoden und Eigenschaften für den leichteren Zugriff im umschließen einer <xref:System.Windows.Forms.ToolStrip>.</span><span class="sxs-lookup"><span data-stu-id="ea652-107">This option lets you wrap common control methods and properties for easy access in a <xref:System.Windows.Forms.ToolStrip>.</span></span>  
  
 <span data-ttu-id="ea652-108">Verwenden der <xref:System.Windows.Forms.ToolStripControlHost> Klasse, um benutzerdefinierte Steuerelemente oder andere Windows Forms-Steuerelemente hosten.</span><span class="sxs-lookup"><span data-stu-id="ea652-108">Use the <xref:System.Windows.Forms.ToolStripControlHost> class to host your customized controls or any other Windows Forms control.</span></span>  
  
 <span data-ttu-id="ea652-109">Zum Anpassen einer <xref:System.Windows.Forms.ToolStripItem>, ableiten von <xref:System.Windows.Forms.ToolStripControlHost> , und erstellen Sie eine benutzerdefinierte Implementierung.</span><span class="sxs-lookup"><span data-stu-id="ea652-109">To customize a <xref:System.Windows.Forms.ToolStripItem>, derive from <xref:System.Windows.Forms.ToolStripControlHost> and create a custom implementation.</span></span> <span data-ttu-id="ea652-110">Sie können z. B. Methoden überschreiben <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> zum Behandeln von Ereignissen ausgelöst werden, durch den gehosteten Steuerelementen und Eigenschaften zur Verbesserung des gehosteten Steuerelements benutzerdefinierten Funktionalität abgelegt.</span><span class="sxs-lookup"><span data-stu-id="ea652-110">You can override methods such as <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> to handle events raised by the hosted controls, and you can put custom functionality into properties to enhance the hosted control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-111">Das folgende Codebeispiel veranschaulicht das Erstellen eines eine <xref:System.Windows.Forms.ToolStripControlHost> mit einer <xref:System.Windows.Forms.MonthCalendar> -Steuerelements mit <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> , Ereignisse und das Verfügbarmachen von einige seiner Member zum Behandeln der <xref:System.Windows.Forms.ToolStripControlHost>.</span><span class="sxs-lookup"><span data-stu-id="ea652-111">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> with a <xref:System.Windows.Forms.MonthCalendar> control, using <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> to handle events, and exposing some of its members to the <xref:System.Windows.Forms.ToolStripControlHost>.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#13)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#13)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#13)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-112">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ToolStripControlHost" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripControlHost (System.Windows.Forms.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripControlHost(System::Windows::Forms::Control ^ c);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="ea652-113">Das von dieser <see cref="T:System.Windows.Forms.Control" /> gehostete <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-113">The <see cref="T:System.Windows.Forms.Control" /> hosted by this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-114">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ToolStripControlHost" />-Klasse, die das angegebene Steuerelement hostet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class that hosts the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea652-115">Das folgende Codebeispiel veranschaulicht das Erstellen eines ein <xref:System.Windows.Forms.ToolStripControlHost> Steuerelement und mehrere Eigenschaften festlegen.</span><span class="sxs-lookup"><span data-stu-id="ea652-115">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and setting several properties.</span></span> <span data-ttu-id="ea652-116">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, enthält ein <xref:System.Windows.Forms.ToolStrip> mit dem Namen `toolStrip1` , und rufen Sie `InitializeDateTimePickerHost` aus den Konstruktor des Formulars oder der <xref:System.Windows.Forms.Form.Load> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="ea652-116">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the <xref:System.Windows.Forms.Form.Load> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ea652-117">Das Steuerelement, auf das der <paramref name="c" />-Parameter verweist, ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-117">The control referred to by the <paramref name="c" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripControlHost (System.Windows.Forms.Control c, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control c, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.#ctor(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Control, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripControlHost(System::Windows::Forms::Control ^ c, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="ea652-118">Das von dieser <see cref="T:System.Windows.Forms.Control" /> gehostete <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-118">The <see cref="T:System.Windows.Forms.Control" /> hosted by this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="ea652-119">Der Name des <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-119">The name of the <see cref="T:System.Windows.Forms.ToolStripControlHost" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-120">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ToolStripControlHost" />-Klasse, die das angegebene Steuerelement hostet und den angegebenen Namen aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> class that hosts the specified control and that has the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-121">Ruft die Hintergrundfarbe für das Steuerelement ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-121">Gets or sets the background color for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-122">Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe des Steuerelements darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-122">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span>
          </span>
          <span data-ttu-id="ea652-123">Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />-Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-123">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-124">Ruft das im Steuerelement angezeigte Hintergrundbild ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-124">Gets or sets the background image displayed in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-125">Ein <see cref="T:System.Drawing.Image" />, das das im Hintergrund des Steuerelements anzuzeigende Bild darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-125">An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-126">Ruft ab oder legt fest, welches Hintergrundbildlayout gemäß der Definition in der <see langword="ImageLayout" />-Enumeration verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-126">Gets or sets the background image layout as defined in the <see langword="ImageLayout" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-127">Einer der <see cref="T:System.Windows.Forms.ImageLayout" />-Werte:</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-127">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" />:</span>
          </span>  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.Center" />  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.None" />  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />  
  
-   <span data-ttu-id="ea652-128"><see cref="F:System.Windows.Forms.ImageLayout.Tile" /> (Standardwert)</span><span class="sxs-lookup"><span data-stu-id="ea652-128"><see cref="F:System.Windows.Forms.ImageLayout.Tile" /> (default)</span></span>  
  
-   <see cref="F:System.Windows.Forms.ImageLayout.Zoom" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public override bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSelect { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-129">Ruft einen Wert ab, der angibt, ob das Steuerelement ausgewählt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-129">Gets a value indicating whether the control can be selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-130">
            <see langword="true" />, wenn das Steuerelement ausgewählt werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-130">
              <see langword="true" /> if the control can be selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-131">Ruft einen Wert ab, der angibt, ob das gehostete Steuerelement Validierungsereignisse für andere Steuerelemente bewirkt und auslöst, wenn das gehostete Steuerelement den Fokus erhält, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-131">Gets or sets a value indicating whether the hosted control causes and raises validation events on other controls when the hosted control receives focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-132">
            <see langword="true" />, wenn das gehostete Steuerelement Validierungsereignisse für andere Steuerelemente bewirkt und auslöst, wenn das gehostete Steuerelement den Fokus erhält, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-132">
              <see langword="true" /> if the hosted control causes and raises validation events on other controls when the hosted control receives focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea652-133">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-133">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-134">Ruft das <see cref="T:System.Windows.Forms.Control" /> ab, das von diesem <see cref="T:System.Windows.Forms.ToolStripControlHost" /> gehostet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-134">Gets the <see cref="T:System.Windows.Forms.Control" /> that this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> is hosting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-135">Das <see cref="T:System.Windows.Forms.Control" />, das von diesem <see cref="T:System.Windows.Forms.ToolStripControlHost" /> gehostet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-135">The <see cref="T:System.Windows.Forms.Control" /> that this <see cref="T:System.Windows.Forms.ToolStripControlHost" /> is hosting.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea652-136">Das folgende Codebeispiel veranschaulicht das Erstellen eines eine <xref:System.Windows.Forms.ToolStripControlHost> steuern und legt eine Eigenschaft für das umschlossene Steuerelement mithilfe der <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="ea652-136">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and sets a property on the wrapped control using the <xref:System.Windows.Forms.ToolStripControlHost.Control%2A> property.</span></span> <span data-ttu-id="ea652-137">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, enthält ein <xref:System.Windows.Forms.ToolStrip> mit dem Namen `toolStrip1` , und rufen Sie `InitializeDateTimePickerHost` aus den Konstruktor des Formulars oder der `Load` -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="ea652-137">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the `Load` event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ControlAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ControlAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ControlAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ControlAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-138">Ruft die Ausrichtung des Steuerelements im Formular ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-138">Gets or sets the alignment of the control on the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-139">Einer der <see cref="T:System.Drawing.ContentAlignment" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-139">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
          <span data-ttu-id="ea652-140">Der Standardwert ist <see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-140">The default is <see cref="F:System.Drawing.ContentAlignment.MiddleCenter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-141">Verwenden der <xref:System.Windows.Forms.ToolStripControlHost.ControlAlign%2A> Eigenschaft zu bestimmen oder zu definieren, wie gehosteten Steuerelemente im Formular angeordnet werden, sind.</span><span class="sxs-lookup"><span data-stu-id="ea652-141">Use the <xref:System.Windows.Forms.ToolStripControlHost.ControlAlign%2A> property to determine or define how hosted controls are to be laid out on the form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="ea652-142">Die <see cref="P:System.Windows.Forms.ToolStripControlHost.ControlAlign" />-Eigenschaft ist auf einen Wert festgelegt, der keinen der <see cref="T:System.Drawing.ContentAlignment" />-Werte darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-142">The <see cref="P:System.Windows.Forms.ToolStripControlHost.ControlAlign" /> property is set to a value that is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ea652-143">Erstellt ein neues Objekt für die Barrierefreiheit für das Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-143">Creates a new accessibility object for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ea652-144">Ein neues <see cref="T:System.Windows.Forms.AccessibleObject" /> für das Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-144">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-145">Ruft die Standardgröße des Steuerelements ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-145">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-146">Die Standard-<see cref="T:System.Drawing.Size" /> des Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-146">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-147">Die <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> Eigenschaft stellt die <xref:System.Drawing.Size> des Steuerelements, wenn es ursprünglich erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="ea652-147">The <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created.</span></span> <span data-ttu-id="ea652-148">Wenn <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> ist `true`, das Steuerelement automatisch angepasst wird, in Abhängigkeit von der <xref:System.Windows.Forms.ToolStrip> Ausrichtung.</span><span class="sxs-lookup"><span data-stu-id="ea652-148">If <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> is `true`, the control is sized automatically in accordance with the <xref:System.Windows.Forms.ToolStrip> orientation.</span></span> <span data-ttu-id="ea652-149">Sie können die Größe des Steuerelements manuell anpassen, indem Sie festlegen seiner <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> Eigenschaftswert an `false`.</span><span class="sxs-lookup"><span data-stu-id="ea652-149">You can manually adjust the size of the control by setting its <xref:System.Windows.Forms.ToolStripItem.AutoSize%2A> property value to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ea652-150">Sie sollten nicht festlegen, um eine bessere Leistung zu gewährleisten, die <xref:System.Drawing.Size> eines Steuerelements in seinem Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="ea652-150">In order to maintain better performance, you should not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="ea652-151">Die bevorzugte Methode ist, überschreiben die <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="ea652-151">The preferred method is to override the <xref:System.Windows.Forms.ToolStripControlHost.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-152">Zum Überschreiben der <see cref="P:System.Windows.Forms.ToolStripControlHost.DefaultSize" /> -Eigenschaft in einer abgeleiteten Klasse, ist es besser, zum Zurückgeben einer <see cref="T:System.Drawing.Size" /> mit den gewünschten Dimensionen dem Überschreiben der gesamten Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-152">When overriding the <see cref="P:System.Windows.Forms.ToolStripControlHost.DefaultSize" /> property in a derived class, it is preferable to return a <see cref="T:System.Drawing.Size" /> with the desired dimensions rather than overriding all the implementation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemDisplayStyle DisplayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.DisplayStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStyle As ToolStripItemDisplayStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemDisplayStyle DisplayStyle { System::Windows::Forms::ToolStripItemDisplayStyle get(); void set(System::Windows::Forms::ToolStripItemDisplayStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemDisplayStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-153">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-153">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-154">Das Anzeigenformat des Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-154">The display style of the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-155">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-155">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.DisplayStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DisplayStyleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-156">Dieses Ereignis ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-156">This event is not relevant to this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-157">Dieses Ereignis ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-157">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ea652-158">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-158">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-159">Gibt die von <see cref="T:System.Windows.Forms.ToolStripControlHost" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-159">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ToolStripControlHost" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-160">Diese Methode wird aufgerufen, der öffentlich `Dispose` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="ea652-160">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="ea652-161">`Dispose` Ruft die geschützte `Dispose(Boolean)` Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="ea652-161">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ea652-162"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="ea652-162"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ea652-163">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Windows.Forms.ToolStripControlHost> verweist.</span><span class="sxs-lookup"><span data-stu-id="ea652-163">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ToolStripControlHost> references.</span></span> <span data-ttu-id="ea652-164">Diese Methode ruft die `Dispose`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="ea652-164">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-165">
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-165">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="ea652-166">Beim Überschreiben von <see langword="Dispose(Boolean)" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see langword="Dispose" /> freigegeben wurden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-166">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="ea652-167">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-167">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="ea652-168">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-168">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoubleClickEnabled">
      <MemberSignature Language="C#" Value="public bool DoubleClickEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleClickEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.DoubleClickEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DoubleClickEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoubleClickEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-169">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-169">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-170">
            <see langword="true" />, wenn das Doppelklicken aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-170">
              <see langword="true" /> if double clicking is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-171">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-171">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public override bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-172">Ruft einen Wert ab, der angibt, ob das übergeordnete Steuerelement des <see cref="T:System.Windows.Forms.ToolStripItem" /> aktiviert ist, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-172">Gets or sets a value indicating whether the parent control of the <see cref="T:System.Windows.Forms.ToolStripItem" /> is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-173">
            <see langword="true" />, wenn das übergeordnete Steuerelement der <see cref="T:System.Windows.Forms.ToolStripItem" />-Klasse aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-173">
              <see langword="true" /> if the parent control of the <see cref="T:System.Windows.Forms.ToolStripItem" /> is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ea652-174">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-174">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Enter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Enter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Enter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-175">Tritt beim Eintreten in den Bereich des gehosteten Steuerelements ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-175">Occurs when the hosted control is entered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-176">Weitere Informationen über Delegaten für Ereignishandler finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-176">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-177">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="ea652-177">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ea652-178">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolStripControlHost.Enter> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-178">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Enter> event.</span></span> <span data-ttu-id="ea652-179">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="ea652-179">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ea652-180">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ea652-180">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ea652-181">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolStripControlHost> mit dem Namen `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="ea652-181">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="ea652-182">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolStripControlHost.Enter> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-182">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Enter> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#569](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#569)]
 [!code-vb[System.Windows.Forms.EventExamples#569](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#569)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ea652-183">Gibt einem Steuerelement den Fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-183">Gives the focus to a control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public virtual bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-184">Ruft einen Wert ab, der angibt, ob das Steuerelement den Eingabefokus besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-184">Gets a value indicating whether the control has input focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-185">
            <see langword="true" />, wenn das Steuerelement den Eingabefokus besitzt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-185">
              <see langword="true" /> if the control has input focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-186">Ruft die Schriftart ab, die im gehosteten Steuerelement verwendet werden soll, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-186">Gets or sets the font to be used on the hosted control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-187">Der <see cref="T:System.Drawing.Font" /> für dieses Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-187">The <see cref="T:System.Drawing.Font" /> for the hosted control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea652-188">Das folgende Codebeispiel veranschaulicht das Erstellen eines ein <xref:System.Windows.Forms.ToolStripControlHost> Steuerelement und mehrere Eigenschaften festlegen.</span><span class="sxs-lookup"><span data-stu-id="ea652-188">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and setting several properties.</span></span> <span data-ttu-id="ea652-189">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, enthält ein <xref:System.Windows.Forms.ToolStrip> mit dem Namen `toolStrip1` , und rufen Sie `InitializeDateTimePickerHost` aus den Konstruktor des Formulars oder der `Load` -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="ea652-189">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the `Load` event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-190">Ruft die Vordergrundfarbe des gehosteten Steuerelements ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-190">Gets or sets the foreground color of the hosted control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-191">Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe des gehosteten Steuerelements darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-191">A <see cref="T:System.Drawing.Color" /> representing the foreground color of the hosted control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size GetPreferredSize (System.Drawing.Size constrainingSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size constrainingSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreferredSize (constrainingSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Size constrainingSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constrainingSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="constrainingSize">
          <span data-ttu-id="ea652-192">Der Bereich mit benutzerdefinierter Größe eines Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-192">The custom-sized area for a control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-193">Ruft die Größe eines rechteckigen Bereichs ab, in den ein Steuerelement eingefügt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-193">Retrieves the size of a rectangular area into which a control can be fitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ea652-194">Ein geordnetes Paar vom Typ <see cref="T:System.Drawing.Size" />, das die Breite und Höhe eines Rechtecks darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-194">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event EventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-195">Tritt ein, wenn das gehostete Steuerelement den Fokus erhält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-195">Occurs when the hosted control receives focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-196">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-196">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-197">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="ea652-197">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ea652-198">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-198">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> event.</span></span> <span data-ttu-id="ea652-199">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="ea652-199">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="ea652-200">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolStripControlHost> mit dem Namen `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="ea652-200">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="ea652-201">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-201">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.GotFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#570](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#570)]
 [!code-vb[System.Windows.Forms.EventExamples#570](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#570)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-202">Das mit dem Objekt verknüpfte Bild.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-202">The image associated with the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-203">Das Bild des gehosteten Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-203">The image of the hosted control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-204">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-204">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ImageAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ImageAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ImageAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ImageAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-205">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-205">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-206">Die Imageausrichtung für das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-206">The image alignment for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-207">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-207">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageScaling">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ToolStripItemImageScaling ImageScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripItemImageScaling ImageScaling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ImageScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageScaling As ToolStripItemImageScaling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ToolStripItemImageScaling ImageScaling { System::Windows::Forms::ToolStripItemImageScaling get(); void set(System::Windows::Forms::ToolStripItemImageScaling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripItemImageScaling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-208">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-208">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-209">
            <see langword="true" />, wenn ein Bild auf einem ToolStripItem automatisch angepasst wird, um in einen Container zu passen; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-209">
              <see langword="true" /> if an image on a ToolStripItem is automatically resized to fit in a container; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-210">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-210">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.ImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-211">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-211">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-212">Die transparente Farbe des Bilds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-212">The transparent color of the image.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-213">Die Farbe an, in dem Objekt als transparent behandelt.</span><span class="sxs-lookup"><span data-stu-id="ea652-213">The color to treat as transparent in the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-214">Tritt ein, wenn eine Taste gedrückt gehalten wird, während das gehostete Steuerelement den Fokus besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-214">Occurs when a key is pressed and held down while the hosted control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-215">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-215">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-216">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="ea652-216">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ea652-217">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-217">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> event.</span></span> <span data-ttu-id="ea652-218">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="ea652-218">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ea652-219">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ea652-219">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ea652-220">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolStripControlHost> mit dem Namen `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="ea652-220">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="ea652-221">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-221">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.KeyDown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#573](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#573)]
 [!code-vb[System.Windows.Forms.EventExamples#573](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#573)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As KeyPressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyPressEventHandler ^ KeyPress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-222">Tritt ein, wenn eine Taste gedrückt wird, während das gehostete Steuerelement den Fokus besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-222">Occurs when a key is pressed while the hosted control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-223">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-223">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-224">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="ea652-224">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ea652-225">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-225">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> event.</span></span> <span data-ttu-id="ea652-226">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="ea652-226">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ea652-227">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ea652-227">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ea652-228">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolStripControlHost> mit dem Namen `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="ea652-228">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="ea652-229">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-229">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.KeyPress> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#574](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#574)]
 [!code-vb[System.Windows.Forms.EventExamples#574](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#574)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-230">Tritt ein, wenn eine Taste losgelassen wird, während das gehostete Steuerelement den Fokus besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-230">Occurs when a key is released while the hosted control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-231">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-231">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-232">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="ea652-232">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ea652-233">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-233">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> event.</span></span> <span data-ttu-id="ea652-234">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="ea652-234">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ea652-235">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ea652-235">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ea652-236">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolStripControlHost> mit dem Namen `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="ea652-236">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="ea652-237">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-237">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.KeyUp> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#575](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#575)]
 [!code-vb[System.Windows.Forms.EventExamples#575](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#575)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Leave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Leave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-238">Tritt ein, wenn der Eingabefokus das gehostete Steuerelement verlässt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-238">Occurs when the input focus leaves the hosted control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-239">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-239">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-240">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="ea652-240">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ea652-241">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolStripControlHost.Leave> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-241">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Leave> event.</span></span> <span data-ttu-id="ea652-242">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="ea652-242">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ea652-243">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ea652-243">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ea652-244">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolStripControlHost> mit dem Namen `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="ea652-244">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="ea652-245">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolStripControlHost.Leave> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-245">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Leave> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#571](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#571)]
 [!code-vb[System.Windows.Forms.EventExamples#571](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#571)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event EventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-246">Tritt ein, wenn das gehostete Steuerelement den Fokus verliert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-246">Occurs when the hosted control loses focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-247">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-247">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-248">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="ea652-248">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ea652-249">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-249">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> event.</span></span> <span data-ttu-id="ea652-250">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="ea652-250">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="ea652-251">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolStripControlHost> mit dem Namen `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="ea652-251">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="ea652-252">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-252">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.LostFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#572](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#572)]
 [!code-vb[System.Windows.Forms.EventExamples#572](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#572)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnBoundsChanged">
      <MemberSignature Language="C#" Value="protected override void OnBoundsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBoundsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBoundsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBoundsChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ea652-253">Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.ToolStripItem.Bounds" />-Eigenschaft ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-253">Occurs when the <see cref="P:System.Windows.Forms.ToolStripItem.Bounds" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-254">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-254">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-255">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-255">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-256">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-256">The <xref:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-257">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-257">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-258">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-258">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnBoundsChanged" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.ToolStripItem.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-259">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-259">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-260">Löst das <see cref="E:System.Windows.Forms.ToolStripControlHost.Enter" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-260">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Enter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-261">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-261">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-262">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-262">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-263">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnEnter%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-263">The <xref:System.Windows.Forms.ToolStripControlHost.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-264">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-264">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-265">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-265">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-266">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-266">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-267">Löst das <see cref="E:System.Windows.Forms.ToolStripControlHost.GotFocus" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-267">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.GotFocus" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-268">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-268">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-269">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-269">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-270">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnGotFocus%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-270">The <xref:System.Windows.Forms.ToolStripControlHost.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-271">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-271">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-272">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-272">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHostedControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnHostedControlResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHostedControlResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHostedControlResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHostedControlResize(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-273">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-273">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-274">Synchronisiert die Größenänderung des Steuerelementhosts mit der Größenänderung des gehosteten Steuerelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-274">Synchronizes the resizing of the control host with the resizing of the hosted control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-275">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-275">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-276">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-276">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-277">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-277">The <xref:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-278">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-278">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-279">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-279">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnHostedControlResize(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-280">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-280">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-281">Löst das <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyDown" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-281">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-282">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-282">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-283">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-283">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-284">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnKeyDown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-284">The <xref:System.Windows.Forms.ToolStripControlHost.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-285">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-285">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-286">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-286">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-287">Ein <see cref="T:System.Windows.Forms.KeyPressEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-287">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-288">Löst das <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyPress" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-288">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyPress" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-289">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-289">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-290">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-290">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-291">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnKeyPress%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-291">The <xref:System.Windows.Forms.ToolStripControlHost.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-292">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-292">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-293">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-293">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-294">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-294">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-295">Löst das <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyUp" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-295">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.KeyUp" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-296">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-296">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-297">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-297">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-298">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnKeyUp%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-298">The <xref:System.Windows.Forms.ToolStripControlHost.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-299">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-299">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-300">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-300">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected internal override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-301">Ein <see cref="T:System.Windows.Forms.LayoutEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-301">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-302">Löst das <see cref="E:System.Windows.Forms.Control.Layout" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-302">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-303">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-303">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-304">Löst das <see cref="E:System.Windows.Forms.ToolStripControlHost.Leave" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-304">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Leave" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-305">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-305">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-306">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-306">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-307">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-307">The <xref:System.Windows.Forms.ToolStripControlHost.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-308">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-308">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-309">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-309">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-310">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-310">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-311">Löst das <see cref="E:System.Windows.Forms.ToolStripControlHost.LostFocus" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-311">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.LostFocus" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-312">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-312">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-313">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-313">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-314">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnLostFocus%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-314">The <xref:System.Windows.Forms.ToolStripControlHost.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-315">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-315">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-316">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-316">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-317">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-317">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-318">Löst das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-318">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (System.Windows.Forms.ToolStrip oldParent, System.Windows.Forms.ToolStrip newParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.Windows.Forms.ToolStrip oldParent, class System.Windows.Forms.ToolStrip newParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (oldParent As ToolStrip, newParent As ToolStrip)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(System::Windows::Forms::ToolStrip ^ oldParent, System::Windows::Forms::ToolStrip ^ newParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="newParent" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="ea652-319">Das ursprüngliche dem Element übergeordnete Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-319">The original parent of the item.</span>
          </span>
        </param>
        <param name="newParent">
          <span data-ttu-id="ea652-320">Das neue dem Element übergeordnete Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-320">The new parent of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-321">Löst das <see cref="E:System.Windows.Forms.Control.ParentChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-321">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.OnParentChanged(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected virtual void OnSubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="ea652-322">Das Steuerelement, von dem Ereignisse abonniert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-322">The control from which to subscribe events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-323">Abonniert Ereignisse vom gehosteten Steuerelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-323">Subscribes events from the hosted control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-324">Überschreiben Sie die <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> Methode, um hinzuzufügen oder zu verhindern, dass das Synchronisieren von Ereignissen.</span><span class="sxs-lookup"><span data-stu-id="ea652-324">Override the <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> method to add or prevent the synchronizing of control events.</span></span>  
  
 <span data-ttu-id="ea652-325">Wenn Sie außer Kraft setzen und von Ereignissen hier einbinden, lösen Sie diese mithilfe der <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="ea652-325">If you override and hook up events here, unhook them by using the <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> method.</span></span>  
  
 <span data-ttu-id="ea652-326">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-326">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-327">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-327">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-328">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-328">The <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-329">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-329">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-330">Im folgenden Codebeispiel wird veranschaulicht, wie zum Einrichten der Ereignisbehandlung für ein Ereignis, das vom gehosteten Steuerelement verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="ea652-330">The following code example demonstrates how to set up event handling for an event exposed by the hosted control.</span></span> <span data-ttu-id="ea652-331">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.ToolStripControlHost> Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-331">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripControlHost> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#14)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#14)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-332">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-332">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUnsubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected virtual void OnUnsubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnsubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnsubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="ea652-333">Das Steuerelement, für das das Abonnement von Ereignissen aufgehoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-333">The control from which to unsubscribe events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-334">Hebt das Abonnement von Ereignissen vom gehosteten Steuerelement auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-334">Unsubscribes events from the hosted control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-335">Überschreiben Sie die <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> -Methode das Abonnement von Ereignissen abonniert <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="ea652-335">Override the <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> method to unsubscribe events subscribed in <xref:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents%2A>.</span></span>  
  
 <span data-ttu-id="ea652-336">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-336">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-337">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-337">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-338">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-338">The <xref:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-339">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-339">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-340">Im folgenden Codebeispiel wird veranschaulicht, wie zum Abbestellen von einem Ereignis, das vom gehosteten Steuerelement verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="ea652-340">The following code example demonstrates how to unsubscribe from an event exposed by the hosted control.</span></span> <span data-ttu-id="ea652-341">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.ToolStripControlHost> Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-341">This code example is part of a larger example provided for the <xref:System.Windows.Forms.ToolStripControlHost> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#15)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#15)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-342">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-342">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnValidated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-343">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-343">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-344">Löst das <see cref="E:System.Windows.Forms.ToolStripControlHost.Validated" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-344">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Validated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-345">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-345">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-346">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-346">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-347">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnValidated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-347">The <xref:System.Windows.Forms.ToolStripControlHost.OnValidated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-348">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-348">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-349">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-349">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidated(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ea652-350">Ein <see cref="T:System.ComponentModel.CancelEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-350">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-351">Löst das <see cref="E:System.Windows.Forms.ToolStripControlHost.Validating" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-351">Raises the <see cref="E:System.Windows.Forms.ToolStripControlHost.Validating" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-352">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ea652-352">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="ea652-353">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-353">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="ea652-354">Mit der <xref:System.Windows.Forms.ToolStripControlHost.OnValidating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="ea652-354">The <xref:System.Windows.Forms.ToolStripControlHost.OnValidating%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="ea652-355">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ea652-355">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ea652-356">Wenn Sie <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="ea652-356">When overriding <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ToolStripControlHost.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="ea652-357">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-357">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="ea652-358">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-358">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-359">Verarbeitet eine Befehlstaste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-359">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ea652-360">
            <see langword="false" /> in allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-360">
              <see langword="false" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ea652-361">für den unmittelbaren Aufrufer und erbende Klassen zum Aufrufen dieser Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-361">for the immediate caller and inheriting classes to call this method.</span>
          </span>
          <span data-ttu-id="ea652-362">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-362">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="ea652-363">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-363">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-364">Verarbeitet eine Tastatureingabe im Dialogfeld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-364">Processes a dialog key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ea652-365">
            <see langword="true" />, wenn die Taste vom Element verarbeitet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-365">
              <see langword="true" /> if the key was processed by the item; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="ea652-366">Das zu verarbeitende Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-366">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-367">Verarbeitet ein mnemonisches Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-367">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ea652-368">
            <see langword="true" />, wenn das Zeichen als mnemonisches Zeichen vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-368">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public override void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetBackColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ea652-369">Diese Methode ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-369">This method is not relevant to this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-370">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-370">This method is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public override void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetForeColor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ea652-371">Diese Methode ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-371">This method is not relevant to this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-372">Diese Methode ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-372">This method is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-373">Ruft einen Wert ab, der angibt, ob Elemente des Steuerelements für die Unterstützung von Gebietsschemas ausgerichtet sind, die von rechts nach links geschriebene Schriftarten verwenden, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-373">Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-374">Einer der <see cref="T:System.Windows.Forms.RightToLeft" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-374">One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span>
          </span>
          <span data-ttu-id="ea652-375">Der Standardwert ist <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-375">The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftAutoMirrorImage">
      <MemberSignature Language="C#" Value="public bool RightToLeftAutoMirrorImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftAutoMirrorImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.RightToLeftAutoMirrorImage" />
      <MemberSignature Language="VB.NET" Value="Public Property RightToLeftAutoMirrorImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RightToLeftAutoMirrorImage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-376">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-376">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-377">
            <see langword="true" />, wenn das Bild gespiegelt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-377">
              <see langword="true" /> if the image is mirrored; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-378">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-378">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override bool Selected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-379">Ruft einen Wert ab, der angibt, ob das Element ausgewählt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-379">Gets a value indicating whether the item is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-380">
            <see langword="true" />, wenn das <see cref="T:System.Windows.Forms.ToolStripItem" /> ausgewählt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-380">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.ToolStripItem" /> is selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripControlHost.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool visible);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">
          <span data-ttu-id="ea652-381">
            <see langword="true" />, um das ToolStripItem-Objekt sichtbar zu machen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-381">
              <see langword="true" /> to make the ToolStripItem visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ea652-382">Legt die <see cref="T:System.Windows.Forms.ToolStripItem" /> auf den angegebenen sichtbaren Zustand fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-382">Sets the <see cref="T:System.Windows.Forms.ToolStripItem" /> to the specified visible state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripItem.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-383">Ruft die Site des gehosteten Steuerelements ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-383">Gets or sets the site of the hosted control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-384">Die dem Steuerelement zugeordnete <see cref="T:System.ComponentModel.ISite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-384">The <see cref="T:System.ComponentModel.ISite" /> associated with the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-385">Ruft die Größe des <see cref="T:System.Windows.Forms.ToolStripItem" /> ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-385">Gets or sets the size of the <see cref="T:System.Windows.Forms.ToolStripItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-386">Ein geordnetes Paar vom Typ <see cref="T:System.Drawing.Size" />, das die Breite und Höhe eines Rechtecks darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-386">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-387">Ruft den im gehosteten Steuerelement anzuzeigenden Text ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-387">Gets or sets the text to be displayed on the hosted control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-388">Ein <see cref="T:System.String" />, der den Text darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-388">A <see cref="T:System.String" /> representing the text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ea652-389">Das folgende Codebeispiel veranschaulicht das Erstellen eines ein <xref:System.Windows.Forms.ToolStripControlHost> Steuerelement und mehrere Eigenschaften festlegen.</span><span class="sxs-lookup"><span data-stu-id="ea652-389">The following code example demonstrates constructing a <xref:System.Windows.Forms.ToolStripControlHost> control and setting several properties.</span></span> <span data-ttu-id="ea652-390">Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, enthält ein <xref:System.Windows.Forms.ToolStrip> mit dem Namen `toolStrip1` , und rufen Sie `InitializeDateTimePickerHost` aus den Konstruktor des Formulars oder der `Load` -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="ea652-390">To run this example, paste the code into a form that contains a <xref:System.Windows.Forms.ToolStrip> named `toolStrip1` and call `InitializeDateTimePickerHost` from the form's constructor or the `Load` event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripControlHost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripControlHost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-391">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-391">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-392">Die Textausrichtungseigenschaft für das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-392">The text alignment property for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-393">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-393">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDirection">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ToolStripTextDirection TextDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ToolStripTextDirection TextDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.TextDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TextDirection As ToolStripTextDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolStripTextDirection TextDirection { System::Windows::Forms::ToolStripTextDirection get(); void set(System::Windows::Forms::ToolStripTextDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripTextDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-394">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-394">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-395">Die Textrichtung des Toolstreifens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-395">The text direction of the tool strip.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-396">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-396">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextImageRelation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TextImageRelation TextImageRelation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TextImageRelation TextImageRelation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripControlHost.TextImageRelation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextImageRelation As TextImageRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TextImageRelation TextImageRelation { System::Windows::Forms::TextImageRelation get(); void set(System::Windows::Forms::TextImageRelation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextImageRelation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-397">Diese Eigenschaft ist für diese Klasse nicht relevant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-397">This property is not relevant to this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ea652-398">Die Beziehung eines Textimages mit dem Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-398">The relation of a text image with the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-399">Diese Eigenschaft ist für diese Klasse nicht relevant.</span><span class="sxs-lookup"><span data-stu-id="ea652-399">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validated">
      <MemberSignature Language="C#" Value="public event EventHandler Validated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Validated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Validated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Validated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-400">Tritt ein, nachdem das gehostete Steuerelement erfolgreich validiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-400">Occurs after the hosted control has been successfully validated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-401">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-401">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-402">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="ea652-402">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ea652-403">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolStripControlHost.Validated> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-403">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Validated> event.</span></span> <span data-ttu-id="ea652-404">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="ea652-404">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ea652-405">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ea652-405">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ea652-406">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolStripControlHost> mit dem Namen `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="ea652-406">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="ea652-407">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolStripControlHost.Validated> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-407">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Validated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#577](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#577)]
 [!code-vb[System.Windows.Forms.EventExamples#577](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#577)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Validating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Validating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripControlHost.Validating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validating As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Validating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ea652-408">Tritt ein, während das gehostete Steuerelement validiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ea652-408">Occurs while the hosted control is validating.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea652-409">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="ea652-409">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea652-410">Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="ea652-410">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="ea652-411">Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.ToolStripControlHost.Validating> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-411">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripControlHost.Validating> event.</span></span> <span data-ttu-id="ea652-412">Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen.</span><span class="sxs-lookup"><span data-stu-id="ea652-412">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="ea652-413">Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="ea652-413">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="ea652-414">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.ToolStripControlHost> mit dem Namen `ToolStripControlHost1`.</span><span class="sxs-lookup"><span data-stu-id="ea652-414">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripControlHost> named `ToolStripControlHost1`.</span></span> <span data-ttu-id="ea652-415">Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ToolStripControlHost.Validating> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ea652-415">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripControlHost.Validating> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#576](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#576)]
 [!code-vb[System.Windows.Forms.EventExamples#576](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#576)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
  </Members>
</Type>