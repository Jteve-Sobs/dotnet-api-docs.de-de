<Type Name="MouseEventArgs" FullName="System.Windows.Forms.MouseEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b04576e48cdd3a56d68bf89173e86cffa286b18" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86982695" /></Metadata><TypeSignature Language="C#" Value="public class MouseEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MouseEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type MouseEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fe0ca-101">Stellt Daten für das <see cref="E:System.Windows.Forms.Control.MouseUp" />-Ereignis, das <see cref="E:System.Windows.Forms.Control.MouseDown" />-Ereignis und das <see cref="E:System.Windows.Forms.Control.MouseMove" />-Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-101">Provides data for the <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" />, and <see cref="E:System.Windows.Forms.Control.MouseMove" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0ca-102">Das <xref:System.Windows.Forms.Control.MouseDown> Ereignis tritt auf, wenn der Benutzer die Maustaste drückt, während sich der Mauszeiger über einem Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-102">The <xref:System.Windows.Forms.Control.MouseDown> event occurs when the user presses the mouse button while the pointer is over a control.</span></span> <span data-ttu-id="fe0ca-103">Das <xref:System.Windows.Forms.Control.MouseUp> Ereignis tritt auf, wenn der Benutzer die Maustaste loslässt, während sich der Mauszeiger über dem Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-103">The <xref:System.Windows.Forms.Control.MouseUp> event occurs when the user releases the mouse button while the pointer remains over the control.</span></span> <span data-ttu-id="fe0ca-104">Das <xref:System.Windows.Forms.Control.MouseMove> Ereignis tritt auf, wenn der Benutzer den Mauszeiger über ein Steuerelement bewegt.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-104">The <xref:System.Windows.Forms.Control.MouseMove> event occurs when the user moves the mouse pointer over a control.</span></span> <span data-ttu-id="fe0ca-105">Ein <xref:System.Windows.Forms.MouseEventArgs> gibt an, welche Maustaste gedrückt wird, wie oft die Maustaste gedrückt und losgelassen wurde, die Koordinaten der Maus und der Betrag, um den das Mausrad verschoben wurde.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-105">A <xref:System.Windows.Forms.MouseEventArgs> specifies which mouse button is pressed, how many times the mouse button was pressed and released, the coordinates of the mouse, and the amount the mouse wheel moved.</span></span>  
  
 <span data-ttu-id="fe0ca-106">Es ist möglich, ein- <xref:System.Windows.Forms.Control.MouseDown> Ereignis ohne einen entsprechenden <xref:System.Windows.Forms.Control.MouseUp> zu empfangen, wenn der Benutzer den Fokus auf eine andere Anwendung schaltet, bevor die Maustaste losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-106">It is possible to receive a <xref:System.Windows.Forms.Control.MouseDown> event without a corresponding <xref:System.Windows.Forms.Control.MouseUp>, if the user switches focus to another application before releasing the mouse button.</span></span>  
  
 <span data-ttu-id="fe0ca-107">Diese drei Ereignisse sind für die <xref:System.Windows.Forms.Control> <xref:System.Windows.Forms.AxHost> Klassen, und vorhanden <xref:System.Windows.Forms.NotifyIcon> .</span><span class="sxs-lookup"><span data-stu-id="fe0ca-107">These three events exist for the <xref:System.Windows.Forms.Control>, <xref:System.Windows.Forms.AxHost>, and <xref:System.Windows.Forms.NotifyIcon> classes.</span></span>  
  
 <span data-ttu-id="fe0ca-108">Weitere Informationen zum Ereignis Modell finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="fe0ca-108">For information about the event model, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0ca-109">In den folgenden Codebeispielen wird das- <xref:System.Windows.Forms.Control.MouseDown> Ereignis auf einem-Steuerelement behandelt <xref:System.Windows.Forms.TextBox> , sodass durch Klicken auf die Rechte Maustaste der gesamte Text im-Steuerelement ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-109">The following code examples handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control.</span></span> <span data-ttu-id="fe0ca-110">Für dieses Beispiel ist es erforderlich, dass Sie über ein Formular verfügen, das ein Steuerelement mit dem <xref:System.Windows.Forms.TextBox> Namen enthält `textBox1` .</span><span class="sxs-lookup"><span data-stu-id="fe0ca-110">This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control that is named `textBox1`.</span></span>  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 <span data-ttu-id="fe0ca-111">Im folgenden Codebeispiel wird die `Location` -Eigenschaft verwendet, um Klicks mit der linken Maustaste zu verfolgen und eine Reihe von geraden Liniensegmenten als Reaktion auf Benutzereingaben zu zeichnen.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-111">The following code example uses the `Location` property to track clicks of the left mouse button and to draw a series of straight line segments in response to user input.</span></span> <span data-ttu-id="fe0ca-112">Im Beispiel werden die Zeilen nicht neu gezeichnet, wenn Sie das Formular ausblenden und dann erneut anzeigen. Dieser Code wurde aus Gründen der Einfachheit ausgelassen.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-112">The example does not redraw the lines if you hide the form and then redisplay it; this code has been omitted for simplicity.</span></span>  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 <span data-ttu-id="fe0ca-113">Im folgenden Codebeispiel werden die <xref:System.Windows.Forms.MouseEventArgs.X%2A> -Eigenschaft und die-Eigenschaft verwendet <xref:System.Windows.Forms.MouseEventArgs.Y%2A> , um die aktuelle Position des Mauszeigers in einem <xref:System.Windows.Forms.ToolTip> Fenster anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-113">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
    <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseDown" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseUp" />
    <altmember cref="E:System.Windows.Forms.NotifyIcon.MouseMove" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseEventArgs (System.Windows.Forms.MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.MouseButtons button, int32 clicks, int32 x, int32 y, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (button As MouseButtons, clicks As Integer, x As Integer, y As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseEventArgs(System::Windows::Forms::MouseButtons button, int clicks, int x, int y, int delta);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MouseEventArgs : System.Windows.Forms.MouseButtons * int * int * int * int -&gt; System.Windows.Forms.MouseEventArgs" Usage="new System.Windows.Forms.MouseEventArgs (button, clicks, x, y, delta)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.MouseButtons" />
        <Parameter Name="clicks" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="fe0ca-114">Einer der <see cref="T:System.Windows.Forms.MouseButtons" />-Werte, der angibt, welche Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-114">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values that indicate which mouse button was pressed.</span></span></param>
        <param name="clicks"><span data-ttu-id="fe0ca-115">Gibt an, wie oft die Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-115">The number of times a mouse button was pressed.</span></span></param>
        <param name="x"><span data-ttu-id="fe0ca-116">Die x-Koordinate eines Mausklicks in Pixel.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-116">The x-coordinate of a mouse click, in pixels.</span></span></param>
        <param name="y"><span data-ttu-id="fe0ca-117">Die y-Koordinate eines Mausklicks in Pixel.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-117">The y-coordinate of a mouse click, in pixels.</span></span></param>
        <param name="delta"><span data-ttu-id="fe0ca-118">Ein Zähler mit Vorzeichen für die Anzahl der Arretierungen, um die das Rad gedreht wurde.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-118">A signed count of the number of detents the wheel has rotated.</span></span></param>
        <summary><span data-ttu-id="fe0ca-119">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.MouseEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.MouseEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MouseButtons Button { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MouseButtons Button" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Button" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Button As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MouseButtons Button { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.Button : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.MouseEventArgs.Button" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0ca-120">Ruft ab, welche Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-120">Gets which mouse button was pressed.</span></span></summary>
        <value><span data-ttu-id="fe0ca-121">Einer der <see cref="T:System.Windows.Forms.MouseButtons" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-121">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe0ca-122">Im folgenden Codebeispiel wird das- <xref:System.Windows.Forms.Control.MouseDown> Ereignis auf einem-Steuerelement behandelt <xref:System.Windows.Forms.TextBox> , sodass durch Klicken auf die Rechte Maustaste der gesamte Text im-Steuerelement ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-122">The following code example handles the <xref:System.Windows.Forms.Control.MouseDown> event on a <xref:System.Windows.Forms.TextBox> control so that clicking the right mouse button selects all the text in the control.</span></span> <span data-ttu-id="fe0ca-123">Für dieses Beispiel ist es erforderlich, dass Sie ein Formular mit einem- <xref:System.Windows.Forms.TextBox> Steuerelement namens haben `textBox1` .</span><span class="sxs-lookup"><span data-stu-id="fe0ca-123">This example requires that you have a form that contains a <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[MouseEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#1)]
 [!code-vb[MouseEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Clicks">
      <MemberSignature Language="C#" Value="public int Clicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Clicks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clicks As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Clicks { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Clicks : int" Usage="System.Windows.Forms.MouseEventArgs.Clicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0ca-124">Ruft ab, wie oft die Maustaste gedrückt und losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-124">Gets the number of times the mouse button was pressed and released.</span></span></summary>
        <value><span data-ttu-id="fe0ca-125">Ein <see cref="T:System.Int32" /> mit Angaben dazu, wie häufig die Maustaste gedrückt und losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-125">An <see cref="T:System.Int32" /> that contains the number of times the mouse button was pressed and released.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0ca-126">Obwohl die Windows-Benutzeroberfläche Standard Mausereignisse entweder als einfache Klicks oder Doppelklicks definiert, können einzelne Anwendungen eine größere Anzahl von Klicks als einzelnes Ereignis interpretieren.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-126">Although the Windows interface defines standard mouse events as either single-clicks or double-clicks, individual applications can interpret a larger number of clicks as a single event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0ca-127">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-127">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="fe0ca-128">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-128">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="fe0ca-129">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-129">This report helps you learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="fe0ca-130">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="fe0ca-130">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="fe0ca-131">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-131">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="fe0ca-132">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="fe0ca-132">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Delta" />
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Delta : int" Usage="System.Windows.Forms.MouseEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0ca-133">Ruft einen Zähler mit Vorzeichen für die Anzahl der Arretierungen ab, um die das Mausrad gedreht wurde, der mit der Konstanten WHEEL_DELTA multipliziert wird.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-133">Gets a signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.</span></span> <span data-ttu-id="fe0ca-134">Eine Arretierung (Rastpunkt) ist eine Kerbe des Mausrades.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-134">A detent is one notch of the mouse wheel.</span></span></summary>
        <value><span data-ttu-id="fe0ca-135">Ein Zähler mit Vorzeichen für die Anzahl der Arretierungen, um die das Mausrad gedreht wurde, der mit der Konstanten WHEEL_DELTA multipliziert wird.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-135">A signed count of the number of detents the mouse wheel has rotated, multiplied by the WHEEL_DELTA constant.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0ca-136">Das Mausrad kombiniert die Funktionen eines Rades und einer Maustaste.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-136">The mouse wheel combines the features of a wheel and a mouse button.</span></span> <span data-ttu-id="fe0ca-137">Das Rad verfügt über diskrete, gleichmäßig entfernte notstriche.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-137">The wheel has discrete, evenly spaced notches.</span></span> <span data-ttu-id="fe0ca-138">Wenn Sie das Rad drehen, wird eine radnachricht gesendet, sobald jede Kerb gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-138">When you rotate the wheel, a wheel message is sent as each notch is encountered.</span></span> <span data-ttu-id="fe0ca-139">Ein Rad, ein detent, wird durch die Windows-Konstante WHEEL_DELTA definiert, die 120 ist.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-139">One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is 120.</span></span> <span data-ttu-id="fe0ca-140">Ein positiver Wert gibt an, dass das Mausrad vorwärts gedreht wurde (vom Benutzer entfernt). ein negativer Wert gibt an, dass das Rad rückwärts gedreht wurde (für den Benutzer).</span><span class="sxs-lookup"><span data-stu-id="fe0ca-140">A positive value indicates that the wheel was rotated forward (away from the user); a negative value indicates that the wheel was rotated backward (toward the user).</span></span>  
  
 <span data-ttu-id="fe0ca-141">Derzeit ist der Wert 120 der Standard für ein detent.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-141">Currently, a value of 120 is the standard for one detent.</span></span> <span data-ttu-id="fe0ca-142">Bei der Einführung von Mäusen mit höherer Auflösung kann die Definition von WHEEL_DELTA kleiner werden.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-142">If higher resolution mice are introduced, the definition of WHEEL_DELTA might become smaller.</span></span> <span data-ttu-id="fe0ca-143">Die meisten Anwendungen sollten einen positiven oder negativen Wert anstelle eines aggregierten Gesamtwerts überprüfen.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-143">Most applications should check for a positive or negative value rather than an aggregate total.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0ca-144">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-144">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="fe0ca-145">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-145">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="fe0ca-146">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-146">This report helps you learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="fe0ca-147">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, empfiehlt es sich, durch zu ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht an eine mehrzeilige anfügen <xref:System.Windows.Forms.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="fe0ca-147">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="fe0ca-148">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz eines Typs enthält, der von erbt <xref:System.Windows.Forms.Control> , <xref:System.Windows.Forms.Button> z <xref:System.Windows.Forms.ComboBox> . b. oder.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-148">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="fe0ca-149">Benennen Sie dann die Instanz `Control1` , und stellen Sie sicher, dass der Ereignishandler dem Ereignis zugeordnet ist <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="fe0ca-149">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Clicks" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point" Usage="System.Windows.Forms.MouseEventArgs.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0ca-150">Ruft die Position der Maus während des generierten Mausereignisses ab.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-150">Gets the location of the mouse during the generating mouse event.</span></span></summary>
        <value><span data-ttu-id="fe0ca-151">Ein <see cref="T:System.Drawing.Point" />, der die x- und y-Koordinaten der Maus in Pixel relativ zur oberen linken Ecke des Formulars enthält.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-151">A <see cref="T:System.Drawing.Point" /> that contains the x- and y- mouse coordinates, in pixels, relative to the upper-left corner of the form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe0ca-152">Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.MouseEventArgs.Location%2A> -Eigenschaft verwendet, um linke Mausklicks zu verfolgen und eine Reihe von geraden Liniensegmenten als Reaktion auf Benutzereingaben zu zeichnen.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-152">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.Location%2A> property to track left mouse clicks and draw a series of straight line segments in response to user input.</span></span> <span data-ttu-id="fe0ca-153">Das Beispiel speichert die gezeichneten Zeilen nicht, wenn Sie das Formular ausblenden und dann erneut anzeigen. Dieser Code wurde aus Gründen der Einfachheit ausgelassen.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-153">The example does not persist the drawn lines if you hide the form and then redisplay it; this code was omitted for simplicity.</span></span>  
  
 [!code-csharp[MouseEventArgs#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#2)]
 [!code-vb[MouseEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
        <related type="Article" href="/dotnet/framework/winforms/windows-forms-coordinates"><span data-ttu-id="fe0ca-154">Windows Forms-Koordinaten</span><span class="sxs-lookup"><span data-stu-id="fe0ca-154">Windows Forms Coordinates</span></span></related>
        <related type="Article" href="/dotnet/framework/winforms/mouse-events-in-windows-forms"><span data-ttu-id="fe0ca-155">Mausereignisse in Windows Forms</span><span class="sxs-lookup"><span data-stu-id="fe0ca-155">Mouse Events in Windows Forms</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.MouseEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0ca-156">Ruft die x-Koordinate der Maus während des generierten Mausereignisses ab.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-156">Gets the x-coordinate of the mouse during the generating mouse event.</span></span></summary>
        <value><span data-ttu-id="fe0ca-157">Die x-Koordinate der Maus in Pixel.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-157">The x-coordinate of the mouse, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0ca-158">Die Maus Koordinaten variieren basierend auf dem Ereignis, das ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-158">The mouse coordinates vary based on the event being raised.</span></span> <span data-ttu-id="fe0ca-159">Wenn z. b. das- <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> Ereignis behandelt wird, sind die Maus Koordinaten Werte relativ zu den Koordinaten des Steuer Elements, das das Ereignis ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-159">For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.</span></span> <span data-ttu-id="fe0ca-160">Einige Ereignisse im Zusammenhang mit Drag & Drop-Vorgängen verfügen über zugeordnete Maus Koordinaten Werte, die relativ zum Formular Ursprung oder Bildschirm Ursprung sind.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-160">Some events related to drag-and-drop operations have associated mouse-coordinate values that are relative to the form origin or the screen origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0ca-161">Im folgenden Codebeispiel werden die <xref:System.Windows.Forms.MouseEventArgs.X%2A> -Eigenschaft und die-Eigenschaft verwendet <xref:System.Windows.Forms.MouseEventArgs.Y%2A> , um die aktuelle Position des Mauszeigers in einem <xref:System.Windows.Forms.ToolTip> Fenster anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-161">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Y" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MouseEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.MouseEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe0ca-162">Ruft die y-Koordinate der Maus während des generierten Mausereignisses ab.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-162">Gets the y-coordinate of the mouse during the generating mouse event.</span></span></summary>
        <value><span data-ttu-id="fe0ca-163">Die y-Koordinate der Maus in Pixel.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-163">The y-coordinate of the mouse, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe0ca-164">Die Maus Koordinaten variieren basierend auf dem Ereignis, das ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-164">The mouse coordinates vary based on the event being raised.</span></span> <span data-ttu-id="fe0ca-165">Wenn z. b. das- <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> Ereignis behandelt wird, sind die Maus Koordinaten Werte relativ zu den Koordinaten des Steuer Elements, das das Ereignis ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-165">For example, when the <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> event is handled, the mouse coordinate values are relative to the coordinates of the control that raised the event.</span></span> <span data-ttu-id="fe0ca-166">Einige Ereignisse im Zusammenhang mit Drag & Drop-Vorgängen verfügen über zugeordnete Maus Koordinaten Werte, die relativ zum Formular Ursprung oder Bildschirm Ursprung sind.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-166">Some events related to drag-and-drop operations have associated mouse coordinate values that are relative to the form origin or the screen origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe0ca-167">Im folgenden Codebeispiel werden die <xref:System.Windows.Forms.MouseEventArgs.X%2A> -Eigenschaft und die-Eigenschaft verwendet <xref:System.Windows.Forms.MouseEventArgs.Y%2A> , um die aktuelle Position des Mauszeigers in einem <xref:System.Windows.Forms.ToolTip> Fenster anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-167">The following code example uses the <xref:System.Windows.Forms.MouseEventArgs.X%2A> and <xref:System.Windows.Forms.MouseEventArgs.Y%2A> properties to display the current position of the mouse pointer in a <xref:System.Windows.Forms.ToolTip> window.</span></span> <span data-ttu-id="fe0ca-168">Um diesen Code zu verwenden, wird `TrackCoordinates` vom Formularkonstruktor aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fe0ca-168">To use this code, call `TrackCoordinates` from the form constructor.</span></span>  
  
 [!code-csharp[MouseEventArgs#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MouseEventArgs/CS/Form1.cs#3)]
 [!code-vb[MouseEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MouseEventArgs/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.X" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Location" />
      </Docs>
    </Member>
  </Members>
</Type>
