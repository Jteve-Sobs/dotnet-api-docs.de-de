<Type Name="DataGridView" FullName="System.Windows.Forms.DataGridView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45a1dfcca8008892f55ee30efb75e438c0d0b9be" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015959" /></Metadata><TypeSignature Language="C#" Value="public class DataGridView : System.Windows.Forms.Control, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridView extends System.Windows.Forms.Control implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridView" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridView&#xA;Inherits Control&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridView : System::Windows::Forms::Control, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type DataGridView = class&#xA;    inherit Control&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CellContentClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Daten in einem benutzerdefinierbaren Gitter dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement stellt eine anpassbare Tabelle zum Anzeigen von Daten bereit. Die <xref:System.Windows.Forms.DataGridView> -Klasse ermöglicht die Anpassung von Zellen, Zeilen, Spalten und Rahmen durch die Verwendung von Eigenschaften <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>wie, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>und <xref:System.Windows.Forms.DataGridView.GridColor%2A>. Weitere Informationen finden Sie unter [grundlegende Formatierung und Formatierung im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md)Element.  
  
 Sie können ein <xref:System.Windows.Forms.DataGridView> -Steuerelement verwenden, um Daten mit oder ohne zugrunde liegende Datenquelle anzuzeigen. Ohne Angabe einer Datenquelle können Sie Spalten und Zeilen mit Daten erstellen und Sie mithilfe der <xref:System.Windows.Forms.DataGridView> <xref:System.Windows.Forms.DataGridView.Rows%2A> -Eigenschaft und der- <xref:System.Windows.Forms.DataGridView.Columns%2A> Eigenschaft direkt hinzufügen. Sie können die <xref:System.Windows.Forms.DataGridView.Rows%2A> -Auflistung auch für den <xref:System.Windows.Forms.DataGridViewRow> Zugriff auf- <xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=nameWithType> Objekte und die-Eigenschaft verwenden, um Zellwerte direkt zu lesen oder zu schreiben. Der <xref:System.Windows.Forms.DataGridView.Item%2A> Indexer ermöglicht außerdem den direkten Zugriff auf Zellen.  
  
 Als Alternative zum manuellen Auffüllen des <xref:System.Windows.Forms.DataGridView.DataSource%2A> -Steuer Elements können Sie die-Eigenschaft und die- <xref:System.Windows.Forms.DataGridView.DataMember%2A> Eigenschaft festlegen <xref:System.Windows.Forms.DataGridView> , um das an eine Datenquelle zu binden und automatisch mit Daten aufzufüllen. Weitere Informationen finden Sie unter [Anzeigen von Daten im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)Element.  
  
 Wenn Sie mit sehr großen Datenmengen arbeiten, können Sie die <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> -Eigenschaft auf `true` festlegen, um eine Teilmenge der verfügbaren Daten anzuzeigen. Der virtuelle Modus erfordert die Implementierung eines Daten Caches, von dem <xref:System.Windows.Forms.DataGridView> das Steuerelement aufgefüllt wird. Weitere Informationen finden Sie unter [Datenanzeige Modi im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md)Element.  
  
 Weitere Informationen zu den Funktionen, die im <xref:System.Windows.Forms.DataGridView> Steuerelement verfügbar sind, finden Sie unter [DataGridView-Steuer](~/docs/framework/winforms/controls/datagridview-control-windows-forms.md)Element. In der folgenden Tabelle finden Sie direkte Links zu allgemeinen Aufgaben.  
  
-   [Gewusst wie: Binden von Daten an das DataGridView-Steuerelement in Windows Forms](https://msdn.microsoft.com/library/fbk67b6z\(v=vs.110\).aspx)  
  
-   [Gewusst wie: Hinzufügen von QuickInfos zu einzelnen Zellen in einem DataGridView-Steuerelement in Windows Forms](https://msdn.microsoft.com/library/2249cf0a\(v=vs.110\).aspx)  
  
-   [Gewusst wie: Festlegen von Schriftart- und Farbstilen im DataGridView-Steuerelement in Windows Forms](https://msdn.microsoft.com/library/z2akwyy7\(v=vs.110\).aspx)  
  
-   [Vorgehensweise: Ändern des Typs einer DataGridView-Spalte in Windows Forms mithilfe des Designers](https://msdn.microsoft.com/library/053656ss\(v=vs.110\).aspx)  
  
-   [Gewusst wie: Binden von Daten an das DataGridView-Steuerelement in Windows Forms mithilfe des Designers](https://msdn.microsoft.com/library/33w255ac\(v=vs.110\).aspx)  
  
-   [Gewusst wie: Festlegen von standardmäßigen Zellenstilen und Datenformaten für das DataGridView-Steuerelement in Windows Forms mithilfe des Designers](https://msdn.microsoft.com/library/95y5fz2x\(v=vs.110\).aspx)  
  
-   [Vorgehensweise: Formatieren von Daten im DataGridView-Steuerelement in Windows Forms](https://msdn.microsoft.com/library/f9x2790s\(v=vs.110\).aspx)  
  
-   [Exemplarische Vorgehensweise: Validieren von Daten im DataGridView-Steuerelement in Windows Forms](https://msdn.microsoft.com/library/ykdxa0bc\(v=vs.110\).aspx)  
  
-   [Gewusst wie: Anpassen der Datenformatierung im DataGridView-Steuerelement in Windows Forms](https://msdn.microsoft.com/library/z1cc356h\(v=vs.110\).aspx)  
  
-   [Exemplarische Vorgehensweise: Erstellen eines Master-/Detailformulars mit zwei DataGridView-Steuerelementen in Windows Forms](https://msdn.microsoft.com/library/y8c0cxey\(v=vs.110\).aspx)  
  
 Obwohl das <xref:System.Windows.Forms.DataGridView> -Steuerelement ersetzt und dem <xref:System.Windows.Forms.DataGrid> Steuerelement früherer Versionen Funktionen hinzufügt, <xref:System.Windows.Forms.DataGrid> wird das-Steuerelement sowohl aus Gründen der Abwärtskompatibilität als auch der künftigen Verwendung beibehalten, wenn Sie dies auswählen. Weitere Informationen finden Sie unter [Unterschiede zwischen dem DataGridView-Steuerelement und dem DataGrid-Steuerelement in Windows Forms](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md).  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.DataGridView> <xref:System.Windows.Forms.Control.ContextMenu%2A> -Steuerelement erbt die <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> -Eigenschaft <xref:System.Windows.Forms.Control>und die-Eigenschaft von <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> , unterstützt jedoch nur die-Eigenschaft. Die Verwendung <xref:System.Windows.Forms.Control.ContextMenu%2A> der-Eigenschaft <xref:System.Windows.Forms.DataGridView> mit dem-Steuerelement hat keine Auswirkungen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein ungebundenes <xref:System.Windows.Forms.DataGridView> Steuerelement initialisiert wird.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/CS/simpleunbound.cs#00)]
 [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/VB/simpleunbound.vb#00)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
    <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-overview-windows-forms.md">Übersicht über das DataGridView-Steuerelement (Windows Forms)</related>
    <related type="Article" href="~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md">Grundlegende Formatierungen und Formate im DataGridView-Steuerelement in Windows Forms</related>
    <related type="Article" href="~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md">Anzeigen von Daten im DataGridView-Steuerelement in Windows Forms</related>
    <related type="Article" href="~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md">Datenanzeigemodi im DataGridView-Steuerelement in Windows Forms</related>
    <related type="Article" href="~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md">Unterschiede zwischen dem DataGridView-Steuerelement und dem DataGrid-Steuerelement in Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridView" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden anfängliche Eigenschaftswerte für eine Instanz der <xref:System.Windows.Forms.DataGridView>-Klasse aufgeführt.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumns%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumns%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None>|  
|<xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>|<xref:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None>|  
|<xref:System.Windows.Forms.DataGridView.ClipboardCopyMode%2A>|<xref:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText>|  
|<xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing>|  
|<xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.EditMode%2A>|<xref:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2>|  
|<xref:System.Windows.Forms.DataGridView.MultiSelect%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.ReadOnly%2A>|`false`|  
|<xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>|`true`|  
|<xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A>|<xref:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing>|  
|<xref:System.Windows.Forms.DataGridView.SelectionMode%2A>|<xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNotifyCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void AccessibilityNotifyCurrentCellChanged (System.Drawing.Point cellAddress);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AccessibilityNotifyCurrentCellChanged(valuetype System.Drawing.Point cellAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AccessibilityNotifyCurrentCellChanged (cellAddress As Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AccessibilityNotifyCurrentCellChanged(System::Drawing::Point cellAddress);" />
      <MemberSignature Language="F#" Value="abstract member AccessibilityNotifyCurrentCellChanged : System.Drawing.Point -&gt; unit&#xA;override this.AccessibilityNotifyCurrentCellChanged : System.Drawing.Point -&gt; unit" Usage="dataGridView.AccessibilityNotifyCurrentCellChanged cellAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cellAddress" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="cellAddress">Ein <see cref="T:System.Drawing.Point" />, der die Zeilen- und Spaltenindizes der neuen aktiven Zelle angibt.</param>
        <summary>Benachrichtigt die Clientanwendungen für die Barrierefreiheit, wenn eine neue Zelle zur aktiven Zelle wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode konvertiert die angegebenen Zeilen-und Spalten Indizes `objectID` in `childID` -und-Parameter <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%28System.Windows.Forms.AccessibleEvents%2CSystem.Int32%2CSystem.Int32%29> und ruft die-Methoden <xref:System.Windows.Forms.AccessibleEvents.Focus> <xref:System.Windows.Forms.AccessibleEvents> Überladung zweimal mithilfe der-und-Werte der- <xref:System.Windows.Forms.AccessibleEvents.Selection> Enumeration auf. `objectID` Und`childID` werden bestimmt, indem nur die sichtbaren Zeilen und Spalten in der Anzeigereihenfolge nummeriert werden, wobei die Zeilen-oder Spaltenüberschriften gezählt werden, wenn Sie sichtbar sind, und beginnend mit 1. Wenn z. b. Spaltenüberschriften sichtbar sind `objectID` , ist der für die erste sichtbare nonkopfzeile 2.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Drawing.Point.X" />-Eigenschaft von <paramref name="cellAddress" /> ist kleiner als 0 oder größer als die Anzahl der Spalten im Steuerelement minus 1.  
  
- oder - 
Der Wert der <see cref="P:System.Drawing.Point.Y" />-Eigenschaft von <paramref name="cellAddress" /> ist kleiner als 0 oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <block subset="none" type="overrides"><para>Überschreiben Sie diese Methode, wenn <see cref="T:System.Windows.Forms.DataGridView" /> Sie das Steuerelement anpassen und ändern, wie und wann sich die aktuelle Zelle ändert. Wenn Sie z. b. einen benutzerdefinierten Zeilentyp erstellen, mit dem mehrere Zellen zu einzelnen Zellen zusammengeführt werden, und Sie die Navigation entsprechend ändern, können Sie diese Methode überschreiben, um Barrierefreiheits Unterstützung für Ihre Änderungen bereitzustellen.</para></block>
        <altmember cref="T:System.Windows.Forms.AccessibleEvents" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustColumnHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, isFirstDisplayedColumn As Boolean, isLastVisibleColumn As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustColumnHeaderBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);" />
      <MemberSignature Language="F#" Value="abstract member AdjustColumnHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustColumnHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridView.AdjustColumnHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, isFirstDisplayedColumn, isLastVisibleColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="isFirstDisplayedColumn" Type="System.Boolean" />
        <Parameter Name="isLastVisibleColumn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />-Objekt, das das zu ändernde Spaltenheaderrahmenformat darstellt.</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />, in dem Zwischenänderungen an der Spaltenheaderrahmenart gespeichert werden.</param>
        <param name="isFirstDisplayedColumn"><see langword="true" /> , um anzugeben, dass sich die aktuell gezeichnete <see cref="T:System.Windows.Forms.DataGridViewCell" /> in der ersten Spalte befindet, die in der <see cref="T:System.Windows.Forms.DataGridView" />angezeigt wird, andernfalls <see langword="false" />.</param>
        <param name="isLastVisibleColumn"><see langword="true" />, um anzugeben, dass sich die aktuell gezeichnete <see cref="T:System.Windows.Forms.DataGridViewCell" /> in der letzten Spalte in der <see cref="T:System.Windows.Forms.DataGridView" /> befindet, deren <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" />-Eigenschaft auf <see langword="true" /> festgelegt ist, andernfalls <see langword="false" />.</param>
        <summary>Stellt den <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> für eine Spaltenheaderzelle einer <see cref="T:System.Windows.Forms.DataGridView" /> ein, die gerade gezeichnet wird.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />, der die Rahmenart für den aktuellen Spaltenheader darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement ruft <xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A> intern die-Methode auf, um die Darstellung der Rahmen für die Spaltenheader Zellen zu bestimmen. Das <xref:System.Windows.Forms.DataGridView> -Steuerelement verwendet in der Regel <xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A> den Wert der `dataGridViewAdvancedBorderStyleInput` -Eigenschaft für den-Parameter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A> -Methode überschrieben wird, um die Rahmen der Spaltenheader Zellen anzupassen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#15)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Überschreiben Sie diese Methode, wenn Sie die Darstellung des Rahmens auf Spaltenheader Zellen anpassen möchten.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdjustedTopLeftHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AdjustedTopLeftHeaderBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustedTopLeftHeaderBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdjustedTopLeftHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart für die linke obere Zelle in der <see cref="T:System.Windows.Forms.DataGridView" /> ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />, der die Art des Rahmens der linken oberen Zelle in der <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die linke obere Zelle ist die Zelle, die von der Spalten Kopfzeile und der Zeilen Header Spalte gemeinsam genutzt wird. <xref:System.Windows.Forms.DataGridView> Ruft beim Zeichnen der linken oberen Zelle den Wert dieser Eigenschaft ab.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle%2A> -Eigenschaft überschrieben wird, um die Rahmen der linken oberen Zelle anzupassen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#12)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Überschreiben Sie diese Eigenschaft, wenn Sie die Darstellung des Rahmens in der oberen linken Header Zelle anpassen möchten.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedCellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedCellBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedCellBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedCellBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedCellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart der Zellen in der <see cref="T:System.Windows.Forms.DataGridView" /> ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />, der die Rahmenart der Zellen in der <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A> die-Eigenschaft, um die Darstellung von Zell Grenzen anzupassen. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> -Eigenschaft, um die Art der Rahmen Verwendung der integrierten Stile zu ändern.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedColumnHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedColumnHeadersBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedColumnHeadersBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedColumnHeadersBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart der Spaltenheaderzellen in der <see cref="T:System.Windows.Forms.DataGridView" /> ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />, der die Rahmenart der <see cref="T:System.Windows.Forms.DataGridViewColumnHeaderCell" />-Objekte in der <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A> die-Eigenschaft, um die Darstellung der Rahmen der Spaltenheader Zellen anzupassen. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A> -Eigenschaft, um die Art der Rahmen Verwendung der integrierten Stile zu ändern.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AdvancedRowHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdvancedRowHeadersBorderStyle As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdvancedRowHeadersBorderStyle { System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AdvancedRowHeadersBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart der Zeilenheaderzellen in der <see cref="T:System.Windows.Forms.DataGridView" /> ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />, der die Rahmenart der <see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />-Objekte in der <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> die-Eigenschaft, um die Darstellung der Rahmen der Zeilen Header Zellen in <xref:System.Windows.Forms.DataGridView> einem abgeleiteten-Steuerelement anzupassen. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A> -Eigenschaft, um die Art der Rahmen Verwendung der integrierten Stile zu ändern.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToAddRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToAddRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToAddRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToAddRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToAddRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToAddRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToAddRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Option zum Hinzufügen von Zeilen angezeigt wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die Option zum Hinzufügen von Zeilen angezeigt wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das <xref:System.Windows.Forms.DataGridView> an Daten gebunden ist, kann der Benutzer Zeilen hinzufügen, wenn sowohl diese Eigenschaft als auch die- <xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=nameWithType> Eigenschaft der Datenquelle auf `true`festgelegt sind.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement veranschaulicht, das in erster Linie für die Anzeige vorgesehen ist. In diesem Beispiel wird das visuelle Erscheinungsbild des Steuer Elements auf verschiedene Weise angepasst, und das Steuerelement ist für eingeschränkte Interaktivität konfiguriert. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToAddRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToAddRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToAddRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToAddRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToAddRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToAddRowsChanged : EventHandler " Usage="member this.AllowUserToAddRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#250](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#250)]
 [!code-vb[System.Windows.Forms.EventExamples#250](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#250)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToDeleteRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToDeleteRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToDeleteRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToDeleteRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToDeleteRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToDeleteRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToDeleteRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToDeleteRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Zeilen in der <see cref="T:System.Windows.Forms.DataGridView" /> gelöscht werden können, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn Zeilen gelöscht werden können, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das <xref:System.Windows.Forms.DataGridView> an Daten gebunden ist, kann der Benutzer Zeilen löschen, wenn sowohl diese Eigenschaft als auch die <xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType> -Eigenschaft auf `true`festgelegt sind.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement veranschaulicht, das in erster Linie für die Anzeige vorgesehen ist. In diesem Beispiel wird das visuelle Erscheinungsbild des Steuer Elements auf verschiedene Weise angepasst, und das Steuerelement ist für eingeschränkte Interaktivität konfiguriert. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToDeleteRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToDeleteRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToDeleteRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToDeleteRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToDeleteRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToDeleteRowsChanged : EventHandler " Usage="member this.AllowUserToDeleteRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#251](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#251)]
 [!code-vb[System.Windows.Forms.EventExamples#251](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#251)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToOrderColumns">
      <MemberSignature Language="C#" Value="public bool AllowUserToOrderColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToOrderColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToOrderColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToOrderColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToOrderColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToOrderColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die manuelle Neupositionierung für Spalten aktiviert wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" /> , wenn die Spaltenfolge geändert werden kann, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Neupositionierung von Spalten aktiviert ist, können Benutzer eine Spalten Kopfzeile an eine neue Position ziehen. Beachten Sie, dass fixierte und nicht fixierte Spalten zwei separate Gruppen bilden. Benutzer können Spalten innerhalb einer Gruppe neu positionieren, aber keine Spalte aus einer Gruppe in die andere verschieben.  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.DataGridView> -Steuerelement unterstützt die doppelte Pufferung nicht. Wenn <xref:System.Windows.Forms.Control.DoubleBuffered%2A> in einem abgeleiteten <xref:System.Windows.Forms.DataGridView> Steuerelement auf festgelegt ist, erhalten Benutzer keine visuellen Rückmeldung, wenn Sie die Größe von `true` Zeilen, Spalten oder Headern ändern oder Spalten neu anordnen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement veranschaulicht, das in erster Linie für die Anzeige vorgesehen ist. In diesem Beispiel wird das visuelle Erscheinungsbild des Steuer Elements auf verschiedene Weise angepasst, und das Steuerelement ist für eingeschränkte Interaktivität konfiguriert. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToOrderColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToOrderColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToOrderColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToOrderColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToOrderColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToOrderColumnsChanged : EventHandler " Usage="member this.AllowUserToOrderColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.AllowUserToOrderColumns" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#252](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#252)]
 [!code-vb[System.Windows.Forms.EventExamples#252](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#252)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeColumns">
      <MemberSignature Language="C#" Value="public bool AllowUserToResizeColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToResizeColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToResizeColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToResizeColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToResizeColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Größe der Spalten geändert werden kann, oder legt diesen fest.</summary>
        <value><see langword="true" /> , wenn die Größe der Spalten geändert werden kann, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um zu verhindern, dass Benutzer die Spaltenbreite manuell ändern. Dies ist z. b. nützlich, wenn nur Anzeige Spalten angezeigt werden, bei denen Daten einmal geladen werden und die Größe der Spalten zu diesem Zeitpunkt geändert wird.  
  
 Weitere Informationen zur Größenänderung von Benutzern finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.DataGridView> -Steuerelement unterstützt die doppelte Pufferung nicht. Wenn <xref:System.Windows.Forms.Control.DoubleBuffered%2A> in einem abgeleiteten <xref:System.Windows.Forms.DataGridView> Steuerelement auf festgelegt ist, erhalten Benutzer keine visuellen Rückmeldung, wenn Sie die Größe von `true` Zeilen, Spalten oder Headern ändern oder Spalten neu anordnen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement verwendet wird, das hauptsächlich für die Anzeige vorgesehen ist In diesem Beispiel wird das visuelle Erscheinungsbild des Steuer Elements auf verschiedene Weise angepasst, und das Steuerelement ist für eingeschränkte Interaktivität konfiguriert. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToResizeColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToResizeColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToResizeColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToResizeColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeColumnsChanged : EventHandler " Usage="member this.AllowUserToResizeColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeColumns" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#253](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#253)]
 [!code-vb[System.Windows.Forms.EventExamples#253](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#253)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeRows">
      <MemberSignature Language="C#" Value="public bool AllowUserToResizeRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUserToResizeRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUserToResizeRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUserToResizeRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeRows : bool with get, set" Usage="System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Größe der Zeilen geändert werden kann, oder legt diesen fest.</summary>
        <value><see langword="true" /> , wenn die Größe der Zeilen geändert werden kann, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um zu verhindern, dass Benutzer die Zeilen Höhen manuell ändern. Dies ist z. b. nützlich, wenn nur Anzeige Steuerelemente angezeigt werden, bei denen Daten einmal geladen werden und die Größe der Zeilen zu diesem Zeitpunkt geändert wird.  
  
 Damit der Zellen Inhalt bei der Größenänderung einer Zeile in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Weitere Informationen zur Größenänderung von Benutzern finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.DataGridView> -Steuerelement unterstützt die doppelte Pufferung nicht. Wenn <xref:System.Windows.Forms.Control.DoubleBuffered%2A> in einem abgeleiteten <xref:System.Windows.Forms.DataGridView> Steuerelement auf festgelegt ist, erhalten Benutzer keine visuellen Rückmeldung, wenn Sie die Größe von `true` Zeilen, Spalten oder Headern ändern oder Spalten neu anordnen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement verwendet wird, das hauptsächlich für die Anzeige vorgesehen ist In diesem Beispiel wird das visuelle Erscheinungsbild des Steuer Elements auf verschiedene Weise angepasst, und das Steuerelement ist für eingeschränkte Interaktivität konfiguriert. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AllowUserToResizeRowsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AllowUserToResizeRowsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AllowUserToResizeRowsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AllowUserToResizeRowsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AllowUserToResizeRowsChanged;" />
      <MemberSignature Language="F#" Value="member this.AllowUserToResizeRowsChanged : EventHandler " Usage="member this.AllowUserToResizeRowsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#254](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#254)]
 [!code-vb[System.Windows.Forms.EventExamples#254](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#254)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowsDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternatingRowsDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ AlternatingRowsDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowsDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Standardzellstil ab, der für Zeilen der <see cref="T:System.Windows.Forms.DataGridView" /> mit ungerader Nummer angewendet wird, oder legt diesen Stil fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der auf die Zeilen mit ungerader Nummer angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement zeigt seine Zellen mithilfe der Stile an, <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> die von der Cell-Eigenschaft angegeben werden, die Stile <xref:System.Windows.Forms.DataGridViewCellStyle>von anderen Eigenschaften des Typs erbt. Bei Zellen in Zeilen mit ungeraden Indexnummern überschreiben die durch die <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> -Eigenschaft angegebenen Stile die durch <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>die <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>-Eigenschaft angegebenen <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>Stile und werden durch die durch die-Eigenschaft angegebenen <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>Stileüberschrieben.und <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> -Eigenschaften.  
  
 Weitere Informationen finden Sie unter [Zellen Stile im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)Element.  
  
 Beim Abrufen dieser Eigenschaft wird eine <xref:System.Windows.Forms.DataGridViewCellStyle> mit Standardwerten erstellt, wenn nicht bereits auf die Eigenschaft zugegriffen wurde. Dies kann zu Leistungseinbußen führen, wenn diese Eigenschaft für viele Zeilen erhalten wird. Verwenden Sie nach Möglichkeit eine einzelne <xref:System.Windows.Forms.DataGridViewCellStyle> , um diese Eigenschaft für mehrere Zeilen festzulegen. Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft verwendet wird, um einen Ledger- <xref:System.Windows.Forms.DataGridView> Effekt in einem-Steuerelement zu erstellen. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AlternatingRowsDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AlternatingRowsDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AlternatingRowsDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AlternatingRowsDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.AlternatingRowsDefaultCellStyleChanged : EventHandler " Usage="member this.AlternatingRowsDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn eine Eigenschaft <xref:System.Windows.Forms.DataGridViewCellStyle> von, die <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> von der-Eigenschaft zurückgegeben wird, auf einen <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> neuen Wert festgelegt wird oder <xref:System.Windows.Forms.DataGridViewCellStyle> wenn die-Eigenschaft auf einen neuen festgelegt wird, wobei sich mindestens ein Eigenschafts Wert von dem vorherigen Zellstilobjekt unterscheidet.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#255](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#255)]
 [!code-vb[System.Windows.Forms.EventExamples#255](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#255)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AreAllCellsSelected">
      <MemberSignature Language="C#" Value="public bool AreAllCellsSelected (bool includeInvisibleCells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AreAllCellsSelected(bool includeInvisibleCells) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AreAllCellsSelected(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AreAllCellsSelected (includeInvisibleCells As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool AreAllCellsSelected(bool includeInvisibleCells);" />
      <MemberSignature Language="F#" Value="member this.AreAllCellsSelected : bool -&gt; bool" Usage="dataGridView.AreAllCellsSelected includeInvisibleCells" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeInvisibleCells" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeInvisibleCells"><see langword="true" />, um die Zeilen und die Spalten mit dem <see cref="P:System.Windows.Forms.DataGridViewBand.Visible" />-Eigenschaftswert <see langword="false" /> einzuschließen, andernfalls <see langword="false" />.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob derzeit alle <see cref="T:System.Windows.Forms.DataGridView" />-Zellen ausgewählt sind.</summary>
        <returns><see langword="true" />, wenn alle (oder alle sichtbaren) Zellen ausgewählt sind oder wenn keine (oder keine sichtbaren) Zellen vorhanden sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> Sammlung wird nicht effizient mit großer Auswahl durchgeführt. Überprüfen Sie <xref:System.Windows.Forms.DataGridView> denRückgabe<xref:System.Windows.Forms.DataGridView.SelectedCells%2A> Wert der- Methode,umzubestimmen,oballeZelleninderausgewähltwurden,bevorSieaufdenInhaltderAuflistungzugreifen.<xref:System.Windows.Forms.DataGridView.AreAllCellsSelected%2A> Diese Methode kann jedoch dazu führen, dass Zeilen nicht mehr freigegeben werden. Weitere Informationen <xref:System.Windows.Forms.DataGridView> zur Leistung finden Sie unter [bewährte Methoden zum Skalieren des Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)Elements.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Methode verwendet wird, um Berechnungen <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> mit der-Auflistung zu vermeiden.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Visible" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectedCells" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoGenerateColumns" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateColumns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumns : bool with get, set" Usage="System.Windows.Forms.DataGridView.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob Spalten automatisch erstellt werden, wenn die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft oder die <see cref="P:System.Windows.Forms.DataGridView.DataMember" />-Eigenschaft festgelegt werden.</summary>
        <value><see langword="true" />, wenn die Spalten automatisch erstellt werden sollen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spalten werden automatisch generiert, wenn diese Eigenschaft auf `true` festgelegt ist und die-Eigenschaft oder <xref:System.Windows.Forms.DataGridView.DataMember%2A> die <xref:System.Windows.Forms.DataGridView.DataSource%2A> -Eigenschaft festgelegt oder geändert wird. Spalten können auch automatisch generiert werden, wenn <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> die-Eigenschaft von `false` in `true`geändert wird. Wenn diese Eigenschaft ist `true` und die <xref:System.Windows.Forms.DataGridView.DataSource%2A> Änderungen so sind, dass es Spalten gibt, die nicht mit den Spalten <xref:System.Windows.Forms.DataGridView.DataSource%2A> des vorherigen Werts übereinstimmen, werden die Daten in den nicht übereinstimmenden Spalten verworfen. Diese Eigenschaft wird ignoriert, wenn <xref:System.Windows.Forms.DataGridView.DataSource%2A> die <xref:System.Windows.Forms.DataGridView.DataMember%2A> -Eigenschaft oder die-Eigenschaft nicht festgelegt ist.  
  
 Wenn <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> <xref:System.Windows.Forms.DataGridView> auf `true`festgelegt wird, generiert das Steuerelement eine Spalte für jede öffentliche Eigenschaft der Objekte in der Datenquelle. Wenn die gebundenen Objekte die <xref:System.ComponentModel.ICustomTypeDescriptor> -Schnittstelle implementieren, generiert das Steuerelement eine Spalte für jede Eigenschaft, die von der <xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A> -Methode zurückgegeben wird. Jeder Spaltenheader enthält den Wert des Eigenschafts namens, den die Spalte darstellt.  
  
 Wenn Sie die <xref:System.Windows.Forms.DataGridView.DataSource%2A> -Eigenschaft festgelegt haben `false`, aber auf festgelegt <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> ist, müssen Sie Spalten manuell hinzufügen. Sie können jede hinzugefügte Spalte an die Datenquelle binden, <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType> indem Sie die-Eigenschaft auf den Namen einer Eigenschaft festlegen, die von den gebundenen Objekten verfügbar gemacht wird.  
  
> [!NOTE]
>  Wenn Sie <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> `false` im Windows Forms-Designer festlegen, wird die-Eigenschaft automatisch auf festgelegt und Code generiert, um eine Spalte für jede Eigenschaft in der Datenquelle hinzuzufügen und zu binden. <xref:System.Windows.Forms.DataGridView.DataSource%2A> Der Code, der zur Entwurfszeit generiert wird, entspricht dem manuell hinzugefügten Code, der im folgenden Beispiel gezeigt wird. Sie ist nicht identisch mit der automatischen Generierung von Spalten zur Laufzeit, die auftritt, wenn die <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> -Eigenschaft auf `true`festgelegt ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Spalten manuell hinzugefügt und an eine Datenquelle gebunden werden, <xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A> Wenn `false`auf festgelegt wird. In diesem Beispiel wird ein <xref:System.Windows.Forms.DataGridView> -Steuerelement an eine Liste von `Task` Geschäftsobjekten gebunden. Anschließend werden die Spalten hinzugefügt, und Sie `Task` werden über die <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType> -Eigenschaft an Eigenschaften gebunden. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Greifen Sie in einer Windows Forms DataGridViewComboBoxCell-Dropdown Liste](~/docs/framework/winforms/controls/access-objects-in-a-wf-datagridviewcomboboxcell-drop-down-list.md)auf Objekte zu.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/CS/form1.cs#100)]
 [!code-vb[System.Windows.Forms.DataGridViewComboBoxObjectBinding#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewComboBoxObjectBinding/vb/form1.vb#100)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <altmember cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumnsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoGenerateColumnsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoGenerateColumnsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoGenerateColumnsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoGenerateColumnsChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateColumnsChanged : EventHandler " Usage="member this.AutoGenerateColumnsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#256](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#256)]
 [!code-vb[System.Windows.Forms.EventExamples#256](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#256)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumn">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Passt die Breite der angegebenen Spalte an den Inhalt ihrer Zellen an.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int -&gt; unit" Usage="dataGridView.AutoResizeColumn columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index der Spalte, deren Größe geändert werden soll.</param>
        <summary>Passt die Breite der angegebenen Spalte an den Inhalt ihrer Zellen einschließlich der Headerzelle an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe einer Spalte geändert wird. Die Spaltenbreite wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Spalte zu einem späteren Zeitpunkt ändert, wird die Spalte nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> Größe aller Spalten zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> -Eigenschaft oder <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> die-Eigenschaft, um festzulegen, dass die Spalte bei jeder Änderung automatisch angepasst wird.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird diese Methode verwendet, um die Spaltenbreite groß genug zu machen, um einen neuen Zellwert aufnehmen zu können. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Bearbeiten Sie Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Spalten minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, autoSizeColumnMode As DataGridViewAutoSizeColumnMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::DataGridViewAutoSizeColumnMode autoSizeColumnMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.DataGridViewAutoSizeColumnMode -&gt; unit" Usage="dataGridView.AutoResizeColumn (columnIndex, autoSizeColumnMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="autoSizeColumnMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnMode" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index der Spalte, deren Größe geändert werden soll.</param>
        <param name="autoSizeColumnMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" />-Werte.</param>
        <summary>Passt die Breite der angegebenen Spalte anhand des angegebenen Größenmodus an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe einer Spalte geändert wird. Die Spaltenbreite wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Spalte zu einem späteren Zeitpunkt ändert, wird die Spalte nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> Größe aller Spalten zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> -Eigenschaft oder <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> die-Eigenschaft, um festzulegen, dass die Spalte bei jeder Änderung automatisch angepasst wird.  
  
 Mit dieser Überladung können Sie einen Größen Anpassungsmodus angeben, der die neue Breite basierend auf Werten in einem begrenzten Satz von Zellen berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird diese Methode verwendet, um die Spaltenbreite groß genug zu machen, um einen neuen Zellwert aufnehmen zu können. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Bearbeiten Sie Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md)Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" />, und <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> ist <see langword="false" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />, <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /> oder <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Spalten minus 1.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumn(System.Int32,System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumn (columnIndex As Integer, autoSizeColumnMode As DataGridViewAutoSizeColumnMode, fixedHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.DataGridViewAutoSizeColumnMode * bool -&gt; unit" Usage="dataGridView.AutoResizeColumn (columnIndex, autoSizeColumnMode, fixedHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="autoSizeColumnMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnMode" />
        <Parameter Name="fixedHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index der Spalte, deren Größe geändert werden soll.</param>
        <param name="autoSizeColumnMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" />-Werte.</param>
        <param name="fixedHeight"><see langword="true" />, um die neue Breite auf Grundlage der aktuellen Zeilenhöhe zu berechnen, <see langword="false" />, um die Breite unter der Annahme zu berechnen, dass die Zeilenhöhe ebenfalls angepasst wird.</param>
        <summary>Passt die Breite der angegebenen Spalte im angegebenen Größenänderungsmodus an und berechnet optional die Breite unter der Annahme, dass die jeweilige Zeilenhöhe anschließend angepasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe einer Spalte geändert wird. Die Spaltenbreite wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Spalte zu einem späteren Zeitpunkt ändert, wird die Spalte nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> Größe aller Spalten zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> -Eigenschaft oder <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> die-Eigenschaft, um festzulegen, dass die Spalte bei jeder Änderung automatisch angepasst wird.  
  
 Mit dieser Überladung können Sie einen Größen Anpassungsmodus angeben, der die neue Breite basierend auf Werten in einem begrenzten Satz von Zellen berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Diese Überladung ist geschützt und soll es Ihnen ermöglichen, in einer abgeleiteten <xref:System.Windows.Forms.DataGridView> Klasse eine ideale Größe für die Höhe von Zellen zu erzielen. `fixedHeight` <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> Wenn den Wert <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> hat, wird die Spaltenbreite mit der Annahme berechnet, dass Sie die-Methode oder die-Methode als nächstes aufzurufen. `false`  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" />, und <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> ist <see langword="false" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />, <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.None" /> oder <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Spalten minus 1.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumnHeadersHeight">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Passt die Höhe der Spaltenheader an den Headerinhalt an.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public void AutoResizeColumnHeadersHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumnHeadersHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumnHeadersHeight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumnHeadersHeight();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : unit -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Passt die Höhe der Spaltenheader an den Inhalt des größten Spaltenheaders an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe der Spaltenheader geändert wird. Die Höhe der Spaltenheader wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Spaltenheader später ändert, werden die Spaltenheader nicht automatisch angepasst. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> -Eigenschaft, um die Spaltenheader für die automatische Größenänderung festzulegen, wenn sich Ihre Inhalte ändern.  
  
 Damit der Zellen Inhalt bei der Größenänderung der Spaltenheader in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Größe von Spalten Headern und Zeilen als Ergebnis eines Schaltflächen-Click geändert wird.  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public void AutoResizeColumnHeadersHeight (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumnHeadersHeight(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumnHeadersHeight (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumnHeadersHeight(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : int -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index der Spalte, die den Header mit dem geänderten Inhalt enthält.</param>
        <summary>Passt die Höhe der Spaltenheader auf Grundlage von Inhaltsänderungen an den Header in der angegebenen Spalte an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe der Spaltenheader geändert wird, wenn sich nur der Inhalt des Headers in der angegebenen Spalte aufgrund von Benutzer Bearbeitungen oder Änderungen an einer gebundenen Datenquelle geändert hat. Die Höhe der Spaltenheader wird nur einmal pro Methodenaufrufe angepasst, wenn die Inhalts Änderung dies erfordert. Wenn sich der Inhalt der Spaltenheader später ändert, werden die Spaltenheader nicht automatisch angepasst. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> -Eigenschaft, um die Spaltenheader für die automatische Größenänderung festzulegen, wenn sich Ihre Inhalte ändern.  
  
 Damit der Zellen Inhalt bei der Größenänderung der Spaltenheader in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Spalten minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumnHeadersHeight (bool fixedRowHeadersWidth, bool fixedColumnsWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumnHeadersHeight(bool fixedRowHeadersWidth, bool fixedColumnsWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumnHeadersHeight (fixedRowHeadersWidth As Boolean, fixedColumnsWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumnHeadersHeight(bool fixedRowHeadersWidth, bool fixedColumnsWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : bool * bool -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight (fixedRowHeadersWidth, fixedColumnsWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedRowHeadersWidth" Type="System.Boolean" />
        <Parameter Name="fixedColumnsWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fixedRowHeadersWidth"><see langword="true" />, um die neue Höhe auf Grundlage der aktuellen Zeilenheaderbreite zu berechnen, <see langword="false" />, um die Höhe unter der Annahme zu berechnen, dass die Zeilenheaderbreite ebenfalls angepasst wird.</param>
        <param name="fixedColumnsWidth"><see langword="true" />, um die neue Höhe auf Grundlage der aktuellen Spaltenbreite zu berechnen, <see langword="false" />, um die Höhe unter der Annahme zu berechnen, dass die jeweilige Spaltenbreite ebenfalls angepasst wird.</param>
        <summary>Passt die Höhe der Spaltenheader an den Inhalt an. Optional wird die Höhe mit der Annahme berechnet, dass anschließend die jeweilige Breite der Spalten- und/oder Zeilenheader angepasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe der Spaltenheader geändert wird. Die Höhe der Spaltenheader wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Spaltenheader später ändert, werden die Spaltenheader nicht automatisch angepasst. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> -Eigenschaft, um die Spaltenheader für die automatische Größenänderung festzulegen, wenn sich Ihre Inhalte ändern.  
  
 Damit der Zellen Inhalt bei der Größenänderung der Spaltenheader in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Diese Überladung ist geschützt und soll es Ihnen ermöglichen, in einer abgeleiteten <xref:System.Windows.Forms.DataGridView> Klasse eine ideale Größe für die Höhe von Zellen zu erzielen. Wenn der `fixedColumnsWidth` - `fixedRowHeadersWidth` Parameter oder `false`der-Parameter ist, wird die Höhe der Spaltenheader mit der Annahme berechnet <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> , dass Sie die Methoden wie und <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> Next aufzurufen.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumnHeadersHeight">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumnHeadersHeight (int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumnHeadersHeight(int32 columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight(System.Int32,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumnHeadersHeight (columnIndex As Integer, fixedRowHeadersWidth As Boolean, fixedColumnWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumnHeadersHeight(int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumnHeadersHeight : int * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeColumnHeadersHeight (columnIndex, fixedRowHeadersWidth, fixedColumnWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="fixedRowHeadersWidth" Type="System.Boolean" />
        <Parameter Name="fixedColumnWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index des Spaltenheaders, mit dessen Inhalt die neue Höhe bestimmt werden soll.</param>
        <param name="fixedRowHeadersWidth"><see langword="true" /> , um die neue Höhe auf Grundlage der aktuellen Zeilenheaderbreite zu berechnen, <see langword="false" /> , um die Höhe unter der Annahme zu berechnen, dass die Zeilenheaderbreite ebenfalls angepasst wird.</param>
        <param name="fixedColumnWidth"><see langword="true" />, um die neue Höhe auf Grundlage der aktuellen Breite der angegebenen Spalte zu berechnen, <see langword="false" />, um die Höhe unter der Annahme zu berechnen, dass die Spaltenbreite ebenfalls angepasst wird.</param>
        <summary>Passt die Höhe der Spaltenheader auf Grundlage der Inhaltsänderungen der Header in der angegebenen Spalte an. Optional wird die Höhe mit der Annahme berechnet, dass anschließend die jeweilige Breite der Spalten- und/oder Zeilenheader angepasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe der Spaltenheader geändert wird, wenn sich nur der Inhalt des Headers in der angegebenen Spalte aufgrund von Benutzer Bearbeitungen oder Änderungen an einer gebundenen Datenquelle geändert hat. Die Höhe der Spaltenheader wird nur einmal pro Methodenaufrufe angepasst, wenn die Inhalts Änderung dies erfordert. Wenn sich der Inhalt der Spaltenheader später ändert, werden die Spaltenheader nicht automatisch angepasst. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> -Eigenschaft, um die Spaltenheader für die automatische Größenänderung festzulegen, wenn sich Ihre Inhalte ändern.  
  
 Damit der Zellen Inhalt bei der Größenänderung der Spaltenheader in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Diese Überladung ist geschützt und soll es Ihnen ermöglichen, in einer abgeleiteten <xref:System.Windows.Forms.DataGridView> Klasse eine ideale Größe für die Höhe von Zellen zu erzielen. Wenn der `fixedColumnWidth` - `fixedRowHeadersWidth` Parameter oder `false`der-Parameter ist, wird die Höhe der Spaltenheader mit der Annahme berechnet <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> , dass Sie die Methoden wie und <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> Next aufzurufen.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Spalten minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeColumns">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Passt die Breite aller Spalten an den Inhalt ihrer Zellen an.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : unit -&gt; unit" Usage="dataGridView.AutoResizeColumns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Passt die Breite aller Spalten an den Inhalt ihrer Zellen einschließlich der Headerzellen an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann Spalten die Größe ändern. Die Spaltenbreiten werden nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Spalten später ändert, werden die Spalten nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> Größe einer bestimmten Spalte zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> -Eigenschaft oder die Column <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> -Eigenschaft, um festzulegen, dass die Spalten automatisch angepasst werden, wenn sich Ihre Inhalte ändern.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Größe aller Spalten geändert, sodass Sie dem Inhalt der Spalten und der Spaltenkopfzeilen entsprechen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Programm gesteuertes Anpassen der Zellen Größe an den Inhalt im Windows Forms DataGridView](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)-Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#3)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (autoSizeColumnsMode As DataGridViewAutoSizeColumnsMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.DataGridViewAutoSizeColumnsMode -&gt; unit" Usage="dataGridView.AutoResizeColumns autoSizeColumnsMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeColumnsMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
      </Parameters>
      <Docs>
        <param name="autoSizeColumnsMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />-Werte.</param>
        <summary>Passt die Breite aller Spalten im angegebenen Größenmodus an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann Spalten die Größe ändern. Die Spaltenbreiten werden nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Spalten später ändert, werden die Spalten nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> Größe einer bestimmten Spalte zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> -Eigenschaft oder die Column <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> -Eigenschaft, um festzulegen, dass die Spalten automatisch angepasst werden, wenn sich Ihre Inhalte ändern.  
  
 Mit dieser Überladung können Sie einen Größen Anpassungsmodus angeben, der die neuen breiten auf der Grundlage von Werten in einem begrenzten Satz von Zellen berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Größe aller Spalten geändert, sodass Sie dem Inhalt der Spalten und der Spaltenkopfzeilen entsprechen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Programm gesteuertes Anpassen der Zellen Größe an den Inhalt im Windows Forms DataGridView](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)-Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#3)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />, und <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> ist <see langword="false" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> oder <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnsMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="protected void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeColumns(System.Windows.Forms.DataGridViewAutoSizeColumnsMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeColumns (autoSizeColumnsMode As DataGridViewAutoSizeColumnsMode, fixedHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeColumns(System::Windows::Forms::DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.DataGridViewAutoSizeColumnsMode * bool -&gt; unit" Usage="dataGridView.AutoResizeColumns (autoSizeColumnsMode, fixedHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeColumnsMode" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
        <Parameter Name="fixedHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoSizeColumnsMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />-Werte.</param>
        <param name="fixedHeight"><see langword="true" />, um die jeweils neue Breite auf Grundlage der aktuellen Zeilenhöhe zu berechnen, <see langword="false" />, um die Breite unter der Annahme zu berechnen, dass die jeweilige Zeilenhöhe ebenfalls angepasst wird.</param>
        <summary>Passt die Breite aller Spalten im angegebenen Größenänderungsmodus an und berechnet optional die jeweilige Breite unter der Annahme, dass die jeweilige Zeilenhöhe anschließend angepasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann Spalten die Größe ändern. Die Spaltenbreiten werden nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Spalten später ändert, werden die Spalten nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> Größe einer bestimmten Spalte zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A> -Eigenschaft oder die Column <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> -Eigenschaft, um festzulegen, dass die Spalten automatisch angepasst werden, wenn sich Ihre Inhalte ändern.  
  
 Mit dieser Überladung können Sie einen Größen Anpassungsmodus angeben, der die neuen breiten auf der Grundlage von Werten in einem begrenzten Satz von Zellen berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Diese Überladung ist geschützt und soll es Ihnen ermöglichen, in einer abgeleiteten <xref:System.Windows.Forms.DataGridView> Klasse eine ideale Größe für die Höhe von Zellen zu erzielen. `fixedHeight` <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> Wenn den Wert <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> hat, wird die Spaltenbreite mit der Annahme berechnet, dass Sie die-Methode oder die-Methode als nächstes aufzurufen. `false`  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeColumnsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />, und <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" /> ist <see langword="false" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeColumnsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" /> oder <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeColumnsMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Passt die Höhe der angegebenen Zeile an den Inhalt ihrer Zellen an.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="public void AutoResizeRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int -&gt; unit" Usage="dataGridView.AutoResizeRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, deren Größe geändert werden soll.</param>
        <summary>Passt die Höhe der angegebenen Zeile an den Inhalt ihrer Zellen einschließlich der Headerzelle an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe einer Zeile geändert wird. Die Zeilenhöhe wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Zeile später ändert, wird die Zeile nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> Größe aller Zeilen zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> -Eigenschaft, um festzulegen, dass die Größe automatisch geändert wird, wenn sich der Inhalt ändert.  
  
 Damit der Zellen Inhalt bei der Größenänderung einer Zeile in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Größe der dritten Zeile eines <xref:System.Windows.Forms.DataGridView> an den Spalten Inhalt angepasst. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Programm gesteuertes Anpassen der Zellen Größe an den Inhalt im Windows Forms DataGridView](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)-Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#4)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#4)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="public void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRow(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRow (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRow(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int * System.Windows.Forms.DataGridViewAutoSizeRowMode -&gt; unit" Usage="dataGridView.AutoResizeRow (rowIndex, autoSizeRowMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, deren Größe geändert werden soll.</param>
        <param name="autoSizeRowMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />-Werte.</param>
        <summary>Passt die Höhe der angegebenen Zeile anhand des angegebenen Größenmodus an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe einer Zeile geändert wird. Die Zeilenhöhe wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Zeile später ändert, wird die Zeile nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> Größe aller Zeilen zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> -Eigenschaft, um festzulegen, dass die Größe automatisch geändert wird, wenn sich der Inhalt ändert.  
  
 Damit der Zellen Inhalt bei der Größenänderung einer Zeile in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Mit dieser Überladung können Sie einen Größen Anpassungsmodus angeben, der die neue Höhe auf der Grundlage von Werten in einer begrenzten Menge von Zellen berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Größe der dritten Zeile eines <xref:System.Windows.Forms.DataGridView> an den Spalten Inhalt angepasst. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Programm gesteuertes Anpassen der Zellen Größe an den Inhalt im Windows Forms DataGridView](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)-Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#4)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#4)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" />, und <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> ist <see langword="false" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> -Wert.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRow">
      <MemberSignature Language="C#" Value="protected void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRow(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRow(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRow (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRow(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRow : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRow (rowIndex, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, deren Größe geändert werden soll.</param>
        <param name="autoSizeRowMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />-Werte.</param>
        <param name="fixedWidth"><see langword="true" />, um die neue Höhe auf Grundlage der aktuellen Breite der Spalten zu berechnen, <see langword="false" />, um die Höhe unter der Annahme zu berechnen, dass die jeweilige Spaltenbreite ebenfalls angepasst wird.</param>
        <summary>Passt die Höhe der angegebenen Zeile im angegebenen Größenänderungsmodus an und berechnet optional die Höhe unter der Annahme, dass die jeweilige Spaltenbreite anschließend angepasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe einer Zeile geändert wird. Die Zeilenhöhe wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Zeile später ändert, wird die Zeile nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> Größe aller Zeilen zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> -Eigenschaft, um festzulegen, dass die Größe automatisch geändert wird, wenn sich der Inhalt ändert.  
  
 Damit der Zellen Inhalt bei der Größenänderung einer Zeile in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Mit dieser Überladung können Sie einen Größen Anpassungsmodus angeben, der die neue Höhe auf der Grundlage von Werten in einer begrenzten Menge von Zellen berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Diese Überladung ist geschützt und soll es Ihnen ermöglichen, in einer abgeleiteten <xref:System.Windows.Forms.DataGridView> Klasse eine ideale Größe für die Höhe von Zellen zu erzielen. `fixedWidth` <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> Wenn den Wert <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> hat, wird die Zeilenhöhe mit der Annahme berechnet, dass Sie die-Methode oder die-Methode als nächstes aufzurufen. `false`  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader" />, und <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> ist <see langword="false" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> -Wert.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRowHeadersWidth">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Passt die Breite der Zeilenheader an den Headerinhalt an.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="public void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRowHeadersWidth(valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRowHeadersWidth(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth rowHeadersWidthSizeMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
      </Parameters>
      <Docs>
        <param name="rowHeadersWidthSizeMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Werte.</param>
        <summary>Passt die Breite der Zeilenheader anhand des angegebenen Größenmodus an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe der Zeilen Header geändert wird. Die Breite der Zeilen Header wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Zeilen Header später ändert, werden die Zeilen Header nicht automatisch angepasst. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> -Eigenschaft, um festzulegen, dass die Größe der Zeilen Header automatisch geändert wird, wenn sich Ihre Inhalte ändern  
  
 Mit dieser Methode können Sie einen Größen Anpassungsmodus angeben, der die neue Breite basierend auf Werten in einem begrenzten Satz von Headern berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> oder <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="public void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRowHeadersWidth(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRowHeadersWidth (rowIndex As Integer, rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRowHeadersWidth(int rowIndex, System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : int * System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowIndex, rowHeadersWidthSizeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index des Zeilenheaders mit dem geänderten Inhalt.</param>
        <param name="rowHeadersWidthSizeMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Werte.</param>
        <summary>Passt die Breite der Zeilenheader auf Grundlage der Inhaltsänderungen in der angegebenen Zeile im angegebenen Größenänderungsmodus an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe der Zeilen Header geändert wird, wenn sich nur der Inhalt des Headers in der angegebenen Zeile aufgrund von Benutzer Bearbeitungen oder Änderungen an einer gebundenen Datenquelle geändert hat. Die Breite der Zeilen Header wird nur einmal pro Methodenaufrufe angepasst, wenn die Inhalts Änderung dies erfordert. Wenn sich der Inhalt der Zeilen Header später ändert, werden die Zeilen Header nicht automatisch angepasst. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> -Eigenschaft, um festzulegen, dass die Größe der Zeilen Header automatisch geändert wird, wenn sich Ihre Inhalte ändern  
  
 Mit dieser Methode können Sie einen Größen Anpassungsmodus angeben, der die neue Breite basierend auf Werten in einem begrenzten Satz von Headern berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Größe der Zeilen Header Breite basierend auf den Änderungen am Inhalt des ersten Zeilen Headers geändert wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Programm gesteuertes Anpassen der Zellen Größe an den Inhalt im Windows Forms DataGridView](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)-Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#5)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen minus 1.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> oder <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="protected void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRowHeadersWidth(valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode, fixedColumnHeadersHeight As Boolean, fixedRowsHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRowHeadersWidth(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowHeadersWidthSizeMode, fixedColumnHeadersHeight, fixedRowsHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
        <Parameter Name="fixedColumnHeadersHeight" Type="System.Boolean" />
        <Parameter Name="fixedRowsHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowHeadersWidthSizeMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Werte.</param>
        <param name="fixedColumnHeadersHeight"><see langword="true" /> , um die neue Breite auf Grundlage der aktuellen Höhe der angegebenen Spalte zu berechnen, <see langword="false" /> , um die Breite unter der Annahme zu berechnen, dass die Höhe der Spaltenheader ebenfalls angepasst wird.</param>
        <param name="fixedRowsHeight"><see langword="true" />, um die neue Breite auf Grundlage der aktuellen Zeilenhöhe zu berechnen, <see langword="false" />, um die Breite unter der Annahme zu berechnen, dass die Zeilenhöhe ebenfalls angepasst wird.</param>
        <summary>Passt die Breite der angegebenen Zeilenheader im angegebenen Größenänderungsmodus an und berechnet optional die Breite unter der Annahme, dass die jeweilige Zeilen- und/oder Spaltenheaderbreite anschließend angepasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe der Zeilen Header geändert wird. Die Breite der Zeilen Header wird nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Zeilen Header später ändert, werden die Zeilen Header nicht automatisch angepasst. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> -Eigenschaft, um festzulegen, dass die Größe der Zeilen Header automatisch geändert wird, wenn sich Ihre Inhalte ändern  
  
 Mit dieser Methode können Sie einen Größen Anpassungsmodus angeben, der die neue Breite basierend auf Werten in einem begrenzten Satz von Headern berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Diese Überladung ist geschützt und soll es Ihnen ermöglichen, in einer abgeleiteten <xref:System.Windows.Forms.DataGridView> Klasse eine ideale Größe für die Höhe von Zellen zu erzielen. Wenn der `fixedColumnHeadersHeight` - `fixedRowsHeight` Parameter oder `false`der-Parameter ist, wird die Breite der Zeilen Header mit der Annahme berechnet, dass Sie Methoden wie <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> und <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> Next abrufen werden.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> oder <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRowHeadersWidth">
      <MemberSignature Language="C#" Value="protected void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRowHeadersWidth(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth(System.Int32,System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRowHeadersWidth (rowIndex As Integer, rowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode, fixedColumnHeadersHeight As Boolean, fixedRowHeight As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRowHeadersWidth(int rowIndex, System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRowHeadersWidth : int * System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode * bool * bool -&gt; unit" Usage="dataGridView.AutoResizeRowHeadersWidth (rowIndex, rowHeadersWidthSizeMode, fixedColumnHeadersHeight, fixedRowHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowHeadersWidthSizeMode" Type="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />
        <Parameter Name="fixedColumnHeadersHeight" Type="System.Boolean" />
        <Parameter Name="fixedRowHeight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, die den Header mit dem geänderten Inhalt enthält.</param>
        <param name="rowHeadersWidthSizeMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Werte.</param>
        <param name="fixedColumnHeadersHeight"><see langword="true" />, um die neue Breite auf Grundlage der aktuellen Höhe der angegebenen Spalte zu berechnen, <see langword="false" />, um die Breite unter der Annahme zu berechnen, dass die Höhe der Spaltenheader ebenfalls angepasst wird.</param>
        <param name="fixedRowHeight"><see langword="true" />, um die neue Breite auf Grundlage der aktuellen Höhe der angegebenen Zeile zu berechnen, <see langword="false" />, um die Breite unter der Annahme zu berechnen, dass die Zeilenhöhe ebenfalls angepasst wird.</param>
        <summary>Passt die Breite der Zeilenheader auf Grundlage der Inhaltsänderungen der Header in der angegebenen Spalte im angegebenen Größenmodus an. Optional wird die Breite mit der Annahme berechnet, dass anschließend die jeweilige Breite der Spalten- und/oder Zeilenheader angepasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe der Zeilen Header geändert wird, wenn sich nur der Inhalt des Headers in der angegebenen Zeile aufgrund von Benutzer Bearbeitungen oder Änderungen an einer gebundenen Datenquelle geändert hat. Die Breite der Zeilen Header wird nur einmal pro Methodenaufrufe angepasst, wenn die Inhalts Änderung dies erfordert. Wenn sich der Inhalt der Zeilen Header später ändert, werden die Zeilen Header nicht automatisch angepasst. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> -Eigenschaft, um festzulegen, dass die Größe der Zeilen Header automatisch geändert wird, wenn sich Ihre Inhalte ändern  
  
 Mit dieser Methode können Sie einen Größen Anpassungsmodus angeben, der die neue Breite basierend auf Werten in einem begrenzten Satz von Headern berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Diese Überladung ist geschützt und soll es Ihnen ermöglichen, in einer abgeleiteten <xref:System.Windows.Forms.DataGridView> Klasse eine ideale Größe für die Höhe von Zellen zu erzielen. Wenn der `fixedColumnHeadersHeight` - `fixedRowHeight` Parameter oder `false`der-Parameter ist, wird die Breite der Zeilen Header mit der Annahme berechnet, dass Sie Methoden wie <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> und <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> Next abrufen werden.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen minus 1.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="rowHeadersWidthSizeMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" /> oder <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="rowHeadersWidthSizeMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AutoResizeRows">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Passt die Höhe einiger oder aller Zeilen an den jeweiligen Inhalt an.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="public void AutoResizeRows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRows();" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : unit -&gt; unit" Usage="dataGridView.AutoResizeRows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Passt die Höhe aller Zeilen an den Inhalt ihrer Zellen einschließlich der Headerzellen an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Zeilengröße geändert wird. Die Zeilen Höhen werden nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Zeilen später ändert, werden die Zeilen nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> Größe einer bestimmten Zeile zu ändern. Verwenden Sie die-Überladung, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29> Größe einer Teilmenge von Zeilen zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> -Eigenschaft, um festzulegen, dass die Zeilen automatisch geändert werden, wenn sich Ihre Inhalte ändern.  
  
 Damit der Zellen Inhalt bei der Größenänderung einer Zeile in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Größe aller Zeilen basierend auf dem Zellen Inhalt, der keine Kopfzeile ist, geändert wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Programm gesteuertes Anpassen der Zellen Größe an den Inhalt im Windows Forms DataGridView](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)-Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="public void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeRows(valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeRows (autoSizeRowsMode As DataGridViewAutoSizeRowsMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeRows(System::Windows::Forms::DataGridViewAutoSizeRowsMode autoSizeRowsMode);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : System.Windows.Forms.DataGridViewAutoSizeRowsMode -&gt; unit" Usage="dataGridView.AutoResizeRows autoSizeRowsMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeRowsMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
      </Parameters>
      <Docs>
        <param name="autoSizeRowsMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />-Werte.</param>
        <summary>Passt die Höhe der Zeilen im angegebenen Größenmodus an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Zeilengröße geändert wird. Die Zeilen Höhen werden nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Zeilen später ändert, werden die Zeilen nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> Größe einer bestimmten Zeile zu ändern. Verwenden Sie die-Überladung, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29> Größe einer Teilmenge von Zeilen zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> -Eigenschaft, um festzulegen, dass die Zeilen automatisch geändert werden, wenn sich Ihre Inhalte ändern.  
  
 Damit der Zellen Inhalt bei der Größenänderung einer Zeile in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Mit dieser Überladung können Sie einen Größen Anpassungsmodus angeben, der die neuen Höhen basierend auf Werten in einem begrenzten Satz von Zellen berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Größe aller Zeilen basierend auf dem Zellen Inhalt, der keine Kopfzeile ist, geändert wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Programm gesteuertes Anpassen der Zellen Größe an den Inhalt im Windows Forms DataGridView](~/docs/framework/winforms/controls/programmatically-resize-cells-to-fit-content-in-the-datagrid.md)-Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CPP/programmaticsizing.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/CS/programmaticsizing.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ProgrammaticResizing#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ProgrammaticResizing/VB/programmaticsizing.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> oder <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />, und <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> ist <see langword="false" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowsMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />-Wert.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeRowsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="protected void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRows(valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Windows.Forms.DataGridViewAutoSizeRowsMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRows (autoSizeRowsMode As DataGridViewAutoSizeRowsMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRows(System::Windows::Forms::DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : System.Windows.Forms.DataGridViewAutoSizeRowsMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRows (autoSizeRowsMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoSizeRowsMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoSizeRowsMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />-Werte.</param>
        <param name="fixedWidth"><see langword="true" />, um die jeweils neue Höhe auf Grundlage der aktuellen Spaltenbreite zu berechnen, <see langword="false" />, um die Höhe unter der Annahme zu berechnen, dass die jeweilige Spaltenbreite ebenfalls angepasst wird.</param>
        <summary>Passt die Höhe aller Zeilen im angegebenen Größenänderungsmodus an und berechnet optional die jeweilige Höhe unter der Annahme, dass die jeweilige Spaltenbreite anschließend angepasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Zeilengröße geändert wird. Die Zeilen Höhen werden nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Zeilen später ändert, werden die Zeilen nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> Größe einer bestimmten Zeile zu ändern. Verwenden Sie die-Überladung, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29> Größe einer Teilmenge von Zeilen zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> -Eigenschaft, um festzulegen, dass die Zeilen automatisch geändert werden, wenn sich Ihre Inhalte ändern.  
  
 Damit der Zellen Inhalt bei der Größenänderung einer Zeile in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Mit dieser Überladung können Sie einen Größen Anpassungsmodus angeben, der die neuen Höhen basierend auf Werten in einem begrenzten Satz von Zellen berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Diese Überladung ist geschützt und soll es Ihnen ermöglichen, in einer abgeleiteten <xref:System.Windows.Forms.DataGridView> Klasse eine ideale Größe für die Höhe von Zellen zu erzielen. Wenn der `fixedWidth` -Parameter `false`ist, wird die Zeilenhöhe mit der Annahme berechnet, dass Sie die- <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> Methode <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> oder die-Methode als nächstes aufrufen werden.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> oder <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />, und <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> ist <see langword="false" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowsMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />-Wert.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeRowsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeRows">
      <MemberSignature Language="C#" Value="protected void AutoResizeRows (int rowIndexStart, int rowsCount, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AutoResizeRows(int32 rowIndexStart, int32 rowsCount, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.AutoResizeRows(System.Int32,System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AutoResizeRows (rowIndexStart As Integer, rowsCount As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AutoResizeRows(int rowIndexStart, int rowsCount, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeRows : int * int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; unit" Usage="dataGridView.AutoResizeRows (rowIndexStart, rowsCount, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndexStart" Type="System.Int32" />
        <Parameter Name="rowsCount" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndexStart">Der Index der ersten Zeile, deren Größe geändert werden soll.</param>
        <param name="rowsCount">Die Anzahl der Zeilen, deren Größe geändert werden soll.</param>
        <param name="autoSizeRowMode">Einer der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />-Werte.</param>
        <param name="fixedWidth"><see langword="true" />, um die jeweils neue Höhe auf Grundlage der aktuellen Spaltenbreite zu berechnen, <see langword="false" />, um die Höhe unter der Annahme zu berechnen, dass die jeweilige Spaltenbreite ebenfalls angepasst wird.</param>
        <summary>Passt die Höhe der angegebenen Zeilen im angegebenen Größenänderungsmodus an und berechnet optional die Höhe unter der Annahme, dass die jeweilige Spaltenbreite anschließend angepasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie steuern möchten, wann die Größe von Zeilen geändert wird, Sie aber nur eine bestimmte Teilmenge von Zeilen ändern möchten, z. b. die in einem Bereich von Datensätzen, die aktualisiert wurden. Die Zeilen Höhen für die angegebenen Zeilen werden nur einmal pro Methodenaufrufe angepasst. Wenn sich der Inhalt der Zeilen später ändert, werden die Zeilen nicht automatisch angepasst. Verwenden Sie die-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> Größe einer bestimmten Zeile zu ändern. Verwenden Sie eine andere Überladung der-Methode, um die <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> Größe aller Zeilen zu ändern. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A> -Eigenschaft, um festzulegen, dass die Zeilen automatisch geändert werden, wenn sich Ihre Inhalte ändern.  
  
 Damit der Zellen Inhalt bei der Größenänderung einer Zeile in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Mit dieser Überladung können Sie einen Größen Anpassungsmodus angeben, der die neuen Höhen basierend auf Werten in einem begrenzten Satz von Zellen berechnet, z. b. in den angezeigten Zeilen. Dadurch wird die Leistung verbessert, wenn das Steuerelement eine große Anzahl von Zeilen enthält.  
  
 Diese Überladung ist geschützt und soll es Ihnen ermöglichen, in einer abgeleiteten <xref:System.Windows.Forms.DataGridView> Klasse eine ideale Größe für die Höhe von Zellen zu erzielen. Wenn der `fixedWidth` -Parameter `false`ist, wird die Zeilenhöhe mit der Annahme berechnet, dass Sie die- <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> Methode <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> oder die-Methode als nächstes aufrufen werden.  
  
 Weitere Informationen zur programmatischen Größenänderung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="autoSizeRowsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> oder <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />, und <see cref="P:System.Windows.Forms.DataGridView.RowHeadersVisible" /> ist <see langword="false" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="autoSizeRowsMode" /> ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />-Wert.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="autoSizeRowsMode" /> hat den Wert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndexStart" /> ist kleiner als 0.  
  
- oder - 
 <paramref name="rowsCount" /> ist kleiner als 0.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.DataGridView.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Im aktivierten Zustand <see langword="true" />, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeColumnModeChanged As DataGridViewAutoSizeColumnModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeColumnModeEventHandler ^ AutoSizeColumnModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler " Usage="member this.AutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" />-Eigenschaft einer Spalte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Ereignisses veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Bearbeiten Sie die Spalten im Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-manipulate-columns-in-the-windows-forms-datagridview-control.md)-Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#180)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#180)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#180](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#180)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnsMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeColumnsMode As DataGridViewAutoSizeColumnsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { System::Windows::Forms::DataGridViewAutoSizeColumnsMode get(); void set(System::Windows::Forms::DataGridViewAutoSizeColumnsMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnsMode : System.Windows.Forms.DataGridViewAutoSizeColumnsMode with get, set" Usage="System.Windows.Forms.DataGridView.AutoSizeColumnsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, wie die Spaltenbreite bestimmt wird, oder legt sie fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />-Wert. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie das Steuerelement so konfigurieren, dass die Spaltenbreite automatisch so angepasst wird, dass Sie das Steuerelement ausfüllen oder an den Zellen Inhalt angepasst wird. Größenanpassungen treten im Füllmodus auf, wenn sich die Breite des Steuer Elements ändert. In Inhalts basierten Größen Anpassungs Modi treten Größenanpassungen auf, wenn sich Zellen Inhalte ändern oder <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> Wenn aktiviert ist, wenn sich die Zeilen Höhen ändern. Mit einigen Inhalts basierten Größen Anpassungs Modi können Sie die Größenanpassung auf die aktuell angezeigten Zeilen beschränken, um die Leistung zu steigern.  
  
 Wenn Sie den Größen Anpassungsmodus für eine einzelne Spalte ändern möchten <xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A> , legen Sie dessen-Eigenschaft fest. Der Standardwert dieser Eigenschaft ist <xref:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet>, der angibt, dass die Spalte ihr Verhalten und ihren <xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A> Eigenschafts Wert vom-Steuerelement erbt.  
  
 Spalten im Füllmodus unterteilen die verfügbare Steuerelement Breite in Proportionen <xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A> , die durch ihre Eigenschaftswerte angegeben werden. Die für den Füll Modus verfügbare Breite wird durch Subtrahieren der breiten aller anderen Spalten von der Breite des Client Bereichs des Steuer Elements bestimmt. Wenn diese Breite kleiner als die kombinierten <xref:System.Windows.Forms.DataGridViewColumn.MinimumWidth%2A> Werte aller Spalten im Füllmodus ist, wird die horizontale Schiebe Leiste angezeigt, alle Spalten im Füllmodus werden mit ihren minimalen breiten angezeigt, und die Größe von Benutzer Spalten wird deaktiviert. Weitere Informationen zum Spalten Füll Modus finden Sie unter [Spalten Füll Modus im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)Element.  
  
 Nur Spalten mit dem <xref:System.Windows.Forms.DataGridViewColumn.Visible%2A> -Eigenschafts `true` Wert werden automatisch in der Größe geändert, und das Ändern der Sichtbarkeit einer Spalte führt nicht dazu, dass die Größenänderung erfolgt. Wenn für die Spalten die automatische Größenänderung festgelegt ist, kann der Benutzer die Spaltenbreite außerdem nicht mit der Maus anpassen.  
  
 Wenn Sie die Spaltenbreite Programm gesteuert anpassen möchten <xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A> , <xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A> verwenden Sie die- <xref:System.Windows.Forms.DataGridViewColumn.Width%2A> Methode oder die-Methode, oder legen Sie die  
  
 Weitere Informationen zur Inhalts basierten automatischen Größenanpassung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft in einem Master/Detail-Szenario verwendet <xref:System.Windows.Forms.DataGridView> wird, in dem zwei-Steuerelemente Daten aus zwei Tabellen in einer über-/Unterordnungsbeziehung anzeigen. In diesem Beispiel ist <xref:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None>der Spaltengrößen Änderungs Modus für das Master-Steuerelement, und die Spaltenbreiten werden Programm gesteuert für die geladenen Werte initialisiert. Das Detail Steuerelement wird auf einen automatischen Spaltengrößen Anpassungsmodus festgelegt, sodass die Spalten automatisch angepasst werden, wenn sich die Werte ändern (z. b. wenn der Benutzer die aktuelle Zeile in der übergeordneten Tabelle ändert). Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Erstellen Sie ein Master-/Detailformular mit zwei Windows Forms DataGridView-Steuerelementen](~/docs/framework/winforms/controls/create-a-master-detail-form-using-two-datagridviews.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMasterDetails#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMasterDetails/CS/masterdetails.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMasterDetails#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMasterDetails/VB/masterdetails.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />-Wert.</exception>
        <exception cref="T:System.InvalidOperationException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader" />, Spaltenüberschriften sind ausgeblendet, und mindestens eine sichtbare Spalte verfügt über den <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" />-Eigenschaftswert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" />.  
  
- oder - 
Der beim Festlegen dieser Eigenschaft angegebene Wert ist <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill" />, und mindestens eine sichtbare Spalte mit dem <see cref="P:System.Windows.Forms.DataGridViewColumn.AutoSizeMode" />-Eigenschaftswert <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet" /> ist eingefroren.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.FillWeight" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeColumnsModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeColumnsModeChanged As DataGridViewAutoSizeColumnsModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeColumnsModeEventHandler ^ AutoSizeColumnsModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler " Usage="member this.AutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.AutoSizeColumnsMode" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#257](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#257)]
 [!code-vb[System.Windows.Forms.EventExamples#257](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#257)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeRowsMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeRowsMode As DataGridViewAutoSizeRowsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewAutoSizeRowsMode AutoSizeRowsMode { System::Windows::Forms::DataGridViewAutoSizeRowsMode get(); void set(System::Windows::Forms::DataGridViewAutoSizeRowsMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeRowsMode : System.Windows.Forms.DataGridViewAutoSizeRowsMode with get, set" Usage="System.Windows.Forms.DataGridView.AutoSizeRowsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeRowsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, wie die Zeilenhöhe bestimmt wird, oder legt ihn fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />-Wert, der den Größenanpassungsmodus angibt. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie das Steuerelement so konfigurieren, dass die Zeilenhöhe automatisch an ihren Inhalt angepasst wird, wenn sich der Inhalt ändert. Wenn <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> aktiviert ist, werden Zeilen Höhen auch immer dann angepasst, wenn sich die Spaltenbreite ändern. Mit einigen Größen Anpassungs Modi können Sie die Größenanpassung auf die aktuell angezeigten Zeilen beschränken, um die Leistung zu steigern.  
  
 Nur Zeilen mit einem <xref:System.Windows.Forms.DataGridViewRow.Visible%2A> -Eigenschafts `true` Wert von werden automatisch geändert, und das Ändern der Sichtbarkeit einer Zeile führt nicht zum Ändern der Größenänderung. Wenn für Zeilen die automatische Größenänderung festgelegt ist, kann der Benutzer außerdem die Zeilen Höhen nicht mit der Maus anpassen.  
  
 Der <xref:System.Windows.Forms.DataGridViewRow.Height%2A> Wert einer Zeile mit automatischer Größe wird während des Layouts neu berechnet, um die Größe der verwendeten Schriftart zu berücksichtigen. Um den richtigen <xref:System.Windows.Forms.DataGridViewRow.Height%2A>Wert zu erhalten, sollten Sie den Wert im <xref:System.Windows.Forms.Control.Layout> Ereignis des Formulars anstelle von im Konstruktor des Formulars abrufen.  
  
 Um Zeilen Höhen Programm gesteuert anzupassen, verwenden Sie <xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A> die <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> -Methode oder die-Methode <xref:System.Windows.Forms.DataGridViewRow.Height%2A> , oder legen Sie die Row-Eigenschaft fest  
  
 Damit der Zellen Inhalt bei der Größenänderung einer Zeile in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Weitere Informationen zur Inhalts basierten automatischen Größenanpassung finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Zeile für die automatische Größenänderung basierend auf dem Inhalt der Zeilen Header und aller Spalten festgelegt wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Zellen automatisch ändern, wenn sich der Inhalt im Windows Forms DataGridView-](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)Steuerelement ändert.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CPP/autosizing.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CS/autosizing.cs#9)]
 [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/VB/autosizing.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />-Wert.</exception>
        <exception cref="T:System.InvalidOperationException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> oder <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" />, wenn Zeilenheader ausgeblendet sind.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1d68934d-a04c-4b12-9e66-c856c6828131">Gewusst wie: Automatisches Anpassen der Zellengröße bei Änderungen des Inhalts im DataGridView-Steuerelement von Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeRowsModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeRowsModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ AutoSizeRowsModeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.AutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowsMode" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Ereignisses veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Zellen automatisch ändern, wenn sich der Inhalt im Windows Forms DataGridView-](~/docs/framework/winforms/controls/automatically-resize-cells-when-content-changes-in-the-datagrid.md)Steuerelement ändert.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CPP/autosizing.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/CS/autosizing.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.AutoSizing#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.AutoSizing/VB/autosizing.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe für das Steuerelement ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe des Steuerelements darstellt. Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />-Eigenschaft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für dieses Steuerelement nicht relevant. Verwenden Sie die <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A> -Eigenschaft, um die Hintergrundfarbe <xref:System.Windows.Forms.DataGridView> für den Teil des-Steuer Elements festzulegen, der nicht von Zellen belegt ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.BackgroundColor" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.BackColor" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.BackColorChanged> -Ereignis wird ausgelöst, <xref:System.Windows.Forms.DataGridView.BackColor%2A> wenn die Eigenschaft Programm gesteuert oder durch Benutzerinteraktion geändert wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackgroundColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackgroundColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe der <see cref="T:System.Windows.Forms.DataGridView" /> ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe von <see cref="T:System.Windows.Forms.DataGridView" /> darstellt. Die Standardeinstellung ist <see cref="P:System.Drawing.SystemColors.AppWorkspace" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A> -Eigenschaft bestimmt die Farbe des Bereichs <xref:System.Windows.Forms.DataGridView> von, der nicht mit Zellen gefüllt ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A> -Eigenschaft festgelegt wird. Außerdem wird im Codebeispiel veranschaulicht, wie die-Eigenschaft <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> die-Eigenschaft festgelegt werden. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular ein, <xref:System.Windows.Forms.DataGridView> das `dataGridView1`einen mit dem Namen enthält `SetUpDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist <see cref="F:System.Drawing.Color.Empty" />.  
  
- oder - 
Der beim Festlegen dieser Eigenschaft angegebene Wert weist einen <see cref="P:System.Drawing.Color.A" />-Eigenschaftswert auf, der kleiner als 255 ist.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundColorChanged : EventHandler " Usage="member this.BackgroundColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.BackgroundColor" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.BackgroundColorChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.BackgroundColorChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#259](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#259)]
 [!code-vb[System.Windows.Forms.EventExamples#259](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#259)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das im Steuerelement angezeigte Hintergrundbild ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Image" />, das das im Hintergrund des Steuerelements anzuzeigende Bild darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für dieses Steuerelement nicht relevant.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.BackgroundImage" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.DataGridView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, welches Hintergrundbildlayout gemäß der Definition in der <see cref="T:System.Windows.Forms.ImageLayout" />-Enumeration verwendet wird.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.ImageLayout" />-Wert, der das Layout für das Hintergrundbild angibt. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für dieses Steuerelement nicht relevant.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridView.BackgroundImageLayout" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dieses Ereignis wie beschrieben auftritt, ist <xref:System.Windows.Forms.DataGridView.BackgroundImageLayout%2A> die-Eigenschaft für dieses Steuerelement nicht relevant.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual bool BeginEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.BeginEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (selectAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool BeginEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : bool -&gt; bool&#xA;override this.BeginEdit : bool -&gt; bool" Usage="dataGridView.BeginEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll"><see langword="true" />, um den Inhalt der gesamten Zelle auszuwählen, <see langword="false" />, um keinen Inhalt auszuwählen.</param>
        <summary>Versetzt die aktuelle Zelle in den Bearbeitungsmodus.</summary>
        <returns><see langword="true" />, wenn sich die aktive Zelle bereits im Bearbeitungsmodus befindet oder erfolgreich in den Bearbeitungsmodus wechselt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt `false` zurück, wenn die Zelle nicht in den Bearbeitungsmodus wechseln kann. Dies kann aus verschiedenen Gründen geschehen. Diese Methode gibt `false` zurück, wenn die aktuelle Zelle schreibgeschützt ist. Außerdem wird zurück `false` gegeben, wenn <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> die Zellen `null` Eigenschaft ist (d. h. die Zelle kann kein Bearbeitungs Steuerelement hosten), <xref:System.Windows.Forms.IDataGridViewEditingCell> und der Zellentyp implementiert nicht die-Schnittstelle.  
  
 Wenn die Zelle die Bearbeitung unterstützt, löst diese <xref:System.Windows.Forms.DataGridView.CellBeginEdit> Methode das-Ereignis aus, das abgebrochen `false` werden kann, und gibt zurück, wenn ein Ereignishandler den Bearbeitungsvorgang abbricht. Wenn die Bearbeitung nicht abgebrochen wird und die Zelle ein Bearbeitungs Steuerelement hosten kann, initialisiert diese Methode das Steuerelement und zeigt es an. Wenn die Initialisierung fehlschlägt, gibt diese `false`Methode zurück.  
  
 Wenn die Zelle erfolgreich in den Bearbeitungsmodus wechselt <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A> , gibt `true`die-Eigenschaft zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Methode veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.DataGridView.CurrentCell" /> ist nicht auf eine gültige Zelle festgelegt.  
  
- oder - 
Diese Methode wurde in einem Ereignishandler für das <see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" />-Ereignis aufgerufen.</exception>
        <exception cref="T:System.InvalidCastException">Der von der <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der Zelle angegebene Typ ist nicht vom <see cref="T:System.Windows.Forms.Control" />-Typ abgeleitet.  
  
- oder - 
Der von der <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der Zelle angegebene Typ implementiert nicht die <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />-Schnittstelle.</exception>
        <exception cref="T:System.Exception">Fehler bei der Initialisierung der Bearbeitung des Zellwerts, und entweder liegt kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vor, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
        <altmember cref="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart für das <see cref="T:System.Windows.Forms.DataGridView" /> ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.BorderStyle" />-Werte. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.BorderStyle.FixedSingle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wirkt sich auf den äußeren Rahmen <xref:System.Windows.Forms.DataGridView>des aus. Um den Stil der Zell Rahmen festzulegen, verwenden Sie <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> die-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine einfache Datenbindung <xref:System.Windows.Forms.DataGridView>initialisiert wird. Außerdem wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.BorderStyle%2A> -Eigenschaft festgelegt wird.  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.BorderStyle" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.BorderStyle" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.BorderStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.BorderStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#260](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#260)]
 [!code-vb[System.Windows.Forms.EventExamples#260](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#260)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CancelEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; bool" Usage="dataGridView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht den Bearbeitungsmodus für die aktuell ausgewählte Zelle ab und verwirft alle Änderungen.</summary>
        <returns><see langword="true" />, wenn der Abbruchvorgang erfolgreich war, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Methode. Dieses Beispiel ist Teil eines größeren Beispiels, das im [Spalten Füll Modus im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)Element verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewFillColumnsDemo/CS/fillcolumns.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewFillColumnsDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewFillColumnsDemo/vb/fillcolumns.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CancelRowEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QuestionEventHandler CancelRowEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QuestionEventHandler CancelRowEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CancelRowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelRowEdit As QuestionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QuestionEventHandler ^ CancelRowEdit;" />
      <MemberSignature Language="F#" Value="member this.CancelRowEdit : System.Windows.Forms.QuestionEventHandler " Usage="member this.CancelRowEdit : System.Windows.Forms.QuestionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QuestionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" />-Eigenschaft eines <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements <see langword="true" /> ist und Bearbeitungen in einer Zeile abgebrochen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> Wenn sich im virtuellen Modus befindet, werden die Änderungen standardmäßig an den Daten Cache auf Zellen Ebene übertragen. Das <xref:System.Windows.Forms.DataGridView.CancelRowEdit> -Ereignis kann verwendet werden, wenn Transaktionen auf Zeilenebene implementiert werden.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis für ein <xref:System.Windows.Forms.DataGridView> Steuerelement im virtuellen Modus behandelt wird. Wenn sich das Steuerelement im Bearbeitungsmodus befindet `rowInEdit` , enthält die Variable den Index der Zeile, die bearbeitet wird `customerInEdit` , und die Variable enthält einen Verweis auf ein Customer-Objekt, das dieser Zeile entspricht. Wenn der Benutzer den Bearbeitungsmodus abbricht, kann dieses Objekt verworfen werden. Wenn die Zeile, die der Benutzer bearbeitet hat, die Zeile für neue Datensätze ist, wird jedoch das alte Customer-Objekt verworfen und durch ein neues ersetzt, sodass der Benutzer die Änderungen wiederherstellen kann. Dieses Beispiel ist Teil eines größeren Beispiels, das in [Exemplarische Vorgehensweise zur Verfügung steht: Implementieren des virtuellen Modus im DataGridView-Steuer](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)Element Windows Forms.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CPP/virtualmode.cpp#170)]
 [!code-csharp[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CS/virtualmode.cs#170)]
 [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/VB/virtualmode.vb#170)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.DataGridView.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Windows.Forms.Control.ImeMode" />-Eigenschaft auf einen aktiven Wert festgelegt werden kann, um IME-Unterstützung zu aktivieren.</summary>
        <value><see langword="true" />, wenn eine Zelle ausgewählt ist, die bearbeitet werden kann, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBeginEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellBeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellBeginEdit As DataGridViewCellCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellCancelEventHandler ^ CellBeginEdit;" />
      <MemberSignature Language="F#" Value="member this.CellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventHandler " Usage="member this.CellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Bearbeitungsmodus für die ausgewählte Zelle gestartet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis behandelt wird, um widerzuspiegeln, dass die aktuelle <xref:System.Windows.Forms.DataGridViewCell> bearbeitet wird. In diesem Beispiel wird die <xref:System.Windows.Forms.Control.Text%2A> -Eigenschaft der enthaltenden <xref:System.Windows.Forms.Form> so festgelegt, dass Sie anzeigt, welche Zelle bearbeitet wird. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> einen `dataGridView1`mit dem Namen enthält, und stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#220)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CellBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CellBorderStyle As DataGridViewCellBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellBorderStyle CellBorderStyle { System::Windows::Forms::DataGridViewCellBorderStyle get(); void set(System::Windows::Forms::DataGridViewCellBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyle : System.Windows.Forms.DataGridViewCellBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.CellBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zellrahmenart für die <see cref="T:System.Windows.Forms.DataGridView" /> ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" />, die die Rahmenart der in der <see cref="T:System.Windows.Forms.DataGridView" /> enthaltenen Zellen darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> Eigenschaft auf einen anderen Wert als <xref:System.Windows.Forms.DataGridViewCellBorderStyle.Single>, <xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleHorizontal>oder <xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleVertical>festgelegt ist, <xref:System.Windows.Forms.DataGridView.GridColor%2A> muss die-Eigenschaft eine System Farbe sein.  
  
 Diese Eigenschaft kann nicht auf den <xref:System.Windows.Forms.DataGridViewCellBorderStyle.Custom> Wert festgelegt werden. dabei handelt es sich um einen schreibgeschützten Wert, der angibt, dass die Zell Rahmenart durch die Verwendung <xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A> der-Eigenschaft angepasst wurde.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A> -Eigenschaft veranschaulicht. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular ein, <xref:System.Windows.Forms.DataGridView> das `dataGridView1`einen mit dem Namen enthält `SetUpDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewCellBorderStyle" />-Wert.</exception>
        <exception cref="T:System.ArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist <see cref="F:System.Windows.Forms.DataGridViewCellBorderStyle.Custom" />.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CellBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CellBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CellBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.CellBorderStyleChanged : EventHandler " Usage="member this.CellBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich die Rahmenart einer Zelle ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellBorderStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#261](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#261)]
 [!code-vb[System.Windows.Forms.EventExamples#261](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#261)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellClick;" />
      <MemberSignature Language="F#" Value="member this.CellClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf einen Teil einer Zelle geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn auf einen Teil einer Zelle geklickt wird, einschließlich Rahmen und Padding. Sie tritt auch auf, wenn der Benutzer die LEERTASTE drückt und freigibt, während eine Schaltflächen Zelle oder eine Kontrollkästchen Zelle den Fokus besitzt, und für diese Zellentypen zweimal auftritt, wenn auf die Zelle geklickt wird, während die Leertaste gedrückt wird.  
  
 Behandeln Sie das <xref:System.Windows.Forms.DataGridView.CellContentClick> -Ereignis, um zu bestimmen, wann auf den Zellen Inhalt geklickt wird.  
  
 Dieses Ereignis empfängt keine Informationen über die Mausposition. Wenn der Ereignishandler Informationen über die Mausposition benötigt, verwenden Sie <xref:System.Windows.Forms.DataGridView.CellMouseClick> das-Ereignis.  
  
 Bei Klicks in einem <xref:System.Windows.Forms.DataGridViewCheckBoxCell>tritt dieses Ereignis auf, bevor der Wert des Kontrollkästchens geändert wird. Wenn Sie also nicht den erwarteten Wert auf Grundlage des aktuellen Werts berechnen möchten, wird das <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType> Ereignis normalerweise behandelt. Da dieses Ereignis nur auftritt, wenn für den benutzerdefinierten Wert ein Commit ausgeführt wird. Dies tritt normalerweise auf, wenn der Fokus die Zelle <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType> verlässt, müssen Sie auch das-Ereignis behandeln. Wenn es sich bei diesem Handler um eine Kontrollkästchen Zelle handelt, wird die- <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType> Methode aufgerufen, und der <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> -Wert wird übergeben.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen <xref:System.Windows.Forms.DataGridView.CellClick> -Ereignishandler in einer Tic-Tac-Toe-Spiel Implementierung, die Bild Spalten <xref:System.Windows.Forms.DataGridView> in einem-Steuerelement verwendet. Wenn das Spiel nicht mehr vorhanden ist oder bereits auf die Zelle geklickt wurde, legt der Ereignishandler den Zellwert auf eines <xref:System.Drawing.Bitmap> von zwei-Objekten fest `x` , `o`die durch die Variablen und dargestellt werden.  
  
 Dieser Code ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Arbeiten Sie mit Bild Spalten im Windows Forms DataGridView-](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContentClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContentClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContentClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContentClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContentClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContentClick;" />
      <MemberSignature Language="F#" Value="member this.CellContentClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContentClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf den Inhalt einer Zelle geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn auf den Zellen Inhalt geklickt wird. Sie tritt auch auf, wenn der Benutzer die LEERTASTE drückt und freigibt, während eine Schaltflächen Zelle oder eine Kontrollkästchen Zelle den Fokus besitzt, und für diese Zelltypen zweimal auftritt, wenn auf den Zellen Inhalt beim Drücken der Leertaste geklickt wird.  
  
 Verwenden Sie dieses Ereignis, um Schaltflächen Klicks <xref:System.Windows.Forms.DataGridViewButtonCell> für einen oder einen Link <xref:System.Windows.Forms.DataGridViewLinkCell>Klick für einen zu erkennen.  
  
 Bei Klicks in einem <xref:System.Windows.Forms.DataGridViewCheckBoxCell>tritt dieses Ereignis auf, bevor der Wert des Kontrollkästchens geändert wird. Wenn Sie also nicht den erwarteten Wert auf Grundlage des aktuellen Werts berechnen möchten, wird das <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType> Ereignis normalerweise behandelt. Da dieses Ereignis nur auftritt, wenn für den benutzerdefinierten Wert ein Commit ausgeführt wird. Dies tritt normalerweise auf, wenn der Fokus die Zelle <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType> verlässt, müssen Sie auch das-Ereignis behandeln. Wenn es sich bei diesem Handler um eine Kontrollkästchen Zelle handelt, wird die- <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType> Methode aufgerufen, und der <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> -Wert wird übergeben.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel stellt einen Handler für dieses Ereignis bereit, der bestimmt, ob die angeklickte Zelle eine Verknüpfungs Zelle oder eine Schaltflächen Zelle ist, und führt die entsprechende Aktion als Ergebnis aus. Dieses Beispiel ist Teil eines größeren Beispiels, das im Thema <xref:System.Windows.Forms.DataGridViewComboBoxColumn> Übersicht über die Klasse verfügbar ist.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#60)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#60)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#60)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContentDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContentDoubleClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContentDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer auf den Inhalt einer Zelle doppelklickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellContentDoubleClick> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellContentDoubleClick> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#285](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#285)]
 [!code-vb[System.Windows.Forms.EventExamples#285](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#285)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContextMenuStripChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.CellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellContextMenuStripChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#286](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#286)]
 [!code-vb[System.Windows.Forms.EventExamples#286](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#286)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellContextMenuStripNeeded As DataGridViewCellContextMenuStripNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellContextMenuStripNeededEventHandler ^ CellContextMenuStripNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler " Usage="member this.CellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das Kontextmenü einer Zelle benötigt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> Ereignis tritt nur auf, <xref:System.Windows.Forms.DataGridView> Wenn <xref:System.Windows.Forms.DataGridView.DataSource%2A> die Steuerelement Eigenschaft fest <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> gelegt ist `true`oder die-Eigenschaft ist.  
  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> -Ereignis behandeln, wird das Kontextmenü angezeigt, das Sie im-Handler angeben, wenn der Benutzer mit der rechten Maustaste auf eine Zelle klickt. Dies ist hilfreich, wenn Sie ein Kontextmenü anzeigen möchten, das durch den aktuellen Zustand oder Wert einer Zelle bestimmt wird.  
  
 Das <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> Ereignis tritt auch auf, wenn der Wert <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A?displayProperty=nameWithType> der Eigenschaft entweder Programm gesteuert abgerufen wird oder wenn der Benutzer mit der rechten Maustaste auf eine Zelle klickt.  
  
 Sie können die <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType> -Eigenschaft <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A> und die-Eigenschaft verwenden, um den Zustand oder den Wert einer Zelle zu ermitteln, und diese Informationen <xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> verwenden, um die Eigenschaft zu ändern oder zu ändern. Diese Eigenschaft wird mit dem Wert der Cell <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> -Eigenschaft initialisiert, die der Ereignis Wert überschreibt.  
  
 Behandeln Sie <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> das-Ereignis bei der Arbeit mit großen Datenmengen, um die Leistungseinbußen beim Festlegen <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> des Zellwerts für mehrere Zellen zu vermeiden. Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Sie können auch Kontextmenüs für einzelne Zeilen anstelle einzelner Zellen angeben, indem Sie die Row <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> -Eigenschaft festlegen oder <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> das Ereignis behandeln. Die Einstellung <xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A> für die Zellen Eigenschaft überschreibt <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> die Einstellung der Zeilen Eigenschaft <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> , und das Ereignis über <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> schreibt sowohl das Ereignis <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> als auch die Zeilen Eigenschafts Einstellung. Sie können jedoch für das `null` Kontextmenü einer Zelle angeben, um zu verhindern, dass ein Zeilen Kontextmenü überschrieben wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> -Ereignishandler verwendet wird, um ein benutzerdefiniertes Kontextmenü anzuzeigen, wenn der Benutzer mit der rechten Maustaste auf eine Zelle klickt.  
  
 [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CPP/sharedrows.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CS/sharedrows.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/VB/sharedrows.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellDoubleClick As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellDoubleClick : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer auf eine beliebige Stelle in einer Zelle doppelklickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellDoubleClick> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellDoubleClick> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#288](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#288)]
 [!code-vb[System.Windows.Forms.EventExamples#288](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#288)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellEndEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellEndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellEndEdit As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellEndEdit;" />
      <MemberSignature Language="F#" Value="member this.CellEndEdit : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellEndEdit : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Bearbeitungsmodus für die derzeit ausgewählte Zelle angehalten wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis behandelt wird, um <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType> die Row-Eigenschaft zu löschen, falls Sie <xref:System.Windows.Forms.DataGridView.CellValidating> zuvor von einem-Ereignishandler festgelegt wurde. Der <xref:System.Windows.Forms.DataGridView.CellValidating> Ereignishandler kann den Fehlertext löschen, wenn der neue Zellwert den Überprüfungs Kriterien entspricht. wenn der Benutzer jedoch durch Drücken der ESC-Taste auf den alten Zellwert <xref:System.Windows.Forms.DataGridView.CellValidating> zurückgreift, tritt das Ereignis nicht auf. Dieses Beispiel ist Teil eines größeren Beispiels, das in [Exemplarische Vorgehensweise zur Verfügung steht: Validieren von Daten im Windows Forms DataGridView-](~/docs/framework/winforms/controls/walkthrough-validating-data-in-the-windows-forms-datagridview-control.md)Steuerelement.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/CS/datavalidation.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewDataValidation#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewDataValidation/VB/datavalidation.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellEnter;" />
      <MemberSignature Language="F#" Value="member this.CellEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die aktive Zelle im <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement ändert oder wenn das Steuerelement den Eingabefokus erhält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt möglicherweise zweimal für einen einzelnen Klick auf, wenn das Steuerelement keinen Eingabefokus hat und die angeklickte Zelle zuvor nicht die aktuelle Zelle war.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis behandelt wird, <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A> um die-Eigenschaft der aktuellen Zelle zu ändern. In diesem Beispiel wird die Auswahl Hintergrundfarbe im <xref:System.Windows.Forms.DataGridView.CellEnter> -Ereignis festgelegt und dann <xref:System.Drawing.Color.Empty> auf für das <xref:System.Windows.Forms.DataGridView.CellLeave> -Ereignis auf zurückgesetzt. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> einen `dataGridView1` mit dem Namen enthält, und stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#190)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#190)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellErrorTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellErrorTextChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellErrorTextChanged;" />
      <MemberSignature Language="F#" Value="member this.CellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" />-Eigenschaft einer Zelle geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellErrorTextChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellErrorTextChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#291](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#291)]
 [!code-vb[System.Windows.Forms.EventExamples#291](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#291)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellErrorTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellErrorTextNeeded As DataGridViewCellErrorTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellErrorTextNeededEventHandler ^ CellErrorTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler " Usage="member this.CellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Fehlertext einer Zelle benötigt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> Ereignis tritt nur auf, <xref:System.Windows.Forms.DataGridView> Wenn <xref:System.Windows.Forms.DataGridView.DataSource%2A> die Steuerelement Eigenschaft fest <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> gelegt ist `true`oder die-Eigenschaft ist. Das behandeln <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> des Ereignisses ist hilfreich, wenn Sie den Fehler für eine Zelle abhängig von ihrem Wert oder Zustand bestimmen möchten.  
  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> -Ereignis behandeln und den Fehlertext im-Handler angeben, wird ein Fehler Symbol in der Zelle angezeigt, es sei denn `false` , die <xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A> -Eigenschaft ist auf festgelegt, oder die Zelle befindet sich im Bearbeitungsmodus. Wenn der Benutzer den Mauszeiger über das Fehler Symbol bewegt, wird der Fehlertext in einer QuickInfo angezeigt.  
  
 Das <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> Ereignis tritt auch <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A?displayProperty=nameWithType> auf, wenn der Wert der Eigenschaft abgerufen wird.  
  
 Sie können die <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType> -Eigenschaft <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A> und die-Eigenschaft verwenden, um den Zustand oder den Wert einer Zelle zu ermitteln, und diese Informationen <xref:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType> verwenden, um die Eigenschaft zu ändern oder zu ändern. Diese Eigenschaft wird mit dem Wert der Cell <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> -Eigenschaft initialisiert, die der Ereignis Wert überschreibt.  
  
 Behandeln Sie <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> das-Ereignis bei der Arbeit mit großen Datenmengen, um die Leistungseinbußen beim Festlegen <xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A> des Zellwerts für mehrere Zellen zu vermeiden. Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Fehlermeldungen für Zellen erstellt werden, ohne dass die Freigabe von Zeilen aufgehoben oder der Zellen Fehler über alle freigegebenen Zellen dupliziert wird.  
  
 [!code-cpp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CPP/sharedrows.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/CS/sharedrows.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_SharedRowScenarios#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_SharedRowScenarios/VB/sharedrows.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellErrors" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="CellFormatting">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellFormatting As DataGridViewCellFormattingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellFormattingEventHandler ^ CellFormatting;" />
      <MemberSignature Language="F#" Value="member this.CellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventHandler " Usage="member this.CellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellFormattingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Inhalte einer Zelle für die Anzeige formatiert werden müssen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig versucht das <xref:System.Windows.Forms.DataGridView> Steuerelement, den Wert einer Zelle in ein Format zu konvertieren, das für die Anzeige geeignet ist. Beispielsweise wird ein numerischer Wert in eine Zeichenfolge konvertiert, um Sie in einer Textfeld Zelle anzuzeigen. Sie können die zu verwendende Formatierungs Konvention angeben, <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A> indem Sie die <xref:System.Windows.Forms.DataGridViewCellStyle> -Eigenschaft von festlegen, die <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> von Eigenschaften wie der-Eigenschaft zurückgegeben wird.  
  
 Wenn die Standard Formatierung unzureichend ist, können Sie die Formatierung anpassen, indem Sie <xref:System.Windows.Forms.DataGridView.CellFormatting> das-Ereignis behandeln. Dieses Ereignis ermöglicht Ihnen das Angeben des exakten Anzeige Werts sowie der Zellstile (z. b. Hintergrund-und Vordergrundfarbe), die für die Zellen Anzeige verwendet werden sollen. Dies bedeutet, dass Sie dieses Ereignis für jede Art von Zellen Formatierung behandeln können, unabhängig davon, ob der Zellwert selbst formatiert werden muss.  
  
 Das <xref:System.Windows.Forms.DataGridView.CellFormatting> Ereignis tritt jedes Mal auf, wenn jede Zelle gezeichnet wird, sodass Sie bei der Behandlung dieses Ereignisses eine lange Verarbeitung vermeiden sollten. Dieses Ereignis tritt auch auf, wenn <xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A> die Zelle abgerufen wird <xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A> oder die zugehörige-Methode aufgerufen wird.  
  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView.CellFormatting> -Ereignis behandeln, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> wird die-Eigenschaft mit dem Zellwert initialisiert. Wenn Sie eine benutzerdefinierte Konvertierung vom Zellwert in den Anzeige Wert bereitstellen, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> legen Sie die-Eigenschaft auf den konvertierten Wert fest, um sicherzustellen, dass der neue <xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A> Wert dem von der Cell-Eigenschaft angegebenen Typ entspricht. Um anzugeben, dass keine weitere Wert Formatierung erforderlich ist, legen <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> Sie die `true`-Eigenschaft auf fest.  
  
 Wenn der-Ereignishandler abgeschlossen wird, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> Wenn `null` der oder der nicht der richtige Typ ist oder die <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A>-Eigenschaft `false` <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>ist, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> wird der mit,, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>und formatiert. Eigenschaften des Zellstils, der von der <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> -Eigenschaft zurückgegeben wird, die mithilfe der <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> Cell-Eigenschaft initialisiert wird. <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A>  
  
 Unabhängig vom Wert <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=nameWithType> der-Eigenschaft werden die Anzeigeeigenschaften des-Objekts, das von der <xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=nameWithType> -Eigenschaft zurückgegeben wird, verwendet, um die Zelle zu Rendering.  
  
 Weitere Informationen zur benutzerdefinierten Formatierung mithilfe des <xref:System.Windows.Forms.DataGridView.CellFormatting> -Ereignisses finden [Sie unter Gewusst wie: Passen Sie die Datenformatierung im Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)-Steuerelement an.  
  
 Um bei der Behandlung dieses Ereignisses Leistungseinbußen zu vermeiden, greifen Sie auf die Zelle durch die Parameter des Ereignis Handlers zu, anstatt direkt auf die Zelle zuzugreifen.  
  
 Behandeln Sie das <xref:System.Windows.Forms.DataGridView.CellParsing> -Ereignis, um die Konvertierung eines formatierten, benutzerdefinierten Werts in einen tatsächlichen Zellwert anzupassen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie das <xref:System.Windows.Forms.DataGridView.CellFormatting> -Ereignis behandelt wird.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.FormattedValueType" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetFormattedValue(System.Object,System.Int32,System.Windows.Forms.DataGridViewCellStyle@,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter,System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md">Gewusst wie: Anpassen der Datenformatierung im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellLeave;" />
      <MemberSignature Language="F#" Value="member this.CellLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Zelle den Eingabefokus verliert und nicht mehr die aktuelle Zelle ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis behandelt wird, <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A> um die-Eigenschaft der aktuellen Zelle zu ändern. In diesem Beispiel wird die Auswahl Hintergrundfarbe im <xref:System.Windows.Forms.DataGridView.CellEnter> -Ereignis festgelegt und dann <xref:System.Drawing.Color.Empty> auf für das <xref:System.Windows.Forms.DataGridView.CellLeave> -Ereignis auf zurückgesetzt. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> einen `dataGridView1` mit dem Namen enthält, und stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#190)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#190](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#190)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseClick;" />
      <MemberSignature Language="F#" Value="member this.CellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn mit der Maus an beliebiger Stelle einer Zelle geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn der Benutzer mit einer der Maustasten klickt. Mithilfe der <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType> -Eigenschaft können Sie ermitteln, auf welche Schaltfläche geklickt wurde.  
  
 Zum Erkennen von Klicks auf den Inhalt einer Zelle, z. b. eine Schaltfläche oder einen Link in einer <xref:System.Windows.Forms.DataGridView.CellContentClick> Zelle, verwenden Sie das-Ereignis.  
  
 Der Handler für dieses Ereignis empfängt den Spalten Index und den Zeilen Index der Position des Mauszeigers.  
  
 Bei Klicks in einem <xref:System.Windows.Forms.DataGridViewCheckBoxCell>tritt dieses Ereignis auf, bevor der Wert des Kontrollkästchens geändert wird. Wenn Sie also nicht den erwarteten Wert auf Grundlage des aktuellen Werts berechnen möchten, wird das <xref:System.Windows.Forms.DataGridView.CellValueChanged> Ereignis normalerweise behandelt. Da dieses Ereignis nur auftritt, wenn für den benutzerdefinierten Wert ein Commit ausgeführt wird. Dies tritt normalerweise auf, wenn der Fokus die Zelle <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> verlässt, müssen Sie auch das-Ereignis behandeln. Wenn es sich bei diesem Handler um eine Kontrollkästchen Zelle handelt, wird die- <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> Methode aufgerufen, und der <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> -Wert wird übergeben.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellMouseClick> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellMouseClick> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#295](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#295)]
 [!code-vb[System.Windows.Forms.EventExamples#295](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#295)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseEventHandler" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="P:System.Windows.Forms.MouseEventArgs.Button" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContentClick" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.CellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf eine Zelle innerhalb der <see cref="T:System.Windows.Forms.DataGridView" /> doppelgeklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn der Benutzer mit einer der Maustasten auf doppelklickt. Mithilfe der <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType> -Eigenschaft können Sie ermitteln, auf welche Schaltfläche geklickt wurde.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellMouseDoubleClick> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#296](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#296)]
 [!code-vb[System.Windows.Forms.EventExamples#296](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#296)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseDown As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseDown;" />
      <MemberSignature Language="F#" Value="member this.CellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer eine Maustaste drückt, während sich der Mauszeiger innerhalb der Grenzen einer Zelle befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn der Benutzer eine der Maustasten drückt. Mithilfe der <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType> -Eigenschaft können Sie ermitteln, auf welche Schaltfläche geklickt wurde.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellMouseDown> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellMouseDown> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#297](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#297)]
 [!code-vb[System.Windows.Forms.EventExamples#297](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#297)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellMouseEnter;" />
      <MemberSignature Language="F#" Value="member this.CellMouseEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellMouseEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Mauszeiger in eine Zelle eintritt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen <xref:System.Windows.Forms.DataGridView.CellMouseEnter> -Ereignishandler in einer Tic-Tac-Toe-Spiel Implementierung, die Bild Spalten <xref:System.Windows.Forms.DataGridView> in einem-Steuerelement verwendet. Der-Ereignishandler verwendet den Zellwert, um den anzuzeigenden Cursor und die QuickInfo zu bestimmen.  
  
 Dieser Code ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Arbeiten Sie mit Bild Spalten im Windows Forms DataGridView-](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellMouseLeave;" />
      <MemberSignature Language="F#" Value="member this.CellMouseLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellMouseLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Mauszeiger eine Zelle verlässt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt einen <xref:System.Windows.Forms.DataGridView.CellMouseLeave> -Ereignishandler in einer Tic-Tac-Toe-Spiel Implementierung, die Bild Spalten <xref:System.Windows.Forms.DataGridView> in einem-Steuerelement verwendet. Der-Ereignishandler setzt den Cursor und die QuickInfo zurück, die in <xref:System.Windows.Forms.DataGridView.CellMouseEnter> einem-Ereignishandler festgelegt werden.  
  
 Dieser Code ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Arbeiten Sie mit Bild Spalten im Windows Forms DataGridView-](~/docs/framework/winforms/controls/how-to-work-with-image-columns-in-the-windows-forms-datagridview-control.md)Steuerelement.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CPP/tictactoe.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/CS/tictactoe.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ImageColumn_TicTacToe/VB/tictactoe.vb#15)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseMove As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseMove;" />
      <MemberSignature Language="F#" Value="member this.CellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Mauszeiger über das <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement bewegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellMouseMove> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellMouseMove> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#300)]
 [!code-vb[System.Windows.Forms.EventExamples#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#300)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellMouseUp As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ CellMouseUp;" />
      <MemberSignature Language="F#" Value="member this.CellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.CellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer eine Maustaste loslässt, während sich die Maus über einer Zelle befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn der Benutzer eine der Maustasten loslässt. Mithilfe der <xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=nameWithType> -Eigenschaft können Sie ermitteln, auf welche Schaltfläche geklickt wurde.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellMouseUp> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellMouseUp> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#301)]
 [!code-vb[System.Windows.Forms.EventExamples#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#301)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellPainting">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellPainting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellPainting As DataGridViewCellPaintingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellPaintingEventHandler ^ CellPainting;" />
      <MemberSignature Language="F#" Value="member this.CellPainting : System.Windows.Forms.DataGridViewCellPaintingEventHandler " Usage="member this.CellPainting : System.Windows.Forms.DataGridViewCellPaintingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellPaintingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Zelle gezeichnet werden muss.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis behandeln, um die Darstellung von Zellen im-Steuerelement anzupassen. Sie können ganze Zellen selbst zeichnen oder bestimmte Teile von Zellen zeichnen und die-Methode <xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground%2A?displayProperty=nameWithType> oder <xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent%2A?displayProperty=nameWithType> die-Methode verwenden, um andere Teile zu zeichnen. Sie können auch die <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> -Klasse verwenden, um Standard Steuerelemente mit dem aktuellen Design zu zeichnen. Weitere Informationen finden Sie unter [Rendering von Steuerelementen mit visuellen Stilen](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md). Wenn Sie verwenden [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], haben Sie auch Zugriff auf eine umfangreiche Bibliothek von Standardbildern, die Sie mit dem <xref:System.Windows.Forms.DataGridView> -Steuerelement verwenden können.  
  
 Wenn Sie dieses Ereignis behandeln, sollten Sie über die Parameter des Ereignis Handlers auf die Zelle zugreifen, anstatt direkt auf die Zelle zuzugreifen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit diesem Ereignis die Darstellung aller Zellen in einer bestimmten Spalte angepasst wird.  
  
 Dieser Code ist Teil eines größeren Beispiels, das in [Gewusst wie: Passen Sie die Darstellung von Zellen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-cells-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCellPainting#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCellPainting/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewCellPainting#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCellPainting/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellPaintingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/customize-the-appearance-of-cells-in-the-datagrid.md">Gewusst wie: Anpassen der Darstellung von Zellen im DataGridView-Steuerelement von Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellParsing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellParsing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellParsing As DataGridViewCellParsingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellParsingEventHandler ^ CellParsing;" />
      <MemberSignature Language="F#" Value="member this.CellParsing : System.Windows.Forms.DataGridViewCellParsingEventHandler " Usage="member this.CellParsing : System.Windows.Forms.DataGridViewCellParsingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellParsingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine Zelle den Bearbeitungsmodus verlässt und der Zellwert geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig versucht das <xref:System.Windows.Forms.DataGridView> Steuerelement, einen vom Benutzer angegebenen Wert, der in einer Zelle angezeigt wird, in einen tatsächlichen zugrunde liegenden Zellwert in dem von der <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> Cell-Eigenschaft angegebenen Typ zu konvertieren. Diese Konvertierung verwendet die Formatierungs Eigenschaften des Zellstils, der von der <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> Cell-Eigenschaft zurückgegeben wird.  
  
 Wenn die Standard Konvertierung nicht Ihren Anforderungen entspricht, behandeln Sie das <xref:System.Windows.Forms.DataGridView.CellParsing> -Ereignis, um eine benutzerdefinierte Wert Konvertierung in den erforderlichen Typ zu ermöglichen.  
  
 Benutzer können mithilfe der Methode, die von der <xref:System.Windows.Forms.DataGridView.EditMode%2A> -Eigenschaft angegeben wird, in den Bearbeitungsmodus wechseln und den Bearbeitungsmodus verlassen, Änderungen an einer Zelle ausführen, indem Sie in eine andere Zelle verschieben oder die EINGABETASTE drücken. Durch Drücken von ESC werden alle Änderungen an dem Wert zurückgesetzt, bevor ein Commit <xref:System.Windows.Forms.DataGridView.CellParsing> ausgeführt wird, und das Ereignis tritt nicht auf. Das <xref:System.Windows.Forms.DataGridView.CellParsing> Ereignis tritt nur auf, wenn der Zellwert tatsächlich geändert wurde, auch wenn der endgültige Wert mit dem ursprünglichen Wert übereinstimmt. Sie tritt auch auf, <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> wenn die-Methode aufgerufen wird.  
  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView.CellParsing> -Ereignis behandeln, können Sie den Wert selbst konvertieren, oder Sie können die Standard Konvertierung anpassen. Beispielsweise können Sie den Wert selbst mithilfe der Cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> -Methode mit Typkonvertern Ihrer Wahl konvertieren. Alternativ können Sie den Standardtypkonverter den Wert analysieren <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>lassen, aber die Eigenschaften, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>und <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> des Objekts ändern, das von der <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> Eigenschaft zurückgegeben wird, die mithilfe der Zelle <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> initialisiert wird. Property.  
  
 Wenn Sie den Wert selbst konvertieren, ersetzen Sie den anfänglichen formatierten Wert der <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> -Eigenschaft durch den konvertierten Wert in dem von der Cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> -Eigenschaft angegebenen Typ. Legen Sie die <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> -Eigenschaft auf `true`fest, um anzugeben, dass keine weitere-Verarbeitung erforderlich ist.  
  
 Wenn der-Ereignishandler abgeschlossen wird, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> Wenn `null` der oder der nicht der richtige Typ ist oder die <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> -Eigenschaft `false`ist, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> wird der mithilfe der Cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> -Methode mit Standardtypkonvertern analysiert. Die Standard Implementierung dieser Methode analysiert den Wert mithilfe der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>Eigenschaften, und <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> des Zellstils, der übertragen wird. Wenn der Wert nicht gleich <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>ist, wird der Wert mithilfe der <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> -Eigenschaft und der Übergabe der Typkonverter analysiert.  
  
 Um die Konvertierung eines Zellwerts in einen formatierten Wert für die Anzeige anzupassen, behandeln <xref:System.Windows.Forms.DataGridView.CellFormatting> Sie das-Ereignis.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie das <xref:System.Windows.Forms.DataGridView.CellParsing> -Ereignis behandelt wird. Außerdem wird gezeigt, wie die <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> -Klasse verwendet wird.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStateChanged As DataGridViewCellStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellStateChangedEventHandler ^ CellStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventHandler " Usage="member this.CellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Zustand einer Zelle ändert, beispielsweise, wenn die Zelle den Fokus übernimmt oder verliert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Ereignisses veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#135](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#135)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#135](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#135)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStateChangedEventArgs.StateChanged" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStyleChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStyleChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellStyleChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridViewCell.Style" />-Eigenschaft einer <see cref="T:System.Windows.Forms.DataGridViewCell" /> ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn eine Eigenschaft <xref:System.Windows.Forms.DataGridViewCellStyle> von, die <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> von einer Eigenschaft zurückgegeben wurde, auf einen neuen <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> Wert festgelegt wird oder wenn <xref:System.Windows.Forms.DataGridViewCellStyle> eine Eigenschaft auf eine neue festgelegt wird, bei der sich mindestens ein Eigenschafts Wert von dem vorherigen Zellstilobjekt unterscheidet.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#305)]
 [!code-vb[System.Windows.Forms.EventExamples#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellStyleContentChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellStyleContentChanged As DataGridViewCellStyleContentChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellStyleContentChangedEventHandler ^ CellStyleContentChanged;" />
      <MemberSignature Language="F#" Value="member this.CellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler " Usage="member this.CellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich einer der Werte eines Zellenstils ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged> Ereignis tritt <xref:System.Windows.Forms.DataGridViewCellStyle> auf, wenn sich ein Eigenschafts Wert eines-Objekts ändert, das von einer der folgenden Eigenschaften zurückgegeben wird:  
  
-   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
 Wenn eine dieser Eigenschaften <xref:System.Windows.Forms.DataGridViewCellStyle>auf einen anderen festgelegt ist, tritt jedoch das entsprechende *propertyName* `Changed` -Ereignis auf, das <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged> Ereignis tritt jedoch nicht auf.  
  
 Für Zeilen-, Spalten-und Zell Eigenschaften beginnt der Name des *propertyName* `Changed` -Ereignisses mit "`Row`", "`Column`" oder "`Cell`" (z <xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged>. b.).  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellStyleContentChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#306](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#306)]
 [!code-vb[System.Windows.Forms.EventExamples#306](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#306)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellToolTipTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellToolTipTextChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellToolTipTextChanged;" />
      <MemberSignature Language="F#" Value="member this.CellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich der <see cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />-Eigenschaftswert für eine Zelle in der <see cref="T:System.Windows.Forms.DataGridView" /> ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellToolTipTextChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#307](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#307)]
 [!code-vb[System.Windows.Forms.EventExamples#307](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#307)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellToolTipTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellToolTipTextNeeded As DataGridViewCellToolTipTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellToolTipTextNeededEventHandler ^ CellToolTipTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler " Usage="member this.CellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der ToolTip-Text einer Zelle benötigt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> Ereignis tritt nur auf, <xref:System.Windows.Forms.DataGridView> Wenn <xref:System.Windows.Forms.DataGridView.DataSource%2A> die Steuerelement Eigenschaft fest <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> gelegt ist `true`oder die-Eigenschaft ist.  
  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> -Ereignis behandeln, wird der QuickInfo-Text angezeigt, den Sie im Handler angeben, wenn sich der Mauszeiger über einer Zelle befindet `true`und der Eigenschafts Wert des Steuer <xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A> Elements ist. Das <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> Ereignis ist nützlich, wenn Sie Quick Infos anzeigen möchten, die durch den aktuellen Zustand oder Wert einer Zelle bestimmt werden.  
  
 Das <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> Ereignis tritt auch auf, wenn der Wert <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A?displayProperty=nameWithType> der Eigenschaft entweder Programm gesteuert abgerufen wird oder wenn der Mauszeiger in eine Zelle eintritt.  
  
 Sie können die <xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=nameWithType> -Eigenschaft <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A> und die-Eigenschaft verwenden, um den Zustand oder den Wert einer Zelle zu ermitteln, und diese Informationen <xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType> verwenden, um die Eigenschaft zu ändern oder zu ändern. Diese Eigenschaft wird mit dem Wert der Cell <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> -Eigenschaft initialisiert, die der Ereignis Wert überschreibt.  
  
 Behandeln Sie <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> das-Ereignis bei der Arbeit mit großen Datenmengen, um die Leistungseinbußen beim Festlegen <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> des Zellwerts für mehrere Zellen zu vermeiden. Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> -Ereignishandler zum Anzeigen von Informationen aus verborgenen Spalten in einem Daten <xref:System.Windows.Forms.DataGridView> gebundenen Steuerelement verwendet wird.  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellValidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValidated As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellValidated;" />
      <MemberSignature Language="F#" Value="member this.CellValidated : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellValidated : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem die Validierung durch die Zelle abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Behandlung dieses Ereignisses ist nützlich für die Verarbeitung des Zellwerts nach der Validierung.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Windows.Forms.DataGridView.CellValidated> -Ereignis verwendet wird, <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> um die-Eigenschaft zu löschen. In diesem Beispiel legt das <xref:System.Windows.Forms.DataGridView.CellValidating> Ereignis den <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> fest, wenn der Benutzerdaten eingibt, die in einer Zelle nicht gültig sind. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.SelectionChanged> im Ereignis verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValidating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValidating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValidating As DataGridViewCellValidatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValidatingEventHandler ^ CellValidating;" />
      <MemberSignature Language="F#" Value="member this.CellValidating : System.Windows.Forms.DataGridViewCellValidatingEventHandler " Usage="member this.CellValidating : System.Windows.Forms.DataGridViewCellValidatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValidatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine Zelle den Eingabefokus verliert, und aktiviert die Inhaltsvalidierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Abbrechen dieses Ereignisses werden die Änderungen an der aktuellen Zelle abgebrochen. Wenn dieses Ereignis im Daten gebundenen Modus abgebrochen wird, wird der neue Wert nicht an die zugrunde liegende Datenquelle übermittelt. Wenn dieses Ereignis im virtuellen Modus abgebrochen wird, <xref:System.Windows.Forms.DataGridView.CellValuePushed> wird das-Ereignis nicht ausgelöst.  
  
 Behandeln Sie <xref:System.Windows.Forms.DataGridView.CellValidated> das-Ereignis, um die Verarbeitung nach der Validierung auszuführen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.DataGridView.CellValidating> -Ereignis behandelt, um sicherzustellen, dass der Benutzer nur positive ganze Zahlen eingegeben hat. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> im Referenz Thema verfügbar ist.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#40)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidated" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValueChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValueChanged As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ CellValueChanged;" />
      <MemberSignature Language="F#" Value="member this.CellValueChanged : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.CellValueChanged : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert einer Zelle ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=nameWithType> Ereignis tritt auf, wenn für den Benutzer angegebenen Wert ein Commit ausgeführt wird. Dies tritt normalerweise auf, wenn der Fokus die Zelle verlässt.  
  
 Im Fall von Kontrollkästchen Zellen möchten Sie die Änderung jedoch in der Regel sofort behandeln. Um die Änderung zu übernehmen, wenn auf die Zelle geklickt wird, <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=nameWithType> müssen Sie das-Ereignis behandeln. Wenn die aktive Zelle im-Handler eine Kontrollkästchen Zelle ist, müssen Sie die <xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=nameWithType> -Methode aufzurufen und <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> den-Wert übergeben.  
  
 Zeilen im-Steuerelement werden nicht automatisch sortiert, wenn ein Zellwert geändert wird. Um das Steuerelement zu sortieren, wenn der Benutzer eine Zelle ändert, <xref:System.Windows.Forms.DataGridView.Sort%2A> wird die- <xref:System.Windows.Forms.DataGridView.CellValueChanged> Methode in einem-Ereignishandler aufgerufen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignis verwendet wird, um die Werte in einer Saldo <xref:System.Windows.Forms.DataGridView>-Spalte eines zu aktualisieren. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.SelectionChanged> im Ereignis verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValueNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValueNeeded As DataGridViewCellValueEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValueEventHandler ^ CellValueNeeded;" />
      <MemberSignature Language="F#" Value="member this.CellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventHandler " Usage="member this.CellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValueEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" />-Eigenschaft des <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements <see langword="true" /> ist und die <see cref="T:System.Windows.Forms.DataGridView" /> einen Wert für eine Zelle erfordert, um die Zelle zu formatieren und anzuzeigen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie dieses Ereignis im virtuellen Modus, um Zellen mit Daten aus einem benutzerdefinierten Datenspeicher aufzufüllen, ohne dass die Freigabe von Zeilen aufgehoben wird. Weitere Informationen zur Zeilen Freigabe finden Sie unter [bewährte Methoden zum Skalieren des Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)Elements. Weitere Informationen zum virtuellen Modus finden Sie [im Windows Forms DataGridView-Steuerelement im virtuellen Modus](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md).  
  
 Behandeln Sie das-Ereignis, um dem <xref:System.Windows.Forms.DataGridView.CellValuePushed> benutzerdefinierten Datenspeicher benutzerdefinierte Werte hinzuzufügen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.DataGridView.CellValueNeeded> -Ereignis behandelt, um Zellen mit positiven ganzen Zahlen aufzufüllen. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> im Referenz Thema verfügbar ist.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md">Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md">Virtueller Modus im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CellValuePushed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CellValuePushed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CellValuePushed As DataGridViewCellValueEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellValueEventHandler ^ CellValuePushed;" />
      <MemberSignature Language="F#" Value="member this.CellValuePushed : System.Windows.Forms.DataGridViewCellValueEventHandler " Usage="member this.CellValuePushed : System.Windows.Forms.DataGridViewCellValueEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellValueEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" />-Eigenschaft des <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements <see langword="true" /> ist, sich ein Zellwert geändert hat und in der zugrunde liegenden Datenquelle gespeichert werden muss.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie dieses Ereignis im virtuellen Modus, um einen benutzerdefinierten Datenspeicher mit benutzerdefinierten Daten zu aktualisieren. Behandeln Sie <xref:System.Windows.Forms.DataGridView.CellValueNeeded> das-Ereignis, um Werte aus dem Datenspeicher für die Anzeige im-Steuerelement abzurufen.  
  
 Weitere Informationen zum virtuellen Modus finden Sie [im Windows Forms DataGridView-Steuerelement im virtuellen Modus](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md).  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.DataGridView.CellValuePushed> -Ereignis zum Speichern von Updates und neuen Einträgen in einem Datenspeicher Objekt behandelt. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> im Referenz Thema verfügbar ist.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md">Virtueller Modus im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearSelection">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Hebt die Auswahl der gerade ausgewählten Zellen auf.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSelection();" />
      <MemberSignature Language="F#" Value="member this.ClearSelection : unit -&gt; unit" Usage="dataGridView.ClearSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die aktuelle Auswahl durch Aufheben der Auswahl aller ausgewählten Zellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Methode aufgerufen wird, wird jede Spalte und jede <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> Zeile auf `false`festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Auswahl von <xref:System.Windows.Forms.DataGridView>gelöscht. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> ein `dataGridView1` mit dem <xref:System.Windows.Forms.Button> Namen `clearSelectionButton`und ein mit dem Namen enthält, und stellen Sie sicher, dass alle Ereignisse mit ihren Ereignis Handlern verknüpft sind.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#170)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#170)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="protected void ClearSelection (int columnIndexException, int rowIndexException, bool selectExceptionElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearSelection(int32 columnIndexException, int32 rowIndexException, bool selectExceptionElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ClearSelection(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearSelection (columnIndexException As Integer, rowIndexException As Integer, selectExceptionElement As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearSelection(int columnIndexException, int rowIndexException, bool selectExceptionElement);" />
      <MemberSignature Language="F#" Value="member this.ClearSelection : int * int * bool -&gt; unit" Usage="dataGridView.ClearSelection (columnIndexException, rowIndexException, selectExceptionElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndexException" Type="System.Int32" />
        <Parameter Name="rowIndexException" Type="System.Int32" />
        <Parameter Name="selectExceptionElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndexException">Der auszuschließende Spaltenindex.</param>
        <param name="rowIndexException">Der auszuschließende Zeilenindex.</param>
        <param name="selectExceptionElement"><see langword="true" />, um die ausgeschlossene Zelle, Zeile oder Spalte auszuwählen, <see langword="false" />, um ihren ursprünglichen Zustand zu beizubehalten.</param>
        <summary>Hebt die aktuelle Auswahl aller ausgewählten Zellen mit Ausnahme der angegebenen auf und stellt optional sicher, dass die angegebene Zelle ausgewählt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert-1 stellt einen Spaltenheader dar, `columnIndexException` und der Wert-1 stellt einen Zeilen Header dar. `rowIndexException`  
  
 Diese Methode ist hilfreich, um die aktuelle Auswahl zu löschen, ohne die Auswahl der Zelle, Zeile oder Spalte abzukündigen, die durch die Ausnahme Indizes angegeben wird.  
  
 Wenn der <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> Eigenschafts Wert einzelne Zellen Auswahl zulässt, legt diese Methode <xref:System.Windows.Forms.DataGridViewCell.Selected%2A> die-Eigenschaft jeder Zelle `false`auf fest, wobei die Zelle in der angegebenen Zeile und Spalte ausgenommen ist. Wenn der <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> -Eigenschafts Wert die vollständige Zeilen-oder Spaltenauswahl zulässt, <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> legt diese Methode auch die-Eigenschaft `false`für jede Zeile oder Spalte auf fest, wobei die Zeile oder die Spalte mit der angegebenen Zelle ausgeschlossen wird.  
  
 Die ausgeschlossene Zelle, Zeile oder Spalte ist möglicherweise im ausgewählten Zustand, wenn diese Methode aufgerufen wird. Diese Methode wählt Sie aus, `selectExceptionElement` wenn der Parameter `true`Wert ist. Abhängig vom Auswahlmodus kann die gesamte Zeile oder Spalte auch als Ergebnis ausgewählt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndexException" /> ist größer als der höchste Spaltenindex.  
  
- oder - 
 <paramref name="columnIndexException" /> ist kleiner als-1, wenn <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /> gleich <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect" />ist; andernfalls ist <paramref name="columnIndexException" /> kleiner als 0.  
  
- oder - 
 <paramref name="rowIndexException" /> ist größer als der höchste Zeilenindex.  
  
- oder - 
 <paramref name="rowIndexException" /> ist kleiner als-1, wenn <see cref="P:System.Windows.Forms.DataGridView.SelectionMode" /> gleich <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /> ist; andernfalls ist <paramref name="rowIndexException" /> kleiner als 0.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Selected" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Selected" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ClipboardCopyMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipboardCopyMode As DataGridViewClipboardCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewClipboardCopyMode ClipboardCopyMode { System::Windows::Forms::DataGridViewClipboardCopyMode get(); void set(System::Windows::Forms::DataGridViewClipboardCopyMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClipboardCopyMode : System.Windows.Forms.DataGridViewClipboardCopyMode with get, set" Usage="System.Windows.Forms.DataGridView.ClipboardCopyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewClipboardCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Zelltextwerte in das <see cref="T:System.Windows.Forms.Clipboard" /> kopiert werden können und ob Zeilen- und Spaltenheader eingeschlossen werden.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />-Werte. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement kopiert die Textdarstellung der einzelnen ausgewählten Zellen in die Zwischenablage. Dieser Wert ist der Zellwert, der in eine Zeichenfolge konvertiert wird, oder für Bild Zellen der <xref:System.Windows.Forms.DataGridViewImageCell.Description%2A> Wert der Eigenschaft.  
  
 Werte werden <xref:System.Windows.Forms.DataFormats.Text>in den Formaten, <xref:System.Windows.Forms.DataFormats.UnicodeText>, <xref:System.Windows.Forms.DataFormats.Html>und <xref:System.Windows.Forms.DataFormats.CommaSeparatedValue> in die Zwischenablage kopiert. Diese Formate sind nützlich für das Einfügen von Inhalten in Anwendungen wie Notepad, Microsoft Excel und [!INCLUDE[ofprword](~/includes/ofprword-md.md)].  
  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement kopiert die Zellen, die im kleinsten Rechteck enthalten sind, das alle ausgewählten Zellen enthält. Zeilen und Spalten, die keine ausgewählten Zellen enthalten, werden nicht in den kopierten Daten dargestellt. Alle nicht ausgewählten Zellen in den verbleibenden Zeilen und Spalten werden durch leere Platzhalter dargestellt. Abhängig vom Kopiermodus und dem Auswahlmodus können auch Header Werte für die kopierten Zeilen und Spalten kopiert werden.  
  
 Wenn Benutzerinhalte kopieren, fügt <xref:System.Windows.Forms.DataGridView> das Steuerelement <xref:System.Windows.Forms.DataObject> der Zwischenablage ein hinzu. Dieses Datenobjekt wird von der <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A> -Methode abgerufen. Diese Methode kann aufgerufen werden, wenn Sie das Datenobjekt Programm gesteuert der Zwischenablage hinzufügen möchten.  
  
 Die <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A> -Methode ruft Werte für einzelne Zellen durch Aufrufen der <xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType> -Methode ab. Sie können eine oder beide Methoden in abgeleiteten Klassen überschreiben, um das Layout der kopierten Zellen anzupassen oder zusätzliche Datenformate zu unterstützen.  
  
 Weitere Informationen zu Zwischenablage Vorgängen und Datenformaten finden Sie <xref:System.Windows.Forms.Clipboard> in der-Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das Kopieren im <xref:System.Windows.Forms.DataGridView> -Steuerelement aktiviert wird. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Ermöglicht es Benutzern, mehrere Zellen aus dem Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)Element in die Zwischenablage zu kopieren.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />-Wert.</exception>
        <altmember cref="T:System.Windows.Forms.Clipboard" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
        <altmember cref="M:System.Windows.Forms.DataGridView.GetClipboardContent" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.GetClipboardContent(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewImageCell.Description" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnAdded As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnAdded;" />
      <MemberSignature Language="F#" Value="member this.ColumnAdded : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnAdded : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn dem Steuerelement eine Spalte hinzufügt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnAdded> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnAdded> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#314](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#314)]
 [!code-vb[System.Windows.Forms.EventExamples#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#314)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnContextMenuStripChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip" />-Eigenschaft einer Spalte ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#315](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#315)]
 [!code-vb[System.Windows.Forms.EventExamples#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#315)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int with get, set" Usage="System.Windows.Forms.DataGridView.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Spalten ab, die im <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement angezeigt werden, oder legt diese Anzahl fest.</summary>
        <value>Die Anzahl der Spalten, die in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> die-Eigenschaft auf 0 festlegen, werden alle <xref:System.Windows.Forms.DataGridView>Spalten aus entfernt.  
  
 Wenn <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> auf einen Wert zurückgesetzt wird, der kleiner als der aktuelle Wert ist, werden die Spalten am Ende <xref:System.Windows.Forms.DataGridView.Columns%2A> der Auflistung entfernt. Wenn <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> auf einen Wert festgelegt ist, der größer ist als der aktuelle Wert, werden die Spalten am Ende <xref:System.Windows.Forms.DataGridView.Columns%2A> der Auflistung hinzugefügt.  
  
 Diese Eigenschaft kann mit der <xref:System.Windows.Forms.DataGridView.RowCount%2A> -Eigenschaft verwendet werden, um eine einfache <xref:System.Windows.Forms.DataGridView> zum Anzeigen und Bearbeiten von Text zu erstellen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>Eigenschaften <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, und <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> festgelegt werden. Außerdem wird im Codebeispiel veranschaulicht, wie die-Eigenschaft <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> die-Eigenschaft festgelegt werden. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular ein, <xref:System.Windows.Forms.DataGridView> das `dataGridView1`einen mit dem Namen enthält `SetUpDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kleiner als 0 (null).</exception>
        <exception cref="T:System.InvalidOperationException">Beim Festlegen dieser Eigenschaft wurde die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft festgelegt.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDataPropertyNameChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDataPropertyNameChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDataPropertyNameChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewColumn.DataPropertyName" />-Eigenschaft einer Spalte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#316](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#316)]
 [!code-vb[System.Windows.Forms.EventExamples#316](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#316)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDefaultCellStyleChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" />-Eigenschaft einer Spalte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn Eigenschaften von <xref:System.Windows.Forms.DataGridViewCellStyle> , die von <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> der-Eigenschaft für eine Spalte zurückgegeben werden, auf einen neuen <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> Wert festgelegt werden oder wenn die-Eigenschaft <xref:System.Windows.Forms.DataGridViewCellStyle> für eine Spalte auf einen neuen festgelegt wird, wobei mindestens ein Eigenschafts Wert anders ist als der Vorheriges Zellstilobjekt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#317](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#317)]
 [!code-vb[System.Windows.Forms.EventExamples#317](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#317)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDisplayIndexChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDisplayIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewColumn.DisplayIndex" />-Eigenschaft einer Spalte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#318](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#318)]
 [!code-vb[System.Windows.Forms.EventExamples#318](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#318)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDividerDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDividerDoubleClick As DataGridViewColumnDividerDoubleClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnDividerDoubleClickEventHandler ^ ColumnDividerDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler " Usage="member this.ColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer auf einen Unterteiler zwischen zwei Spalten doppelklickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis verwenden, um das automatische Größen Anpassungs Verhalten anzupassen, das auftritt, wenn ein Benutzer auf einen Spalten unter Teiler doppelklickt. Beispielsweise können Sie dieses Ereignis behandeln, um die Spalten nur basierend auf dem Inhalt in den aktuell sichtbaren Zeilen Programm gesteuert zu ändern. Dadurch wird bei der Arbeit mit einer großen Anzahl von Zeilen eine Leistungs Beeinträchtigung durch das Standardverhalten vermieden.  
  
 Die Column <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A> -Eigenschaft erweitert nicht den Bereich, in dem ein Benutzer auf Doppelklicken kann. Wenn die Breite eines unter Teilers durch die Verwendung dieser Eigenschaft angehoben wurde, tritt dieses Ereignis auf, wenn der Benutzer auf die Grenze zwischen dem unter Teiler und der angrenzenden Spalte doppelklickt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#319](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#319)]
 [!code-vb[System.Windows.Forms.EventExamples#319](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#319)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnDividerWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnDividerWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnDividerWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridViewColumn.DividerWidth" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#320](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#320)]
 [!code-vb[System.Windows.Forms.EventExamples#320](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#320)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderCellChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderCellChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnHeaderCellChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich die Inhalte einer Spaltenheaderzelle ändern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#323](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#323)]
 [!code-vb[System.Windows.Forms.EventExamples#323](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#323)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ ColumnHeaderMouseClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.ColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer auf einen Spaltenheader klickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Wenn in einem <xref:System.Windows.Forms.DataGridView>auf eine Spaltenüberschrift geklickt wird, ist das Standardverhalten das Sortieren der Raster Zeilen basierend auf der Spalte, auf die geklickt wird, oder, um die Sortierreihenfolge umzukehren, wenn das Raster bereits nach der angeklickten Spalte sortiert ist. Im folgenden Codebeispiel wird veranschaulicht, wie mit diesem Ereignis eine programmgesteuerte Sortierung durchgeführt wird, die das Standardverhalten beim <xref:System.Windows.Forms.DataGridViewColumnHeaderCell> klicken auf eine emuliert, wenn das Standardverhalten deaktiviert wurde. In diesem Beispiel <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> ist auf festgelegt, <xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect>sodass durch Klicken auf <xref:System.Windows.Forms.DataGridViewColumnHeaderCell> den Inhalt der Spalte ausgewählt wird. Damit der Beispielcode wie beabsichtigt funktioniert, muss das standardmäßige Spaltenheader-Click-Verhalten jedes Mal geändert werden, wenn die Daten in <xref:System.Windows.Forms.DataGridView>das geladen werden. Fügen Sie <xref:System.Windows.Forms.DataGridView.DataBindingComplete> einen-Ereignishandler hinzu, um den Code bereitzustellen, der das Standardverhalten ändert. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> einen `dataGridView1` mit dem Namen enthält, und stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#160)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeaderMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ ColumnHeaderMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.ColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf einen Spaltenheader doppelgeklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#322](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#322)]
 [!code-vb[System.Windows.Forms.EventExamples#322](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#322)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersBorderStyle As DataGridViewHeaderBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { System::Windows::Forms::DataGridViewHeaderBorderStyle get(); void set(System::Windows::Forms::DataGridViewHeaderBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersBorderStyle : System.Windows.Forms.DataGridViewHeaderBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bewirkt, dass die Rahmenart für die Spaltenheader übernommen wird.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A> -Eigenschaft auf einen anderen Wert als <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single>festgelegt <xref:System.Windows.Forms.DataGridView.GridColor%2A> ist, muss die-Eigenschaft eine System Farbe sein.  
  
 Diese Eigenschaft kann nicht auf den <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom> Wert festgelegt werden. dabei handelt es sich um einen schreibgeschützten Wert, der angibt, dass die Rahmenart durch die Verwendung <xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A> der-Eigenschaft angepasst wurde.  
  
> [!NOTE]
>  Wenn visuelle Stile für die Anwendung über die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> -Methode aktiviert sind und die <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> - `true`Eigenschaft ist, werden die Spaltenheader mit dem aktuellen Design gezeichnet. In diesem Fall wird der Wert der <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A> -Eigenschaft für alle Spaltenheader außer der <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>ignoriert, auf die das Design nicht angewendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>Eigenschaften <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, und <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> festgelegt werden. Außerdem wird im Codebeispiel veranschaulicht, wie die-Eigenschaft <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> die-Eigenschaft festgelegt werden. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular ein, <xref:System.Windows.Forms.DataGridView> das`dataGridView1`einen mit dem Namen enthält `SetUpDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />-Wert.</exception>
        <exception cref="T:System.ArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersBorderStyleChanged : EventHandler " Usage="member this.ColumnHeadersBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#262](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#262)]
 [!code-vb[System.Windows.Forms.EventExamples#262](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#262)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ ColumnHeadersDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Standardstil für den Spaltenheader ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der den Standardstil für den Spaltenheader darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der von <xref:System.Windows.Forms.DataGridViewCellStyle> dieser Eigenschaft zurückgegebene Standardwert weist die folgenden anfänglichen Eigenschaftswerte auf:  
  
|`DataGridViewCellStyle` -Eigenschaft|Standardwert|  
|--------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|Der Wert der <xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType>-Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|Der Wert der <xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType> -Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|Der Wert der <xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType> -Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|Der Wert der <xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType> -Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|Der Wert der <xref:System.Windows.Forms.DataGridView.Font%2A>-Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState.True?displayProperty=nameWithType>|  
  
 Diese Werte überschreiben automatisch die durch die <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> -Eigenschaft festgelegten Werte. Wenn Sie erzwingen möchten, dass Spalten <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> Header die Werte erben, müssen Sie die Werte <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> im-Objekt auf die für die <xref:System.Windows.Forms.DataGridViewCellStyle> -Klasse festgelegten Standardwerte festlegen.  
  
 Weitere Informationen zur Vererbung von Zellen Formaten finden Sie unter [Zellen Stile im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)Element.  
  
 Wenn visuelle Stile aktiviert sind und <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> auf `true`festgelegt ist, werden alle Header Zellen <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A> außer dem mit dem aktuellen Design gezeichnet, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> und die Werte werden ignoriert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>Eigenschaften <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, und <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> festgelegt werden. Außerdem wird im Codebeispiel veranschaulicht, wie die-Eigenschaft <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> die-Eigenschaft festgelegt werden. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular ein, <xref:System.Windows.Forms.DataGridView> das `dataGridView1`einen mit dem Namen enthält `SetUpDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersDefaultCellStyleChanged : EventHandler " Usage="member this.ColumnHeadersDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn Eigenschaften von <xref:System.Windows.Forms.DataGridViewCellStyle> , die von <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> der-Eigenschaft zurückgegeben werden, auf einen neuen <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A> Wert festgelegt werden oder wenn <xref:System.Windows.Forms.DataGridViewCellStyle> die-Eigenschaft auf einen neuen festgelegt wird, wobei sich mindestens ein Eigenschafts Wert von dem vorherigen Zellstilobjekt unterscheidet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#263](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#263)]
 [!code-vb[System.Windows.Forms.EventExamples#263](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#263)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeight">
      <MemberSignature Language="C#" Value="public int ColumnHeadersHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnHeadersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnHeadersHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeight : int with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Höhe der Spaltenheaderzeile in Pixel ab oder legt sie fest</summary>
        <value>Die Höhe der Zeile in Pixel, die die Spaltenheader enthält. Der Standard ist 23.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Beim Festlegen dieser Eigenschaft ist der angegebene Wert kleiner als die Mindesthöhe von 4 Pixel oder größer als die maximale Höhe von 32.768 Pixel.</exception>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ColumnHeadersHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ColumnHeadersHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersHeightChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ColumnHeadersHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightChanged : EventHandler " Usage="member this.ColumnHeadersHeightChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeight" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#264](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#264)]
 [!code-vb[System.Windows.Forms.EventExamples#264](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#264)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersHeightSizeMode As DataGridViewColumnHeadersHeightSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode get(); void set(System::Windows::Forms::DataGridViewColumnHeadersHeightSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightSizeMode : System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Höhe der Spaltenheader überhaupt angepasst werden kann und ob sie ggf. vom Benutzer oder automatisch an den Inhalt der Header angepasst werden kann.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" />-Wert, der den Modus angibt, in dem die Höhe der Spaltenheaderzeile angepasst werden kann. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf <xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize>festgelegt ist, kann die Höhe der Spaltenheader nicht vom Benutzer angepasst werden.  
  
 Um die Höhe der Spaltenheader Programm gesteuert anzupassen, verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> -Methode, oder <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeight%2A> legen Sie die-Eigenschaft fest.  
  
 Um den Größen Anpassungsmodus für die Zeilen Header festzulegen, <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A> verwenden Sie die-Eigenschaft.  
  
 Damit der Zellen Inhalt bei der Größenänderung der Spaltenheader in mehrere Zeilen umbrochen wird, muss der für die Zelle geltenden Zellstil den <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewTriState.True>Wert aufweisen.  
  
 Weitere Informationen zur Header Größe finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.DataGridView> -Steuerelement unterstützt die doppelte Pufferung nicht. Wenn <xref:System.Windows.Forms.Control.DoubleBuffered%2A> in einem abgeleiteten <xref:System.Windows.Forms.DataGridView> Steuerelement auf festgelegt ist, erhalten Benutzer keine visuellen Rückmeldung, wenn Sie die Größe von `true` Zeilen, Spalten oder Headern ändern oder Spalten neu anordnen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement verwendet wird, das hauptsächlich für die Anzeige vorgesehen ist In diesem Beispiel wird das visuelle Erscheinungsbild des Steuer Elements auf verschiedene Weise angepasst, und das Steuerelement ist für eingeschränkte Interaktivität konfiguriert. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersHeightSizeModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnHeadersHeightSizeModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ ColumnHeadersHeightSizeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.ColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#265](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#265)]
 [!code-vb[System.Windows.Forms.EventExamples#265](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#265)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnHeadersVisible">
      <MemberSignature Language="C#" Value="public bool ColumnHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColumnHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridView.ColumnHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder gibt einen Wert an, der angibt, ob die Spaltenheaderzeile angezeigt wird.</summary>
        <value><see langword="true" />, wenn die Spaltenheader angezeigt werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> -Eigenschaft `false`ist, kann die <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A> Größe einer Spalte, `true` deren-Eigenschaft auf festgelegt ist, in der Benutzeroberfläche immer noch geändert werden, indem Sie mit dem Mauszeiger an einer beliebigen Stelle entlang der rechten Ecke der Spalte klicken, um die Größe zu ändern.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein ungebundenes <xref:System.Windows.Forms.DataGridView> Steuerelement aufgefüllt und <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A> die- `true` Eigenschaft auf festgelegt, um sicherzustellen, dass Spaltenüberschriften angezeigt werden.  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der angegebene Wert beim Festlegen dieser Eigenschaft ist <see langword="false" />, und mindestens eine Spalte weist einen <see cref="P:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode" />-Eigenschaftswert von <see cref="F:System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader" /> auf.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnMinimumWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnMinimumWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnMinimumWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewColumn.MinimumWidth" />-Eigenschaft einer Spalte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#324](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#324)]
 [!code-vb[System.Windows.Forms.EventExamples#324](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#324)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnNameChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnNameChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnNameChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewColumn.Name" />-Eigenschaft einer Spalte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnNameChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnNameChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#325](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#325)]
 [!code-vb[System.Windows.Forms.EventExamples#325](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#325)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnRemoved As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnRemoved;" />
      <MemberSignature Language="F#" Value="member this.ColumnRemoved : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnRemoved : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Spalte aus dem Steuerelement entfernt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnRemoved> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnRemoved> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#326](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#326)]
 [!code-vb[System.Windows.Forms.EventExamples#326](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#326)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataGridViewColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumnCollection ^ Columns { System::Windows::Forms::DataGridViewColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.DataGridViewColumnCollection" Usage="System.Windows.Forms.DataGridView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewColumnCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung ab, die alle Spalten im Steuerelement enthält.</summary>
        <value>Die <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />, die alle Spalten im <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe des <xref:System.Windows.Forms.DataGridViewColumnCollection> von dieser Eigenschaft zurückgegebenen können Sie Spalten hinzufügen, Spalten entfernen und die Anzahl der Spalten abrufen, die <xref:System.Windows.Forms.DataGridView> im Steuerelement enthalten sind. Weitere Informationen finden Sie unter <xref:System.Windows.Forms.DataGridViewColumnCollection>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine ungebundene <xref:System.Windows.Forms.DataGridView>erstellt wird, <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>wie die Eigenschaften <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> , und festgelegt werden <xref:System.Windows.Forms.DataGridView.Rows%2A> und <xref:System.Windows.Forms.DataGridView.Columns%2A> wie die-Eigenschaft und die-Eigenschaft verwendet werden <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>. Außerdem wird veranschaulicht, wie eine Version der <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> -Methode und der- <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> Methode verwendet wird, um die Spaltenüberschriften und die Zeilen ordnungsgemäß zu verkleinern. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> eine `dataGridView1` benannte und eine Schalt `Button1`Fläche mit dem Namen enthält `InitializeDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse mit ihren Ereignis Handlern verbunden sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnCollection" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnSortModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnSortModeChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnSortModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />-Eigenschaft einer Spalte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnSortModeChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#327](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#327)]
 [!code-vb[System.Windows.Forms.EventExamples#327](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#327)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnStateChanged As DataGridViewColumnStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnStateChangedEventHandler ^ ColumnStateChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventHandler " Usage="member this.ColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Zustand einer Spalte ändert, z. B. beim Übernehmen oder Verlieren des Fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, wenn sich der Wert einer der folgenden Spalten Eigenschaften für ein <xref:System.Windows.Forms.DataGridViewColumn> im-Steuerelement ändert:  
  
-   <xref:System.Windows.Forms.DataGridViewBand.Displayed%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Frozen%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.ReadOnly%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewBand.Selected%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.Visible%2A>  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnStateChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnStateChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#328](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#328)]
 [!code-vb[System.Windows.Forms.EventExamples#328](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#328)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnToolTipTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnToolTipTextChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnToolTipTextChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich der <see cref="P:System.Windows.Forms.DataGridViewColumn.ToolTipText" />-Eigenschaftswert für eine Spalte in der <see cref="T:System.Windows.Forms.DataGridView" /> ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#329](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#329)]
 [!code-vb[System.Windows.Forms.EventExamples#329](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#329)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As DataGridViewColumnEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewColumnEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewColumn.Width" />-Eigenschaft einer Spalte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Ereignisses veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Passen Sie die Darstellung von Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#18)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#18)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit (context As DataGridViewDataErrorContexts) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; bool" Usage="dataGridView.CommitEdit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />-Werten, die den Kontext angibt, in dem ein Fehler auftreten kann.</param>
        <summary>Speichert Änderungen am Datencache in der aktiven Zelle, ohne den Bearbeitungsmodus zu beenden.</summary>
        <returns><see langword="true" />, wenn die Änderungen gespeichert wurden, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode versucht, den formatierten benutzerdefinierten Wert in den zugrunde liegenden Zellen Datentyp zu konvertieren. Zu diesem Zweck wird das <xref:System.Windows.Forms.DataGridView.CellParsing> -Ereignis ausgelöst, das Sie behandeln können, um die Typkonvertierung anzupassen. Andernfalls werden Standardtyp Konverter verwendet. Konvertierungs Fehler können zu einer Ausnahme führen, <xref:System.Windows.Forms.DataGridView.DataError> wenn das Ereignis nicht behandelt wird, um es zu verhindern. Wenn der Wert erfolgreich konvertiert wird, wird er an den Datenspeicher übertragen. dadurch <xref:System.Windows.Forms.DataGridView.CellValuePushed> wird das Ereignis für nicht Daten gebundene Zellen, wenn <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> der-Eigenschafts Wert ist `true`, erhöht. Wenn für den Wert erfolgreich ein Commit ausgeführt <xref:System.Windows.Forms.DataGridView.CellValueChanged> wurde, tritt das-Ereignis auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> -Methode innerhalb <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> eines-Ereignis Handlers <xref:System.Windows.Forms.DataGridView.CellValueChanged> aufgerufen, um das-Ereignis zu erhöhen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Deaktivieren Sie die Schaltflächen in einer Schaltflächen Spalte im DataGridView-Steuer](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)Element Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Für den Zellwert konnte kein Commit ausgeführt werden, und entweder ist kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />
        <altmember cref="Overload:System.Windows.Forms.DataGridView.EndEdit" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein neues barrierefreies Objekt für die <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
        <returns>Ein neues <see cref="T:System.Windows.Forms.DataGridView.DataGridViewAccessibleObject" /> für die <see cref="T:System.Windows.Forms.DataGridView" />.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateColumnsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateColumnsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateColumnsInstance () As DataGridViewColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewColumnCollection ^ CreateColumnsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateColumnsInstance : unit -&gt; System.Windows.Forms.DataGridViewColumnCollection&#xA;override this.CreateColumnsInstance : unit -&gt; System.Windows.Forms.DataGridViewColumnCollection" Usage="dataGridView.CreateColumnsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumnCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" /> und gibt diese zurück.</summary>
        <returns>Ein leerer <see cref="T:System.Windows.Forms.DataGridViewColumnCollection" />.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="dataGridView.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue <see cref="T:System.Windows.Forms.Control.ControlCollection" />, die in den <see cref="T:System.Windows.Forms.DataGridView.DataGridViewControlCollection" />-Typ konvertiert werden kann, und gibt sie zurück.</summary>
        <returns>Ein leerer <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von der <xref:System.Windows.Forms.Control.Controls%2A> -Eigenschaft aufgerufen, um ihren Wert zu initialisieren.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.CreateRowsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRowsInstance () As DataGridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewRowCollection ^ CreateRowsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateRowsInstance : unit -&gt; System.Windows.Forms.DataGridViewRowCollection&#xA;override this.CreateRowsInstance : unit -&gt; System.Windows.Forms.DataGridViewRowCollection" Usage="dataGridView.CreateRowsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> und gibt diese zurück.</summary>
        <returns>Ein leerer <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell CurrentCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell CurrentCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentCell" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentCell As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ CurrentCell { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCell : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.CurrentCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die derzeit aktive Zelle ab oder legt sie fest.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DataGridViewCell" />, die die aktive Zelle darstellt, oder <see langword="null" />, wenn keine aktive Zelle vorliegt. Der Standard ist die erste Zelle in der ersten Spalte oder <see langword="null" />, wenn keine Zellen im Steuerelement vorhanden sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine Zelle als aktive Zelle festlegen, wird Sie in der Ansicht angezeigt, wenn Sie derzeit nicht angezeigt wird. Bei der aktuellen Zelle kann es sich nicht um eine Header Zelle, eine deaktivierte Zelle oder eine Zelle in einer verborgenen Zeile oder Spalte handeln.  
  
 Sie können diese Eigenschaft auf `null` festlegen, um das Fokus Rechteck vorübergehend zu entfernen, aber wenn das Steuerelement den Fokus erhält und der Wert dieser Eigenschaft ist `null`, wird es automatisch <xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A> auf den Wert der-Eigenschaft festgelegt.  
  
 Wenn Sie den Wert dieser Eigenschaft ändern, tritt das <xref:System.Windows.Forms.DataGridView.SelectionChanged> Ereignis vor dem <xref:System.Windows.Forms.DataGridView.CurrentCellChanged> -Ereignis auf. Jeder <xref:System.Windows.Forms.DataGridView.SelectionChanged> Ereignishandler, der <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> zu diesem Zeitpunkt auf die Eigenschaft zugreift, erhält seinen vorherigen Wert.  
  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView> an eine externe Datenquelle binden, wird diese Eigenschaft auf ihren Standardwert zurückgesetzt.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht, wie sichergestellt wird, dass die aktuelle Zelle nach dem Sortieren sichtbar <xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A> ist, indem die-Eigenschaft auf <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> die durch die-Eigenschaft abgerufene Zelle festgelegt wird. Dieser Code funktioniert nur mit einem ungebundenen <xref:System.Windows.Forms.DataGridView> Steuerelement. Wenn ein <xref:System.Windows.Forms.DataGridView> Steuerelement an eine externe Datenquelle gebunden ist, wird die aktuelle Zelle beim Sortieren nicht automatisch persistent gespeichert.  
  
 Fügen Sie den folgenden Code in ein Formular ein, das einen mit dem <xref:System.Windows.Forms.DataGridView> Namen `dataGridView1`enthält, um dieses Beispiel auszuführen. In C#müssen Sie auch das <xref:System.Windows.Forms.DataGridView.Sorted> -Ereignis mit dem-Ereignishandler verbinden.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Wert dieser Eigenschaft kann nicht festgelegt werden, da Änderungen an der aktuellen Zelle nicht zugesichert oder abgebrochen werden können.  
  
- oder - 
Die beim Festlegen dieser Eigenschaft angegebene Zelle befindet sich in einer ausgeblendeten Zeile oder Spalte.  
  
Das eintrittsinvariante Aufrufen ist nur zulässig, wenn <see cref="T:System.Windows.Forms.DataGridView" /> an ein <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> gebunden ist. Das eintrittsinvariante Aufrufen ergibt sich durch die Änderung an den zugrunde liegenden Daten.</exception>
        <exception cref="T:System.ArgumentException">Die beim Festlegen dieser Eigenschaft angegebene Zelle befindet sich nicht in der <see cref="T:System.Windows.Forms.DataGridView" />.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentRow" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SelectionChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
        <altmember cref="P:System.Windows.Forms.DataGridView.FirstDisplayedCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/get-and-set-the-current-cell-wf-datagridview-control.md">Gewusst wie: Abrufen und Festlegen der aktuellen Zelle im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellAddress">
      <MemberSignature Language="C#" Value="public System.Drawing.Point CurrentCellAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point CurrentCellAddress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentCellAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCellAddress As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point CurrentCellAddress { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCellAddress : System.Drawing.Point" Usage="System.Windows.Forms.DataGridView.CurrentCellAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeilen- und die Spaltenindizes der derzeit aktiven Zelle ab.</summary>
        <value>Ein <see cref="T:System.Drawing.Point" />, der die Zeilen- und Spaltenindizes der derzeit aktiven Zelle darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um die Zeile und die Spalte der aktuellen Zelle zu ermitteln, ohne direkt auf die Zelle zuzugreifen. Dies ist hilfreich, um die Freigabe von freigegebenen Zeilen zu vermeiden. Weitere Informationen zur Zeilen Freigabe finden Sie unter [bewährte Methoden zum Skalieren des Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)Elements.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A> -Eigenschaft in einem Zeilen Zeichnungs Szenario veranschaulicht. Im Beispiel wird diese Eigenschaft verwendet, um den Zeilen Index der aktuellen Zelle zu speichern. Wenn der Benutzer die aktuelle Zelle in eine andere Zeile ändert, wird die Zeile gezwungen, sich selbst neu zu zeichnen.  
  
 Dieser Code ist Teil eines größeren Beispiels, das in [Gewusst wie: Passen Sie die Darstellung von Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentCellChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentCellChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentCellChanged : EventHandler " Usage="member this.CurrentCellChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridView.CurrentCell" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Ereignisses veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Passen Sie die Darstellung von Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCellDirtyStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentCellDirtyStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentCellDirtyStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentCellDirtyStateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentCellDirtyStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentCellDirtyStateChanged : EventHandler " Usage="member this.CurrentCellDirtyStateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Zustand einer Zelle im Zusammenhang mit einer Änderung der Inhalte ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Zelle wird als geändert gekennzeichnet, wenn der Inhalt geändert wurde, die Änderung jedoch noch nicht gespeichert wurde.  
  
 Dieses Ereignis tritt normalerweise auf, wenn eine Zelle bearbeitet wurde, die Änderung jedoch nicht in den Daten Cache übertragen wurde oder wenn ein Bearbeitungsvorgang abgebrochen wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> -Ereignis behandelt wird. In diesem Beispiel ruft <xref:System.Windows.Forms.DataGridView.CommitEdit%2A> der Ereignishandler die-Methode auf, um das <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignis aufzurufen und <xref:System.Windows.Forms.DataGridViewCheckBoxCell>den aktuellen Wert von zu bestimmen. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Deaktivieren Sie die Schaltflächen in einer Schaltflächen Spalte im DataGridView-Steuer](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)Element Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentRow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow CurrentRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow CurrentRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.CurrentRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRow As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ CurrentRow { System::Windows::Forms::DataGridViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentRow : System.Windows.Forms.DataGridViewRow" Usage="System.Windows.Forms.DataGridView.CurrentRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeile ab, die die aktive Zelle enthält.</summary>
        <value>Diese <see cref="T:System.Windows.Forms.DataGridViewRow" /> stellt  die Zeile dar, die die aktive Zelle enthält, oder <see langword="null" />, wenn keine aktive Zelle vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die aktuelle Zeile zu ändern, müssen Sie die <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> -Eigenschaft auf eine Zelle in der gewünschten Zeile festlegen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataBindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataBindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataBindingComplete As DataGridViewBindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewBindingCompleteEventHandler ^ DataBindingComplete;" />
      <MemberSignature Language="F#" Value="member this.DataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventHandler " Usage="member this.DataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewBindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem ein Datenbindungsvorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, wenn <xref:System.Windows.Forms.DataGridView.DataSource%2A>sich der Inhalt der Datenquelle ändert oder wenn sich der Wert der-, <xref:System.Windows.Forms.Control.BindingContext%2A> <xref:System.Windows.Forms.DataGridView.DataMember%2A>-oder-Eigenschaft ändert.  
  
 Die Behandlung dieses Ereignisses ist beispielsweise hilfreich, um die Größe von Zeilen und Spalten basierend auf Inhalts Aktualisierungen Programm gesteuert zu ändern. Weitere Informationen finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Ereignisses veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#05)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <altmember cref="P:System.Windows.Forms.Control.BindingContext" />
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ListChanged" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As DataGridViewDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.DataGridViewDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.DataGridViewDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine externe Datenanalyse oder ein Validierungsvorgang eine Ausnahme auslöst oder wenn Fehler beim Übergeben von Daten an eine Datenquelle auftreten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.DataError> -Ereignis ermöglicht es Ihnen, Ausnahmen zu behandeln, die in Code ausgelöst werden, der vom-Steuerelement während der Datenverarbeitung aufgerufen wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> Eigenschaften <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A> und des<xref:System.Windows.Forms.DataGridViewDataErrorEventArgs> Objekts, das diesem Ereignis zugeordnet ist, geben normalerweise die Zelle an, in der der Datenfehler aufgetreten ist. Wenn der Fehler in einer externen Datenquelle auftritt, stellt die Datenquelle jedoch möglicherweise nicht die Spalte bereit, in der der Fehler aufgetreten ist. In diesem Fall gibt die <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> -Eigenschaft in der Regel die Spalte der aktuellen Zelle zum Zeitpunkt des Fehlers an.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.DataGridView.DataError> -Ereignishandler veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das im Thema <xref:System.Windows.Forms.DataGridViewComboBoxColumn> Übersicht über die Klasse verfügbar ist.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.DataGridView.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Liste oder Tabelle in der Datenquelle auf, für die die <see cref="T:System.Windows.Forms.DataGridView" /> Daten anzeigt, oder legt den Namen fest.</summary>
        <value>Der Name der Tabelle oder Liste in der <see cref="P:System.Windows.Forms.DataGridView.DataSource" />, für die die <see cref="T:System.Windows.Forms.DataGridView" /> Daten anzeigt. Die Standardeinstellung ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist nützlich, wenn Sie eine Bindung an eine Datenquelle durchführt, die mehrere Listen oder Tabellen enthält. Sie müssen diese Eigenschaft nicht festlegen, wenn Sie eine Bindung an eine Datenquelle durchführen, die eine einzelne Liste oder Tabelle enthält. Beispielsweise können Sie ein <xref:System.Windows.Forms.DataGridView> -Steuerelement an ein <xref:System.Data.DataSet> binden, das eine einzelne Tabelle enthält, ohne diese Eigenschaft festzulegen. Wenn jedoch mehrere Tabellen enthält,müssenSiedieseEigenschaftaufdenNameneinerderTabellenfestlegen.<xref:System.Data.DataSet>  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine allgemeine Verwendung für diese Eigenschaft veranschaulicht. <xref:System.Windows.Forms.DataGridView> Im Beispiel wird ein-Steuerelement mit dem Namen `customersDataGridView` an einen `customersDataSet`mit dem <xref:System.Data.DataSet> Namen gebunden. Diese <xref:System.Data.DataSet> enthält eine Tabelle mit dem Namen "Customers". Die <xref:System.Windows.Forms.DataGridView.DataMember%2A> -Eigenschaft wird auf den Namen der Tabelle festgelegt.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#020](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#020)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#020](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#020)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">In der Datenquelle ist ein Fehler aufgetreten. Entweder ist kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="T:System.Data.DataSet" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataMemberChanged;" />
      <MemberSignature Language="F#" Value="member this.DataMemberChanged : EventHandler " Usage="member this.DataMemberChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.DataMember" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.DataMemberChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.DataMemberChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#266](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#266)]
 [!code-vb[System.Windows.Forms.EventExamples#266](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#266)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.DataGridView.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Datenquelle ab, für die die <see cref="T:System.Windows.Forms.DataGridView" /> Daten anzeigt.</summary>
        <value>Das Objekt, das Daten für die anzuzeigende <see cref="T:System.Windows.Forms.DataGridView" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView> -Klasse unterstützt das Standardmodell für die Windows Forms Datenbindung. Dies bedeutet, dass die Datenquelle einen beliebigen Typ aufweisen kann, der eine der folgenden Schnittstellen implementiert:  
  
-   Die <xref:System.Collections.IList> -Schnittstelle, einschließlich eindimensionaler Arrays.  
  
-   Die <xref:System.ComponentModel.IListSource> -Schnittstelle, z <xref:System.Data.DataTable> . <xref:System.Data.DataSet> b. die Klassen und.  
  
-   Die <xref:System.ComponentModel.IBindingList> Schnittstelle, z. <xref:System.ComponentModel.BindingList%601> b. die-Klasse.  
  
-   Die <xref:System.ComponentModel.IBindingListView> Schnittstelle, z. <xref:System.Windows.Forms.BindingSource> b. die-Klasse.  
  
 Bestimmte Beispiele finden Sie im Beispiel Abschnitt und in der Task Tabelle am Ende dieses Abschnitts.  
  
 In der Regel Binden Sie eine Bindung <xref:System.Windows.Forms.BindingSource> an eine Komponente und <xref:System.Windows.Forms.BindingSource> binden die Komponente an eine andere Datenquelle oder füllen Sie mit Geschäftsobjekten auf. Die <xref:System.Windows.Forms.BindingSource> Komponente ist die bevorzugte Datenquelle, da Sie an eine Vielzahl von Datenquellen gebunden werden kann und viele Probleme mit der Datenbindung automatisch lösen kann.  
  
 Wenn Sie an eine Datenquelle binden, die mehrere Listen oder Tabellen enthält, müssen Sie <xref:System.Windows.Forms.DataGridView.DataMember%2A> die-Eigenschaft auf eine Zeichenfolge festlegen, die die Liste oder Tabelle angibt, an die die Bindung erfolgen soll. Wenn Sie jedoch eine <xref:System.Windows.Forms.BindingSource> Bindung an eine Komponente durchführt, die mehrere Listen oder Tabellen enthält, <xref:System.Windows.Forms.BindingSource.DataMember%2A> können Sie stattdessen <xref:System.Windows.Forms.BindingSource> die-Eigenschaft der Komponente festlegen.  
  
 Wenn Sie anstelle von Datenbankdaten an eine Objekt Auflistung binden, legen Sie in der <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> Regel die-Eigenschaft des-Objekts <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> , das `null` von der-Eigenschaft zurückgegeben wird <xref:System.DBNull.Value?displayProperty=nameWithType>, auf fest, anstatt den Standardwert von zu verwenden. geeignet für Datenbankdaten.  
  
 Weitere Informationen finden Sie unter [Anzeigen von Daten im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)Element. In der folgenden Tabelle finden Sie direkte Links zu allgemeinen Aufgaben im <xref:System.Windows.Forms.DataGridView.DataSource%2A> Zusammenhang mit der-Eigenschaft.  
  
 Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Erstellen eines Master-/Detailformulars mit zwei Windows Forms DataGridView](~/docs/framework/winforms/controls/creating-a-master-detail-form-using-two-datagridviews.md) - [Steuerelementen und Gewusst wie: Binden Sie Objekte an Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-bind-objects-to-windows-forms-datagridview-controls.md)-Steuerelemente.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine einfache Datenbindung <xref:System.Windows.Forms.DataGridView>initialisiert wird. Außerdem wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.DataSource%2A> -Eigenschaft festgelegt wird.  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">In der Datenquelle ist ein Fehler aufgetreten. Entweder ist kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.ComponentModel.IListSource" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
        <altmember cref="T:System.ComponentModel.BindingList`1" />
        <altmember cref="T:System.ComponentModel.IBindingListView" />
        <altmember cref="T:System.Windows.Forms.BindingSource" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataMember" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md">Anzeigen von Daten im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.DataSourceChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.DataSourceChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#267](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#267)]
 [!code-vb[System.Windows.Forms.EventExamples#267](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#267)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Standardzellstil ab, der für Zellen in der <see cref="T:System.Windows.Forms.DataGridView" /> übernommen werden soll, wenn keine anderen Eigenschaften für den Zellstil festgelegt sind.</summary>
        <value>Das <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, das als Standardformat übernommen werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement zeigt seine Zellen mithilfe der Stile an, <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> die von der Cell-Eigenschaft angegeben werden, die Stile <xref:System.Windows.Forms.DataGridViewCellStyle>von anderen Eigenschaften des Typs erbt. Die durch die <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> -Eigenschaft angegebenen Stile betreffen alle Zellen, außer wenn Sie durch die durch die folgenden Eigenschaften angegebenen Stile überschrieben werden:  
  
-   <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType>  
  
 Weitere Informationen finden Sie unter [Zellen Stile im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)Element.  
  
 Beim Abrufen dieser Eigenschaft wird eine <xref:System.Windows.Forms.DataGridViewCellStyle> mit Standardwerten erstellt, wenn nicht bereits auf die Eigenschaft zugegriffen wurde. Dies kann zu Leistungseinbußen führen, wenn diese Eigenschaft für viele Zeilen erhalten wird. Verwenden Sie nach Möglichkeit eine einzelne <xref:System.Windows.Forms.DataGridViewCellStyle> , um diese Eigenschaft für mehrere Zeilen festzulegen. Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement veranschaulicht, das in erster Linie für die Anzeige vorgesehen ist. In diesem Beispiel wird das visuelle Erscheinungsbild des Steuer Elements auf verschiedene Weise angepasst, und das Steuerelement ist für eingeschränkte Interaktivität konfiguriert. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyleChanged : EventHandler " Usage="member this.DefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn Eigenschaften von <xref:System.Windows.Forms.DataGridViewCellStyle> , die von <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> der-Eigenschaft zurückgegeben werden, auf neue <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> Werte festgelegt werden oder wenn <xref:System.Windows.Forms.DataGridViewCellStyle> die-Eigenschaft auf einen neuen festgelegt wird, wobei mindestens ein Eigenschafts Wert sich vom vorherigen Zellstilobjekt unterscheidet. .  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.DefaultCellStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#268](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#268)]
 [!code-vb[System.Windows.Forms.EventExamples#268](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#268)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.DataGridView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die anfängliche Standardgröße des Steuerelements ab.</summary>
        <value>Eine <see cref="T:System.Drawing.Size" />, die die Anfangsgröße des Steuerelements darstellt, das 240 Pixel breit und 150 Pixel hoch ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValuesNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DefaultValuesNeeded As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ DefaultValuesNeeded;" />
      <MemberSignature Language="F#" Value="member this.DefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.DefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer die Zeile für neue Datensätze eingibt, sodass diese mit Standarddaten aufgefüllt werden kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit diesem Ereignis können Sie die Zeile für neue Datensätze auffüllen, wenn der Benutzer die Zeile eingibt. Die Anfangswerte für die Zeile stammen aus <xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A> der-Eigenschaft <xref:System.Windows.Forms.DataGridViewCell> der, die von der <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> -Eigenschaft der einzelnen Spalten zurückgegeben wird.  
  
 Im Daten gebundenen Modus werden alle Zellwerte für Daten gebundene Spalten in der externen Datenquelle gespeichert. Wenn der Benutzer die Zeile für neue Datensätze eingibt, wird eine neue Zeile in der Datenquelle erstellt <xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded> , bevor das Ereignis auftritt. Wenn Sie die <xref:System.Windows.Forms.DataGridViewRowEventArgs.Row%2A?displayProperty=nameWithType> -Eigenschaft im Ereignishandler auffüllen, werden die Werte direkt der Datenquelle hinzugefügt.  
  
 Im virtuellen Modus tritt nach dem Auftreten dieses Ereignisses das <xref:System.Windows.Forms.DataGridView.CellValuePushed> Ereignis für jede Zelle in der neuen Zeile auf, sodass Sie die Standardwerte im benutzerdefinierten Datenspeicher speichern können. Dann tritt das <xref:System.Windows.Forms.DataGridView.CellValueNeeded> Ereignis für jede Zelle in der neuen Zeile auf und ruft die Werte ab, die Sie <xref:System.Windows.Forms.DataGridView.CellValuePushed> im Ereignis gespeichert haben, die dann angezeigt werden.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis behandelt werden kann. Im Beispiel werden Zellen für die angegebenen Spalten mit Standardwerten aufgefüllt. Für die `CustomerID` -Spalte wird der Wert aus einer separaten (nicht implementierten) Methode abgerufen, die eine eindeutige Kunden-ID generiert.  
  
 Um dieses Beispiel auszuführen, ersetzen Sie die Spaltennamen durch die Namen der Spalten Objekte aus einem tatsächlichen <xref:System.Windows.Forms.DataGridView> Steuerelement, und stellen Sie entsprechende Standardwerte bereit. Wenn Sie Spalten anhand des Namens angeben, müssen Sie den Namen des Spalten Objekts und nicht den Spaltenheader Text verwenden.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#120)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#120)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayedColumnCount">
      <MemberSignature Language="C#" Value="public int DisplayedColumnCount (bool includePartialColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DisplayedColumnCount(bool includePartialColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.DisplayedColumnCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayedColumnCount (includePartialColumns As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DisplayedColumnCount(bool includePartialColumns);" />
      <MemberSignature Language="F#" Value="member this.DisplayedColumnCount : bool -&gt; int" Usage="dataGridView.DisplayedColumnCount includePartialColumns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePartialColumns" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePartialColumns"><see langword="true" />, um partielle Spalten in der Anzahl der angezeigten Spalten einzuschließen, andernfalls <see langword="false" />.</param>
        <summary>Gibt die Anzahl der dem Benutzer angezeigten Spalten zurück.</summary>
        <returns>Die Anzahl der dem Benutzer angezeigten Spalten.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayedRowCount">
      <MemberSignature Language="C#" Value="public int DisplayedRowCount (bool includePartialRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DisplayedRowCount(bool includePartialRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.DisplayedRowCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisplayedRowCount (includePartialRow As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DisplayedRowCount(bool includePartialRow);" />
      <MemberSignature Language="F#" Value="member this.DisplayedRowCount : bool -&gt; int" Usage="dataGridView.DisplayedRowCount includePartialRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePartialRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePartialRow"><see langword="true" />, um partielle Zeilen in der Anzahl der angezeigten Zeilen einzuschließen, andernfalls <see langword="false" />.</param>
        <summary>Gibt die Anzahl der dem Benutzer angezeigten Zeilen zurück.</summary>
        <returns>Die Anzahl der dem Benutzer angezeigten Zeilen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRectangle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Rectangle DisplayRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DisplayRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.DisplayRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DisplayRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle DisplayRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.DataGridView.DisplayRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Rechteck ab, das den Anzeigebereich des Steuerelements darstellt.</summary>
        <value>Ein <see cref="T:System.Drawing.Rectangle" />, das den Anzeigebereich des Steuerelements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView.DisplayRectangle%2A> -Eigenschaft gibt das Client Rechteck des Anzeige Bereichs des Steuer Elements zurück, ohne den Bereich, der von den angezeigten Bild Lauf leisten belegt wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" /> Eigenschaft in einer abgeleiteten Klasse überschreiben, verwenden Sie <see cref="P:System.Windows.Forms.DataGridView.DisplayRectangle" /> die-Eigenschaft der Basisklasse, um die Basis Implementierung zu erweitern. Alternativ müssen Sie die gesamte-Implementierung bereitstellen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dataGridView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die vom <see cref="T:System.Windows.Forms.Control" /> und den untergeordneten Steuerelementen verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control EditingControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control EditingControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditingControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ EditingControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.DataGridView.EditingControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das von der aktiven Zelle gehostete Steuerelement ab, wenn sich eine Zelle mit einem Bearbeitungssteuerelement im Bearbeitungsmodus befindet.</summary>
        <value>Das von der aktiven Zelle gehostete <see cref="T:System.Windows.Forms.Control" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn sich die Zelle nicht im Bearbeitungsmodus befindet oder der Zellentyp kein Bearbeitungs Steuerelement enthält, gibt diese Eigenschaft `null`zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft in einer überschriebenen Methode eines benutzerdefinierten Zellentyps verwendet wird. Im Beispiel wird ein Verweis auf das Bearbeitungs Steuerelement abgerufen, in einen benutzerdefinierten Bearbeitungs Steuerelement-Typ umgewandelt und dann mit dem aktuellen Wert der Zelle aufgefüllt.  
  
 Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Host Steuerelemente in Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)-Zellen.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#210)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingControlShowing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.EditingControlShowing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingControlShowing As DataGridViewEditingControlShowingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewEditingControlShowingEventHandler ^ EditingControlShowing;" />
      <MemberSignature Language="F#" Value="member this.EditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventHandler " Usage="member this.EditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewEditingControlShowingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Steuerelement zum Bearbeiten einer Zelle angezeigt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis behandeln, um die benutzerdefinierte Initialisierung des Bearbeitungs Steuer Elements auszuführen, wenn eine Zelle in den Bearbeitungsmodus wechselt. Legen Sie die Eigenschaften des-Objekts fest, das von der <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=nameWithType> -Eigenschaft zurückgegeben wird, um die Anzeigeeigenschaften des-Steuer Elements anzupassen. Um eine andere Initialisierung auszuführen, wandeln Sie den Wert <xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=nameWithType> der-Eigenschaft in den spezifischen Steuer Elementtyp um, und greifen Sie direkt auf die Member zu. Beispielsweise können Sie das <xref:System.Windows.Forms.DataGridView.EditingControlShowing> -Ereignis behandeln, um Ereignishandler an die Ereignisse des Bearbeitungs Steuer Elements anzufügen.  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.DataGridView> -Steuerelement hostet jeweils ein Bearbeitungs Steuerelement und verwendet das Bearbeitungs Steuerelement immer dann, wenn sich der Zellentyp zwischen den Änderungen nicht ändert. Beim Anfügen von Ereignis Handlern an das Bearbeitungs Steuerelement müssen Sie daher Vorsichtsmaßnahmen treffen, um das mehrfache anfügen desselben Handlers zu vermeiden. Um dieses Problem zu vermeiden, entfernen Sie den Handler aus dem-Ereignis, bevor Sie den Handler an das-Ereignis anfügen. Dadurch wird eine Duplizierung verhindert, wenn der Handler bereits an das Ereignis angefügt ist, andernfalls aber keine Auswirkung hat. Weitere Informationen finden Sie im Beispielcode in der Übersicht <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> über die-Klasse.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis behandelt wird, <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> um die-Eigenschaft der aktuellen Zelle zu ändern. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> einen `dataGridView1` mit dem Namen enthält <xref:System.Windows.Forms.DataGridView.EditingControlShowing> , und stellen Sie sicher, dass das Ereignis dem Ereignishandler zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#210)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
        <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
        <altmember cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditingPanel">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Panel EditingPanel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Panel EditingPanel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditingPanel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanel As Panel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Panel ^ EditingPanel { System::Windows::Forms::Panel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditingPanel : System.Windows.Forms.Panel" Usage="System.Windows.Forms.DataGridView.EditingPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Panel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bereich ab, der die <see cref="P:System.Windows.Forms.DataGridView.EditingControl" /> enthält.</summary>
        <value>Das <see cref="T:System.Windows.Forms.Panel" />, das die <see cref="P:System.Windows.Forms.DataGridView.EditingControl" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anders als <xref:System.Windows.Forms.DataGridView.EditingControl%2A> bei der-Eigenschaft `null` , bei der sich die aktuelle Zelle nicht im Bearbeitungsmodus <xref:System.Windows.Forms.DataGridView.EditingPanel%2A> befindet, ist die-Eigenschaft immer verfügbar.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.EditingPanel%2A> -Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> -Steuerelement verwendet wird, um eine Zelle visuell zu unterscheiden, wenn Sie sich im Bearbeitungsmodus befindet. In diesem Beispiel ist der <xref:System.Windows.Forms.Panel.BorderStyle%2A> des Bearbeitungsbereichs der Zelle auf <xref:System.Windows.Forms.BorderStyle.Fixed3D>festgelegt. Fügen Sie den Code in ein Formular ein, das einen mit dem <xref:System.Windows.Forms.DataGridView> Namen `dataGridView1`enthält, um dieses Beispiel auszuführen.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#069](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#069)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#069](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#069)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewEditMode EditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewEditMode EditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property EditMode As DataGridViewEditMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewEditMode EditMode { System::Windows::Forms::DataGridViewEditMode get(); void set(System::Windows::Forms::DataGridViewEditMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditMode : System.Windows.Forms.DataGridViewEditMode with get, set" Usage="System.Windows.Forms.DataGridView.EditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewEditMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, wie mit der Bearbeitung einer Zelle begonnen werden soll.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.DataGridViewEditMode" />-Werte. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle <xref:System.Windows.Forms.DataGridViewEditMode> Werte mit Ausnahme <xref:System.Windows.Forms.DataGridViewEditMode.EditProgrammatically> von ermöglichen einem Benutzer auch das Doppelklicken auf eine Zelle, um mit der Bearbeitung zu beginnen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine einfache Datenbindung <xref:System.Windows.Forms.DataGridView>initialisiert wird. Außerdem wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.EditMode%2A> -Eigenschaft festgelegt wird.  
  
 [!code-cpp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.GridViewSimpleBound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewSimpleBound/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewEditMode" />-Wert.</exception>
        <exception cref="T:System.Exception">Der beim Festlegen dieser Eigenschaft angegebene Wert würde bewirken, dass das Steuerelement in den Bearbeitungsmodus wechselt. Bei der Initialisierung der Bearbeitung des Zellwerts ist jedoch ein Fehler aufgetreten, und entweder liegt kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" /> -Ereignis vor, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" /> -Eigenschaft auf <see langword="true" />festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EditModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EditModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EditModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.EditModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EditModeChanged;" />
      <MemberSignature Language="F#" Value="member this.EditModeChanged : EventHandler " Usage="member this.EditModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.EditMode" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.EditModeChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.EditModeChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#269](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#269)]
 [!code-vb[System.Windows.Forms.EventExamples#269](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#269)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableHeadersVisualStyles">
      <MemberSignature Language="C#" Value="public bool EnableHeadersVisualStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHeadersVisualStyles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHeadersVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHeadersVisualStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHeadersVisualStyles : bool with get, set" Usage="System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob Zeilen- und Spaltenheader die visuellen Stile des aktuellen Designs des Benutzers verwenden, wenn visuelle Stile für die Anwendung aktiviert sind.</summary>
        <value><see langword="true" /> , wenn visuelle Stile für die Header aktiviert sind, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können visuelle Stile für Ihre Anwendung aktivieren, indem Sie <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> die-Methode aufrufen <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> , bevor Sie die-Methode aufrufen. Wenn <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A> auf `true`festgelegt ist, werden alle Header Zellen außer dem mit dem aktuellen Design gezeichnet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie visuelle Stile für die Zeilen-und Spaltenheader in einer Anwendung deaktiviert werden, für die visuelle Stile aktiviert sind. In diesem Beispiel wurden visuelle Stile für die Anwendung aktiviert, indem die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A> -Methode in `Main`aufgerufen wurde. Visuelle Stile werden jedoch nicht auf die Zeilen-und Spaltenüberschriften angewendet, <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> da auf `false`festgelegt ist. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="Overload:System.Windows.Forms.Application.Run" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndEdit">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Führt den Bearbeitungsvorgang an der aktiven Zelle aus und beendet ihn.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; bool" Usage="dataGridView.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt den Bearbeitungsvorgang an der aktiven Zelle mit dem Standardfehlerkontext aus und beendet ihn.</summary>
        <returns><see langword="true" />, wenn die Bearbeitungsoperation ausgeführt und beendet wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.Windows.Forms.DataGridView.EndEdit%2A> <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Parsing> -Überladung auf und übergibt dabei eine bitweise Kombination <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> der-und-Werte.  
  
 Diese Methode löst das <xref:System.Windows.Forms.DataGridView.CellEndEdit> -Ereignis aus.  
  
 Diese Methode kann zu einer Ausnahme führen, wenn Fehler nicht mit dem <xref:System.Windows.Forms.DataGridView.DataError> Ereignis behandelt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Für den Zellwert konnte kein Commit ausgeführt werden, und entweder ist kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <altmember cref="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public bool EndEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndEdit(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.EndEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndEdit (context As DataGridViewDataErrorContexts) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndEdit(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="member this.EndEdit : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; bool" Usage="dataGridView.EndEdit context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />-Werten, die den Kontext angibt, in dem ein Fehler auftreten kann.</param>
        <summary>Führt den Bearbeitungsvorgang an der aktiven Zelle mit dem angegebenen Fehlerkontext aus und beendet ihn.</summary>
        <returns><see langword="true" />, wenn die Bearbeitungsoperation ausgeführt und beendet wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode löst das <xref:System.Windows.Forms.DataGridView.CellEndEdit> -Ereignis aus.  
  
 Diese Methode kann zu einer Ausnahme führen, wenn Fehler nicht mit dem <xref:System.Windows.Forms.DataGridView.DataError> Ereignis behandelt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Für den Zellwert konnte kein Commit ausgeführt werden, und entweder ist kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <altmember cref="M:System.Windows.Forms.DataGridView.CommitEdit(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell FirstDisplayedCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell FirstDisplayedCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedCell" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedCell As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ FirstDisplayedCell { System::Windows::Forms::DataGridViewCell ^ get(); void set(System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedCell : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die erste derzeit in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigte Zelle ab oder legt diese fest. In der Regel befindet sich diese Zelle in der linken oberen Ecke.</summary>
        <value>Die erste derzeit im Steuerelement angezeigte <see cref="T:System.Windows.Forms.DataGridViewCell" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um zu bestimmen, welche Zelle sich in der ersten Zeile und Spalte befindet, die derzeit im-Steuerelement angezeigt wird. In der Regel befindet sich diese in der oberen linken Ecke, aber für rechts-nach-links-Sprachen befindet Sie sich in der oberen rechten Ecke. Sie können diese Eigenschaft auch so festlegen, dass im Steuerelement ein Bildlauf zur Zelle angegeben wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie sichergestellt wird, dass die aktuelle Zelle nach dem Sortieren sichtbar ist. Dieser Code funktioniert nur mit einem ungebundenen <xref:System.Windows.Forms.DataGridView> Steuerelement. Wenn ein <xref:System.Windows.Forms.DataGridView> Steuerelement an eine externe Datenquelle gebunden ist, wird die aktuelle Zelle beim Sortieren nicht automatisch persistent gespeichert.  
  
 Fügen Sie den folgenden Code in ein Formular ein, das einen mit dem <xref:System.Windows.Forms.DataGridView> Namen `dataGridView1`enthält, um dieses Beispiel auszuführen. In C#müssen Sie auch das <xref:System.Windows.Forms.DataGridView.Sorted> -Ereignis mit dem-Ereignishandler verbinden.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die beim Festlegen dieser Eigenschaft angegebene Zelle befindet sich nicht in der <see cref="T:System.Windows.Forms.DataGridView" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die beim Festlegen dieser Eigenschaft angegebene Zelle weist den Wert -1 für die <see cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />- oder <see cref="P:System.Windows.Forms.DataGridViewCell.ColumnIndex" />-Eigenschaft auf, was darauf hinweist, dass es sich um eine Headerzelle oder eine freigegebene Zelle handelt.  
  
- oder - 
Die beim Festlegen dieser Eigenschaft angegebene Zelle weist den <see cref="P:System.Windows.Forms.DataGridViewCell.Visible" />-Eigenschaftswert <see langword="false" /> auf.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingColumnHiddenWidth">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingColumnHiddenWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstDisplayedScrollingColumnHiddenWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingColumnHiddenWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingColumnHiddenWidth : int" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Breite des Abschnitts der Spalte ab, die gerade durch Scrollen aus der Ansicht bewegt wird.</summary>
        <value>Die Breite des Abschnitts der Spalte, die durch das Durchführen eines Bildlaufs aus der Ansicht bewegt wird.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingColumnIndex">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingColumnIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedScrollingColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingColumnIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingColumnIndex : int with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der Spalte ab, die die erste in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigte Spalte ist, oder legt ihn fest.</summary>
        <value>Der Index der Spalte, die die erste in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigte Spalte ist.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der zum Einstellen dieser Eigenschaft angegebene Wert ist kleiner als 0 oder größer als die Anzahl von Spalten im Steuerelement minus 1.</exception>
        <exception cref="T:System.InvalidOperationException">Der zum Einstellen dieser Eigenschaft angegebene Wert gibt eine Spalte an, deren <see cref="P:System.Windows.Forms.DataGridViewColumn.Visible" />-Eigenschaft den Wert <see langword="false" /> hat.  
  
- oder - 
Der zum Einstellen dieser Eigenschaft angegebene Wert gibt eine Spalte an, deren <see cref="P:System.Windows.Forms.DataGridViewColumn.Frozen" />-Eigenschaft den Wert <see langword="true" /> hat.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FirstDisplayedScrollingRowIndex">
      <MemberSignature Language="C#" Value="public int FirstDisplayedScrollingRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstDisplayedScrollingRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDisplayedScrollingRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FirstDisplayedScrollingRowIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDisplayedScrollingRowIndex : int with get, set" Usage="System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der Zeile ab, die die erste in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigte Zeile ist, oder legt ihn fest.</summary>
        <value>Der Index der Zeile, die die erste in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigte Zeile ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Festlegen dieser Eigenschaft wird <xref:System.Windows.Forms.DataGridView.Scroll> das-Ereignis ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der zum Einstellen dieser Eigenschaft angegebene Wert ist kleiner als 0 oder größer als die Anzahl von Zeilen im Steuerelement minus 1.</exception>
        <exception cref="T:System.InvalidOperationException">Der zum Einstellen dieser Eigenschaft angegebene Wert gibt eine Zeile an, deren <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" />-Eigenschaft den Wert <see langword="false" /> hat.  
  
- oder - 
Der zum Einstellen dieser Eigenschaft angegebene Wert gibt eine Spalte an, deren <see cref="P:System.Windows.Forms.DataGridViewRow.Frozen" />-Eigenschaft den Wert <see langword="true" /> hat.</exception>
        <altmember cref="E:System.Windows.Forms.DataGridView.Scroll" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataGridView.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schriftart des in der <see cref="T:System.Windows.Forms.DataGridView" /> angezeigten Texts ab oder legt sie fest.</summary>
        <value>Der <see cref="T:System.Drawing.Font" />, der auf den Text angewendet werden soll, der im Steuerelement angezeigt wird. Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultFont" />-Eigenschaft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.Font%2A> -Eigenschaft ist eine Ambient-Eigenschaft. Eine Ambient-Eigenschaft ist eine Steuerelement Eigenschaft, die, wenn Sie nicht festgelegt ist, vom übergeordneten Steuerelement abgerufen wird. Beispielsweise hat ein <xref:System.Windows.Forms.Button> standardmäßig dasselbe <xref:System.Windows.Forms.Control.BackColor%2A> wie das übergeordnete <xref:System.Windows.Forms.Form> Element. Weitere Informationen zu Ambient-Eigenschaften finden Sie unter <xref:System.Windows.Forms.AmbientProperties> der-Klasse <xref:System.Windows.Forms.Control> oder der-Klassen Übersicht.  
  
 Da der <xref:System.Drawing.Font> unveränderlich ist (d. h., Sie können keine seiner Eigenschaften anpassen), können Sie die <xref:System.Windows.Forms.Control.Font%2A> Eigenschaft nur einem neuen <xref:System.Drawing.Font> Objekt zuweisen. Allerdings können Sie die neue Schriftart auf der vorhandenen Schriftart basieren.  
  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement verwendet den Wert <xref:System.Windows.Forms.DataGridView.Font%2A> der-Eigenschaft als Standardwert für <xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A> die Eigenschaften <xref:System.Windows.Forms.DataGridViewCellStyle> von-Objekten, <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>die <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>von den <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> Eigenschaften, und zurückgegeben werden. Wenn Sie <xref:System.Windows.Forms.DataGridView.Font%2A> den Wert ändern, <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>werden <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>die Eigenschaften <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> , und automatisch aktualisiert, und die Schriftart für jede Zelle, die den Wert erbt, wird geändert. Header Zellen überschreiben standardmäßig den Wert, und Sie können den Wert für bestimmte Zeilen, Spalten und Zellen überschreiben. Weitere Informationen zur Vererbung von Zellen Formaten finden Sie unter [Zellen Stile im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Erstellen Sie ein ungebundenes Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/how-to-create-an-unbound-windows-forms-datagridview-control.md)Element.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/CS/simpleunbound.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSimpleUnbound#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSimpleUnbound/VB/simpleunbound.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Font" />
        <altmember cref="T:System.Drawing.Font" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der <see cref="P:System.Windows.Forms.DataGridView.Font" />-Eigenschaftswert geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.FontChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.FontChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#271](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#271)]
 [!code-vb[System.Windows.Forms.EventExamples#271](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#271)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Font" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe des <see cref="T:System.Windows.Forms.DataGridView" /> ab oder legt sie fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe der <see cref="T:System.Windows.Forms.DataGridView" /> darstellt. Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultForeColor" />-Eigenschaft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control.ForeColor%2A> -Eigenschaft ist eine Ambient-Eigenschaft. Eine Ambient-Eigenschaft ist eine Steuerelement Eigenschaft, die, wenn Sie nicht festgelegt ist, vom übergeordneten Steuerelement abgerufen wird. Beispielsweise hat ein <xref:System.Windows.Forms.Button> standardmäßig dasselbe <xref:System.Windows.Forms.Control.BackColor%2A> wie das übergeordnete <xref:System.Windows.Forms.Form> Element. Weitere Informationen zu Ambient-Eigenschaften finden Sie unter <xref:System.Windows.Forms.AmbientProperties> der-Klasse <xref:System.Windows.Forms.Control> oder der-Klassen Übersicht.  
  
 Da der <xref:System.Drawing.Font> unveränderlich ist (d. h., Sie können keine seiner Eigenschaften anpassen), können Sie die <xref:System.Windows.Forms.Control.Font%2A> Eigenschaft nur einem neuen <xref:System.Drawing.Font> Objekt zuweisen. Allerdings können Sie die neue Schriftart auf der vorhandenen Schriftart basieren.  
  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement verwendet den Wert <xref:System.Windows.Forms.DataGridView.ForeColor%2A> der-Eigenschaft als Standardwert für <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> die- <xref:System.Windows.Forms.DataGridViewCellStyle> Eigenschaft von, <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> die von der-Eigenschaft zurückgegeben wird. Wenn Sie <xref:System.Windows.Forms.DataGridView.ForeColor%2A> den Wert ändern, <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> wird die-Eigenschaft automatisch aktualisiert, und die Vorder grundtextfarbe wird für jede Zelle geändert, die den Wert erbt Header Zellen überschreiben standardmäßig den Wert, und Sie können den Wert für bestimmte Zeilen, Spalten und Zellen überschreiben. Weitere Informationen zur Vererbung von Zellen Formaten finden Sie unter [Zellen Stile im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)Element.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der <see cref="P:System.Windows.Forms.DataGridView.ForeColor" />-Eigenschaftswert geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ForeColorChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ForeColorChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#270](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#270)]
 [!code-vb[System.Windows.Forms.EventExamples#270](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#270)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityObjectById">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject GetAccessibilityObjectById(int32 objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetAccessibilityObjectById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetAccessibilityObjectById (objectId As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ GetAccessibilityObjectById(int objectId);" />
      <MemberSignature Language="F#" Value="override this.GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridView.GetAccessibilityObjectById objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectId">Ein <see langword="Int32" />, der das abzurufende <see cref="T:System.Windows.Forms.AccessibleObject" /> bezeichnet.</param>
        <summary>Ruft die angegebene <see cref="T:System.Windows.Forms.AccessibleObject" /> ab.</summary>
        <returns>Das angegebene <see cref="T:System.Windows.Forms.AccessibleObject" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellCount">
      <MemberSignature Language="C#" Value="public int GetCellCount (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellCount(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetCellCount(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellCount (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellCount(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetCellCount : System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridView.GetCellCount includeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werte, die die zu zählenden Zellen angibt.</param>
        <summary>Ruft die Anzahl der Zellen ab, die dem bereitgestellten Filter entsprechen.</summary>
        <returns>Die Anzahl der Zellen, die mit dem <paramref name="includeFilter" />-Parameter übereinstimmen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, um die Anzahl der Zellen in einem bestimmten Zustand zu ermitteln. Verwenden Sie zum Abrufen der Anzahl ausgewählter Zellen z. b. diese Methode mit dem <xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType> Wert. Dies ist in der Regel effizienter als die <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> Verwendung der-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Methode verwendet wird, um zu bestimmen, ob Zellen in <xref:System.Windows.Forms.DataGridView> einem-Steuerelement ausgewählt sind. Wenn in diesem Beispiel Zellen ausgewählt werden, werden ihre Werte über die <xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A> -Methode abgerufen und in einem <xref:System.Windows.Forms.TextBox> -Steuerelement angezeigt.  
  
 Dieser Code ist Teil eines größeren Beispiels, das die Verwendung der Zwischenablage Funktionen des <xref:System.Windows.Forms.DataGridView> -Steuer Elements veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Ermöglicht es Benutzern, mehrere Zellen aus dem Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)Element in die Zwischenablage zu kopieren.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#16)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="includeFilter" /> enthält den Wert <see cref="F:System.Windows.Forms.DataGridViewElementStates.ResizableSet" />.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetCellDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetCellDisplayRectangle (int columnIndex, int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetCellDisplayRectangle(int32 columnIndex, int32 rowIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetCellDisplayRectangle(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellDisplayRectangle (columnIndex As Integer, rowIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetCellDisplayRectangle(int columnIndex, int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetCellDisplayRectangle : int * int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetCellDisplayRectangle (columnIndex, rowIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Spaltenindex für die gewünschte Zelle.</param>
        <param name="rowIndex">Der Zeilenindex für die gewünschte Zelle.</param>
        <param name="cutOverflow"><see langword="true" />, um nur den angezeigten Teil der Zelle zurückzugeben, <see langword="false" />, um die gesamten Zellengrenzen zurückzugeben.</param>
        <summary>Gibt das Rechteck zurück, das den Anzeigebereich für eine Zelle darstellt.</summary>
        <returns>Das <see cref="T:System.Drawing.Rectangle" />, das das Anzeigerechteck der Zelle darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt die gesamten Zell Begrenzungen oder nur den angezeigten Teil zurück. Um nur die Begrenzungen der Zellen Inhalte zu erhalten, verwenden Sie die <xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A> Cell-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist kleiner als -1 oder größer als die Anzahl der Spalten im Steuerelement minus 1.  
  
- oder - 
 <paramref name="rowIndex" /> ist kleiner als -1 oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ContentBounds" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetClipboardContent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataObject GetClipboardContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataObject GetClipboardContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetClipboardContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClipboardContent () As DataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataObject ^ GetClipboardContent();" />
      <MemberSignature Language="F#" Value="abstract member GetClipboardContent : unit -&gt; System.Windows.Forms.DataObject&#xA;override this.GetClipboardContent : unit -&gt; System.Windows.Forms.DataObject" Usage="dataGridView.GetClipboardContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die formatierten Werte ab, die den Inhalt der ausgewählten Zellen für das Kopieren in das <see cref="T:System.Windows.Forms.Clipboard" /> darstellen.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataObject" />, das den Inhalt der ausgewählten Zellen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft Daten ab, die den durch die ausgewählten Zellen definierten Bereich darstellen. Diese Region ist das kleinste Rechteck, das alle ausgewählten Zellen enthält. Der Wert für jede ausgewählte Zelle in diesem Bereich wird durch Aufrufen der <xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=nameWithType> -Methode abgerufen. Leere Platzhalter Werte werden für nicht ausgewählte Zellen in diesem Bereich verwendet. Diese Methode kombiniert diese Werte in einer <xref:System.Windows.Forms.DataObject> , die mehrere Formate zum Kopieren in die Zwischenablage enthält. Zu den unterstützten zwischen <xref:System.Windows.Forms.DataFormats.Text?displayProperty=nameWithType>Ablage <xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=nameWithType>Formaten <xref:System.Windows.Forms.DataFormats.Html?displayProperty=nameWithType>zählen, <xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=nameWithType>, und.  
  
 Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Forms.Clipboard>-Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ausgewählter <xref:System.Windows.Forms.DataGridView> Inhalt Programm gesteuert der Zwischenablage hinzugefügt wird. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Ermöglicht es Benutzern, mehrere Zellen aus dem Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/enable-users-to-copy-multiple-cells-to-the-clipboard-datagridview.md)Element in die Zwischenablage zu kopieren.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/CS/datagridviewclipboarddemo.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewClipboardDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewClipboardDemo/VB/datagridviewclipboarddemo.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Für <see cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" /> ist <see cref="F:System.Windows.Forms.DataGridViewClipboardCopyMode.Disable" /> festgelegt.</exception>
        <block subset="none" type="overrides"><para>Überschreiben Sie diese Methode, um angepasste Zwischenablage Werte bereitzustellen. Dies ist beispielsweise hilfreich, um das Kopieren von Werten aus benutzerdefinierten Zelltypen zu unterstützen.</para></block>
        <altmember cref="P:System.Windows.Forms.DataGridView.ClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewClipboardCopyMode" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetColumnDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetColumnDisplayRectangle (int columnIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetColumnDisplayRectangle(int32 columnIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetColumnDisplayRectangle(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnDisplayRectangle (columnIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetColumnDisplayRectangle(int columnIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetColumnDisplayRectangle : int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetColumnDisplayRectangle (columnIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Spaltenindex für die gewünschte Zelle.</param>
        <param name="cutOverflow"><see langword="true" />, um das im <see cref="T:System.Windows.Forms.DataGridView" />-Rahmen sichtbare Spaltenrechteck zurückzugeben, <see langword="false" />, um das gesamte Spaltenrechteck zurückzugeben.</param>
        <summary>Gibt das Rechteck zurück, das den Anzeigebereich für eine Spalte darstellt, wie vom Spaltenindex bestimmt.</summary>
        <returns>Das <see cref="T:System.Drawing.Rectangle" />, das das Anzeigerechteck der Spalte darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Spalten minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GetRowDisplayRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetRowDisplayRectangle (int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetRowDisplayRectangle(int32 rowIndex, bool cutOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.GetRowDisplayRectangle(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowDisplayRectangle (rowIndex As Integer, cutOverflow As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetRowDisplayRectangle(int rowIndex, bool cutOverflow);" />
      <MemberSignature Language="F#" Value="member this.GetRowDisplayRectangle : int * bool -&gt; System.Drawing.Rectangle" Usage="dataGridView.GetRowDisplayRectangle (rowIndex, cutOverflow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="cutOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Zeilenindex für die gewünschte Zelle.</param>
        <param name="cutOverflow"><see langword="true" />, um das im <see cref="T:System.Windows.Forms.DataGridView" />-Rahmen sichtbare Zeilenrechteck zurückzugeben, <see langword="false" />, um das gesamte Zeilenrechteck zurückzugeben.</param>
        <summary>Gibt das Rechteck zurück, das den Anzeigebereich für eine Zeile darstellt, wie vom Zeilenindex bestimmt.</summary>
        <returns>Das <see cref="T:System.Drawing.Rectangle" />, das das Anzeigerechteck der Zeile darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GridColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GridColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color GridColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.GridColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color GridColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.GridColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataGridView.GridColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Farbe der Rasterlinien zwischen den Zellen und der <see cref="T:System.Windows.Forms.DataGridView" /> ab oder legt die Farbe fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" /> oder <see cref="T:System.Drawing.SystemColors" />, die die Farben der Rasterlinien darstellen. Die Standardeinstellung ist <see cref="F:System.Drawing.KnownColor.ControlDarkDark" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Windows.Forms.DataGridView.GridColor%2A> -Eigenschaft auf eine beliebige Farbe festlegen, wenn Sie einen einzelnen Rahmen verwenden. bei anderen Rahmentypen werden die Farben durch das Betriebssystem angegeben. Wenn visuelle Stile für die Anwendung über die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> -Methode aktiviert sind, wird die <xref:System.Windows.Forms.DataGridView.GridColor%2A> -Eigenschaft ignoriert, und die Farben des aktuellen Designs werden verwendet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>Eigenschaften <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, und <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> festgelegt werden. Außerdem wird im Codebeispiel veranschaulicht, wie die-Eigenschaft <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> die-Eigenschaft festgelegt werden. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular ein, <xref:System.Windows.Forms.DataGridView> das `dataGridView1`einen mit dem Namen enthält `SetUpDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist <see cref="F:System.Drawing.Color.Empty" />.  
  
- oder - 
Der beim Festlegen dieser Eigenschaft angegebene Wert weist einen <see cref="P:System.Drawing.Color.A" />-Eigenschaftswert auf, der kleiner als 255 ist.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="GridColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler GridColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GridColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.GridColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GridColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GridColorChanged;" />
      <MemberSignature Language="F#" Value="member this.GridColorChanged : EventHandler " Usage="member this.GridColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.GridColor" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.GridColorChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.GridColorChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#272](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#272)]
 [!code-vb[System.Windows.Forms.EventExamples#272](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#272)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView.HitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridView/HitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As DataGridView.HitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataGridView::HitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.DataGridView.HitTestInfo" Usage="dataGridView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView+HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Die X-Koordinate.</param>
        <param name="y">Die Y-Koordinate.</param>
        <summary>Gibt Speicherortinformationen zurück, z. B. Zeilen- und Spaltenindizes, wenn X- und Y-Koordinaten gegeben sind.</summary>
        <returns>Eine <see cref="T:System.Windows.Forms.DataGridView.HitTestInfo" />, die die Speicherortinformationen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, um zu bestimmen, welcher <xref:System.Windows.Forms.DataGridView> Teil des-Steuer Elements sich an den angegebenen Koordinaten befindet. Sie können diese Methode z. b. angeben, indem Sie die Koordinaten eines Mausklicks angeben, um die Zeilen-und Spalten Indizes der angeklickten Zelle zu ermitteln, oder ob auf eine Header Zelle oder eine Bild Lauf Leiste geklickt wurde.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Methode. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.Columns%2A> im Eigenschaften Referenz Thema verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView.HitTestInfo" />
        <altmember cref="T:System.Windows.Forms.DataGridViewHitTestType" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar HorizontalScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar HorizontalScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.HorizontalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HorizontalScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ HorizontalScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGridView.HorizontalScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die horizontale Schiebeleiste des Steuerelements ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ScrollBar" />, die die horizontale Schiebeleiste darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollingOffset">
      <MemberSignature Language="C#" Value="public int HorizontalScrollingOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalScrollingOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.HorizontalScrollingOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HorizontalScrollingOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollingOffset : int with get, set" Usage="System.Windows.Forms.DataGridView.HorizontalScrollingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Pixel ab, um die im Steuerelement ein horizontaler Bildlauf durchgeführt wird.</summary>
        <value>Die Anzahl der Pixel, um die im Steuerelement ein horizontaler Bildlauf durchgeführt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Passen Sie die Darstellung von Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kleiner als 0 (null).</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvalidateCell">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erklärt eine Zelle in der <see cref="T:System.Windows.Forms.DataGridView" /> für ungültig und erzwingt, dass sie neu gezeichnet wird.</summary>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvalidateCell">
      <MemberSignature Language="C#" Value="public void InvalidateCell (System.Windows.Forms.DataGridViewCell dataGridViewCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateCell(class System.Windows.Forms.DataGridViewCell dataGridViewCell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Windows.Forms.DataGridViewCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateCell(System::Windows::Forms::DataGridViewCell ^ dataGridViewCell);" />
      <MemberSignature Language="F#" Value="member this.InvalidateCell : System.Windows.Forms.DataGridViewCell -&gt; unit" Usage="dataGridView.InvalidateCell dataGridViewCell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCell" Type="System.Windows.Forms.DataGridViewCell" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCell">Die für ungültig zu erklärende <see cref="T:System.Windows.Forms.DataGridViewCell" />.</param>
        <summary>Erklärt die angegebene Zelle der <see cref="T:System.Windows.Forms.DataGridView" /> für ungültig und erzwingt, dass sie neu gezeichnet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, um das Neuzeichnen einer Zelle in Bedingungen zu erzwingen, die normalerweise bewirken, dass eine Zelle neu gezeichnet wird. Beispielsweise können Sie diese Methode mit einem benutzerdefinierten Zellentyp verwenden, der seine Darstellung als Ergebnis externer Ereignisse ändert.  
  
 Weitere Informationen zum Zeichnen und Aufheben der Invalidierung finden <xref:System.Windows.Forms.Control.Invalidate%2A>Sie unter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Methode in einem angepassten <xref:System.Windows.Forms.DataGridViewCell> verwendet wird, das mit einem benutzerdefinierten Rahmen gezeichnet wird, wenn der Mauszeiger darauf liegt. Im Beispiel wird die Zelle für ungültig erklärt, wenn der Mauszeiger in Sie eintritt oder Sie verlässt.  
  
 Dieser Code ist Teil eines größeren Beispiels, das in [Gewusst wie: Passen Sie Zellen und Spalten im Windows Forms DataGridView-Steuerelement an, indem Sie](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)das Verhalten und die Darstellung erweitern.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="dataGridViewCell" /> gehört nicht zur <see cref="T:System.Windows.Forms.DataGridView" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridViewCell" /> ist <see langword="null" />.</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCell">
      <MemberSignature Language="C#" Value="public void InvalidateCell (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateCell(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateCell(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateCell (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateCell(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateCell : int * int -&gt; unit" Usage="dataGridView.InvalidateCell (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Spaltenindex der Zelle, die für ungültig erklärt werden soll.</param>
        <param name="rowIndex">Der Zeilenindex der Zelle, die für ungültig erklärt werden soll.</param>
        <summary>Erklärt die Zelle mit den angegebenen Zeilen- und Spaltenindizes für ungültig und erzwingt, dass sie neu gezeichnet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, um das Neuzeichnen einer Zelle in Bedingungen zu erzwingen, die normalerweise bewirken, dass eine Zelle neu gezeichnet wird. Beispielsweise können Sie diese Methode mit einem benutzerdefinierten Zellentyp verwenden, der seine Darstellung als Ergebnis externer Ereignisse ändert.  
  
 Weitere Informationen zum Zeichnen und Aufheben der Invalidierung finden <xref:System.Windows.Forms.Control.Invalidate%2A>Sie unter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Methode in einem benutzerdefinierten Zellentyp verwendet wird, der die Darstellung einer Zelle ändert, wenn der Benutzer mit dem Mauszeiger darüber bewegt wird. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Passen Sie Zellen und Spalten im Windows Forms DataGridView-Steuerelement an, indem Sie](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)das Verhalten und die Darstellung erweitern.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist kleiner als -1 oder größer als die Anzahl der Spalten im Steuerelement minus 1.  
  
- oder - 
 <paramref name="rowIndex" /> ist kleiner als -1 oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateColumn">
      <MemberSignature Language="C#" Value="public void InvalidateColumn (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateColumn(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateColumn (columnIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateColumn(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateColumn : int -&gt; unit" Usage="dataGridView.InvalidateColumn columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index der Spalte, die für ungültig erklärt werden soll.</param>
        <summary>Erklärt die angegebene Spalte der <see cref="T:System.Windows.Forms.DataGridView" /> für ungültig und erzwingt, dass sie neu gezeichnet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Zeichnen und Aufheben der Invalidierung finden <xref:System.Windows.Forms.Control.Invalidate%2A>Sie unter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Spalten minus 1.</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateRow">
      <MemberSignature Language="C#" Value="public void InvalidateRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.InvalidateRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateRow (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.InvalidateRow : int -&gt; unit" Usage="dataGridView.InvalidateRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, die für ungültig erklärt werden soll.</param>
        <summary>Erklärt die angegebene Zeile der <see cref="T:System.Windows.Forms.DataGridView" /> für ungültig und erzwingt, dass sie neu gezeichnet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um das erneute Zeichnen einer Zeile zu erzwingen. Diese Methode ist in Szenarios zum Erstellen von Besitzern nützlich, in <xref:System.Windows.Forms.DataGridView.RowPrePaint> denen <xref:System.Windows.Forms.DataGridView.RowPostPaint> Sie die Ereignisse oder behandeln.  
  
 Weitere Informationen zum Zeichnen und Aufheben der Invalidierung finden <xref:System.Windows.Forms.Control.Invalidate%2A>Sie unter.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.DataGridView.InvalidateRow%2A> -Methode in einem Zeilen Zeichnungs Szenario veranschaulicht. Im Beispiel wird die Zeile ungültig, wenn sich die aktuelle Zelle ändert, sodass sich die Zeile selbst neu zeichnet.  
  
 Dieser Code ist Teil eines größeren Beispiels, das in [Gewusst wie: Passen Sie die Darstellung von Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#19)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen minus 1.</exception>
        <altmember cref="Overload:System.Windows.Forms.Control.Invalidate" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentCellDirty">
      <MemberSignature Language="C#" Value="public bool IsCurrentCellDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentCellDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentCellDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentCellDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentCellDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentCellDirty : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentCellDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die aktive Zelle über ausgecheckte Änderungen verfügt.</summary>
        <value><see langword="true" />, wenn die aktive Zelle über nicht gespeicherte Änderungen verfügt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridView> nicht an Daten gebunden ist, wird die Zellen Bearbeitung als committet, wenn der Benutzer zu einer anderen Zelle wechselt.  
  
 Wenn Zeilen Header sichtbar sind, ist im Header der Zeile, die eine Zelle mit nicht ausgeführtem Commit enthält, ein Stift Symbol vorhanden.  
  
 Wenn <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A>den Wert hat <xref:System.Windows.Forms.DataGridView.EditingControl%2A> und die aktuelle Zelle ein Bearbeitungs Steuerelement hostet, können Sie Sie über die-Eigenschaft abrufen. `true`  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> -Eigenschaft verwendet, um zu bestimmen, ob ein Zellwert <xref:System.Windows.Forms.DataGridView.CellValueChanged> übernommen und das-Ereignis von <xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged> einem Handler für das-Ereignis erhoben werden soll. Dieses Codebeispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Deaktivieren Sie die Schaltflächen in einer Schaltflächen Spalte im DataGridView-Steuer](~/docs/framework/winforms/controls/disable-buttons-in-a-button-column-in-the-datagrid.md)Element Windows Forms.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.DisabledButtons#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.DisabledButtons/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentCellInEditMode">
      <MemberSignature Language="C#" Value="public bool IsCurrentCellInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentCellInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentCellInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentCellInEditMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentCellInEditMode : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentCellInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die aktuell aktive Zelle gerade bearbeitet wird.</summary>
        <value><see langword="true" />, wenn die aktive Zelle gerade bearbeitet wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Forms.DataGridViewCheckBoxCell> , das den Fokus besitzt, befindet sich immer im Bearbeitungsmodus. Wenn die aktuelle Zelle ein Bearbeitungs Steuerelement hostet `true`und <xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A> den Wert hat, können Sie das Bearbeitungs <xref:System.Windows.Forms.DataGridView.EditingControl%2A> Steuerelement über die-Eigenschaft abrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> im Referenz Thema verfügbar ist.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#10)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EditingControl" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentRowDirty">
      <MemberSignature Language="C#" Value="public bool IsCurrentRowDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentRowDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.IsCurrentRowDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentRowDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentRowDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentRowDirty : bool" Usage="System.Windows.Forms.DataGridView.IsCurrentRowDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die aktive Zeile über ausgecheckte Änderungen verfügt.</summary>
        <value><see langword="true" />, wenn die aktive Zeile über nicht gespeicherte Änderungen verfügt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt `true` zurück, wenn das Stift Symbol in der Zeile angezeigt wird. Standardmäßig entspricht die <xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A> -Eigenschaft immer dem Wert <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> der-Eigenschaft, es sei denn <xref:System.Windows.Forms.DataGridView> , der ist an eine Datenquelle gebunden, die die Bearbeitung unterstützt, oder der virtuelle Modus wurde implementiert, um den commitbereich auf Zeilenebene zu verwenden. In diesen Fällen <xref:System.Windows.Forms.DataGridView> wertet diese Eigenschaft auf Zeilenebene aus.  
  
 Wenn der Benutzer von der Zeile weg navigiert, führt das Steuerelement einen Commit für alle Zeilen Änderungen aus. Der Benutzer kann auch Strg + Eingabe drücken, um Zeilen Änderungen zu übernehmen, ohne die Zeile zu übernehmen. Zum programmgesteuerten Commit von Zeilen Änderungen müssen Sie die- <xref:System.Windows.Forms.ContainerControl.Validate%2A> Methode des Formulars aufzurufen. Wenn die Datenquelle eine <xref:System.Windows.Forms.BindingSource>ist, können Sie auch aufzurufen. <xref:System.Windows.Forms.BindingSource.EndEdit%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected override bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="override this.IsInputChar : char -&gt; bool" Usage="dataGridView.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">Das zu überprüfende Zeichen.</param>
        <summary>Bestimmt, ob ein Zeichen ein von der <see cref="T:System.Windows.Forms.DataGridView" /> erkanntes Eingabezeichen ist.</summary>
        <returns><see langword="true" />, wenn das Zeichen als Eingabezeichen erkannt wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Zeichen wird als Eingabezeichen erkannt, abhängig davon, ob sich das Steuerelement im Bearbeitungsmodus befindet und ob das aktuelle Bearbeitungs Steuerelement das Zeichen akzeptieren kann.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte.</param>
        <summary>Bestimmt, ob es sich bei der angegebenen Taste um eine normale Eingabetaste handelt oder um eine Sondertaste, für die eine Vorverarbeitung erforderlich ist.</summary>
        <returns><see langword="true" />, wenn die angegebene Taste eine normale Taste ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stellt einen Indexer bereit, um die bei der Schnittmenge der angegebenen Zeile und Spalte gesuchte Zelle abzurufen oder festzulegen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[int columnIndex, int rowIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(int32, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Item(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer, rowIndex As Integer) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[int, int] { System::Windows::Forms::DataGridViewCell ^ get(int columnIndex, int rowIndex); void set(int columnIndex, int rowIndex, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * int) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index der Spalte, die die Zelle enthält.</param>
        <param name="rowIndex">Der Index der Zeile, die die Zelle enthält.</param>
        <summary>Stellt einen Indexer bereit, um die im Schnittpunkt von Spalte und Zeile mit den angegebenen Indizes gesuchte Zelle abzurufen oder festzulegen.</summary>
        <value>Die <see cref="T:System.Windows.Forms.DataGridViewCell" /> an der angegebenen Position.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Indexer ist eine Alternative zum Zugreifen auf Zellen über <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> die <xref:System.Windows.Forms.DataGridView.Rows%2A> Auflistung der Auflistung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Indexers veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#230)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist kleiner als 0 oder größer als die Anzahl der Spalten im Steuerelement minus 1.  
  
- oder - 
 <paramref name="rowIndex" /> ist kleiner als 0 oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Cells" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowCollection" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCell this[string columnName, int rowIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCell Item(string, int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Item(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String, rowIndex As Integer) As DataGridViewCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCell ^ default[System::String ^, int] { System::Windows::Forms::DataGridViewCell ^ get(System::String ^ columnName, int rowIndex); void set(System::String ^ columnName, int rowIndex, System::Windows::Forms::DataGridViewCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * int) : System.Windows.Forms.DataGridViewCell with get, set" Usage="System.Windows.Forms.DataGridView.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte, die die Zelle enthält.</param>
        <param name="rowIndex">Der Index der Zeile, die die Zelle enthält.</param>
        <summary>Stellt einen Indexer bereit, um die bei der Schnittmenge der Zeile mit dem angegebenen Index gesuchte Zelle und die Spalte mit dem angegebenen Namen abzurufen oder festzulegen.</summary>
        <value>Die <see cref="T:System.Windows.Forms.DataGridViewCell" /> an der angegebenen Position.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Indexer ist eine Alternative zum Zugreifen auf Zellen über <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> die <xref:System.Windows.Forms.DataGridView.Rows%2A> Auflistung der Auflistung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Indexers veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#230)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#230](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#230)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Cells" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowCollection" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.DataGridView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob mehr als eine Zelle, Zeile oder Spalte der <see cref="T:System.Windows.Forms.DataGridView" /> zum gleichen Zeitpunkt ausgewählt werden kann.</summary>
        <value><see langword="true" /> , wenn mehrere Zellen, Zeilen oder Spalten zum gleichen Zeitpunkt ausgewählt werden können, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> -Eigenschaft auf `true`festgelegt ist, <xref:System.Windows.Forms.DataGridView> können im-Steuerelement mehrere Elemente (Zellen, Zeilen oder Spalten) ausgewählt werden. Wenn Sie mehrere Elemente auswählen möchten, können Sie die STRG-Taste gedrückt halten, während Sie auf die Elemente klicken, die ausgewählt werden sollen. Aufeinander folgende Elemente können ausgewählt werden, indem Sie auf das erste Element klicken, das ausgewählt werden soll. Wenn Sie die UMSCHALTTASTE gedrückt halten, klicken Sie auf das letzte auszuwählende Element. Der Auswahlbereich basiert auf der <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> -Eigenschaft. Wenn <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> z. b. auf <xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType>festgelegt ist, kann der Benutzer mehrere Spalten auswählen.  
  
 Mit der <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> -Eigenschaft können Sie es Benutzern ermöglichen, mehrere Elemente <xref:System.Windows.Forms.DataGridView> im Steuerelement auszuwählen und einen Vorgang für alle ausgewählten Elemente auszuführen. Beispielsweise kann der Benutzer mehrere Zellen auswählen und dann mit der rechten Maustaste auf eine ausgewählte Zelle klicken, um ein Kontextmenü anzuzeigen, in dem eine Reihe von Aufgaben angezeigt wird, die für die ausgewählten Zellen ausgeführt werden sollen.  
  
 Um zu ermitteln, welche Zellen, Zeilen oder Spalten <xref:System.Windows.Forms.DataGridView> im-Steuerelement ausgewählt sind, können Sie auf die <xref:System.Windows.Forms.DataGridView.SelectedCells%2A>- <xref:System.Windows.Forms.DataGridView.SelectedColumns%2A> , <xref:System.Windows.Forms.DataGridView.SelectedRows%2A>-oder-Eigenschaft zugreifen. Um die Anzahl der ausgewählten Zellen zu ermitteln, müssen <xref:System.Windows.Forms.DataGridView.GetCellCount%2A> Sie die-Methode mit einem <xref:System.Windows.Forms.DataGridViewElementStates.Selected?displayProperty=nameWithType>Argument Wert von abrufen. Verwenden Sie <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A> die-Methode, um die Anzahl der ausgewählten Zeilen <xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnCount%2A> abzurufen, und die-Methode, um die Anzahl der Spalten abzurufen. Diese Methoden sind effizienter als der direkte Zugriff auf die Sammlungen, wenn Sie mit großen Datenmengen arbeiten. Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> -Eigenschaft veranschaulicht. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular ein, <xref:System.Windows.Forms.DataGridView> das `dataGridView1`einen mit dem Namen enthält `SetUpDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="MultiSelectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultiSelectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultiSelectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.MultiSelectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultiSelectChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultiSelectChanged;" />
      <MemberSignature Language="F#" Value="member this.MultiSelectChanged : EventHandler " Usage="member this.MultiSelectChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.MultiSelect" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.MultiSelectChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.MultiSelectChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#273](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#273)]
 [!code-vb[System.Windows.Forms.EventExamples#273](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#273)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="NewRowIndex">
      <MemberSignature Language="C#" Value="public int NewRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NewRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.NewRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NewRowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NewRowIndex : int" Usage="System.Windows.Forms.DataGridView.NewRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der Zeile für neue Datensätze ab.</summary>
        <value>Der Index der Zeile für neue Datensätze oder -1, wenn <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> gleich <see langword="false" /> ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> nicht `false`ist, ist der Wert dieser Eigenschaft gleich der Anzahl der Zeilen im Steuerelement minus 1.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="NewRowNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.NewRowNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NewRowNeeded As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ NewRowNeeded;" />
      <MemberSignature Language="F#" Value="member this.NewRowNeeded : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.NewRowNeeded : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> gleich <see langword="true" /> ist und zur neuen Zeile unten in der <see cref="T:System.Windows.Forms.DataGridView" /> navigiert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataGridView> Wenn sich im virtuellen Modus befindet, ermöglicht dieses Ereignis, dass ein neuer Eintrag im Datenspeicher für die neue Zeile erstellt wird. Außerdem kann die Zeile mit Standardwerten aufgefüllt werden.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.DataGridView.NewRowNeeded> -Ereignis verwendet, um nachverfolgen, wann eine neue Zeile hinzugefügt wird <xref:System.Windows.Forms.DataGridView.CellValueNeeded> . Daher kann die Logik im-Ereignishandler die Zelle einer neuen Zeile mit einem Anfangswert initialisieren. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> im Referenz Thema verfügbar ist.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="NotifyCurrentCellDirty">
      <MemberSignature Language="C#" Value="public virtual void NotifyCurrentCellDirty (bool dirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyCurrentCellDirty(bool dirty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyCurrentCellDirty (dirty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyCurrentCellDirty(bool dirty);" />
      <MemberSignature Language="F#" Value="abstract member NotifyCurrentCellDirty : bool -&gt; unit&#xA;override this.NotifyCurrentCellDirty : bool -&gt; unit" Usage="dataGridView.NotifyCurrentCellDirty dirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dirty"><see langword="true" />, um anzugeben, dass die Zelle über nicht gespeicherte Änderungen verfügt, andernfalls <see langword="false" />.</param>
        <summary>Benachrichtigt die <see cref="T:System.Windows.Forms.DataGridView" />, dass die aktive Zelle über ausgecheckte Änderungen verfügt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann verwendet werden, um zuzulassen, dass benutzerdefinierte Zelltypen benachrichtigt <xref:System.Windows.Forms.DataGridView> werden, wenn Sie über nicht ausgeübte Änderungen verfügen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Methode in einem benutzerdefinierten Zell Szenario veranschaulicht. Im Beispiel überschreibt eine <xref:System.Windows.Forms.IDataGridViewEditingControl> von der <xref:System.Windows.Forms.DateTimePicker> -Klasse abgeleitete-Implementierung <xref:System.Windows.Forms.DateTimePicker.OnValueChanged%2A> die-Methode und <xref:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty%2A> verwendet die-Methode, um eine <xref:System.Windows.Forms.DataGridView> Änderung am Steuerelement anzugeben.  
  
 Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Host Steuerelemente in Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md)-Zellen.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#310](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#310)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#310](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#310)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToAddRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToAddRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToAddRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToAddRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToAddRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToAddRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToAddRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToAddRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToDeleteRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToDeleteRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToDeleteRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToDeleteRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToDeleteRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToDeleteRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToDeleteRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToDeleteRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToOrderColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToOrderColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToOrderColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToOrderColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToOrderColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToOrderColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToOrderColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToOrderColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToResizeColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToResizeColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToResizeColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToResizeColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToResizeColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToResizeColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToResizeColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToResizeColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged(System.EventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAllowUserToResizeRowsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAllowUserToResizeRowsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAllowUserToResizeRowsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAllowUserToResizeRowsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAllowUserToResizeRowsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAllowUserToResizeRowsChanged : EventArgs -&gt; unit&#xA;override this.OnAllowUserToResizeRowsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAllowUserToResizeRowsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged(System.EventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAlternatingRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAlternatingRowsDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAlternatingRowsDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAlternatingRowsDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAlternatingRowsDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAlternatingRowsDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnAlternatingRowsDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAlternatingRowsDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoGenerateColumnsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoGenerateColumnsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoGenerateColumnsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoGenerateColumnsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoGenerateColumnsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoGenerateColumnsChanged : EventArgs -&gt; unit&#xA;override this.OnAutoGenerateColumnsChanged : EventArgs -&gt; unit" Usage="dataGridView.OnAutoGenerateColumnsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeColumnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeColumnModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeColumnModeChanged(class System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeColumnModeChanged (e As DataGridViewAutoSizeColumnModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeColumnModeChanged(System::Windows::Forms::DataGridViewAutoSizeColumnModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeColumnModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeColumnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column" />-Eigenschaft von <paramref name="e" /> ist 0 (null).</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeColumnsModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeColumnsModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeColumnsModeChanged(class System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeColumnsModeChanged (e As DataGridViewAutoSizeColumnsModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeColumnsModeChanged(System::Windows::Forms::DataGridViewAutoSizeColumnsModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeColumnsModeChanged : System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeColumnsModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" />-Eigenschaft von <paramref name="e" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die Anzahl der Einträge im Array, die von der <see cref="P:System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes" />-Eigenschaft von <paramref name="e" /> zurückgegeben wird, ist nicht gleich der Anzahl der Spalten im Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged(System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeRowsModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeRowsModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeRowsModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeRowsModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeRowsModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnAutoSizeRowsModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnAutoSizeRowsModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBackgroundColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.BackgroundColorChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnBackgroundColorChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnBackgroundColorChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.BindingContextChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnBindingContextChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnBindingContextChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.BorderStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnBorderStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnBorderStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCancelRowEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelRowEdit (System.Windows.Forms.QuestionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelRowEdit(class System.Windows.Forms.QuestionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelRowEdit (e As QuestionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelRowEdit(System::Windows::Forms::QuestionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelRowEdit : System.Windows.Forms.QuestionEventArgs -&gt; unit&#xA;override this.OnCancelRowEdit : System.Windows.Forms.QuestionEventArgs -&gt; unit" Usage="dataGridView.OnCancelRowEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QuestionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.QuestionEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CancelRowEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCancelRowEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCancelRowEdit(System.Windows.Forms.QuestionEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellBeginEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCellBeginEdit (System.Windows.Forms.DataGridViewCellCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellBeginEdit(class System.Windows.Forms.DataGridViewCellCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellBeginEdit (e As DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellBeginEdit(System::Windows::Forms::DataGridViewCellCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit&#xA;override this.OnCellBeginEdit : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit" Usage="dataGridView.OnCellBeginEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellBeginEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellBeginEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellBeginEdit(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnCellBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCellBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellBorderStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellClick(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContentClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContentClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContentClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContentClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContentClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContentClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />-Klasse, die Informationen zu der Zelle enthält, auf deren Inhalt geklickt wurde.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellContentClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellContentClick(System.Windows.Forms.DataGridViewCellEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContentDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContentDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContentDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContentDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContentDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContentDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellContentDoubleClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellContentDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContextMenuStripChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContextMenuStripChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContextMenuStripChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContextMenuStripChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellContextMenuStripChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellContextMenuStripNeeded (System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellContextMenuStripNeeded(class System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellContextMenuStripNeeded (e As DataGridViewCellContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellContextMenuStripNeeded(System::Windows::Forms::DataGridViewCellContextMenuStripNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs -&gt; unit&#xA;override this.OnCellContextMenuStripNeeded : System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellContextMenuStripNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded(System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs)" /></para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellDoubleClick(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellDoubleClick (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellDoubleClick(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellDoubleClick : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellDoubleClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellDoubleClick(System.Windows.Forms.DataGridViewCellEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellEndEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnCellEndEdit (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellEndEdit(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellEndEdit (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellEndEdit(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellEndEdit : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellEndEdit : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellEndEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellEndEdit" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellEndEdit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellEndEdit(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnCellEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellEnter%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellErrorTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellErrorTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellErrorTextChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellErrorTextChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellErrorTextChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellErrorTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellErrorTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellErrorTextChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellErrorTextChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist kleiner als -1 oder größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist kleiner als -1 oder größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellErrorTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellErrorTextNeeded (System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellErrorTextNeeded(class System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellErrorTextNeeded (e As DataGridViewCellErrorTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellErrorTextNeeded(System::Windows::Forms::DataGridViewCellErrorTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs -&gt; unit&#xA;override this.OnCellErrorTextNeeded : System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellErrorTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellErrorTextNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded(System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellFormatting">
      <MemberSignature Language="C#" Value="protected virtual void OnCellFormatting (System.Windows.Forms.DataGridViewCellFormattingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellFormatting(class System.Windows.Forms.DataGridViewCellFormattingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellFormatting (e As DataGridViewCellFormattingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellFormatting(System::Windows::Forms::DataGridViewCellFormattingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventArgs -&gt; unit&#xA;override this.OnCellFormatting : System.Windows.Forms.DataGridViewCellFormattingEventArgs -&gt; unit" Usage="dataGridView.OnCellFormatting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellFormatting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellFormatting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellFormatting(System.Windows.Forms.DataGridViewCellFormattingEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnCellLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellMouseClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellMouseDoubleClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel wird durch Doppelklicken auf eine Zelle die Zelle in den Bearbeitungsmodus versetzt.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseDown(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseDown (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseDown(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseDown : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellMouseDown" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellMouseEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellMouseEnter" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellMouseLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellMouseLeave" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseMove(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseMove (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseMove(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseMove : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellMouseMove" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseMove(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnCellMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellMouseUp(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellMouseUp (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellMouseUp(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnCellMouseUp : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnCellMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellMouseUp" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellMouseUp(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellPainting">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCellPainting (System.Windows.Forms.DataGridViewCellPaintingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCellPainting(class System.Windows.Forms.DataGridViewCellPaintingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCellPainting (e As DataGridViewCellPaintingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCellPainting(System::Windows::Forms::DataGridViewCellPaintingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellPainting : System.Windows.Forms.DataGridViewCellPaintingEventArgs -&gt; unit&#xA;override this.OnCellPainting : System.Windows.Forms.DataGridViewCellPaintingEventArgs -&gt; unit" Usage="dataGridView.OnCellPainting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellPaintingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellPaintingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellPainting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellPainting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellPainting(System.Windows.Forms.DataGridViewCellPaintingEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellParsing">
      <MemberSignature Language="C#" Value="protected virtual void OnCellParsing (System.Windows.Forms.DataGridViewCellParsingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellParsing(class System.Windows.Forms.DataGridViewCellParsingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellParsing (e As DataGridViewCellParsingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellParsing(System::Windows::Forms::DataGridViewCellParsingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellParsing : System.Windows.Forms.DataGridViewCellParsingEventArgs -&gt; unit&#xA;override this.OnCellParsing : System.Windows.Forms.DataGridViewCellParsingEventArgs -&gt; unit" Usage="dataGridView.OnCellParsing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellParsingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellParsing" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellParsing%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStateChanged (System.Windows.Forms.DataGridViewCellStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStateChanged(class System.Windows.Forms.DataGridViewCellStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStateChanged (e As DataGridViewCellStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStateChanged(System::Windows::Forms::DataGridViewCellStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventArgs -&gt; unit&#xA;override this.OnCellStateChanged : System.Windows.Forms.DataGridViewCellStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnCellStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellStateChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellStateChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellStateChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellStateChanged(System.Windows.Forms.DataGridViewCellStateChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStyleChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStyleChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStyleChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStyleChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStyleChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellStyleChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellStyleContentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellStyleContentChanged (System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellStyleContentChanged(class System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellStyleContentChanged (e As DataGridViewCellStyleContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellStyleContentChanged(System::Windows::Forms::DataGridViewCellStyleContentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs -&gt; unit&#xA;override this.OnCellStyleContentChanged : System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs -&gt; unit" Usage="dataGridView.OnCellStyleContentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellStyleContentChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellStyleContentChanged(System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellToolTipTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellToolTipTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellToolTipTextChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellToolTipTextChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellToolTipTextChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellToolTipTextChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellToolTipTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz von <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, die Informationen zum Fehler enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellToolTipTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellToolTipTextNeeded (System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellToolTipTextNeeded(class System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellToolTipTextNeeded (e As DataGridViewCellToolTipTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellToolTipTextNeeded(System::Windows::Forms::DataGridViewCellToolTipTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs -&gt; unit&#xA;override this.OnCellToolTipTextNeeded : System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnCellToolTipTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded(System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValidated (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValidated(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValidated (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValidated(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellValidated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValidating (System.Windows.Forms.DataGridViewCellValidatingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValidating(class System.Windows.Forms.DataGridViewCellValidatingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValidating (e As DataGridViewCellValidatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValidating(System::Windows::Forms::DataGridViewCellValidatingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValidating : System.Windows.Forms.DataGridViewCellValidatingEventArgs -&gt; unit&#xA;override this.OnCellValidating : System.Windows.Forms.DataGridViewCellValidatingEventArgs -&gt; unit" Usage="dataGridView.OnCellValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValidatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellValidatingEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellValidating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCellValidating(System.Windows.Forms.DataGridViewCellValidatingEventArgs)" /></para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValidating" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValueChanged (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValueChanged(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValueChanged (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValueChanged(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValueChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnCellValueChanged : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnCellValueChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellValueChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellValueChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellValueChanged(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValueNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValueNeeded (System.Windows.Forms.DataGridViewCellValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValueNeeded(class System.Windows.Forms.DataGridViewCellValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValueNeeded (e As DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValueNeeded(System::Windows::Forms::DataGridViewCellValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit&#xA;override this.OnCellValueNeeded : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit" Usage="dataGridView.OnCellValueNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellValueNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist kleiner als 0 (null) oder größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellValueNeeded(System.Windows.Forms.DataGridViewCellValueEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValueNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCellValuePushed">
      <MemberSignature Language="C#" Value="protected virtual void OnCellValuePushed (System.Windows.Forms.DataGridViewCellValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCellValuePushed(class System.Windows.Forms.DataGridViewCellValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCellValuePushed (e As DataGridViewCellValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCellValuePushed(System::Windows::Forms::DataGridViewCellValueEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCellValuePushed : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit&#xA;override this.OnCellValuePushed : System.Windows.Forms.DataGridViewCellValueEventArgs -&gt; unit" Usage="dataGridView.OnCellValuePushed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellValueEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCellValuePushed%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist kleiner als 0 (null) oder größer als die Anzahl der Spalten im Steuerelement minus eins.  
  
- oder - 
Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex" />-Eigenschaft von <paramref name="e" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCellValuePushed(System.Windows.Forms.DataGridViewCellValueEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnAdded (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnAdded(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnAdded (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnAdded(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnAdded : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnAdded : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnAdded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnAdded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnColumnAdded(System.Windows.Forms.DataGridViewColumnEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnContextMenuStripChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnContextMenuStripChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnContextMenuStripChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnContextMenuStripChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnContextMenuStripChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDataPropertyNameChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDataPropertyNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDataPropertyNameChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDataPropertyNameChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDataPropertyNameChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDataPropertyNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDataPropertyNameChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDefaultCellStyleChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDefaultCellStyleChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDefaultCellStyleChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDefaultCellStyleChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDefaultCellStyleChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDisplayIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDisplayIndexChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDisplayIndexChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDisplayIndexChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDisplayIndexChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDisplayIndexChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDisplayIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDividerDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDividerDoubleClick (System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDividerDoubleClick(class System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDividerDoubleClick (e As DataGridViewColumnDividerDoubleClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDividerDoubleClick(System::Windows::Forms::DataGridViewColumnDividerDoubleClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs -&gt; unit&#xA;override this.OnColumnDividerDoubleClick : System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs -&gt; unit" Usage="dataGridView.OnColumnDividerDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnDividerDoubleClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick(System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnDividerWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnDividerWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnDividerWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnDividerWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnDividerWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnDividerWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnDividerWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnDividerWidthChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderCellChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderCellChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderCellChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderCellChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnHeaderCellChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderCellChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnColumnHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex" />-Eigenschaft von <paramref name="e" /> ist kleiner als 0 (null) oder größer als die Anzahl der Spalten im Steuerelement minus eins.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeaderMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeaderMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeaderMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnColumnHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeaderMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz von <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, die Informationen zur Zelle und zur Position des Mauszeigers enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged(System.EventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersHeightChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersHeightChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersHeightChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersHeightChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersHeightChanged : EventArgs -&gt; unit&#xA;override this.OnColumnHeadersHeightChanged : EventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnHeadersHeightSizeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnHeadersHeightSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnHeadersHeightSizeModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnHeadersHeightSizeModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnHeadersHeightSizeModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnColumnHeadersHeightSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnColumnHeadersHeightSizeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnMinimumWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnMinimumWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnMinimumWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnMinimumWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnMinimumWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnMinimumWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnMinimumWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnNameChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnNameChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnNameChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnNameChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnNameChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnNameChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnNameChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnNameChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnNameChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnRemoved (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnRemoved(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnRemoved (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnRemoved(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnRemoved : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnRemoved : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnRemoved" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnRemoved%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnColumnRemoved(System.Windows.Forms.DataGridViewColumnEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnSortModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnSortModeChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnSortModeChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnSortModeChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnSortModeChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnSortModeChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnSortModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnSortModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnSortModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnSortModeChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnStateChanged (System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnStateChanged(class System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnStateChanged (e As DataGridViewColumnStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnStateChanged(System::Windows::Forms::DataGridViewColumnStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventArgs -&gt; unit&#xA;override this.OnColumnStateChanged : System.Windows.Forms.DataGridViewColumnStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnColumnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnStateChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnStateChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die Spalte wurde von "Schreibgeschützt" in "Lese-/Schreibzugriff" geändert, wodurch die aktuelle Zelle in den Bearbeitungsmodus wechseln kann, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnStateChanged(System.Windows.Forms.DataGridViewColumnStateChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.ColumnStateChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnToolTipTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnToolTipTextChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnToolTipTextChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnToolTipTextChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnToolTipTextChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnToolTipTextChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnToolTipTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, die Informationen über die Spalte enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnToolTipTextChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.DataGridViewColumnEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As DataGridViewColumnEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::DataGridViewColumnEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.DataGridViewColumnEventArgs -&gt; unit" Usage="dataGridView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewColumnEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewColumnEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ColumnWidthChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnColumnWidthChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewColumnEventArgs.Column" />-Eigenschaft von <paramref name="e" /> angegebene Spalte gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnColumnWidthChanged(System.Windows.Forms.DataGridViewColumnEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentCellChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentCellChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentCellChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentCellChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCurrentCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCurrentCellChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellChanged(System.EventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentCellDirtyStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCurrentCellDirtyStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCurrentCellDirtyStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCurrentCellDirtyStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCurrentCellDirtyStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentCellDirtyStateChanged : EventArgs -&gt; unit&#xA;override this.OnCurrentCellDirtyStateChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCurrentCellDirtyStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected override void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCursorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.CursorChanged" />-Ereignis aus und aktualisiert die <see cref="P:System.Windows.Forms.DataGridView.UserSetCursor" />-Eigenschaft, wenn der Cursor im Benutzercode geändert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement <xref:System.Windows.Forms.Control.Cursor%2A> ändert den Eigenschafts Wert abhängig von der Position des Mauszeigers. Die <xref:System.Windows.Forms.DataGridView.UserSetCursor%2A> -Eigenschaft speichert den normalen Wert <xref:System.Windows.Forms.Control.Cursor%2A> der-Eigenschaft und ignoriert die Änderungen des-Steuer Elements. Diese Methode wird aufgerufen, wenn <xref:System.Windows.Forms.Control.CursorChanged> das-Ereignis auftritt, und aktualisiert <xref:System.Windows.Forms.DataGridView.UserSetCursor%2A> die-Eigenschaft, falls erforderlich, zusätzlich zum Aufrufen von Ereignis Handlern.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnCursorChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnCursorChanged(System.EventArgs)" /></para></block>
        <altmember cref="P:System.Windows.Forms.DataGridView.UserSetCursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <altmember cref="E:System.Windows.Forms.Control.CursorChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindingComplete (System.Windows.Forms.DataGridViewBindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindingComplete(class System.Windows.Forms.DataGridViewBindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataBindingComplete(System.Windows.Forms.DataGridViewBindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindingComplete (e As DataGridViewBindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindingComplete(System::Windows::Forms::DataGridViewBindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventArgs -&gt; unit&#xA;override this.OnDataBindingComplete : System.Windows.Forms.DataGridViewBindingCompleteEventArgs -&gt; unit" Usage="dataGridView.OnDataBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewBindingCompleteEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bindungs Vorgänge treten auf, wenn sich die Daten <xref:System.Windows.Forms.CurrencyManager> ändern, während ein verwendet wird. Wenn z. b. <xref:System.Windows.Forms.CurrencyManager.ListChanged> ein-Ereignis auftritt <xref:System.Windows.Forms.DataGridView> , aktualisiert die Ansicht und gibt das <xref:System.Windows.Forms.DataGridView.DataBindingComplete> -Ereignis aus, wenn es abgeschlossen ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.DataBindingComplete" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected virtual void OnDataError (bool displayErrorDialogIfNoHandler, System.Windows.Forms.DataGridViewDataErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataError(bool displayErrorDialogIfNoHandler, class System.Windows.Forms.DataGridViewDataErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataError (displayErrorDialogIfNoHandler As Boolean, e As DataGridViewDataErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataError(bool displayErrorDialogIfNoHandler, System::Windows::Forms::DataGridViewDataErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataError : bool * System.Windows.Forms.DataGridViewDataErrorEventArgs -&gt; unit&#xA;override this.OnDataError : bool * System.Windows.Forms.DataGridViewDataErrorEventArgs -&gt; unit" Usage="dataGridView.OnDataError (displayErrorDialogIfNoHandler, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayErrorDialogIfNoHandler" Type="System.Boolean" />
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewDataErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="displayErrorDialogIfNoHandler"><see langword="true" />, um ein Fehlerdialogfeld anzuzeigen, wenn kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden ist.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnDataError%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnDataError(System.Boolean,System.Windows.Forms.DataGridViewDataErrorEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataMemberChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataMemberChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataMemberChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataMemberChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataMemberChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataMemberChanged : EventArgs -&gt; unit&#xA;override this.OnDataMemberChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDataMemberChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.DataMemberChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnDataMemberChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnDataMemberChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDataSourceChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.DataSourceChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnDataSourceChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnDataSourceChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.DefaultCellStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultValuesNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultValuesNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultValuesNeeded(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultValuesNeeded (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultValuesNeeded(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnDefaultValuesNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnDefaultValuesNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.DefaultValuesNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDoubleClick : EventArgs -&gt; unit" Usage="dataGridView.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.DoubleClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnDoubleClick(System.EventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEditingControlShowing">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingControlShowing (System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingControlShowing(class System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingControlShowing (e As DataGridViewEditingControlShowingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingControlShowing(System::Windows::Forms::DataGridViewEditingControlShowingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventArgs -&gt; unit&#xA;override this.OnEditingControlShowing : System.Windows.Forms.DataGridViewEditingControlShowingEventArgs -&gt; unit" Usage="dataGridView.OnEditingControlShowing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz von <see cref="T:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs" />, die Informationen zum Bearbeitungssteuerelement enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.EditingControlShowing" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnEditingControlShowing%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnEditingControlShowing(System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEditModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditModeChanged : EventArgs -&gt; unit&#xA;override this.OnEditModeChanged : EventArgs -&gt; unit" Usage="dataGridView.OnEditModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.EditModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.EditModeChanged> -Ereignis wird ausgelöst, <xref:System.Windows.Forms.DataGridView.EditMode%2A> wenn sich die-Eigenschaft ändert.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnEditModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Beim Wechseln in den Bearbeitungsmodus gibt die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der aktuellen Zelle keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnEditModeChanged(System.EventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="dataGridView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> -Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : EventArgs -&gt; unit" Usage="dataGridView.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Enter" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnEnter%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Das Steuerelement ist so konfiguriert, dass es in den Bearbeitungsmodus wechselt, wenn es den Fokus erhält, aber bei Erhalt des Fokus gibt die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der aktuellen Zelle keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <exception cref="T:System.Exception">Das Steuerelement ist so konfiguriert, dass es in den Bearbeitungsmodus wechselt, wenn es den Fokus erhält, aber bei der Initialisierung der Bearbeitung des Zellwerts ist es zu einem Fehler gekommen, und entweder liegt kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vor, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnEnter(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="dataGridView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.FontChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zusätzlich zum <xref:System.Windows.Forms.DataGridView.FontChanged> erhöhen des Ereignisses verwendet diese Methode den neuen Wert <xref:System.Windows.Forms.DataGridView.Font%2A> der-Eigenschaft, um die <xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A> Eigenschaften von <xref:System.Windows.Forms.DataGridViewCellStyle> Objekten zu aktualisieren <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A>, die von, <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>und <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> zurückgegeben werden. Eigenschaften.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnFontChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnFontChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ForeColorChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verwendet nicht nur <xref:System.Windows.Forms.DataGridView.FontChanged> das-Ereignis, sondern verwendet den neuen Wert <xref:System.Windows.Forms.DataGridView.ForeColor%2A> der-Eigenschaft, um <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> die- <xref:System.Windows.Forms.DataGridViewCellStyle> Eigenschaft von zu <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> aktualisieren, die von der-Eigenschaft zurückgegeben wird.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnForeColorChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnForeColorChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="dataGridView.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.GotFocus" /> -Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGridColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnGridColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGridColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGridColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGridColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGridColorChanged : EventArgs -&gt; unit&#xA;override this.OnGridColorChanged : EventArgs -&gt; unit" Usage="dataGridView.OnGridColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.GridColorChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnGridColorChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnGridColorChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="dataGridView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.HandleCreated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnHandleCreated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnHandleCreated(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="dataGridView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="dataGridView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnKeyDown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Diese Aktion bewirkt, dass das Steuerelement in den Bearbeitungsmodus wechselt, doch die Initialisierung der Bearbeitung des Zellwerts war nicht erfolgreich. Entweder liegt kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vor, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="dataGridView.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyPressEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.KeyPress" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnKeyPress%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="dataGridView.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.KeyUp" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnKeyUp%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="dataGridView.OnLayout e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.LayoutEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Layout" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnLayout%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnLayout(System.Windows.Forms.LayoutEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected override void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLeave : EventArgs -&gt; unit" Usage="dataGridView.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Leave" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnLeave(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="dataGridView.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.LostFocus" /> -Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnMouseClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Methode veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Das Steuerelement ist so konfiguriert, dass es in den Bearbeitungsmodus wechselt, wenn es den Fokus erhält, aber bei der Initialisierung der Bearbeitung des Zellwerts ist es zu einem Fehler gekommen, und entweder liegt kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vor, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseDown" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnMouseDown%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Das Steuerelement ist so konfiguriert, dass es in den Bearbeitungsmodus wechselt, wenn es den Fokus erhält, aber bei der Initialisierung der Bearbeitung des Zellwerts ist es zu einem Fehler gekommen, und entweder liegt kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vor, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="dataGridView.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> -Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="dataGridView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseLeave" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnMouseLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Methode. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Passen Sie Zellen und Spalten im Windows Forms DataGridView-Steuerelement an, indem Sie](~/docs/framework/winforms/controls/customize-cells-and-columns-in-the-datagrid-by-extending-behavior.md)das Verhalten und die Darstellung erweitern.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/CS/rollovercell.cs#220)]
 [!code-vb[System.Windows.Forms.DataGridViewRolloverCell#220](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRolloverCell/VB/rollovercell.vb#220)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnMouseLeave(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseMove" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnMouseMove%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseUp" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnMouseUp%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="dataGridView.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.MouseWheel" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMultiSelectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultiSelectChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultiSelectChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultiSelectChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultiSelectChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultiSelectChanged : EventArgs -&gt; unit&#xA;override this.OnMultiSelectChanged : EventArgs -&gt; unit" Usage="dataGridView.OnMultiSelectChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.MultiSelectChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnMultiSelectChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnMultiSelectChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnNewRowNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnNewRowNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNewRowNeeded(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNewRowNeeded (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNewRowNeeded(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNewRowNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnNewRowNeeded : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnNewRowNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.NewRowNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnNewRowNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnNewRowNeeded(System.Windows.Forms.DataGridViewRowEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="dataGridView.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnPaint%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Alle Ausnahmen, die während dieser Methode auftreten, werden ignoriert, sofern es sich nicht um Folgendes handelt: 
-   <see cref="T:System.NullReferenceException" />  
  
-   <see cref="T:System.StackOverflowException" />  
  
-   <see cref="T:System.OutOfMemoryException" />  
  
-   <see cref="T:System.Threading.ThreadAbortException" />  
  
-   <see cref="T:System.ExecutionEngineException" />  
  
-   <see cref="T:System.IndexOutOfRangeException" />  
  
-   <see cref="T:System.AccessViolationException" /></exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnPaint(System.Windows.Forms.PaintEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="dataGridView.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnReadOnlyChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Das Steuerelement wurde von "Schreibgeschützt" in "Lese-/Schreibzugriff" geändert, wodurch die aktuelle Zelle in den Bearbeitungsmodus wechseln kann, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnReadOnlyChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="dataGridView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Resize" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnResize%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnResize(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> -Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowContextMenuStripChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowContextMenuStripChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowContextMenuStripChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowContextMenuStripChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowContextMenuStripNeeded (System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowContextMenuStripNeeded(class System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowContextMenuStripNeeded (e As DataGridViewRowContextMenuStripNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowContextMenuStripNeeded(System::Windows::Forms::DataGridViewRowContextMenuStripNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs -&gt; unit&#xA;override this.OnRowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowContextMenuStripNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDefaultCellStyleChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDefaultCellStyleChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDefaultCellStyleChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDefaultCellStyleChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDirtyStateNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDirtyStateNeeded (System.Windows.Forms.QuestionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDirtyStateNeeded(class System.Windows.Forms.QuestionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDirtyStateNeeded (e As QuestionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDirtyStateNeeded(System::Windows::Forms::QuestionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDirtyStateNeeded : System.Windows.Forms.QuestionEventArgs -&gt; unit&#xA;override this.OnRowDirtyStateNeeded : System.Windows.Forms.QuestionEventArgs -&gt; unit" Usage="dataGridView.OnRowDirtyStateNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QuestionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.QuestionEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded(System.Windows.Forms.QuestionEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDividerDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDividerDoubleClick (System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDividerDoubleClick(class System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDividerDoubleClick (e As DataGridViewRowDividerDoubleClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDividerDoubleClick(System::Windows::Forms::DataGridViewRowDividerDoubleClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs -&gt; unit&#xA;override this.OnRowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs -&gt; unit" Usage="dataGridView.OnRowDividerDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick(System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowDividerHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDividerHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDividerHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDividerHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDividerHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowDividerHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEnter (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowEnter(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowEnter (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowEnter(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowEnter : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowEnter%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowErrorTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowErrorTextChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowErrorTextChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowErrorTextChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowErrorTextChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowErrorTextChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowErrorTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowErrorTextChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowEnter(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowErrorTextNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowErrorTextNeeded (System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowErrorTextNeeded(class System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowErrorTextNeeded (e As DataGridViewRowErrorTextNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowErrorTextNeeded(System::Windows::Forms::DataGridViewRowErrorTextNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs -&gt; unit&#xA;override this.OnRowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowErrorTextNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" /></para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderCellChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderCellChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderCellChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderCellChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderCellChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderCellChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderMouseClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderMouseClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderMouseClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnRowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das Informationen über die Maus und die Headerzelle enthält, auf die geklickt wurde.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeaderMouseDoubleClick(class System.Windows.Forms.DataGridViewCellMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick(System.Windows.Forms.DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeaderMouseDoubleClick (e As DataGridViewCellMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeaderMouseDoubleClick(System::Windows::Forms::DataGridViewCellMouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit&#xA;override this.OnRowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventArgs -&gt; unit" Usage="dataGridView.OnRowHeaderMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellMouseEventArgs" />, das Informationen über die Maus und die Headerzelle enthält, auf die doppelt geklickt wurde.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersBorderStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged(System.EventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersWidthChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersWidthChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersWidthChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersWidthChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersWidthChanged : EventArgs -&gt; unit&#xA;override this.OnRowHeadersWidthChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeadersWidthSizeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeadersWidthSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeadersWidthSizeModeChanged(class System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeadersWidthSizeModeChanged (e As DataGridViewAutoSizeModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeadersWidthSizeModeChanged(System::Windows::Forms::DataGridViewAutoSizeModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit&#xA;override this.OnRowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventArgs -&gt; unit" Usage="dataGridView.OnRowHeadersWidthSizeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewAutoSizeModeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged(System.Windows.Forms.DataGridViewAutoSizeModeEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeightChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowHeightChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightInfoNeeded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightInfoNeeded (System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightInfoNeeded(class System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightInfoNeeded (e As DataGridViewRowHeightInfoNeededEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightInfoNeeded(System::Windows::Forms::DataGridViewRowHeightInfoNeededEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs -&gt; unit&#xA;override this.OnRowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightInfoNeeded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded(System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowHeightInfoPushed">
      <MemberSignature Language="C#" Value="protected virtual void OnRowHeightInfoPushed (System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowHeightInfoPushed(class System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowHeightInfoPushed (e As DataGridViewRowHeightInfoPushedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowHeightInfoPushed(System::Windows::Forms::DataGridViewRowHeightInfoPushedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs -&gt; unit&#xA;override this.OnRowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs -&gt; unit" Usage="dataGridView.OnRowHeightInfoPushed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed(System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnRowLeave (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowLeave(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowLeave (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowLeave(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowLeave : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowLeave%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowLeave(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowMinimumHeightChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowMinimumHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowMinimumHeightChanged(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowMinimumHeightChanged (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowMinimumHeightChanged(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowMinimumHeightChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged(System.Windows.Forms.DataGridViewRowEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowPostPaint">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRowPostPaint (System.Windows.Forms.DataGridViewRowPostPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRowPostPaint(class System.Windows.Forms.DataGridViewRowPostPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRowPostPaint (e As DataGridViewRowPostPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRowPostPaint(System::Windows::Forms::DataGridViewRowPostPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventArgs -&gt; unit&#xA;override this.OnRowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventArgs -&gt; unit" Usage="dataGridView.OnRowPostPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowPostPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowPostPaintEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowPostPaint" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowPostPaint%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowPostPaint(System.Windows.Forms.DataGridViewRowPostPaintEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowPrePaint">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRowPrePaint (System.Windows.Forms.DataGridViewRowPrePaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRowPrePaint(class System.Windows.Forms.DataGridViewRowPrePaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRowPrePaint (e As DataGridViewRowPrePaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRowPrePaint(System::Windows::Forms::DataGridViewRowPrePaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventArgs -&gt; unit&#xA;override this.OnRowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventArgs -&gt; unit" Usage="dataGridView.OnRowPrePaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowPrePaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowPrePaint%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowPrePaint(System.Windows.Forms.DataGridViewRowPrePaintEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsAdded (System.Windows.Forms.DataGridViewRowsAddedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsAdded(class System.Windows.Forms.DataGridViewRowsAddedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsAdded (e As DataGridViewRowsAddedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsAdded(System::Windows::Forms::DataGridViewRowsAddedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventArgs -&gt; unit&#xA;override this.OnRowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventArgs -&gt; unit" Usage="dataGridView.OnRowsAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowsAddedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz von <see cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" />, die Informationen zu den hinzugefügten Zeilen enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowsAdded" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowsAdded%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsDefaultCellStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsDefaultCellStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsDefaultCellStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsDefaultCellStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsDefaultCellStyleChanged : EventArgs -&gt; unit&#xA;override this.OnRowsDefaultCellStyleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnRowsDefaultCellStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowsRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnRowsRemoved (System.Windows.Forms.DataGridViewRowsRemovedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowsRemoved(class System.Windows.Forms.DataGridViewRowsRemovedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowsRemoved (e As DataGridViewRowsRemovedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowsRemoved(System::Windows::Forms::DataGridViewRowsRemovedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventArgs -&gt; unit&#xA;override this.OnRowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventArgs -&gt; unit" Usage="dataGridView.OnRowsRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz von <see cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />, die Informationen zu den gelöschten Zeilen enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowsRemoved" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowsRemoved%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowStateChanged (int rowIndex, System.Windows.Forms.DataGridViewRowStateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowStateChanged(int32 rowIndex, class System.Windows.Forms.DataGridViewRowStateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowStateChanged (rowIndex As Integer, e As DataGridViewRowStateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowStateChanged(int rowIndex, System::Windows::Forms::DataGridViewRowStateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowStateChanged : int * System.Windows.Forms.DataGridViewRowStateChangedEventArgs -&gt; unit&#xA;override this.OnRowStateChanged : int * System.Windows.Forms.DataGridViewRowStateChangedEventArgs -&gt; unit" Usage="dataGridView.OnRowStateChanged (rowIndex, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowStateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile, deren Zustand sich ändert.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowStateChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowStateChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowStateChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Die Zeile wurde von "Schreibgeschützt" auf "Lese-/Schreibzugriff" geändert, wodurch die aktuelle Zelle in den Bearbeitungsmodus wechseln kann, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wurde und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowStateChanged(System.Int32,System.Windows.Forms.DataGridViewRowStateChangedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUnshared">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUnshared (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUnshared(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUnshared (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUnshared(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUnshared : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnRowUnshared : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnRowUnshared e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowUnshared" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowUnshared%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowUnshared(System.Windows.Forms.DataGridViewRowEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowValidated (System.Windows.Forms.DataGridViewCellEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowValidated(class System.Windows.Forms.DataGridViewCellEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowValidated (e As DataGridViewCellEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowValidated(System::Windows::Forms::DataGridViewCellEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit&#xA;override this.OnRowValidated : System.Windows.Forms.DataGridViewCellEventArgs -&gt; unit" Usage="dataGridView.OnRowValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowValidated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowValidated(System.Windows.Forms.DataGridViewCellEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRowValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowValidating (System.Windows.Forms.DataGridViewCellCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowValidating(class System.Windows.Forms.DataGridViewCellCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowValidating (e As DataGridViewCellCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowValidating(System::Windows::Forms::DataGridViewCellCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowValidating : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit&#xA;override this.OnRowValidating : System.Windows.Forms.DataGridViewCellCancelEventArgs -&gt; unit" Usage="dataGridView.OnRowValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewCellCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewCellCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnRowValidating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnRowValidating(System.Windows.Forms.DataGridViewCellCancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnScroll (System.Windows.Forms.ScrollEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScroll(class System.Windows.Forms.ScrollEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnScroll (e As ScrollEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnScroll(System::Windows::Forms::ScrollEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnScroll : System.Windows.Forms.ScrollEventArgs -&gt; unit&#xA;override this.OnScroll : System.Windows.Forms.ScrollEventArgs -&gt; unit" Usage="dataGridView.OnScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ScrollEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ScrollEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.Scroll" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnScroll%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnScroll(System.Windows.Forms.ScrollEventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="dataGridView.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Eine Instanz von <see cref="T:System.EventArgs" />, die Informationen zum Ereignis enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.SelectionChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnSelectionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnSelectionChanged(System.EventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSortCompare">
      <MemberSignature Language="C#" Value="protected virtual void OnSortCompare (System.Windows.Forms.DataGridViewSortCompareEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSortCompare(class System.Windows.Forms.DataGridViewSortCompareEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSortCompare (e As DataGridViewSortCompareEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSortCompare(System::Windows::Forms::DataGridViewSortCompareEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSortCompare : System.Windows.Forms.DataGridViewSortCompareEventArgs -&gt; unit&#xA;override this.OnSortCompare : System.Windows.Forms.DataGridViewSortCompareEventArgs -&gt; unit" Usage="dataGridView.OnSortCompare e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewSortCompareEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.SortCompare" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnSortCompare%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.DataGridView.SortCompare" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSorted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSorted(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSorted : EventArgs -&gt; unit&#xA;override this.OnSorted : EventArgs -&gt; unit" Usage="dataGridView.OnSorted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.Sorted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnSorted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stellen Sie beim Überschreiben <see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" /> ineinerabgeleitetenKlassesicher,dassdie-MethodederBasisklasseaufgerufenwird,damitregistrierteDelegatendasEreignisempfangen.<see cref="M:System.Windows.Forms.DataGridView.OnSorted(System.EventArgs)" /></para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserAddedRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserAddedRow (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserAddedRow(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserAddedRow (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserAddedRow(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserAddedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnUserAddedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnUserAddedRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.UserAddedRow" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnUserAddedRow%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch die <see cref="P:System.Windows.Forms.DataGridViewRowEventArgs.Row" />-Eigenschaft von <paramref name="e" /> angegebene Zeile gehört nicht zu diesem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnUserAddedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserDeletedRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserDeletedRow (System.Windows.Forms.DataGridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserDeletedRow(class System.Windows.Forms.DataGridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserDeletedRow (e As DataGridViewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserDeletedRow(System::Windows::Forms::DataGridViewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserDeletedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit&#xA;override this.OnUserDeletedRow : System.Windows.Forms.DataGridViewRowEventArgs -&gt; unit" Usage="dataGridView.OnUserDeletedRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.UserDeletedRow" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnUserDeletedRow%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletedRow(System.Windows.Forms.DataGridViewRowEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnUserDeletingRow">
      <MemberSignature Language="C#" Value="protected virtual void OnUserDeletingRow (System.Windows.Forms.DataGridViewRowCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUserDeletingRow(class System.Windows.Forms.DataGridViewRowCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUserDeletingRow (e As DataGridViewRowCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUserDeletingRow(System::Windows::Forms::DataGridViewRowCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventArgs -&gt; unit&#xA;override this.OnUserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventArgs -&gt; unit" Usage="dataGridView.OnUserDeletingRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataGridViewRowCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.DataGridViewRowCancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridView.UserDeletingRow" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnUserDeletingRow%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnUserDeletingRow(System.Windows.Forms.DataGridViewRowCancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="dataGridView.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.CancelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Validating" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode wird nicht <xref:System.Windows.Forms.Control.Validating> nur das-Ereignis, sondern auch die aktuelle Bearbeitung der Zelle beendet und die Zellen-und Zeilen Werte überprüft.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridView.OnValidating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Fehler bei der Validierung, und außerdem ist entweder kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridView.OnValidating(System.ComponentModel.CancelEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="dataGridView.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.VisibleChanged" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.DataGridView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für dieses Steuerelement nicht relevant.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.Padding" />-Instanz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für dieses Steuerelement nicht relevant.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.Padding" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView.Padding%2A> -Eigenschaft ist für dieses Steuerelement nicht relevant, Sie können jedoch ihren Wert ändern und auf solche Änderungen reagieren, indem Sie dieses Ereignis behandeln.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Padding" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="PaintBackground">
      <MemberSignature Language="C#" Value="protected virtual void PaintBackground (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle gridBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PaintBackground(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle gridBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PaintBackground(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle gridBounds);" />
      <MemberSignature Language="F#" Value="abstract member PaintBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit&#xA;override this.PaintBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle -&gt; unit" Usage="dataGridView.PaintBackground (graphics, clipBounds, gridBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="gridBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics">Die <see cref="T:System.Drawing.Graphics" />, mit der der Hintergrund gezeichnet wird.</param>
        <param name="clipBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das die Fläche der zu zeichnenden <see cref="T:System.Windows.Forms.DataGridView" /> darstellt.</param>
        <param name="gridBounds">Ein <see cref="T:System.Drawing.Rectangle" />, das den Bereich darstellt, in dem Zellen gezeichnet werden.</param>
        <summary>Zeichnet den Hintergrund der <see cref="T:System.Windows.Forms.DataGridView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `clipBounds` -Parameter stellt den Bereich <xref:System.Windows.Forms.DataGridView> des dar, der neu gezeichnet werden muss. Wenn ein Benutzer beispielsweise das gesamte <xref:System.Windows.Forms.DataGridView> -Fenster mit einem anderen Fenster abdeckt und es dann abdeckt `clipBounds` , stellt das gesamte <xref:System.Windows.Forms.DataGridView>dar. Wenn ein Benutzer einen kleinen Bereich von <xref:System.Windows.Forms.DataGridView> abdeckt und ihn dann abdeckt `clipBounds` , stellt den kleinen Bereich dar, der abgedeckt wurde.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessAKey">
      <MemberSignature Language="C#" Value="protected bool ProcessAKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessAKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessAKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessAKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessAKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessAKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessAKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die A-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt `true` zurück, wenn der Benutzer STRG + A drückt <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> und die `true`-Eigenschaft den Wert hat. Standardmäßig werden dadurch alle Zellen im-Steuerelement ausgewählt.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDataGridViewKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDataGridViewKey (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDataGridViewKey(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDataGridViewKey(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDataGridViewKey (e As KeyEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDataGridViewKey(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDataGridViewKey : System.Windows.Forms.KeyEventArgs -&gt; bool&#xA;override this.ProcessDataGridViewKey : System.Windows.Forms.KeyEventArgs -&gt; bool" Usage="dataGridView.ProcessDataGridViewKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Enthält Informationen über die Taste, die gedrückt wurde.</param>
        <summary>Verarbeitet Tasten, die zum Navigieren in der <see cref="T:System.Windows.Forms.DataGridView" /> verwendet werden.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die Schlüssel Verarbeitungsmethode auf, die für den gedrückten Schlüssel geeignet ist ( <xref:System.Windows.Forms.DataGridView.ProcessF2Key%2A> z. b. die Methode, wenn F2 gedrückt wird), und gibt den Rückgabewert dieser Methode zurück.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das Verhalten der EINGABETASTE in einer <xref:System.Windows.Forms.DataGridView> Unterklasse geändert wird, indem die-Methode und die <xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A> - <xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A> Methode überschrieben werden. In diesem Beispiel hat die EINGABETASTE das gleiche Verhalten wie die nach-rechts-Taste, sodass ein Benutzer mehrere Zellen in einer einzelnen Daten Zeile leichter bearbeiten kann.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Durch die gedrückte Taste würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.  
  
- oder - 
Durch Drücken der ENTF-TASTE würde mindestens eine Zeile gelöscht, aber ein Fehler in der Datenquelle verhindert den Löschvorgang, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>Beim Überschreiben dieser Methode sollte ein Steuerelement <see langword="true" /> zurückgeben, um anzugeben, dass es den Schlüssel verarbeitet hat. Bei Schlüsseln, die nicht vom-Steuerelement verarbeitet werden, wird das Ergebnis der Basisversion dieser Methode zurückgegeben.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDeleteKey">
      <MemberSignature Language="C#" Value="protected bool ProcessDeleteKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessDeleteKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDeleteKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessDeleteKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessDeleteKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessDeleteKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDeleteKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die ENTF-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt `true` zurück, wenn der Benutzer Delete drückt, um Zeilen im-Steuerelement zu löschen. Der Benutzer kann Zeilen löschen, wenn <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> die-Eigenschaft auf <xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect> oder <xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect> festgelegt <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> ist und die- `true`Eigenschaft auf festgelegt ist. Wenn das <xref:System.Windows.Forms.DataGridView> an Daten gebunden ist, muss <xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=nameWithType> die-Eigenschaft der Datenquelle auch auf `true`festgelegt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Durch Drücken der ENTF-TASTE würde mindestens eine Zeile gelöscht, aber ein Fehler in der Datenquelle verhindert den Löschvorgang, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet Tasten, z. B. TAB, ESC, die EINGABETASTE und Pfeiltasten, die zum Steuern in Dialogfeldern verwendet werden.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird im Bearbeitungsmodus aufgerufen, um Tastatureingaben zu verarbeiten, die nicht vom gehosteten Bearbeitungs Steuerelement behandelt werden.  
  
 Wenn ein Tastendruck als Eingabetaste festgelegt wird, wird er zur Verarbeitung an die Basisklasse gesendet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das Verhalten der EINGABETASTE in einer <xref:System.Windows.Forms.DataGridView> Unterklasse geändert wird, indem die-Methode und die <xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A> - <xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A> Methode überschrieben werden. In diesem Beispiel hat die EINGABETASTE das gleiche Verhalten wie die nach-rechts-Taste, sodass ein Benutzer mehrere Zellen in einer einzelnen Daten Zeile leichter bearbeiten kann.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Durch die gedrückte Taste würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">, wenn alle Fenster und Benutzer Ereignisse verwendet werden sollen, wenn die Tab-Taste gedrückt wird. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <block subset="none" type="overrides"><para>Beim Überschreiben dieser Methode sollte ein Steuerelement <see langword="true" /> zurückgeben, um anzugeben, dass es den Schlüssel verarbeitet hat. Bei Schlüsseln, die nicht vom-Steuerelement verarbeitet werden, wird das Ergebnis der Basisversion dieser Methode zurückgegeben.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessDownKey">
      <MemberSignature Language="C#" Value="protected bool ProcessDownKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessDownKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessDownKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessDownKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessDownKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessDownKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessDownKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die NACH-UNTEN-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken der NACH-UNTEN-TASTE würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEndKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEndKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEndKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEndKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEndKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEndKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEndKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEndKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die ENDE-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken der ENDE-TASTE würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEnterKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEnterKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEnterKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEnterKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEnterKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEnterKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEnterKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEnterKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die EINGABETASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken der EINGABETASTE würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessEscapeKey">
      <MemberSignature Language="C#" Value="protected bool ProcessEscapeKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessEscapeKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessEscapeKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessEscapeKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessEscapeKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessEscapeKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessEscapeKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die ESC-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessF2Key">
      <MemberSignature Language="C#" Value="protected bool ProcessF2Key (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessF2Key(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessF2Key(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessF2Key (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessF2Key(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessF2Key : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessF2Key keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die F2-Taste.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken von F2 würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Durch Drücken von F2 würde das Steuerelement in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessF3Key">
      <MemberSignature Language="C#" Value="protected bool ProcessF3Key (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessF3Key(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessF3Key(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessF3Key (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessF3Key(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessF3Key : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessF3Key keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der Werte, die die zu verarbeitenden Schlüssel darstellt.</param>
        <summary>Verarbeitet die F3-Taste durch Sortierung der aktuellen Spalte.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessHomeKey">
      <MemberSignature Language="C#" Value="protected bool ProcessHomeKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessHomeKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessHomeKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessHomeKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessHomeKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessHomeKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessHomeKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Die gedrückte Taste.</param>
        <summary>Verarbeitet die POS1-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken von POS1 würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wurde und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessInsertKey">
      <MemberSignature Language="C#" Value="protected bool ProcessInsertKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessInsertKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessInsertKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessInsertKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessInsertKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessInsertKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessInsertKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</param>
        <summary>Verarbeitet die EINFG-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyEventArgs :  -&gt; bool" Usage="dataGridView.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</param>
        <summary>Verarbeitet eine Tastenmeldung und generiert die entsprechenden Steuerelementereignisse.</summary>
        <returns><see langword="true" />, wenn die Meldung verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter der <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A?displayProperty=nameWithType> -Methode für die Basisklasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Durch die gedrückte Taste würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>Beim Überschreiben dieser Methode sollte ein Steuerelement <see langword="true" /> zurückgeben, um anzugeben, dass die Nachricht verarbeitet wurde. Bei Nachrichten, die nicht vom-Steuerelement verarbeitet werden, wird das Ergebnis der Basisversion dieser Methode zurückgegeben.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyPreview :  -&gt; bool" Usage="dataGridView.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</param>
        <summary>Zeigt eine Tastaturmeldung in der Vorschau an.</summary>
        <returns><see langword="true" />, wenn die Meldung verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter der <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A?displayProperty=nameWithType> -Methode für die Basisklasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Durch die gedrückte Taste würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>Beim Überschreiben dieser Methode sollte ein Steuerelement <see langword="true" /> zurückgeben, um anzugeben, dass die Nachricht verarbeitet wurde. Bei Nachrichten, die nicht vom-Steuerelement verarbeitet werden, wird das Ergebnis der Basisversion dieser Methode zurückgegeben.</para></block>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessLeftKey">
      <MemberSignature Language="C#" Value="protected bool ProcessLeftKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessLeftKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessLeftKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessLeftKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessLeftKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessLeftKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessLeftKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die NACH-LINKS-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken der NACH-LINKS-TASTE würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessNextKey">
      <MemberSignature Language="C#" Value="protected bool ProcessNextKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessNextKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessNextKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessNextKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessNextKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessNextKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessNextKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die BILD-AB-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken von BILD-AB würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessPriorKey">
      <MemberSignature Language="C#" Value="protected bool ProcessPriorKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessPriorKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessPriorKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessPriorKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessPriorKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessPriorKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessPriorKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die BILD-AUF-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken von BILD-AUF würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessRightKey">
      <MemberSignature Language="C#" Value="protected bool ProcessRightKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessRightKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessRightKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessRightKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessRightKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessRightKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessRightKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die NACH-RECHTS-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das Verhalten der EINGABETASTE in einer <xref:System.Windows.Forms.DataGridView> Unterklasse geändert wird, indem die-Methode und die <xref:System.Windows.Forms.DataGridView.ProcessDataGridViewKey%2A> - <xref:System.Windows.Forms.DataGridView.ProcessDialogKey%2A> Methode überschrieben werden. In diesem Beispiel hat die EINGABETASTE das gleiche Verhalten wie die nach-rechts-Taste, sodass ein Benutzer mehrere Zellen in einer einzelnen Daten Zeile leichter bearbeiten kann.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#70)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken der NACH-RECHTS-TASTE würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessSpaceKey">
      <MemberSignature Language="C#" Value="protected bool ProcessSpaceKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessSpaceKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessSpaceKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessSpaceKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessSpaceKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessSpaceKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessSpaceKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</param>
        <summary>Verarbeitet die LEERTASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected bool ProcessTabKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessTabKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessTabKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessTabKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessTabKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessTabKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessTabKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die TAB-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken der TAB-TASTE würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">für die Verwendung aller Windows-und Benutzer Ereignisse. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessUpKey">
      <MemberSignature Language="C#" Value="protected bool ProcessUpKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessUpKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessUpKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessUpKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessUpKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessUpKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessUpKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die NACH-OBEN-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken der NACH-OBEN-TASTE würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der neuen aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Diese Aktion würde einen Zellwert festschreiben oder in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für ist das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessZeroKey">
      <MemberSignature Language="C#" Value="protected bool ProcessZeroKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ProcessZeroKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ProcessZeroKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Function ProcessZeroKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ProcessZeroKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="member this.ProcessZeroKey : System.Windows.Forms.Keys -&gt; bool" Usage="dataGridView.ProcessZeroKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitenden Tasten darstellen.</param>
        <summary>Verarbeitet die 0-TASTE.</summary>
        <returns><see langword="true" />, wenn die Taste verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Durch Drücken der Taste 0 würde das Steuerelement in den Bearbeitungsmodus wechseln, aber die <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> -Eigenschaft der aktuellen Zelle gibt keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />implementiert.</exception>
        <exception cref="T:System.Exception">Durch diese Aktion würde das Steuerelement in den Bearbeitungsmodus wechseln, aber ein Fehler in der Datenquelle verhindert die Aktion, und entweder ist kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vorhanden, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridView.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Zellen des <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements bearbeitet werden können, oder legt diesen fest.</summary>
        <value><see langword="true" /> , wenn die Zellen des <see cref="T:System.Windows.Forms.DataGridView" /> -Steuerelements nicht bearbeitet werden können, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Zelle ist schreibgeschützt, wenn der Wert der <xref:System.Windows.Forms.DataGridView.ReadOnly%2A> -Eigenschaft für die Zelle, die Zeile der Zelle, die Spalte der Zelle oder <xref:System.Windows.Forms.DataGridView>ist `true` .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement veranschaulicht, das in erster Linie für die Anzeige vorgesehen ist. In diesem Beispiel wird das visuelle Erscheinungsbild des Steuer Elements auf verschiedene Weise angepasst, und das Steuerelement ist für eingeschränkte Interaktivität konfiguriert. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der angegebene Wert beim Festlegen dieser Eigenschaft ist <see langword="true" />, die aktuelle Zelle befindet sich im Bearbeitungsmodus und die aktuelle Zelle enthält Änderungen, für die kein Commit ausgeführt werden kann.</exception>
        <exception cref="T:System.Exception">Der beim Festlegen dieser Eigenschaft angegebene Wert würde bewirken, dass das Steuerelement in den Bearbeitungsmodus wechselt. Bei der Initialisierung der Bearbeitung des Zellwerts ist jedoch ein Fehler aufgetreten, und entweder liegt kein Handler für das <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis vor, oder der Handler hat die <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />-Eigenschaft auf <see langword="true" /> festgelegt. Das Ausnahmeobjekt kann in der Regel in den Typ <see cref="T:System.FormatException" /> umgewandelt werden.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridView.ReadOnly" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.ReadOnlyChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.ReadOnlyChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#274](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#274)]
 [!code-vb[System.Windows.Forms.EventExamples#274](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#274)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RefreshEdit">
      <MemberSignature Language="C#" Value="public bool RefreshEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RefreshEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.RefreshEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function RefreshEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RefreshEdit();" />
      <MemberSignature Language="F#" Value="member this.RefreshEdit : unit -&gt; bool" Usage="dataGridView.RefreshEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert den Wert der aktuellen Zelle mit dem zugrunde liegenden Zellenwert, wenn die Zelle sich im Bearbeitungsmodus befindet, wobei vorhergehende Werte verworfen werden.</summary>
        <returns><see langword="true" /> wenn erfolgreich, <see langword="false" />, wenn ein <see cref="E:System.Windows.Forms.DataGridView.DataError" />-Ereignis aufgetreten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen Sie diese Methode, um zu erzwingen, dass eine Zelle ihren Anzeige Wert im Bearbeitungsmodus aktualisiert. Dies ist nützlich, wenn ein externer Prozess den Zellwert ändert und Sie den Benutzer über die Änderung benachrichtigen möchten, selbst wenn eine benutzerdefinierte Änderung als Ergebnis verloren geht.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public override void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetText();" />
      <MemberSignature Language="F#" Value="override this.ResetText : unit -&gt; unit" Usage="dataGridView.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Setzt die <see cref="P:System.Windows.Forms.DataGridView.Text" />-Eigenschaft auf den Standardwert (<see cref="F:System.String.Empty" />) zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl sich diese Methode wie beschrieben verhält, <xref:System.Windows.Forms.DataGridView.Text%2A> ist die-Eigenschaft für dieses Steuerelement nicht relevant.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.Text" />
      </Docs>
    </Member>
    <Member MemberName="RowContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowContextMenuStripChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.RowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowContextMenuStripChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#338](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#338)]
 [!code-vb[System.Windows.Forms.EventExamples#338](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#338)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowContextMenuStripNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowContextMenuStripNeeded As DataGridViewRowContextMenuStripNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowContextMenuStripNeededEventHandler ^ RowContextMenuStripNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler " Usage="member this.RowContextMenuStripNeeded : System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das Kontextmenü einer Zeile benötigt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> Ereignis tritt nur auf, <xref:System.Windows.Forms.DataGridView> Wenn <xref:System.Windows.Forms.DataGridView.DataSource%2A> die Steuerelement Eigenschaft fest <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> gelegt ist `true`oder die-Eigenschaft ist. Das behandeln <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> des Ereignisses ist hilfreich, wenn Sie ein Kontextmenü anzeigen möchten, das durch den aktuellen Status einer Zeile oder die darin enthaltenen Werte bestimmt wird.  
  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> -Ereignis behandeln, wird das Kontextmenü angezeigt, das Sie im-Handler angeben, wenn der Benutzer mit der rechten Maustaste <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> auf eine Zeile klickt, es sei denn, der überschreibt das Kontextmenü für die jeweilige Zelle, auf die geklickt wurde.  
  
 Das <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> Ereignis tritt auch auf, wenn der Wert <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=nameWithType> der Eigenschaft entweder Programm gesteuert abgerufen wird oder wenn der Benutzer mit der rechten Maustaste auf eine Zeile klickt.  
  
 Sie können die- <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.RowIndex%2A?displayProperty=nameWithType> Eigenschaft verwenden, um den Status einer Zeile oder die darin enthaltenen Werte zu ermitteln. verwenden Sie diese Informationen, um die <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> Eigenschaft zu ändern oder zu ändern. Diese Eigenschaft wird mit dem Wert der Zeilen <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> Eigenschaft initialisiert, den der Ereignis Wert überschreibt.  
  
 Behandeln Sie <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> das-Ereignis bei der Arbeit mit großen Datenmengen, um die Leistungseinbußen beim Festlegen <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> des Zeilen Werts für mehrere Zeilen zu vermeiden. Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> -Ereignis behandelt, <xref:System.Windows.Forms.ContextMenuStrip> um einen basierend auf dem Titel des Mitarbeiters bereitzustellen. In diesem Beispiel gibt es zwei Kontextmenüs: einen für Manager und einen für alle anderen Mitarbeiter.  
  
 [!code-csharp[System.Windows.Forms.DataGridView_NeededEvents#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/CS/Form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView_NeededEvents#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView_NeededEvents/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded(System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowCount : int with get, set" Usage="System.Windows.Forms.DataGridView.RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Zeilen ab, die im <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement angezeigt werden, oder legt diese Anzahl fest.</summary>
        <value>Die Anzahl der Zeilen, die im <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement angezeigt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.DataGridView.RowCount%2A> auf einen Wert festgelegt ist, der kleiner als der aktuelle Wert ist, werden Zeilen am Ende <xref:System.Windows.Forms.DataGridView.Rows%2A> der Auflistung entfernt. Wenn <xref:System.Windows.Forms.DataGridView.RowCount%2A> auf einen Wert festgelegt ist, der größer ist als der aktuelle Wert, werden Zeilen am Ende <xref:System.Windows.Forms.DataGridView.Rows%2A> der Auflistung hinzugefügt. Die zusätzlichen Zeilen basieren auf der Zeile, die in der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> -Eigenschaft angegeben ist.  
  
 Wenn Sie die <xref:System.Windows.Forms.DataGridView.RowCount%2A> -Eigenschaft auf 0 festlegen, werden alle Zeilen aus der <xref:System.Windows.Forms.DataGridView>entfernt. Dies entspricht dem Aufrufen der <xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType> -Methode.  
  
> [!NOTE]
>  Wenn <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A>den Wert <xref:System.Windows.Forms.DataGridView.RowCount%2A> hat, können Sie nicht auf 0 festlegen. `true` In diesem Fall wird die <xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=nameWithType> -Methode aufgerufen, um alle Zeilen außer der Zeile für neue Datensätze zu entfernen. Der <xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A> Aufruf von hat dasselbe Ergebnis wie <xref:System.Windows.Forms.DataGridView.RowCount%2A> das Festlegen von auf 1 in diesem Fall, ist aber viel schneller.  
  
 Die <xref:System.Windows.Forms.DataGridView.RowCount%2A> -Eigenschaft kann mit der <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> -Eigenschaft verwendet werden, um <xref:System.Windows.Forms.DataGridView> eine einfache zum Anzeigen und Bearbeiten von Text zu erstellen. Wenn Sie für ein <xref:System.Windows.Forms.DataGridView.RowCount%2A> <xref:System.Windows.Forms.DataGridView> Steuerelement ohne Spalten den Wert für die-Eigenschaft auf einen Wert größer <xref:System.Windows.Forms.DataGridViewTextBoxColumn> 0 festlegen, wird automatisch eine hinzugefügt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung des <xref:System.Windows.Forms.DataGridView.RowCount%2A>-Attributs veranschaulicht. In diesem Beispiel wird diese Eigenschaft verwendet, um die Anzahl von Einträgen in einem <xref:System.Windows.Forms.DataGridView>zu verfolgen. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.SelectionChanged> im Ereignis verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kleiner als 0 (null).  
  
- oder - 
Der angegebene Wert ist kleiner als 1, und <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> ist auf <see langword="true" /> festgelegt.</exception>
        <exception cref="T:System.InvalidOperationException">Beim Festlegen dieser Eigenschaft, wird die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft festgelegt.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDefaultCellStyleChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowDefaultCellStyleChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" />-Eigenschaft einer Zeile geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn eine Eigenschaft <xref:System.Windows.Forms.DataGridViewCellStyle> von, die <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> von der-Eigenschaft für eine Zeile zurückgegeben wird, auf einen <xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A> neuen Wert festgelegt wird oder wenn die- <xref:System.Windows.Forms.DataGridViewCellStyle> Eigenschaft für eine Zeile auf einen neuen festgelegt wird, wobei mindestens ein Eigenschafts Wert von der vorherigen Zelle abweicht. Style-Objekt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#340](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#340)]
 [!code-vb[System.Windows.Forms.EventExamples#340](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#340)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDirtyStateNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDirtyStateNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDirtyStateNeeded As QuestionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QuestionEventHandler ^ RowDirtyStateNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowDirtyStateNeeded : System.Windows.Forms.QuestionEventHandler " Usage="member this.RowDirtyStateNeeded : System.Windows.Forms.QuestionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QuestionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" />-Eigenschaft des <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements <see langword="true" /> ist und die <see cref="T:System.Windows.Forms.DataGridView" /> bestimmen muss, ob die aktive Zeile über ausgecheckte Änderungen verfügt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig legt dieses Ereignis die <xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType> -Eigenschaft auf `true` fest, wenn Zellen in der aktuellen Zeile geändert wurden. Dies bewirkt, <xref:System.Windows.Forms.DataGridView.CancelRowEdit> dass das Ereignis auftritt, wenn der Benutzer Änderungen auf eine Zeile zurücksetzt. Benutzer können Änderungen an einer Zeile wiederherstellen, indem Sie die ESC-Taste zweimal drücken, wenn sich eine Zelle im Bearbeitungsmodus befindet, oder außerhalb des Bearbeitungsmodus. Dieses Ereignis kann verwendet werden, um den commitbereich im virtuellen Modus anzupassen, indem <xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=nameWithType> die-Eigenschaft je nach ausgewähltem commitbereich auf den richtigen Wert festgelegt wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis behandelt wird, um den Commit-Bereich auf Zellen Ebene bereitzustellen. Dies bedeutet, dass der Benutzer Änderungen nur in der aktuellen Zelle zurücksetzen kann. In einem commitbereich auf Zellen Ebene wird die Zeile so behandelt, als wären Änderungen ohne Commit nur dann, wenn die aktive Zelle über nicht ausgecheelte Änderungen verfügt, anstatt dass eine Zelle in der Zeile über nicht ausgewertete Änderungen verfügt. Dieses Beispiel ist Teil eines größeren Beispiels, das in [Exemplarische Vorgehensweise zur Verfügung steht: Implementieren des virtuellen Modus im DataGridView-Steuer](~/docs/framework/winforms/controls/implementing-virtual-mode-wf-datagridview-control.md)Element Windows Forms.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CPP/virtualmode.cpp#160)]
 [!code-csharp[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/CS/virtualmode.cs#160)]
 [!code-vb[System.Windows.Forms.DataGridView.VirtualMode#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.VirtualMode/VB/virtualmode.vb#160)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDividerDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDividerDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDividerDoubleClick As DataGridViewRowDividerDoubleClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowDividerDoubleClickEventHandler ^ RowDividerDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.RowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler " Usage="member this.RowDividerDoubleClick : System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer auf den Unterteiler zwischen zwei Zeilen doppelklickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis verwenden, um das automatische Größen Anpassungs Verhalten anzupassen, das auftritt, wenn ein Benutzer auf einen Zeilen unter Teiler doppelklickt.  
  
 Die Row <xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A> -Eigenschaft erweitert nicht den Bereich, in dem ein Benutzer Doppelklicken kann. Wenn die Höhe eines unter Teilers durch die Verwendung dieser Eigenschaft angehoben wurde, tritt dieses Ereignis auf, wenn der Benutzer auf die Grenze zwischen dem unter Teiler und der angrenzenden Spalte doppelklickt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowDividerDoubleClick> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#342](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#342)]
 [!code-vb[System.Windows.Forms.EventExamples#342](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#342)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowDividerHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowDividerHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDividerHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowDividerHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowDividerHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridViewRow.DividerHeight" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die unter Teilhöhe wird durch Festlegen der <xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A> -Eigenschaft geändert.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowDividerHeightChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#343](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#343)]
 [!code-vb[System.Windows.Forms.EventExamples#343](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#343)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowEnter As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowEnter;" />
      <MemberSignature Language="F#" Value="member this.RowEnter : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowEnter : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine Zeile den Eingabefokus erhält und bevor sie zur aktiven Zeile wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, <xref:System.Windows.Forms.DataGridView> wenn der anfänglich geladen wird, und wenn der Benutzer eine andere Zeile als die aktuelle Zeile auswählt.  
  
 Dieses Ereignis tritt auf, <xref:System.Windows.Forms.DataGridView.CurrentRow%2A> bevor die-Eigenschaft aktualisiert wird. Um den Index der neu eingegebenen Zeile abzurufen, verwenden Sie die <xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=nameWithType> -Eigenschaft im-Ereignishandler.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis behandelt wird, <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> um die-Eigenschaft der Zellen in der aktuellen Zeile zu ändern. In diesem Beispiel wird die Hintergrundfarbe im <xref:System.Windows.Forms.DataGridView.RowEnter> -Ereignis festgelegt und dann für <xref:System.Drawing.Color.Empty> das <xref:System.Windows.Forms.DataGridView.RowLeave> -Ereignis auf zurückgesetzt. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> einen `dataGridView1`mit dem Namen enthält, und stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowErrorTextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowErrorTextChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowErrorTextChanged;" />
      <MemberSignature Language="F#" Value="member this.RowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowErrorTextChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" />-Eigenschaft einer Zeile ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowErrorTextChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowErrorTextChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#345](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#345)]
 [!code-vb[System.Windows.Forms.EventExamples#345](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#345)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowErrorTextNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowErrorTextNeeded As DataGridViewRowErrorTextNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowErrorTextNeededEventHandler ^ RowErrorTextNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler " Usage="member this.RowErrorTextNeeded : System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Fehlertext einer Zeile benötigt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> -Ereignis tritt nur auf <xref:System.Windows.Forms.DataGridView.DataSource%2A> , wenn die <xref:System.Windows.Forms.DataGridView> -Eigenschaft des-Steuer <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> Elements fest `true`gelegt ist oder die-Eigenschaft ist. Die Behandlung <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> des-Ereignisses ist hilfreich, wenn Sie den Fehler für eine Zeile abhängig von Ihrem Status und den darin enthaltenen Werten bestimmen möchten.  
  
 Wenn Sie das <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> -Ereignis behandeln und den Fehlertext im-Handler angeben, wird ein Fehler Symbol im Zeilen Header angezeigt, es sei denn, `false`die <xref:System.Windows.Forms.DataGridView.ShowRowErrors%2A> -Eigenschaft ist auf festgelegt. Wenn der Benutzer den Mauszeiger über das Fehler Symbol bewegt, wird der Fehlertext in einer QuickInfo angezeigt.  
  
 Das <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> Ereignis tritt auch <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=nameWithType> auf, wenn der Wert der Eigenschaft abgerufen wird.  
  
 Sie können die- <xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.RowIndex%2A?displayProperty=nameWithType> Eigenschaft verwenden, um den Status einer Zeile oder die darin enthaltenen Werte zu ermitteln. verwenden Sie diese Informationen, um die <xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText%2A?displayProperty=nameWithType> Eigenschaft zu ändern oder zu ändern. Diese Eigenschaft wird mit dem Wert der Zeilen <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> Eigenschaft initialisiert, den der Ereignis Wert überschreibt.  
  
 Behandeln Sie <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> das-Ereignis bei der Arbeit mit großen Datenmengen, um die Leistungseinbußen beim Festlegen <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> des Zeilen Werts für mehrere Zeilen zu vermeiden. Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#346](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#346)]
 [!code-vb[System.Windows.Forms.EventExamples#346](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#346)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ShowRowErrors" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.ErrorText" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded(System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderCellChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderCellChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderCellChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowHeaderCellChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowHeaderCellChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer den Inhalt einer Zeilenheaderzelle ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowHeaderCellChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#349](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#349)]
 [!code-vb[System.Windows.Forms.EventExamples#349](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#349)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderMouseClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ RowHeaderMouseClick;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.RowHeaderMouseClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer innerhalb der Grenzen eines Zeilenheaders mit der Maus klickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Ereignisses veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#05)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeaderMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeaderMouseDoubleClick As DataGridViewCellMouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellMouseEventHandler ^ RowHeaderMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.RowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " Usage="member this.RowHeaderMouseDoubleClick : System.Windows.Forms.DataGridViewCellMouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellMouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf einen Zeilenheader doppelgeklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#348](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#348)]
 [!code-vb[System.Windows.Forms.EventExamples#348](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#348)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersBorderStyle As DataGridViewHeaderBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderBorderStyle RowHeadersBorderStyle { System::Windows::Forms::DataGridViewHeaderBorderStyle get(); void set(System::Windows::Forms::DataGridViewHeaderBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersBorderStyle : System.Windows.Forms.DataGridViewHeaderBorderStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rahmenart der Zeilenheaderzellen ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A> -Eigenschaft auf einen anderen Wert als <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single>festgelegt <xref:System.Windows.Forms.DataGridView.GridColor%2A> ist, muss die-Eigenschaft eine System Farbe sein.  
  
 Diese Eigenschaft kann nicht auf den <xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom> Wert festgelegt werden. dabei handelt es sich um einen schreibgeschützten Wert, der angibt, dass die Rahmenart durch die Verwendung <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> der-Eigenschaft angepasst wurde.  
  
> [!NOTE]
>  Wenn visuelle Stile für die Anwendung über die <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> -Methode aktiviert sind und die <xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A> - `true`Eigenschaft ist, werden die Zeilen Header mit dem aktuellen Design gezeichnet. In diesem Fall wird der Wert der <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A> -Eigenschaft für alle Zeilen Header außer der <xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A>ignoriert, auf die das Design nicht angewendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieser Eigenschaft veranschaulicht.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#030](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#030)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#030](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#030)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />-Wert.</exception>
        <exception cref="T:System.ArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist <see cref="F:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridViewHeaderBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <altmember cref="P:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersBorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersBorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersBorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersBorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersBorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersBorderStyleChanged : EventHandler " Usage="member this.RowHeadersBorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die <see cref="P:System.Windows.Forms.DataGridView.RowHeadersBorderStyle" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#275](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#275)]
 [!code-vb[System.Windows.Forms.EventExamples#275](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#275)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ RowHeadersDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das auf die Zeilenheaderzellen angewendete Standardformat ab oder legt es fest.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der das auf die Zeilenheaderzellen angewendete Standardformat darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der von <xref:System.Windows.Forms.DataGridViewCellStyle> dieser Eigenschaft zurückgegebene Standardwert verfügt über die folgenden anfänglichen Eigenschaftswerte.  
  
|DataGridViewCellStyle (Eigenschaft)|Standardwert|  
|------------------------------------|-------------------|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A>|Der Wert der <xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=nameWithType>-Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A>|Der Wert der <xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=nameWithType> -Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A>|Der Wert der <xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=nameWithType> -Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A>|Der Wert der <xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=nameWithType> -Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A>|Der Wert der <xref:System.Windows.Forms.DataGridView.Font%2A>-Eigenschaft.|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.Alignment%2A>|<xref:System.Windows.Forms.DataGridViewContentAlignment.MiddleLeft?displayProperty=nameWithType>|  
|<xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A>|<xref:System.Windows.Forms.DataGridViewTriState.True?displayProperty=nameWithType>|  
  
 Diese Werte überschreiben automatisch die durch die <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> -Eigenschaft festgelegten Werte. Wenn Sie erzwingen möchten, dass Zeilen <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> Header die Werte erben, müssen Sie die Werte <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> im-Objekt auf die für die <xref:System.Windows.Forms.DataGridViewCellStyle> -Klasse festgelegten Standardwerte festlegen.  
  
 Weitere Informationen zur Vererbung von Zellen Formaten finden Sie unter [Zellen Stile im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)Element.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> mit benutzerdefinierten Farben verwendet werden kann. Beachten Sie, <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A?displayProperty=nameWithType> dass die-Eigenschaft <xref:System.Drawing.Color.Empty?displayProperty=nameWithType> auf festgelegt ist, sodass der <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> Wert vom-Objekt geerbt wird.  
  
 Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersDefaultCellStyleChanged : EventHandler " Usage="member this.RowHeadersDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn eine Eigenschaft <xref:System.Windows.Forms.DataGridViewCellStyle> von, die <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> von der-Eigenschaft zurückgegeben wird, auf einen <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A> neuen Wert festgelegt wird oder <xref:System.Windows.Forms.DataGridViewCellStyle> wenn die-Eigenschaft auf einen neuen festgelegt wird, wobei sich mindestens ein Eigenschafts Wert von dem vorherigen Zellstilobjekt unterscheidet.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#276](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#276)]
 [!code-vb[System.Windows.Forms.EventExamples#276](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#276)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersVisible">
      <MemberSignature Language="C#" Value="public bool RowHeadersVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowHeadersVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RowHeadersVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersVisible : bool with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder gibt einen Wert an, der angibt, ob die Spalte angezeigt wird, die die Zeilenheader enthält.</summary>
        <value><see langword="true" /> , wenn die Spalte angezeigt wird, die die Zeilenheader enthält, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A> -Eigenschaft `false`ist, kann die <xref:System.Windows.Forms.DataGridViewBand.Resizable%2A> Größe einer Zeile, `true` deren-Eigenschaft auf festgelegt ist, in der Benutzeroberfläche immer noch geändert werden, indem Sie auf den Mauszeiger an einer beliebigen Stelle entlang des unteren Rands der Zeile klicken, um die Größe zu ändern.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>Eigenschaften <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, und <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> festgelegt werden. Außerdem wird im Codebeispiel veranschaulicht, wie die-Eigenschaft <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> die-Eigenschaft festgelegt werden. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular ein, <xref:System.Windows.Forms.DataGridView> das `dataGridView1`einen mit dem Namen enthält `SetUpDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der angegebene Wert, wenn diese Eigenschaft <see langword="false" /> ist und die <see cref="P:System.Windows.Forms.DataGridView.AutoSizeRowsMode" />-Eigenschaft auf <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders" /> oder <see cref="F:System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders" /> festgelegt ist.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidth">
      <MemberSignature Language="C#" Value="public int RowHeadersWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowHeadersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowHeadersWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidth : int with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Breite der Spalte in Pixel ab, die die Zeilenheader enthält, oder legt die Breite fest.</summary>
        <value>Die Breite der Spalte, die Zeilenheader enthält, in Pixel. Der Standard ist 43.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A> -Eigenschaft kann verwendet werden, um die Größe der Zeilen Header Spalte auf eine angegebene Breite zu ändern. Um die Breite dieser Spalte an den Inhalt der Zeilen Header Zellen anzupassen, verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> -Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A> -Eigenschaft in einem Zeilen Zeichnungs Szenario veranschaulicht. Im Beispiel wird der Wert dieser Eigenschaft verwendet, um die Begrenzungen zu berechnen, innerhalb derer ein benutzerdefinierter Hintergrund gezeichnet wird.  
  
 Dieser Code ist Teil eines größeren Beispiels, das in[Gewusst wie: Passen Sie die Darstellung von Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Beim Festlegen dieser Eigenschaft ist der angegebene Wert kleiner als die Mindestbreite von 4 Pixel oder größer als die maximale Breite von 32.768 Pixel.</exception>
        <altmember cref="Overload:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowHeadersWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowHeadersWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersWidthChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowHeadersWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthChanged : EventHandler " Usage="member this.RowHeadersWidthChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidth" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowHeadersWidthChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#277](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#277)]
 [!code-vb[System.Windows.Forms.EventExamples#277](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#277)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeadersWidthSizeMode As DataGridViewRowHeadersWidthSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode get(); void set(System::Windows::Forms::DataGridViewRowHeadersWidthSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthSizeMode : System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode with get, set" Usage="System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Breite der Zeilenheader überhaupt angepasst werden kann und ob sie ggf. vom Benutzer oder automatisch an den Inhalt der Header angepasst werden kann.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Wert, der den Modus angibt, in dem die Breite der Zeilenheader angepasst werden kann. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf einen automatischen Größen Anpassungsmodus festgelegt ist, kann die Breite der Zeilen Header nicht vom Benutzer angepasst werden.  
  
 Um die Höhe der Zeilen Header Programm gesteuert anzupassen, verwenden Sie die <xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A> -Methode, oder <xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A> legen Sie die-Eigenschaft fest.  
  
 Um den Größen Anpassungsmodus für die Spaltenheader festzulegen, <xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A> verwenden Sie die-Eigenschaft.  
  
 Weitere Informationen zur Header Größe finden Sie unter [Größen Anpassungsoptionen im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)Element.  
  
> [!NOTE]
>  Das <xref:System.Windows.Forms.DataGridView> -Steuerelement unterstützt die doppelte Pufferung nicht. Wenn <xref:System.Windows.Forms.Control.DoubleBuffered%2A> in einem abgeleiteten <xref:System.Windows.Forms.DataGridView> Steuerelement auf festgelegt ist, erhalten Benutzer keine visuellen Rückmeldung, wenn Sie die Größe von `true` Zeilen, Spalten oder Headern ändern oder Spalten neu anordnen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement verwendet wird, das hauptsächlich für die Anzeige vorgesehen ist In diesem Beispiel wird das visuelle Erscheinungsbild des Steuer Elements auf verschiedene Weise angepasst, und das Steuerelement ist für eingeschränkte Interaktivität konfiguriert. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode" />-Wert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeadersWidthSizeModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeadersWidthSizeModeChanged As DataGridViewAutoSizeModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewAutoSizeModeEventHandler ^ RowHeadersWidthSizeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " Usage="member this.RowHeadersWidthSizeModeChanged : System.Windows.Forms.DataGridViewAutoSizeModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAutoSizeModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#278](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#278)]
 [!code-vb[System.Windows.Forms.EventExamples#278](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#278)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewRow.Height" />-Eigenschaft einer Zeile geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Ereignisses veranschaulicht. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Passen Sie die Darstellung von Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#40)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightInfoNeeded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightInfoNeeded As DataGridViewRowHeightInfoNeededEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowHeightInfoNeededEventHandler ^ RowHeightInfoNeeded;" />
      <MemberSignature Language="F#" Value="member this.RowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler " Usage="member this.RowHeightInfoNeeded : System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn Informationen zur Zeilenhöhe angefordert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ist hilfreich, um benutzerdefinierte Zeilen Höhen nach einem Sortiervorgang beizubehalten. Dies ist erforderlich, da Sortiervorgänge normalerweise von der Datenquelle verarbeitet werden, die die Übereinstimmung zwischen Daten Zeilen und Zeilen im Steuerelement nicht nachverfolgt. Dieses Ereignis tritt nur auf, <xref:System.Windows.Forms.DataGridView.DataSource%2A> wenn die-Eigenschaft festgelegt wurde <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> oder wenn `true`die-Eigenschaft ist. Im letzteren Fall stellen Sie eigene Datenspeicher-und Sortierungs Vorgänge bereit. Behandeln Sie <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> das-Ereignis, um aktualisierte Höheninformationen zu speichern, wenn der Benutzer die Höhe einer Zeile ändert. Verwenden <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> Sie, um die gespeicherten Höheninformationen abzurufen, wenn das Steuerelement Sie benötigt.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#351](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#351)]
 [!code-vb[System.Windows.Forms.EventExamples#351](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#351)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowHeightInfoPushed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowHeightInfoPushed As DataGridViewRowHeightInfoPushedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowHeightInfoPushedEventHandler ^ RowHeightInfoPushed;" />
      <MemberSignature Language="F#" Value="member this.RowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler " Usage="member this.RowHeightInfoPushed : System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer die Höhe einer Zeile ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird ausgelöst, wenn <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> die-Eigenschaft auf `true` festgelegt <xref:System.Windows.Forms.DataGridView.DataSource%2A> ist oder die-Eigenschaft auf einen anderen `null`Wert als festgelegt ist. Dieses Ereignis wird verwendet, um Informationen zur Zeilenhöhe zu verfolgen und zu speichern, sodass Sie nach einem Sortiervorgang wieder hergestellt werden können. Behandeln Sie das <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> -Ereignis, um Höheninformationen wiederherzustellen. Beachten Sie, dass dieses Ereignis nur auftritt, wenn der Benutzer die Höhe einer Zeile ändert. Wenn Sie die Höhe einer Zeile Programm gesteuert ändern, müssen Sie die neuen Höheninformationen gleichzeitig speichern.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#352](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#352)]
 [!code-vb[System.Windows.Forms.EventExamples#352](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#352)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowLeave As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowLeave;" />
      <MemberSignature Language="F#" Value="member this.RowLeave : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowLeave : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Zeile den Eingabefokus verliert und nicht mehr die aktuelle Zeile ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie dieses Ereignis behandelt wird, <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> um die-Eigenschaft der Zellen in der aktuellen Zeile zu ändern. In diesem Beispiel wird die Hintergrundfarbe im <xref:System.Windows.Forms.DataGridView.RowEnter> -Ereignis festgelegt und dann für <xref:System.Drawing.Color.Empty> das <xref:System.Windows.Forms.DataGridView.RowLeave> -Ereignis auf zurückgesetzt. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> einen `dataGridView1` mit dem Namen enthält, und stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#200)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#200](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowMinimumHeightChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowMinimumHeightChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowMinimumHeightChanged As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowMinimumHeightChanged;" />
      <MemberSignature Language="F#" Value="member this.RowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowMinimumHeightChanged : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" />-Eigenschaft einer Zeile geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowMinimumHeightChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#354](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#354)]
 [!code-vb[System.Windows.Forms.EventExamples#354](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#354)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowPostPaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowPostPaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowPostPaint As DataGridViewRowPostPaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowPostPaintEventHandler ^ RowPostPaint;" />
      <MemberSignature Language="F#" Value="member this.RowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventHandler " Usage="member this.RowPostPaint : System.Windows.Forms.DataGridViewRowPostPaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowPostPaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem eine <see cref="T:System.Windows.Forms.DataGridViewRow" /> gezeichnet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis allein oder in Kombination mit dem <xref:System.Windows.Forms.DataGridView.RowPrePaint> -Ereignis behandeln, um die Darstellung der Zeilen im-Steuerelement anzupassen. Sie können ganze Zeilen selbst zeichnen oder bestimmte Teile der Zeilen zeichnen und die folgenden Methoden der <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs> -Klasse verwenden, um andere Teile zu zeichnen:  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.DrawFocus%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCells%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsBackground%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintCellsContent%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs.PaintHeader%2A>  
  
 Sie können auch die <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> -Klasse verwenden, um Standard Steuerelemente mit dem aktuellen Design zu zeichnen. Weitere Informationen finden Sie unter [Rendering von Steuerelementen mit visuellen Stilen](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md). Wenn Sie verwenden [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], haben Sie auch Zugriff auf eine umfangreiche Bibliothek von Standardbildern, die Sie mit dem <xref:System.Windows.Forms.DataGridView> -Steuerelement verwenden können.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Handler für das <xref:System.Windows.Forms.DataGridView.RowPostPaint> -Ereignis verwendet wird, um Textinhalte zu zeichnen, die die gesamte Zeile unterhalb der normalen Zellwerte überspannen. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Passen Sie die Darstellung von Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#30)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowPrePaint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowPrePaint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowPrePaint As DataGridViewRowPrePaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowPrePaintEventHandler ^ RowPrePaint;" />
      <MemberSignature Language="F#" Value="member this.RowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventHandler " Usage="member this.RowPrePaint : System.Windows.Forms.DataGridViewRowPrePaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowPrePaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, bevor eine <see cref="T:System.Windows.Forms.DataGridViewRow" /> gezeichnet wird</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis allein oder in Kombination mit dem <xref:System.Windows.Forms.DataGridView.RowPostPaint> -Ereignis behandeln, um die Darstellung der Zeilen im-Steuerelement anzupassen. Sie können ganze Zeilen selbst zeichnen oder bestimmte Teile der Zeilen zeichnen und die folgenden Methoden der <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs> -Klasse verwenden, um andere Teile zu zeichnen:  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.DrawFocus%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCells%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsBackground%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintCellsContent%2A>  
  
-   <xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs.PaintHeader%2A>  
  
 Sie können auch die <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> -Klasse verwenden, um Standard Steuerelemente mit dem aktuellen Design zu zeichnen. Weitere Informationen finden Sie unter [Rendering von Steuerelementen mit visuellen Stilen](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md). Wenn Sie verwenden [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], haben Sie auch Zugriff auf eine umfangreiche Bibliothek von Standardbildern, die Sie mit dem <xref:System.Windows.Forms.DataGridView> -Steuerelement verwenden können.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Handler für das <xref:System.Windows.Forms.DataGridView.RowPrePaint> -Ereignis verwendet wird, um einen Farbverlaufs Zeilen Hintergrund zu zeichnen, wenn die Zeile ausgewählt ist. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Passen Sie die Darstellung von Zeilen im Windows Forms DataGridView-](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md)Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataGridViewRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowCollection ^ Rows { System::Windows::Forms::DataGridViewRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Windows.Forms.DataGridViewRowCollection" Usage="System.Windows.Forms.DataGridView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung ab, die alle Zeilen im <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement enthält.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />, die alle Zeilen in der <see cref="T:System.Windows.Forms.DataGridView" /> enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Windows.Forms.DataGridView.Rows%2A> Auflistung verwenden, um ein <xref:System.Windows.Forms.DataGridView> Steuerelement manuell aufzufüllen, anstatt es an eine Datenquelle zu binden. Im folgenden Beispiel wird gezeigt, wie Zeilen manuell hinzugefügt und eingefügt werden. In diesem Beispiel wird davon ausgegangen, dass <xref:System.Windows.Forms.DataGridViewTextBoxColumn> Sie der- <xref:System.Windows.Forms.DataGridView.Columns%2A> Auflistung des-Steuer Elements vier Instanzen hinzugefügt haben.  
  
```vb  
Me.dataGridView1.Rows.Add("five", "six", "seven", "eight")  
Me.dataGridView1.Rows.Insert(0, "one", "two", "three", "four")  
```  
  
```csharp  
this.dataGridView1.Rows.Add("five", "six", "seven", "eight");this.dataGridView1.Rows.Insert(0, "one", "two", "three", "four");  
```  
  
 Ein ausführliches Beispiel, das ein ungebundenes <xref:System.Windows.Forms.DataGridView> Steuerelement Programm gesteuert auffüllt, finden Sie im Beispiel Abschnitt.  
  
 Zeilen enthalten neben Zellwerten auch Stil Informationen. Aus diesem Grund können Sie Zeilen basierend auf bereits formatierten Zeilen hinzufügen oder einfügen. Hierfür <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A>können Sie die Methoden, <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A>, <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A>und <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A> verwenden.  
  
 Sie können die <xref:System.Windows.Forms.DataGridView.Rows%2A> -Auflistung auch verwenden, um die Werte im-Steuerelement zu ändern oder um Zeilen zu entfernen. Sie können Werte ändern oder Zeilen entfernen, unabhängig davon, ob das Steuerelement an eine externe Datenquelle gebunden ist. Wenn eine Datenquelle vorhanden ist, werden die Änderungen direkt an der Datenquelle vorgenommen. Sie müssen die Datenquellen Updates jedoch möglicherweise trotzdem in eine Remote Datenbank übersetzen. Weitere Informationen finden Sie unter [Vorgehensweise: Binden Sie Daten an das Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-bind-data-to-the-windows-forms-datagridview-control.md)-Steuerelement.  
  
 Im folgenden Beispiel wird gezeigt, wie Zellwerte Programm gesteuert geändert werden.  
  
```vb  
' Modify the value in the first cell of the second row.  
Me.dataGridView1.Rows[1].Cells[0].Value = "new value"  
  
' The previous line is equivalent to the following line.  
Me.dataGridView1[0, 1].Value = "new value"  
```  
  
```csharp  
// Modify the value in the first cell of the second row.  
this.dataGridView1.Rows[1].Cells[0].Value = "new value";  
  
// The previous line is equivalent to the following line.  
this.dataGridView1[0, 1].Value = "new value";  
```  
  
 Zusätzlich zu den Standard Auflistungs Funktionen können Sie die <xref:System.Windows.Forms.DataGridView.Rows%2A> -Auflistung verwenden, um Informationen zu Zeilen abzurufen. Verwenden Sie <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowState%2A> die-Methode, um den Status einer bestimmten Zeile zu bestimmen. Verwenden Sie <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A> die <xref:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight%2A> -Methode und die-Methode, um die Anzahl der Zeilen oder die kombinierte Höhe von Zeilen in einem bestimmten Zustand zu bestimmen. Um den Index einer Zeile mit einem bestimmten Status abzurufen, verwenden Sie die <xref:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow%2A>Methoden <xref:System.Windows.Forms.DataGridViewRowCollection.GetLastRow%2A>, <xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%2A>, und <xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%2A> .  
  
 Im folgenden Beispiel wird gezeigt, wie Sie den Index der ersten ausgewählten Zeile abrufen und dann verwenden, um die Zeile Programm gesteuert zu löschen.  
  
```vb  
Dim rowToDelete As Int32 = Me.dataGridView1.Rows.GetFirstRow( _  
    DataGridViewElementStates.Selected)  
If rowToDelete > -1 Then  
    Me.dataGridView1.Rows.RemoveAt(rowToDelete)  
End If  
```  
  
```csharp  
Int32 rowToDelete = this.dataGridView1.Rows.GetFirstRow(  
    DataGridViewElementStates.Selected);  
if (rowToDelete > -1)  
{  
    this.dataGridView1.Rows.RemoveAt(rowToDelete);  
}  
```  
  
 Um die Leistung zu Verb <xref:System.Windows.Forms.DataGridViewRowCollection> Essern, kann <xref:System.Windows.Forms.DataGridView.Rows%2A> die von der-Eigenschaft zurückgegebene freigegebene und nicht freigegebene Zeilen enthalten. Freigegebene Zeilen teilen Arbeitsspeicher, um die Kosten eines großen Daten Satz Satzes zu verringern. Wenn Ihr Datensatz sehr groß ist, sollten Sie darauf achten, dass die Zeilen so weit wie möglich freigegeben bleiben, wenn <xref:System.Windows.Forms.DataGridView.Rows%2A> Sie auf die-Eigenschaft zugreifen.  
  
 Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine ungebundene <xref:System.Windows.Forms.DataGridView>erstellt wird, <xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A>wie die Eigenschaften <xref:System.Windows.Forms.DataGridView.ColumnCount%2A> , und festgelegt werden <xref:System.Windows.Forms.DataGridView.Rows%2A> und <xref:System.Windows.Forms.DataGridView.Columns%2A> wie die-Eigenschaft und die-Eigenschaft verwendet werden <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>. Außerdem wird veranschaulicht, wie eine Version der <xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A> -Methode und der- <xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A> Methode verwendet wird, um die Spaltenüberschriften und die Zeilen ordnungsgemäß zu verkleinern. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> eine `dataGridView1` benannte und eine Schalt `Button1`Fläche mit dem Namen enthält `InitializeDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse mit ihren Ereignis Handlern verbunden sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewAutoSize#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewAutoSize/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowsAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsAdded As DataGridViewRowsAddedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowsAddedEventHandler ^ RowsAdded;" />
      <MemberSignature Language="F#" Value="member this.RowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventHandler " Usage="member this.RowsAdded : System.Windows.Forms.DataGridViewRowsAddedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowsAddedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der <see cref="T:System.Windows.Forms.DataGridView" /> eine neue Zeile hinzugefügt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zeilen im-Steuerelement werden nicht automatisch sortiert, wenn neue Zeilen hinzugefügt werden. Um neue Zeilen an der richtigen Position zu sortieren, müssen <xref:System.Windows.Forms.DataGridView.Sort%2A> Sie die- <xref:System.Windows.Forms.DataGridView.RowsAdded> Methode in einem-Ereignishandler aufzurufen.  
  
 Wenn der Benutzer eine neue Zeile mit der Zeile für neue Datensätze hinzufügt, <xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A?displayProperty=nameWithType> ist der Wert im Handler für dieses Ereignis gleich dem Index für den neuen Speicherort der Zeile für neue Datensätze. dieser Wert ist größer als die soeben hinzugefügte Zeile. Wenn Sie Zeilen jedoch Programm gesteuert hinzufügen, entspricht <xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A> der Wert dem Index der ersten hinzugefügten Zeile.  
  
 Im virtuellen Modus tritt dieses Ereignis vor dem <xref:System.Windows.Forms.DataGridView.CellValuePushed> -Ereignis auf und kann verwendet werden, um neue Datensätze im Datenspeicher zu erstellen, die Sie dann <xref:System.Windows.Forms.DataGridView.CellValuePushed> im-Ereignishandler auffüllen können.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das <xref:System.Windows.Forms.DataGridView.RowsAdded> -Ereignis behandelt, um die Anzahl der Zeilen in einem <xref:System.Windows.Forms.DataGridView>virtuellen zu erhöhen. Die Anzahl der Zeilen wird im <xref:System.Windows.Forms.DataGridView.CellValueNeeded> Handler verwendet, damit weiß, wann eine leere Zelle oder eine initialisierte Zelle für eine neue Zeile angezeigt werden soll. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> im Referenz Thema verfügbar ist.  
  
 [!code-cpp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CPP/virtual.cpp#20)]
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsAddedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsAddedEventArgs" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellValuePushed" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowsAdded(System.Windows.Forms.DataGridViewRowsAddedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowsDefaultCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property RowsDefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ RowsDefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowsDefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Standardformat ab, das für die Zeilenzellen der <see cref="T:System.Windows.Forms.DataGridView" /> angewendet wird, oder legt es fest.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der auf die Zeilenzellen der <see cref="T:System.Windows.Forms.DataGridView" /> angewendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement zeigt seine Zellen mithilfe der Stile an, <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> die von der Cell-Eigenschaft angegeben werden, die Stile <xref:System.Windows.Forms.DataGridViewCellStyle>von anderen Eigenschaften des Typs erbt. Bei Zellen in allen Zeilen, ausgenommen von Header Zellen, überschreiben die durch <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A> die-Eigenschaft angegebenen Stile die durch <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> die <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> -Eigenschaft und die-Eigenschaft angegebenen Stile und werden durch die durch <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A>dieangegebenenStileüberschrieben.- <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=nameWithType>,- <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> und-Eigenschaften.  
  
 Weitere Informationen finden Sie unter [Zellen Stile im Windows Forms DataGridView-Steuer](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)Element.  
  
 Beim Abrufen dieser Eigenschaft wird eine <xref:System.Windows.Forms.DataGridViewCellStyle> mit Standardwerten erstellt, wenn nicht bereits auf die Eigenschaft zugegriffen wurde. Dies kann zu Leistungseinbußen führen, wenn diese Eigenschaft für viele Zeilen erhalten wird. Verwenden Sie nach Möglichkeit eine einzelne <xref:System.Windows.Forms.DataGridViewCellStyle> , um diese Eigenschaft für mehrere Zeilen festzulegen. Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für das Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie diese Eigenschaft verwendet wird, um einen Ledger- <xref:System.Windows.Forms.DataGridView> Effekt in einem-Steuerelement zu erstellen. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Forms.DataGridViewCellStyle> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="RowsDefaultCellStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RowsDefaultCellStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RowsDefaultCellStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsDefaultCellStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RowsDefaultCellStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.RowsDefaultCellStyleChanged : EventHandler " Usage="member this.RowsDefaultCellStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn eine Eigenschaft <xref:System.Windows.Forms.DataGridViewCellStyle> von, die <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A> von der-Eigenschaft zurückgegeben wird, auf einen <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A> neuen Wert festgelegt wird oder <xref:System.Windows.Forms.DataGridViewCellStyle> wenn die-Eigenschaft auf einen neuen festgelegt wird, wobei sich mindestens ein Eigenschafts Wert von dem vorherigen Zellstilobjekt unterscheidet.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#279](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#279)]
 [!code-vb[System.Windows.Forms.EventExamples#279](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#279)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md">Zellstile im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="RowsRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowsRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowsRemoved As DataGridViewRowsRemovedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowsRemovedEventHandler ^ RowsRemoved;" />
      <MemberSignature Language="F#" Value="member this.RowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventHandler " Usage="member this.RowsRemoved : System.Windows.Forms.DataGridViewRowsRemovedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowsRemovedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine oder mehrere Zeilen aus der <see cref="T:System.Windows.Forms.DataGridView" /> gelöscht werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Zeilen aus einem <xref:System.Windows.Forms.DataGridView> Steuerelement gelöscht werden, werden die Indexnummern der nachfolgenden Zeilen verringert, um kompensiert zu werden.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie dieses Ereignis verwenden, um die Werte in einer Saldo- <xref:System.Windows.Forms.DataGridView>Spalte eines zu aktualisieren. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.SelectionChanged> im Ereignis verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowsRemovedEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnRowsRemoved(System.Windows.Forms.DataGridViewRowsRemovedEventArgs)" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowStateChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowStateChanged As DataGridViewRowStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowStateChangedEventHandler ^ RowStateChanged;" />
      <MemberSignature Language="F#" Value="member this.RowStateChanged : System.Windows.Forms.DataGridViewRowStateChangedEventHandler " Usage="member this.RowStateChanged : System.Windows.Forms.DataGridViewRowStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Zustand einer Zeile ändert, beispielsweise beim Verlieren oder Übernehmen des Eingabefokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowStateChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowStateChanged> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#359](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#359)]
 [!code-vb[System.Windows.Forms.EventExamples#359](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#359)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow RowTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow RowTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.RowTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property RowTemplate As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ RowTemplate { System::Windows::Forms::DataGridViewRow ^ get(); void set(System::Windows::Forms::DataGridViewRow ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowTemplate : System.Windows.Forms.DataGridViewRow with get, set" Usage="System.Windows.Forms.DataGridView.RowTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeile ab, die die Vorlage für alle Zeilen im Steuerelement darstellt, oder legt sie fest.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.DataGridViewRow" />, die die Zeilenvorlage darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manchmal möchten Sie die Darstellung von <xref:System.Windows.Forms.DataGridView> Zeilen besser steuern als in den verschiedenen <xref:System.Windows.Forms.DataGridView> Zellen Stileigenschaften. Mit <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> der-Eigenschaft können Sie ein <xref:System.Windows.Forms.DataGridViewRow> -Objekt erstellen und initialisieren, das von allen Zeilen als Vorlage verwendet wird, einschließlich der <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> Zeile `true`für neue Datensätze, wenn ist.  
  
 Dies ist hilfreich, wenn Sie Standardwerte für Eigenschaften wie die Zeilenhöhe festlegen. Beispielsweise können Sie die Standardzeilen Höhe erhöhen, um zusätzlichen Platz unterhalb des normalen Zell Inhalts zum Anzeigen von Inhalten bereitzustellen, die sich über mehrere Spalten erstrecken.  
  
 Das Festlegen der Zeilen Vorlage ist erforderlich, wenn externe Daten mithilfe von benutzerdefinierten Typen angezeigt <xref:System.Windows.Forms.DataGridViewRow> werden, die von der-Klasse abgeleitet werden. Mit ungebundenen <xref:System.Windows.Forms.DataGridView> Steuerelementen können Sie die <xref:System.Windows.Forms.DataGridView.Rows%2A> Auflistung Programm gesteuert mit Instanzen des benutzerdefinierten Zeilen Typs auffüllen. Beim Anzeigen externer Daten werden die Zeilen jedoch automatisch generiert, basieren jedoch auf der Zeilen Vorlage, die Sie auf eine Instanz des benutzerdefinierten Zeilen Typs festlegen können.  
  
 Wenn diese Eigenschaft beim ersten Abrufen ihres Werts nicht festgelegt wurde, wird ein neuer <xref:System.Windows.Forms.DataGridViewRow> erstellt und zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der Zeilen Vorlage eine anfängliche Zeilenhöhe und eine minimale Zeilenhöhe angegeben werden.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/CPP/datagridviewrowtemplate.cpp#1)]
 [!code-csharp[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/CS/datagridviewrowtemplate.cs#1)]
 [!code-vb[System.Windows.Forms.DataGridView.RowTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowTemplate/VB/datagridviewrowtemplate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Für die beim Festlegen dieser Eigenschaft angegebene Zeile wurde die <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />-Eigenschaft festgelegt.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowUnshared">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler RowUnshared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler RowUnshared" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowUnshared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUnshared As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ RowUnshared;" />
      <MemberSignature Language="F#" Value="member this.RowUnshared : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.RowUnshared : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Zustand einer Zeile von "freigegeben" in "nicht freigegeben" ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können dieses Ereignis während der Entwicklung und beim Testen verwenden, um Code zu identifizieren, der bewirkt, dass Zeilen von einem freigegebenen in einen nicht freigegebenen Zustand geändert werden. Dies ist nützlich, wenn das Steuerelement skaliert wird, um große Datenmengen anzuzeigen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.RowUnshared> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.RowUnshared> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#360](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#360)]
 [!code-vb[System.Windows.Forms.EventExamples#360](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#360)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowValidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellEventHandler RowValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellEventHandler RowValidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowValidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowValidated As DataGridViewCellEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellEventHandler ^ RowValidated;" />
      <MemberSignature Language="F#" Value="member this.RowValidated : System.Windows.Forms.DataGridViewCellEventHandler " Usage="member this.RowValidated : System.Windows.Forms.DataGridViewCellEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, nachdem die Validierung durch eine Zeile abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ist analog zum <xref:System.Windows.Forms.Control.Validated> -Ereignis. Verwenden Sie dieses Ereignis, um die Nachbearbeitung für eine Zeile von Werten auszuführen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel verwendet dieses Ereignis, um alle Fehler Anmerkungen zu löschen, die möglicherweise nach der Überprüfung der Zeile zurückgelassen wurden.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.RowOperations#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/CS/rowoperations.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.RowOperations#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/VB/rowoperations.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="RowValidating">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.RowValidating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowValidating As DataGridViewCellCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewCellCancelEventHandler ^ RowValidating;" />
      <MemberSignature Language="F#" Value="member this.RowValidating : System.Windows.Forms.DataGridViewCellCancelEventHandler " Usage="member this.RowValidating : System.Windows.Forms.DataGridViewCellCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Zeile eine Validierung ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ist analog zum <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType> -Ereignis. Verwenden Sie dieses Ereignis, um die Validierung für alle Werte einer Zeile auszuführen. Wenn die Zeile die Überprüfung nicht besteht, legen <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType> Sie die `true`-Eigenschaft auf fest. Das Abbrechen dieses Ereignisses verhindert, <xref:System.Windows.Forms.DataGridView.RowValidated>dass <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>die- <xref:System.Windows.Forms.Control.Validated?displayProperty=nameWithType> ,-und-Ereignisse auftreten, und verhindert außerdem, dass der Benutzer die ungültige Zeile verlässt und verhindert, dass die Zeile in einer externen Datenquelle im Daten gebundenen Modus gespeichert wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird <xref:System.Windows.Forms.DataGridView.RowValidating> verwendet, um zu überprüfen, ob gültige Track-und releasedates eingegeben werden.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.RowOperations#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/CS/rowoperations.cs#5)]
 [!code-vb[System.Windows.Forms.DataGridView.RowOperations#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.RowOperations/VB/rowoperations.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Scroll">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ScrollEventHandler Scroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ScrollEventHandler Scroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.Scroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Scroll As ScrollEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ScrollEventHandler ^ Scroll;" />
      <MemberSignature Language="F#" Value="member this.Scroll : System.Windows.Forms.ScrollEventHandler " Usage="member this.Scroll : System.Windows.Forms.ScrollEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer einen Bildlauf im Steuerelement durchführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.Scroll> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.Scroll> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#363](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#363)]
 [!code-vb[System.Windows.Forms.EventExamples#363](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#363)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ScrollBars ScrollBars { System::Windows::Forms::ScrollBars get(); void set(System::Windows::Forms::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.ScrollBars with get, set" Usage="System.Windows.Forms.DataGridView.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der für das <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement anzuzeigenden Schiebeleisten ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ScrollBars" />-Werte. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.ScrollBars.Both" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unabhängig vom Wert dieser Eigenschaft werden Scrollleisten nur angezeigt, wenn Sie benötigt werden. Verwenden Sie diese Eigenschaft, um zu verhindern, dass Scrollleisten angezeigt werden. Dies ist beispielsweise hilfreich, wenn Sie eine alternative Benutzeroberfläche zum Scrollen bereitstellen möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.ScrollBars" />-Wert.</exception>
        <exception cref="T:System.InvalidOperationException">Der Wert dieser Eigenschaft kann nicht festgelegt werden, da <see cref="T:System.Windows.Forms.DataGridView" /> aufgrund einer Änderung in der Zelle, für die kein Commit ausgeführt oder die nicht abgebrochen werden kann, nicht scrollen kann.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="dataGridView.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wählt alle Zellen in der <see cref="T:System.Windows.Forms.DataGridView" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn sich <xref:System.Windows.Forms.DataGridView> der im Spaltenauswahl Modus befindet und diese Methode aufgerufen wird, wird die- <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> Eigenschaft jeder Spalte auf `true`festgelegt, und die <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> -Eigenschaft der einzelnen `false`Zeilen wird auf festgelegt.  
  
 Wenn sich das im <xref:System.Windows.Forms.DataGridView> Zeilenauswahl Modus befindet und diese Methode aufgerufen wird, wird die- <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> Eigenschaft jeder Zeile auf `true`festgelegt, und die- <xref:System.Windows.Forms.DataGridViewBand.Selected%2A> Eigenschaft der einzelnen Spalten wird `false`auf festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung <xref:System.Windows.Forms.DataGridView.SelectAll%2A> der-Methode veranschaulicht. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Formular ein, das <xref:System.Windows.Forms.DataGridView> ein `dataGridView1` mit dem <xref:System.Windows.Forms.Button> Namen `selectAllButton`und ein mit dem Namen enthält, und stellen Sie sicher, dass alle Ereignisse mit ihren Ereignis Handlern verknüpft sind.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#180](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#180)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#180](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#180)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedCells">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedCells As DataGridViewSelectedCellCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedCellCollection ^ SelectedCells { System::Windows::Forms::DataGridViewSelectedCellCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedCells : System.Windows.Forms.DataGridViewSelectedCellCollection" Usage="System.Windows.Forms.DataGridView.SelectedCells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedCellCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der ausgewählten Zellen ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.DataGridViewSelectedCellCollection" />, die die ausgewählten Zellen darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> -Eigenschaft wird immer unabhängig <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> vom-Eigenschafts Wert aufgefüllt.  
  
 Diese Eigenschaft enthält eine schreibgeschützte Momentaufnahme der Auswahl, wenn auf Sie verwiesen wird. Wenn Sie eine Kopie dieser Sammlung aufbewahren, kann Sie sich vom tatsächlichen, nachfolgenden <xref:System.Windows.Forms.DataGridView> Zustand unterscheiden, in dem der Benutzer die Auswahl möglicherweise geändert hat. Daher sollten Sie nicht mit einer Kopie der Sammlung arbeiten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.SelectedCells%2A> -Auflistung verwendet wird, um die Summe der Werte in der Auswahl zu ermitteln. Im Beispiel wird diese Auflistung durchlaufen, und die gültigen Werte werden der Summe hinzugefügt, die in einer Bezeichnung angezeigt wird. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.SelectionChanged> im Ereignis verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedColumns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedColumns As DataGridViewSelectedColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedColumnCollection ^ SelectedColumns { System::Windows::Forms::DataGridViewSelectedColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedColumns : System.Windows.Forms.DataGridViewSelectedColumnCollection" Usage="System.Windows.Forms.DataGridView.SelectedColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der ausgewählten Spalten ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.DataGridViewSelectedColumnCollection" />, die die ausgewählten Spalten darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> -Eigenschaft muss auf <xref:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect?displayProperty=nameWithType> oder <xref:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect?displayProperty=nameWithType> festgelegt werden <xref:System.Windows.Forms.DataGridView.SelectedColumns%2A> , damit die-Eigenschaft mit den ausgewählten Spalten aufgefüllt wird.  
  
 Diese Eigenschaft enthält eine schreibgeschützte Momentaufnahme der Auswahl, wenn auf Sie verwiesen wird. Wenn Sie eine Kopie dieser Sammlung aufbewahren, kann Sie sich vom tatsächlichen, nachfolgenden <xref:System.Windows.Forms.DataGridView> Zustand unterscheiden, in dem der Benutzer die Auswahl möglicherweise geändert hat. Daher sollten Sie nicht mit einer Kopie der Sammlung arbeiten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.SelectedColumns%2A> -Eigenschaft verwendet wird, um die ausgewählte Spalte in einer programmgesteuerten Sortierung zu erhalten. In diesem Beispiel wird diese Eigenschaft in der <xref:System.Windows.Forms.DataGridView.Sort%2A> -Methode verwendet, um die Sortierreihenfolge zu bestimmen.  
  
 [!code-csharp[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DatagridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedRows">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedRows As DataGridViewSelectedRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectedRowCollection ^ SelectedRows { System::Windows::Forms::DataGridViewSelectedRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedRows : System.Windows.Forms.DataGridViewSelectedRowCollection" Usage="System.Windows.Forms.DataGridView.SelectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectedRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der ausgewählten Zeilen ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.DataGridViewSelectedRowCollection" />, die die ausgewählten Zeilen enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> -Eigenschaft muss auf <xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect> oder <xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect> festgelegt werden <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> , damit die-Eigenschaft mit den ausgewählten Zeilen aufgefüllt wird.  
  
 Diese Eigenschaft enthält eine schreibgeschützte Momentaufnahme der Auswahl, wenn auf Sie verwiesen wird. Wenn Sie eine Kopie dieser Sammlung aufbewahren, kann Sie sich vom tatsächlichen, nachfolgenden <xref:System.Windows.Forms.DataGridView> Zustand unterscheiden, in dem der Benutzer die Auswahl möglicherweise geändert hat. Daher sollten Sie nicht mit einer Kopie der Sammlung arbeiten.  
  
 Um eine Zeile Programm gesteuert auszuwählen, legen Sie <xref:System.Windows.Forms.DataGridViewRow.Selected%2A> die zugehörige-Eigenschaft auf `true`fest.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> -Eigenschaft <xref:System.Windows.Forms.DataGridView.UserDeletingRow> im-Ereignis veranschaulicht. Wenn die erste Zeile in diesem Beispiel in der <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> Auflistung enthalten ist, wird der Löschvorgang abgebrochen. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.SelectionChanged> im Ereignis verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Selected" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich die aktuelle Auswahl ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn Zellen ausgewählt oder die Auswahl abgebrochen wird, ob Programm gesteuert oder durch Benutzeraktion. Dieses Ereignis ist beispielsweise nützlich, wenn Sie die Summe der aktuell ausgewählten Zellen anzeigen möchten.  
  
 Wenn Sie den Wert der <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> -Eigenschaft ändern, tritt das <xref:System.Windows.Forms.DataGridView.SelectionChanged> -Ereignis vor <xref:System.Windows.Forms.DataGridView.CurrentCellChanged> dem-Ereignis auf. Jeder <xref:System.Windows.Forms.DataGridView.SelectionChanged> Ereignishandler, der <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> zu diesem Zeitpunkt auf die Eigenschaft zugreift, erhält seinen vorherigen Wert.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Ereignisses veranschaulicht. Im Beispiel zeigt das Formular die Summe der Werte in den ausgewählten Zellen an und aktualisiert die Summe, wenn sich die Auswahl ändert.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#00](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#00)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#00](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#00)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.CurrentCell" />
        <altmember cref="E:System.Windows.Forms.DataGridView.SelectionChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CurrentCellChanged" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As DataGridViewSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewSelectionMode SelectionMode { System::Windows::Forms::DataGridViewSelectionMode get(); void set(System::Windows::Forms::DataGridViewSelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Forms.DataGridViewSelectionMode with get, set" Usage="System.Windows.Forms.DataGridView.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, wie die Zellen der <see cref="T:System.Windows.Forms.DataGridView" /> ausgewählt werden können, oder legt den Wert fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" />-Werte. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie den Wert <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> der-Eigenschaft ändern, wird die aktuelle Auswahl gelöscht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A>Eigenschaften <xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A>, <xref:System.Windows.Forms.DataGridView.GridColor%2A>, <xref:System.Windows.Forms.DataGridView.BackgroundColor%2A>, <xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A>, <xref:System.Windows.Forms.DataGridView.SelectionMode%2A>, <xref:System.Windows.Forms.DataGridView.ColumnCount%2A>, und <xref:System.Windows.Forms.DataGridView.MultiSelect%2A> festgelegt werden. Außerdem wird im Codebeispiel veranschaulicht, wie die-Eigenschaft <xref:System.Windows.Forms.DataGridViewColumn.Name%2A?displayProperty=nameWithType> und <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType> die-Eigenschaft festgelegt werden. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular ein, <xref:System.Windows.Forms.DataGridView> das `dataGridView1`einen mit dem Namen enthält `SetUpDataGridView` , und dann die-Methode aus dem <xref:System.Windows.Forms.Form.Load> Konstruktor oder Ereignishandler des Formulars. Stellen Sie sicher, dass alle Ereignisse ihren Ereignis Handlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der beim Festlegen dieser Eigenschaft angegebene Wert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewSelectionMode" />-Wert.</exception>
        <exception cref="T:System.InvalidOperationException">Der angegebene Wert beim Festlegen dieser Eigenschaft ist <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect" /> oder <see cref="F:System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect" />, und die <see cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />-Eigenschaft mindestens einer Spalte ist auf <see cref="F:System.Windows.Forms.DataGridViewColumnSortMode.Automatic" /> festgelegt.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="dataGridView.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">Der neue <see cref="P:System.Windows.Forms.Control.Left" />-Eigenschaftswert des Steuerelements.</param>
        <param name="y">Der neue <see cref="P:System.Windows.Forms.Control.Top" />-Eigenschaftswert des Steuerelements.</param>
        <param name="width">Der neue <see cref="P:System.Windows.Forms.Control.Width" />-Eigenschaftswert des Steuerelements.</param>
        <param name="height">Der neue <see cref="P:System.Windows.Forms.Control.Height" />-Eigenschaftswert des Steuerelements.</param>
        <param name="specified">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.BoundsSpecified" />-Werte.</param>
        <summary>Dieser Member überschreibt <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Mindestens einer der Werte für Breite bzw. Höhe überschreitet den Maximalwert von 8.388.607.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentCellAddressCore">
      <MemberSignature Language="C#" Value="protected virtual bool SetCurrentCellAddressCore (int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SetCurrentCellAddressCore(int32 columnIndex, int32 rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetCurrentCellAddressCore(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetCurrentCellAddressCore (columnIndex As Integer, rowIndex As Integer, setAnchorCellAddress As Boolean, validateCurrentCell As Boolean, throughMouseClick As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SetCurrentCellAddressCore(int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);" />
      <MemberSignature Language="F#" Value="abstract member SetCurrentCellAddressCore : int * int * bool * bool * bool -&gt; bool&#xA;override this.SetCurrentCellAddressCore : int * int * bool * bool * bool -&gt; bool" Usage="dataGridView.SetCurrentCellAddressCore (columnIndex, rowIndex, setAnchorCellAddress, validateCurrentCell, throughMouseClick)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="setAnchorCellAddress" Type="System.Boolean" />
        <Parameter Name="validateCurrentCell" Type="System.Boolean" />
        <Parameter Name="throughMouseClick" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index der Spalte, die die Zelle enthält.</param>
        <param name="rowIndex">Der Index der Zeile, die die Zelle enthält.</param>
        <param name="setAnchorCellAddress"><see langword="true" /> , um durch Drücken der UMSCHALTTASTE die neue aktive Zelle zur Ankerzelle für die folgende Auswahl mehrerer Zellen zu machen, andernfalls <see langword="false" />.</param>
        <param name="validateCurrentCell"><see langword="true" />, um den Wert in der alten aktiven Zelle zu überprüfen und die Änderung abzubrechen, wenn Fehler beim Validieren auftreten, andernfalls <see langword="false" />.</param>
        <param name="throughMouseClick"><see langword="true" />, wenn die aktive Zelle mit einem Mausklick festgelegt wird, andernfalls <see langword="false" />.</param>
        <summary>Legt die derzeit aktive Zelle fest.</summary>
        <returns><see langword="true" />, wenn die aktive Zelle erfolgreich festgelegt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement verwendet diese Methode immer dann, wenn die aktuelle Zelle geändert wird. Diese Methode ändert die aktuelle Zelle, ohne die Auswahl zu ändern, und optional, ohne die vorherige Zelle zu überprüfen oder die Auswahl Anker Zelle zu ändern. Die Anker Zelle ist die erste Zelle eines Blocks aus mehreren Zellen, die der Benutzer auswählen kann, indem er die UMSCHALTTASTE gedrückt hält und auf die letzte Zelle des Blocks klickt.  
  
 Wenn `rowIndex` <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> `null`und `columnIndex` beide-1 sind, gibt die-Eigenschaft zurück.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist kleiner als 0 oder größer als die Anzahl der Spalten im Steuerelement minus 1, und <paramref name="rowIndex" /> ist nicht -1.  
  
- oder - 
 <paramref name="rowIndex" /> ist kleiner als 0 oder größer als die Anzahl der Zeilen im Steuerelement minus 1, und <paramref name="columnIndex" /> ist nicht -1.</exception>
        <exception cref="T:System.InvalidOperationException">Die angegebene Zelle verfügt über den <see cref="P:System.Windows.Forms.DataGridViewCell.Visible" />-Eigenschaftswert <see langword="false" />.  
  
- oder - 
Diese Methode wurde aus einem anderen Grund als dem aufgerufen, dass die zugrunde liegende Datenquelle zurückgesetzt wird, und diese Methode wird derzeit von einem anderen Thread ausgeführt.</exception>
        <exception cref="T:System.InvalidCastException">Es wurde versucht, die neue aktuelle Zelle in den Bearbeitungsmodus zu versetzen, ihre <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" />-Eigenschaft gibt jedoch keine Klasse an, die von <see cref="T:System.Windows.Forms.Control" /> abgeleitet wird und <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" /> implementiert.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedCellCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedCellCore (int columnIndex, int rowIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedCellCore(int32 columnIndex, int32 rowIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedCellCore(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedCellCore (columnIndex As Integer, rowIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedCellCore(int columnIndex, int rowIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedCellCore : int * int * bool -&gt; unit&#xA;override this.SetSelectedCellCore : int * int * bool -&gt; unit" Usage="dataGridView.SetSelectedCellCore (columnIndex, rowIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index der Spalte, die die Zelle enthält.</param>
        <param name="rowIndex">Der Index der Zeile, die die Zelle enthält.</param>
        <param name="selected"><see langword="true" />, um die Zelle auszuwählen, <see langword="false" />, um die Auswahl der Zelle aufzuheben.</param>
        <summary>Ändert den Auswahlzustand der Zelle mit den angegebenen Zeilen- und Spaltenindizes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement verwendet diese Methode immer dann, wenn der Auswahl Zustand einer Zelle geändert wird. Der Auswahl Zustand ändert sich ohne Berücksichtigung des aktuellen <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> Eigenschafts Werts und ohne Änderung des <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> Eigenschafts Werts. Dies ist nützlich, wenn Sie Ihre eigenen Auswahl Modi implementieren möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist kleiner als 0 oder größer als die Anzahl der Spalten im Steuerelement minus 1.  
  
- oder - 
 <paramref name="rowIndex" /> ist kleiner als 0 oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedColumnCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedColumnCore (int columnIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedColumnCore(int32 columnIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedColumnCore(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedColumnCore (columnIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedColumnCore(int columnIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedColumnCore : int * bool -&gt; unit&#xA;override this.SetSelectedColumnCore : int * bool -&gt; unit" Usage="dataGridView.SetSelectedColumnCore (columnIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Index der Spalte.</param>
        <param name="selected"><see langword="true" />, um die Spalte auszuwählen, <see langword="false" />, um die Auswahl der Spalte aufzuheben.</param>
        <summary>Ändert den Auswahlzustand der Spalte mit dem angegebenen Index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement verwendet diese Methode immer dann, wenn der Auswahl Zustand einer Spalte geändert wird. Der Auswahl Zustand ändert sich ohne Berücksichtigung des aktuellen <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> Eigenschafts Werts und ohne Änderung des <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> Eigenschafts Werts. Dies ist nützlich, wenn Sie Ihre eigenen Auswahl Modi implementieren möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist kleiner als 0 oder größer als die Anzahl der Spalten im Steuerelement minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedRowCore">
      <MemberSignature Language="C#" Value="protected virtual void SetSelectedRowCore (int rowIndex, bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetSelectedRowCore(int32 rowIndex, bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.SetSelectedRowCore(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetSelectedRowCore (rowIndex As Integer, selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetSelectedRowCore(int rowIndex, bool selected);" />
      <MemberSignature Language="F#" Value="abstract member SetSelectedRowCore : int * bool -&gt; unit&#xA;override this.SetSelectedRowCore : int * bool -&gt; unit" Usage="dataGridView.SetSelectedRowCore (rowIndex, selected)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile.</param>
        <param name="selected"><see langword="true" />, um die Zeile auszuwählen, <see langword="false" />, um die Auswahl der Zeile aufzuheben.</param>
        <summary>Ändert den Auswahlzustand der Zeile mit dem angegebenen Index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.Forms.DataGridView> -Steuerelement verwendet diese Methode immer dann, wenn der Auswahl Zustand einer Zeile geändert wird. Der Auswahl Zustand ändert sich ohne Berücksichtigung des aktuellen <xref:System.Windows.Forms.DataGridView.SelectionMode%2A> Eigenschafts Werts und ohne Änderung des <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> Eigenschafts Werts. Dies ist nützlich, wenn Sie Ihre eigenen Auswahl Modi implementieren möchten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> ist kleiner als 0 oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCellErrors">
      <MemberSignature Language="C#" Value="public bool ShowCellErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowCellErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCellErrors : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowCellErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Zellfehler angezeigt werden sollen, oder legt diesen Wert fest.</summary>
        <value><see langword="true" /> , wenn ein rotes Symbol in einer Zelle angezeigt wird, bei deren Validierung Fehler auftreten, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCellToolTips">
      <MemberSignature Language="C#" Value="public bool ShowCellToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowCellToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCellToolTips : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowCellToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob QuickInfos angezeigt werden, wenn sich der Mauszeiger über einer Zelle befindet und die Maus nicht bewegt wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn QuickInfos aktiviert sind, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Wert dieser Eigenschaft ist `true` und sich der Mauszeiger über einer Zelle befindet, zeigt die Zelle eine QuickInfo an, wenn eine der folgenden Bedingungen erfüllt ist:  
  
-   Der Wert <xref:System.Windows.Forms.DataGridView.DataSource%2A> der-Eigenschaft ist nicht `null` , <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> oder der Wert der-Eigenschaft `true`ist, und ein Handler für <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> das-Ereignis <xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=nameWithType> legt die-Eigenschaft auf einen <xref:System.String.Empty?displayProperty=nameWithType>anderen Wert als fest.  
  
-   Die <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> -Eigenschaft der Zelle hat einen anderen Wert als <xref:System.String.Empty?displayProperty=nameWithType>. Das Festlegen dieser Eigenschaft hat keine Auswirkungen, wenn ein <xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded> -Ereignishandler vorhanden ist, da durch das erhalten des Werts der-Eigenschaft das-Ereignis automatisch ausgelöst und der im-Ereignishandler angegebene QuickInfo-Text zurückgegeben wird.  
  
-   Der Zellwert wird in der Zellen Anzeige abgeschnitten. Wenn der Wert des Zellen <xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A> Eigenschafts Werts ist <xref:System.String.Empty?displayProperty=nameWithType>, wird der vollständige Wert des abgeschnittene Zellwerts in der QuickInfo angezeigt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellToolTipTextNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ToolTipText" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowEditingIcon">
      <MemberSignature Language="C#" Value="public bool ShowEditingIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowEditingIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowEditingIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowEditingIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowEditingIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowEditingIcon : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowEditingIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Bearbeitungssymbol im Zeilenheader der bearbeiteten Zelle angezeigt wird.</summary>
        <value><see langword="true" /> , wenn das Bearbeitungssymbol angezeigt wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Zeilen Header zeigt ein Bearbeitungs Symbol an, das wie ein Stift aussieht, wenn sich die aktive Zelle im Bearbeitungsmodus befindet und der Benutzer Änderungen an der Zelle vorgenommen hat. Das Bearbeitungs Symbol wird mithilfe der <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> -Eigenschaft der Zeilen Header Zelle gefärbt. Das Symbol wird nicht gerendert, wenn nicht genügend Speicherplatz vorhanden ist, um es vollständig anzuzeigen. Wenn für die Zeilen Header Zelle <xref:System.Windows.Forms.DataGridViewCell.Value%2A> z. b. die-Eigenschaft festgelegt ist, wird das Symbol entfernt, wenn nicht genügend Platz für den Text und das Symbol vorhanden ist.  
  
 Die Anzeige des Bearbeitungs Symbols wird durch den Wert der <xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A> -Eigenschaft im virtuellen Modus gesteuert. Andernfalls wird Sie von der <xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A> -Eigenschaft gesteuert.  
  
 Die Standard Glyphe ist nicht öffentlich verfügbar. Zum Anpassen des Symbols können Sie eine benutzerdefinierte <xref:System.Windows.Forms.DataGridViewRowHeaderCell> Klasse erstellen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowRowErrors">
      <MemberSignature Language="C#" Value="public bool ShowRowErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRowErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.ShowRowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRowErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRowErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRowErrors : bool with get, set" Usage="System.Windows.Forms.DataGridView.ShowRowErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob Zeilenheader Fehlersymbole für jede Zeile anzeigen, die einen Dateneingabefehler enthalten.</summary>
        <value><see langword="true" /> , wenn die <see cref="T:System.Windows.Forms.DataGridViewRow" /> angibt, dass ein Fehler vorliegt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> -Eigenschaft gibt an, ob in einer der Zellen in einer Zeile ein Fehler vorliegt. Wenn <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> auf einen anderen Wert als <xref:System.String.Empty>festgelegt ist, wird ein Fehler Symbol (![ErrorProvider]-Symbol(~/add/media/vberrorprovidericon.gif "ErrorProvider-Symbol")) im Zeilen Header angezeigt.  
  
 Die Standardbreite des Zeilen Headers umfasst ausreichend Platz, um das Fehler Symbol anzuzeigen, unabhängig davon, ob das Symbol angezeigt wird. Wenn die Zeilen Header Größe so angepasst wird, dass nicht genügend Speicherplatz vorhanden ist, um das Symbol vollständig anzuzeigen, wird das Symbol nicht gerendert.  
  
 Da Zeilen Header sowohl Text als auch Symbole anzeigen können, wird der Header Inhalt wie folgt nach Priorität angezeigt:  
  
1.  Der in der Zeilen Header Zelle angezeigte Text.  
  
2.  Das Bearbeitungs Symbol.  
  
3.  Das Fehler Symbol.  
  
 Wenn z. b. die Zeilenbreite verringert wird, verschwindet das Fehler Symbol zuerst, dann wird das Standard Symbol und dann Text angezeigt.  
  
 Fortgeschrittene Benutzer können das Fehler Symbol anpassen, indem Sie eine <xref:System.Windows.Forms.DataGridViewRowHeaderCell> Benutzer <xref:System.Windows.Forms.DataGridViewCell> definierte-Klasse oder eine-Klasse entwickeln.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sortiert den Inhalt des <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="dataGridView.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Eine Implementierung des <see cref="T:System.Collections.IComparer" />, der die benutzerdefinierte Sortieroperation ausführt.</param>
        <summary>Sortiert den Inhalt des <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements mit einer Implementierung der <see cref="T:System.Collections.IComparer" />-Schnittstelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ermöglicht die erweiterte Anpassung der Sortierfunktion <xref:System.Windows.Forms.DataGridView> der-Klasse. Um einen hochgradig angepassten Sortiervorgang zu implementieren, können Sie einen Ereignishandler für das <xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick> -Ereignis schreiben und diese Methode mit einer Instanz einer Klasse aufrufen, die die <xref:System.Collections.IComparer?displayProperty=nameWithType> -Schnittstelle als Parameter implementiert. In diesem Fall legen Sie die-Eigenschaft in <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=nameWithType> der Regel <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType> auf fest, um die automatische Sortierung zu deaktivieren und Platz für ein Sortier Symbol zu belassen. Wenn Sie nach Spalten sortieren, die auf den programmgesteuerten Sortiermodus festgelegt sind, müssen Sie das Sortier <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType> Symbol Selbstanzeigen, indem Sie die-Eigenschaft festlegen.  
  
 Diese Methode funktioniert nur, wenn <xref:System.Windows.Forms.DataGridView.DataSource%2A> die-Eigenschaft nicht festgelegt ist. Wenn Sie das <xref:System.Windows.Forms.DataGridView> Steuerelement an eine externe Datenquelle binden, müssen Sie die von dieser Datenquelle bereitgestellten Sortiervorgänge verwenden. Wenn Sie Ihre eigene Datenquelle durch Implementieren des virtuellen Modus bereitstellen, müssen Sie auch die Sortiervorgänge selbst durchführen.  
  
 Beim Aufrufen dieser Methode wird die <xref:System.Windows.Forms.DataGridView.CurrentCell%2A> -Eigenschaft `null`automatisch auf festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.Sort%2A> -Methoden Überladung in einem Szenario mit mehreren Spalten verwendet wird. In diesem Beispiel wird die <xref:System.Collections.IComparer> -Schnittstelle in der `RowComparer` -Klasse implementiert.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewIComparerSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewIComparerSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewIComparerSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewIComparerSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="comparer" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Für <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> ist <see langword="true" /> festgelegt.  
  
- oder - 
 <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> ist nicht <see langword="null" />.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Windows.Forms.DataGridViewColumn dataGridViewColumn, System.ComponentModel.ListSortDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Windows.Forms.DataGridViewColumn dataGridViewColumn, valuetype System.ComponentModel.ListSortDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.Sort(System.Windows.Forms.DataGridViewColumn,System.ComponentModel.ListSortDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Windows::Forms::DataGridViewColumn ^ dataGridViewColumn, System::ComponentModel::ListSortDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Windows.Forms.DataGridViewColumn * System.ComponentModel.ListSortDirection -&gt; unit&#xA;override this.Sort : System.Windows.Forms.DataGridViewColumn * System.ComponentModel.ListSortDirection -&gt; unit" Usage="dataGridView.Sort (dataGridViewColumn, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewColumn" Type="System.Windows.Forms.DataGridViewColumn" />
        <Parameter Name="direction" Type="System.ComponentModel.ListSortDirection" />
      </Parameters>
      <Docs>
        <param name="dataGridViewColumn">Die Spalte, nach der der Inhalt der <see cref="T:System.Windows.Forms.DataGridView" /> sortiert werden soll.</param>
        <param name="direction">Einer der <see cref="T:System.ComponentModel.ListSortDirection" />-Werte.</param>
        <summary>Sortiert den Inhalt des <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements in aufsteigender oder absteigender Reihenfolge auf Grundlage des Inhalts der angegebenen Spalte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sortiert den Inhalt <xref:System.Windows.Forms.DataGridView> der durch Vergleichen der Werte in der angegebenen Spalte. Standardmäßig verwendet der Sortiervorgang die <xref:System.Collections.Comparer.Compare%2A> -Methode, um Paare von Zellen in der Spalte mithilfe der <xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType> -Eigenschaft zu vergleichen.  
  
 Für Spalten, deren <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> -Eigenschaft auf <xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType>festgelegt <xref:System.Windows.Forms.DataGridView.SortedColumn%2A> ist <xref:System.Windows.Forms.DataGridView.SortOrder%2A> , werden die-Eigenschaft und die-Eigenschaft automatisch festgelegt, und das entsprechende Sortier Symbol wird angezeigt. Für Spalten, deren <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> -Eigenschaft auf <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>festgelegt ist, müssen Sie das Sortier Symbol selbst über <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType> die-Eigenschaft anzeigen.  
  
 Sie können den von dieser Methode verwendeten Sortiervorgang anpassen, indem Sie <xref:System.Windows.Forms.DataGridView.SortCompare> das-Ereignis behandeln. Dieses Ereignis tritt nur auf, <xref:System.Windows.Forms.DataGridView.DataSource%2A> wenn die-Eigenschaft nicht festgelegt wurde.  
  
 Wenn die <xref:System.Windows.Forms.DataGridView.DataSource%2A> -Eigenschaft festgelegt wurde, funktioniert diese Methode nur für Daten gebundene Spalten. Für Daten gebundene Spalten wurde die <xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=nameWithType> -Eigenschaft festgelegt. Dies bewirkt, <xref:System.Windows.Forms.DataGridViewColumn.IsDataBound%2A?displayProperty=nameWithType> dass die- `true`Eigenschaft zurückgibt.  
  
 Wenn das <xref:System.Windows.Forms.DataGridView> Steuerelement sowohl gebundene als auch ungebundene Spalten enthält, müssen Sie den virtuellen Modus implementieren, um die Werte der ungebundenen Spalten beizubehalten, wenn das Steuerelement nach einer gebundenen Spalte sortiert wird. Legen Sie hierzu die <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> -Eigenschaft auf fest, `true` und behandeln Sie das <xref:System.Windows.Forms.DataGridView.CellValueNeeded> -Ereignis. Wenn die Spalte bearbeitet werden kann, sollten Sie auch das <xref:System.Windows.Forms.DataGridView.CellValuePushed> -Ereignis behandeln. Weitere Informationen zum virtuellen Modus finden [Sie unter Gewusst wie: Implementieren Sie den virtuellen Modus im Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)-Steuerelement. Das Sortieren nach ungebundenen Spalten, wenn das Steuerelement Daten gebunden ist, wird nicht unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Windows.Forms.DataGridView.Sort%2A> in einer programmgesteuerten Sortierung verwendet wird.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die angegebene Spalte ist nicht Teil dieses <see cref="T:System.Windows.Forms.DataGridView" />.  
  
- oder - 
Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft wurde festgelegt, und die <see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" />-Eigenschaft der angegebenen Spalte gibt <see langword="false" /> zurück.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="dataGridViewColumn" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> -Eigenschaft wurde auf <see langword="true" /> festgelegt, und die <see cref="P:System.Windows.Forms.DataGridViewColumn.IsDataBound" /> -Eigenschaft der angegebenen Spalte gibt <see langword="false" />zurück.  
  
- oder - 
Das von der <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft angegebene Objekt implementiert nicht die <see cref="T:System.ComponentModel.IBindingList" />-Schnittstelle.  
  
- oder - 
Das von der <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft angegebene Objekt besitzt den <see cref="P:System.ComponentModel.IBindingList.SupportsSorting" />-Eigenschaftswert von <see langword="false" />.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SortCompare">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.SortCompare" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SortCompare As DataGridViewSortCompareEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewSortCompareEventHandler ^ SortCompare;" />
      <MemberSignature Language="F#" Value="member this.SortCompare : System.Windows.Forms.DataGridViewSortCompareEventHandler " Usage="member this.SortCompare : System.Windows.Forms.DataGridViewSortCompareEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewSortCompareEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die <see cref="T:System.Windows.Forms.DataGridView" /> zwei Zellwerte vergleicht, um einen Sortiervorgang auszuführen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt nur auf, <xref:System.Windows.Forms.DataGridView.DataSource%2A> wenn die-Eigenschaft nicht fest <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> gelegt ist und `false`der-Eigenschafts Wert ist.  
  
 Dieses Ereignis vergleicht Paare von Zellen in der Spalte, die sortiert wird. Sie tritt nur auf <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> <xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic>, wenn der Benutzer auf den Header einer Spalte mit dem-Eigenschafts Wert klickt oder wenn Sie <xref:System.Windows.Forms.DataGridView.Sort%28System.Windows.Forms.DataGridViewColumn%2CSystem.ComponentModel.ListSortDirection%29> die-Überladung aufrufen. Wenn dieses Ereignis für eine Spalte mit <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> dem-Eigenschafts <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic>Wert auftritt, müssen Sie das Sortier Symbol selbst über die <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType> -Eigenschaft anzeigen.  
  
 Mit diesem Ereignis können Sie Zeilen mithilfe der Zellwerte in einer Spalte oder in mehreren Spalten sortieren. Verwenden Sie <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A> die <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A> Eigenschaften und, um Zellwerte in der in der <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A> -Eigenschaft angegebenen Spalte zu vergleichen. Verwenden Sie <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A> die <xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A> -Eigenschaft und die-Eigenschaft, um über <xref:System.Windows.Forms.DataGridView.Rows%2A> die-Auflistung auf Werte in anderen Spalten  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.SortCompare> in einer Sortierung mit mehreren Spalten verwendet wird. Dieses Beispiel ist Teil eines größeren Beispiels, das unter [Vorgehensweise: Passen Sie die Sortierung im Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-customize-sorting-in-the-windows-forms-datagridview-control.md)-Steuerelement an.  
  
 [!code-csharp[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridView.SortCompare#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.SortCompare/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewSortCompareEventHandler" />
        <altmember cref="T:System.Windows.Forms.DataGridViewSortCompareEventArgs" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnSortCompare(System.Windows.Forms.DataGridViewSortCompareEventArgs)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.SortMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/92fb5c14-afab-4cf5-a97e-924fd9cb99f5">Gewusst wie: Anpassen der Sortierung im DataGridView-Steuerelement in Windows Forms</related>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Sorted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Sorted;" />
      <MemberSignature Language="F#" Value="member this.Sorted : EventHandler " Usage="member this.Sorted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement einen Sortiervorgang abschließt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt nicht auf, wenn <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> die-Eigenschaft auf `true` festgelegt ist und das-Steuerelement nach einer ungebundenen Spalte sortiert wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie sichergestellt wird, dass die aktuelle Zelle nach dem Sortieren sichtbar ist. Dieser Code funktioniert nur mit einem ungebundenen <xref:System.Windows.Forms.DataGridView> Steuerelement. Wenn ein <xref:System.Windows.Forms.DataGridView> Steuerelement an eine externe Datenquelle gebunden ist, wird die aktuelle Zelle beim Sortieren nicht automatisch persistent gespeichert.  
  
 Fügen Sie den folgenden Code in ein Formular ein, das einen mit dem <xref:System.Windows.Forms.DataGridView> Namen `dataGridView1`enthält, um dieses Beispiel auszuführen. In C#müssen Sie auch das <xref:System.Windows.Forms.DataGridView.Sorted> -Ereignis mit dem-Ereignishandler verbinden.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#150)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#150)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SortedColumn">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewColumn SortedColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewColumn SortedColumn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SortedColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortedColumn As DataGridViewColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewColumn ^ SortedColumn { System::Windows::Forms::DataGridViewColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortedColumn : System.Windows.Forms.DataGridViewColumn" Usage="System.Windows.Forms.DataGridView.SortedColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Spalte ab, nach der der <see cref="T:System.Windows.Forms.DataGridView" />-Inhalt gerade sortiert wird.</summary>
        <value>Die <see cref="T:System.Windows.Forms.DataGridViewColumn" />, nach der der <see cref="T:System.Windows.Forms.DataGridView" />-Inhalt gerade sortiert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Windows.Forms.DataGridView> nicht sortiert ist, gibt diese Eigenschaft zurück `null`.  
  
 Wenn die Spalte <xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic?displayProperty=nameWithType>, die durch diese Eigenschaft angegeben <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> ist, den-Eigenschafts Wert hat, wird ein Sortier Symbol basierend <xref:System.Windows.Forms.DataGridView.SortOrder%2A> auf dem Wert der-Eigenschaft angezeigt.  
  
 Wenn die-Spalte einen <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic?displayProperty=nameWithType>Wert von aufweist, müssen Sie das Sortier Symbol selbst über <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=nameWithType> die-Eigenschaft anzeigen.  
  
> [!NOTE]
>  Der Wert dieser Eigenschaft ist nicht sinnvoll, wenn Sie das Steuerelement mithilfe der benutzerdefinierten Sortierung sortieren. Weitere Informationen zur benutzerdefinierten Sortierung finden Sie unter <xref:System.Windows.Forms.DataGridView.Sort%28System.Collections.IComparer%29> der-Methode <xref:System.Windows.Forms.DataGridView.SortCompare> und dem-Ereignis.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.SortedColumn%2A> -Eigenschaft in einer programmgesteuerten Sortierung verwendet wird.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="SortOrder">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder SortOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder SortOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.SortOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortOrder As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder SortOrder { System::Windows::Forms::SortOrder get(); };" />
      <MemberSignature Language="F#" Value="member this.SortOrder : System.Windows.Forms.SortOrder" Usage="System.Windows.Forms.DataGridView.SortOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Elemente im <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement in aufsteigender oder absteigender Reihenfolge oder nicht sortiert sind.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.SortOrder" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird verwendet, um zu bestimmen, welches Sortier Symbol angezeigt wird, wenn die <xref:System.Windows.Forms.DataGridView.SortedColumn%2A> durch die- <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> Eigenschaft angegebene Spalte <xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic>einen-Eigenschafts Wert von aufweist. Wenn die-Spalte einen <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> -Eigenschafts <xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic>Wert von aufweist, müssen Sie das Sortier Symbol selbst durch die <xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A> -Eigenschaft anzeigen und ausblenden. Wenn die Spalte den- <xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A> Eigenschafts <xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable>Wert hat, können Sie das Sortier Symbol anzeigen, aber der Speicherplatz ist nicht für die Spalte reserviert, wenn die Größe der Spalte automatisch geändert wird.  
  
> [!NOTE]
>  Der Wert dieser Eigenschaft ist nicht sinnvoll, wenn Sie das Steuerelement mithilfe der benutzerdefinierten Sortierung sortieren. Weitere Informationen zur benutzerdefinierten Sortierung finden Sie unter <xref:System.Windows.Forms.DataGridView.Sort%2A> der-Methode <xref:System.Windows.Forms.DataGridView.SortCompare> und dem-Ereignis.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridView.SortOrder%2A> -Eigenschaft in einer programmgesteuerten Sortierung verwendet wird.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewProgrammaticSort#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewProgrammaticSort/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="StandardTab">
      <MemberSignature Language="C#" Value="public bool StandardTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StandardTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.StandardTab" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StandardTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StandardTab : bool with get, set" Usage="System.Windows.Forms.DataGridView.StandardTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob durch Drücken von TAB der Fokus nicht zur nächsten Zelle im Steuerelement, sondern zum nächsten Steuerelement in der Aktivierreihenfolge verschoben wird.</summary>
        <value><see langword="true" />, wenn durch Drücken von TAB der Fokus auf das nächste Steuerelement in der Aktivierreihenfolge verschoben wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `false` festgelegt wird, kann der Fokus mit der Tab-Taste durch das Raster der Zellen verschoben werden. In der folgenden Tabelle wird beschrieben, wie sich der Zellen Fokus ändert, wenn die angegebenen Tastenkombinationen gedrückt werden.  
  
|Tastenkombination|Ergebnis|  
|---------------------|------------|  
|TAB|Wenn die <xref:System.Windows.Forms.DataGridView.StandardTab%2A> -Eigenschaft `false`ist, wird der Fokus auf die nächste Zelle in der Zeile verschoben. Wenn sich der Fokus in der letzten Zelle in der Zeile befindet, wird der Fokus auf die erste Zelle in der nächsten Zeile verschoben. Wenn sich der Fokus in der letzten Zelle in der <xref:System.Windows.Forms.DataGridView>befindet, wechselt der Fokus zum nächsten Steuerelement in der Aktivier Reihenfolge.|  
|UMSCHALT+TAB|Wenn <xref:System.Windows.Forms.DataGridView.StandardTab%2A> ist `false`, wird der Fokus auf die vorherige Zelle in der Zeile verschoben. Wenn sich der Fokus in der ersten Zelle in der Zeile befindet, wird der Fokus auf die letzte Zelle in der vorherigen Zeile verschoben. Wenn sich der Fokus in der ersten Zelle in der <xref:System.Windows.Forms.DataGridView>befindet, wechselt der Fokus zum vorherigen Steuerelement in der Aktivier Reihenfolge.|  
|STRG+TAB|Der Fokus wechselt zum nächsten Steuerelement in der Aktivier Reihenfolge.|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.StyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StyleChanged;" />
      <MemberSignature Language="F#" Value="member this.StyleChanged : EventHandler " Usage="member this.StyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich das Format des Steuerelements ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ist für dieses Steuerelement nicht relevant.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Sie kann nur verwendet werden, wenn <xref:System.Windows.Forms.DataGridView> die-Instanz in eine <xref:System.ComponentModel.ISupportInitialize> -Instanz umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Diese Methode wurde bereits für dieses Steuerelement aufgerufen.</exception>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Sie kann nur verwendet werden, wenn <xref:System.Windows.Forms.DataGridView> die-Instanz in eine <xref:System.ComponentModel.ISupportInitialize> -Instanz umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISupportInitialize" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.DataGridView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den dem Steuerelement zugeordneten Text ab oder legt diesen fest.</summary>
        <value>Der dem Steuerelement zugeordnete Text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für das genannte Steuerelement nicht relevant.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.DataGridView.Text" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl die <xref:System.Windows.Forms.DataGridView.Text%2A> -Eigenschaft für dieses Steuerelement nicht sinnvoll ist, kann der Wert geändert werden, wodurch dieses Ereignis ausgelöst wird.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="TopLeftHeaderCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.TopLeftHeaderCell" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLeftHeaderCell As DataGridViewHeaderCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewHeaderCell ^ TopLeftHeaderCell { System::Windows::Forms::DataGridViewHeaderCell ^ get(); void set(System::Windows::Forms::DataGridViewHeaderCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopLeftHeaderCell : System.Windows.Forms.DataGridViewHeaderCell with get, set" Usage="System.Windows.Forms.DataGridView.TopLeftHeaderCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewHeaderCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Headerzelle in der linken oberen Ecke des <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements ab oder legt sie fest.</summary>
        <value>Die <see cref="T:System.Windows.Forms.DataGridViewHeaderCell" /> in der linken oberen Ecke der <see cref="T:System.Windows.Forms.DataGridView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie diese Eigenschaft festlegen, können Sie einen Wert für die Zelle festlegen, ein Kontextmenü zuordnen oder andere Vorgänge ausführen, die Sie für einen <xref:System.Windows.Forms.DataGridViewHeaderCell>ausführen können.  
  
 In Anwendungen, die für die Verwendung mit rechts-nach-links-Sprachen entwickelt wurden, befindet sich die durch diese Eigenschaft dargestellte Zelle in der Regel in der oberen rechten Ecke.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird diese Eigenschaft verwendet, um einen Wert in der oberen linken Ecke eines <xref:System.Windows.Forms.DataGridView> -Steuer Elements anzuzeigen. Dieser Wert bezeichnet eine untergeordnete Tabelle in einem Master/Detail-Szenario. Dieses Beispiel ist Teil eines größeren Beispiels, das im Thema <xref:System.Windows.Forms.DataGridViewComboBoxColumn> Übersicht über die Klasse verfügbar ist.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#80)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#80)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#80)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCellErrorText">
      <MemberSignature Language="C#" Value="public void UpdateCellErrorText (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCellErrorText(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateCellErrorText(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCellErrorText (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCellErrorText(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateCellErrorText : int * int -&gt; unit" Usage="dataGridView.UpdateCellErrorText (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der Spaltenindex der zu aktualisierenden Zelle oder -1, um eine Zeilenheaderzelle anzugeben.</param>
        <param name="rowIndex">Der Zeilenindex der zu aktualisierenden Zelle oder -1, um eine Spaltenheaderzelle anzugeben.</param>
        <summary>Zwingt die Zelle an der angegebenen Position, ihren Fehlertext zu aktualisieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, wenn Sie Zellen Fehlertext selbst verwalten, <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> indem Sie das-Ereignis behandeln. Ruft diese Methode auf, wenn Sie den gespeicherten Fehlertext für die angegebene Zelle ändern. Dadurch wird die Zelle ungültig, wodurch das <xref:System.Windows.Forms.DataGridView> Steuerelement gezwungen wird, den aktualisierten Fehlertext über den <xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded> Ereignishandler abzurufen.  
  
 Obwohl Sie diese Methode zum Aktualisieren von Fehlern für Header Zellen verwenden können, werden in Spaltenheader Zellen keine Fehler Symbole angezeigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist kleiner als -1 oder größer als die Anzahl der Spalten im Steuerelement minus 1.  
  
- oder - 
 <paramref name="rowIndex" /> ist kleiner als -1 oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCellValue">
      <MemberSignature Language="C#" Value="public void UpdateCellValue (int columnIndex, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCellValue(int32 columnIndex, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateCellValue(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCellValue (columnIndex As Integer, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCellValue(int columnIndex, int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateCellValue : int * int -&gt; unit" Usage="dataGridView.UpdateCellValue (columnIndex, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Spaltenindex der Zelle mit dem neuen Wert.</param>
        <param name="rowIndex">Der nullbasierte Zeilenindex der Zelle mit dem neuen Wert.</param>
        <summary>Erzwingt die Aktualisierung der Anzeige der Zelle an der angegebenen Position des Steuerelements auf Grundlage ihres neuen Werts, wobei alle derzeit aktiven Modi zur Größenänderung angewendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, wenn Sie Zellwerte im virtuellen Modus beibehalten und einen Wert im benutzerdefinierten Daten Cache außerhalb eines <xref:System.Windows.Forms.DataGridView.CellValuePushed> -Ereignis Handlers aktualisieren.  
  
 Diese Methode macht die Zelle ungültig und erzwingt, dass das Steuerelement den neuen Wert <xref:System.Windows.Forms.DataGridView.CellValueNeeded> über den Ereignishandler abruft und alle automatischen Größen Anpassungs Modi anwendet, die wirksam sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Spalten im Steuerelement minus 1.  
  
- oder - 
 <paramref name="rowIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateRowErrorText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwingt eine oder mehrere Zeilen, ihren Fehlertext zu aktualisieren.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateRowErrorText">
      <MemberSignature Language="C#" Value="public void UpdateRowErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowErrorText (rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowErrorText : int -&gt; unit" Usage="dataGridView.UpdateRowErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der nullbasierte Index der zu aktualisierenden Zeile.</param>
        <summary>Zwingt die Zeile im angegebenen Zeilenindex, ihren Fehlertext zu aktualisieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie Zeilen Fehlertext selbst verwalten, indem <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> Sie das-Ereignis behandeln. Ruft diese Methode auf, wenn Sie den gespeicherten Fehlertext für die angegebene Zeile ändern. Dadurch wird das <xref:System.Windows.Forms.DataGridView> Steuerelement gezwungen, den aktualisierten Text über den <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> -Ereignishandler abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen im Steuerelement minus 1.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateRowErrorText">
      <MemberSignature Language="C#" Value="public void UpdateRowErrorText (int rowIndexStart, int rowIndexEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowErrorText(int32 rowIndexStart, int32 rowIndexEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowErrorText(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowErrorText (rowIndexStart As Integer, rowIndexEnd As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowErrorText(int rowIndexStart, int rowIndexEnd);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowErrorText : int * int -&gt; unit" Usage="dataGridView.UpdateRowErrorText (rowIndexStart, rowIndexEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndexStart" Type="System.Int32" />
        <Parameter Name="rowIndexEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndexStart">Der nullbasierte Index der ersten Zeile in der zu aktualisierenden Zeilengruppe.</param>
        <param name="rowIndexEnd">Der nullbasierte Index der letzten Zeile in der zu aktualisierenden Zeilengruppe.</param>
        <summary>Erzwingt die Aktualisierung des Fehlertexts für die Zeilen im angegebenen Bereich.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie Zeilen Fehlertext selbst verwalten, indem <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> Sie das-Ereignis behandeln. Ruft diese Methode auf, wenn Sie den gespeicherten Fehlertext für die angegebenen Zeilen ändern. Dadurch wird das <xref:System.Windows.Forms.DataGridView> Steuerelement gezwungen, den aktualisierten Text über den <xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded> -Ereignishandler abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndexStart" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen im Steuerelement minus 1.  
  
- oder - 
 <paramref name="rowIndexEnd" /> liegt nicht im gültigen Bereich von 0 bis zur Anzahl der Zeilen im Steuerelement minus 1.  
  
- oder - 
 <paramref name="rowIndexEnd" /> ist kleiner als <paramref name="rowIndexStart" />.</exception>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateRowHeightInfo">
      <MemberSignature Language="C#" Value="public void UpdateRowHeightInfo (int rowIndex, bool updateToEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateRowHeightInfo(int32 rowIndex, bool updateToEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.UpdateRowHeightInfo(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateRowHeightInfo (rowIndex As Integer, updateToEnd As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateRowHeightInfo(int rowIndex, bool updateToEnd);" />
      <MemberSignature Language="F#" Value="member this.UpdateRowHeightInfo : int * bool -&gt; unit" Usage="dataGridView.UpdateRowHeightInfo (rowIndex, updateToEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="updateToEnd" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der nullbasierte Index der ersten zu aktualisierenden Zeile.</param>
        <param name="updateToEnd"><see langword="true" />, um die angegebene Zeile und alle folgenden Zeilen zu aktualisieren.</param>
        <summary>Zwingt die angegebenen Zeilen, ihre Höheninformationen zu aktualisieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nützlich, wenn Sie Zeilen Höhen selbst mithilfe von Handlern für <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> das <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> -Ereignis und das-Ereignis beibehalten. Wenn Sie die Höhe der gespeicherten Zeile außerhalb eines <xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed> -Ereignis Handlers ändern, wird diese Methode aufgerufen. Dadurch wird das <xref:System.Windows.Forms.DataGridView> Steuerelement gezwungen, die aktualisierten Höheninformationen über den <xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded> -Ereignishandler abzurufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rowIndex" /> ist kleiner als 0, und <paramref name="updateToEnd" /> ist <see langword="true" />.  
  
- oder - 
 <paramref name="rowIndex" /> ist kleiner als -1, und <paramref name="updateToEnd" /> ist <see langword="false" />.  
  
- oder - 
 <paramref name="rowIndex" /> ist größer als der höchste Zeilenindex in der <see cref="P:System.Windows.Forms.DataGridView.Rows" />-Auflistung.</exception>
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowHeightInfoPushed" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UserAddedRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserAddedRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserAddedRow As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ UserAddedRow;" />
      <MemberSignature Language="F#" Value="member this.UserAddedRow : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.UserAddedRow : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das Hinzufügen einer Zeile zum <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement beendet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Windows.Forms.DataGridView.UserAddedRow> -Ereignis verwendet wird, um eine Bezeichnung zu aktualisieren, die die <xref:System.Windows.Forms.DataGridView>Gesamtzahl der Einträge in einer anzeigt. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.SelectionChanged> im Ereignis verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UserDeletedRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserDeletedRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserDeletedRow As DataGridViewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowEventHandler ^ UserDeletedRow;" />
      <MemberSignature Language="F#" Value="member this.UserDeletedRow : System.Windows.Forms.DataGridViewRowEventHandler " Usage="member this.UserDeletedRow : System.Windows.Forms.DataGridViewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das Löschen einer Zeile im <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement beendet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.UserDeletedRow> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.UserDeletedRow> Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#368](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#368)]
 [!code-vb[System.Windows.Forms.EventExamples#368](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#368)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UserDeletingRow">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridView.UserDeletingRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UserDeletingRow As DataGridViewRowCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DataGridViewRowCancelEventHandler ^ UserDeletingRow;" />
      <MemberSignature Language="F#" Value="member this.UserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventHandler " Usage="member this.UserDeletingRow : System.Windows.Forms.DataGridViewRowCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine Zeile im <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement gelöscht wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis kann abgebrochen werden, um zu verhindern, dass ein Zeilen Löschvorgang abgeschlossen wird.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Windows.Forms.DataGridView.UserDeletingRow> -Ereignis verwendet wird, um das Löschen von <xref:System.Windows.Forms.DataGridView> Zeilen aus der abzubrechen, wenn die Anfangs Saldo-Zeile in der Auswahl enthalten ist. Dieses Beispiel ist Teil eines größeren Beispiels, das <xref:System.Windows.Forms.DataGridView.SelectionChanged> im Ereignis verfügbar ist.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectionSum#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectionSum/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="UserSetCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor UserSetCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor UserSetCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.UserSetCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserSetCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ UserSetCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserSetCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.DataGridView.UserSetCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Standard- oder den vom Benutzer angegebenen Wert der <see cref="P:System.Windows.Forms.Control.Cursor" />-Eigenschaft ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.Cursor" />, der den normalen Wert der <see cref="P:System.Windows.Forms.Control.Cursor" />-Eigenschaft darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl Sie den Wert <xref:System.Windows.Forms.Control.Cursor%2A> der-Eigenschaft festlegen können, kann sich der Wert abhängig von der Position des Mauszeigers ändern. Verwenden Sie diese Eigenschaft, um den Wert der <xref:System.Windows.Forms.Control.Cursor%2A> -Eigenschaft in Ihrem normalen Zustand (entweder den Standardwert oder einen im Code angegebenen Wert) abzurufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBar">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollBar VerticalScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollBar VerticalScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VerticalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VerticalScrollBar As ScrollBar" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::ScrollBar ^ VerticalScrollBar { System::Windows::Forms::ScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBar : System.Windows.Forms.ScrollBar" Usage="System.Windows.Forms.DataGridView.VerticalScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die vertikale Schiebeleiste des Steuerelements ab.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.ScrollBar" />, die die vertikale Schiebeleiste darstellt.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollingOffset">
      <MemberSignature Language="C#" Value="public int VerticalScrollingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VerticalScrollingOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VerticalScrollingOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalScrollingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VerticalScrollingOffset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollingOffset : int" Usage="System.Windows.Forms.DataGridView.VerticalScrollingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Pixel ab, um die im Steuerelement ein vertikaler Bildlauf durchgeführt wird.</summary>
        <value>Die Anzahl der Pixel, um die im Steuerelement ein vertikaler Bildlauf durchgeführt wird.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.DataGridView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob für das <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement eigene Operationen zur Datenverwaltung bereitgestellt wurden.</summary>
        <value><see langword="true" /> , wenn die <see cref="T:System.Windows.Forms.DataGridView" /> Datenverwaltungsvorgänge verwendet, die Sie bereitstellen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der virtuelle Modus ist für die Verwendung mit sehr großen Daten speichern konzipiert. Wenn die <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> -Eigenschaft `true`ist, erstellen Sie <xref:System.Windows.Forms.DataGridView> eine mit einer festgelegten Anzahl von Zeilen und Spalten, und <xref:System.Windows.Forms.DataGridView.CellValueNeeded> behandeln Sie dann das-Ereignis, um die Zellen aufzufüllen. Der virtuelle Modus erfordert die Implementierung eines zugrunde liegenden Daten Caches, um die Auffüllung, Bearbeitung und <xref:System.Windows.Forms.DataGridView> Löschung von Zellen auf der Grundlage von Aktionen des Benutzers zu bewältigen. Weitere Informationen zum Implementieren des virtuellen Modus finden [Sie unter Gewusst wie: Implementieren Sie den virtuellen Modus im Windows Forms DataGridView](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)-Steuerelement.  
  
 Sie müssen den virtuellen Modus verwenden, um die Werte ungebundener Spalten beizubehalten <xref:System.Windows.Forms.DataGridView> , wenn sich das Steuerelement im gebundenen Modus befindet. Das Sortieren nach ungebundenen Spalten im gebundenen Modus wird nicht unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel Code wird der virtuelle Modus verwendet, um eine Tabelle mit positiven ganzen Zahlen zu erstellen.  
  
 [!code-csharp[System.Windows.Forms.DataGridView._Virtual#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/CS/virtual.cs#0)]
 [!code-vb[System.Windows.Forms.DataGridView._Virtual#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView._Virtual/VB/virtual.vb#0)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="dataGridView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</param>
        <summary>Verarbeitet Windows-Meldungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter der <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> -Methode für die Basisklasse.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Aufrufen von nicht verwaltetem Code. Anforderungs Wert: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Berechtigungs Wert:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="~/docs/framework/winforms/controls/datagridview-control-windows-forms.md">DataGridView-Steuerelement (Windows Forms)</related>
      </Docs>
    </Member>
  </Members>
</Type>