<Type Name="DataGridViewRowCollection" FullName="System.Windows.Forms.DataGridViewRowCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ca811693ada53da7b775b37ae5f014342d4d655" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30641004" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewRowCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewRowCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewRowCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewRowCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewRowCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.DataGridViewRowCollectionCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Eine Auflistung von <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection> enthält die <xref:System.Windows.Forms.DataGridViewRow> Objekte in einem <xref:System.Windows.Forms.DataGridView> Steuerelement. Sie können eine Instanz dieser Klasse über das Steuerelement abrufen <xref:System.Windows.Forms.DataGridView.Rows%2A> Eigenschaft. Die Auflistung behält einen Verweis auf das Steuerelement über die <xref:System.Windows.Forms.DataGridViewRowCollection.DataGridView%2A> Eigenschaft.  
  
 Zur Verbesserung der Leistung einer <xref:System.Windows.Forms.DataGridViewRowCollection> freigegebene und nicht freigegebene Zeilen enthält. Freigegebene Zeilen Freigeben von Speicher, um die Kosten für eine große Menge von Datensätzen zu reduzieren. Wenn sich die Datensatzgruppe sehr groß ist, sollte Sie darauf achten, die freigegebene Zeilen so weit wie möglich zu halten.  
  
 Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
    <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewRowCollection (System.Windows.Forms.DataGridView dataGridView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataGridView dataGridView) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.#ctor(System.Windows.Forms.DataGridView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewRowCollection(System::Windows::Forms::DataGridView ^ dataGridView);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
      </Parameters>
      <Docs>
        <param name="dataGridView">Der <see cref="T:System.Windows.Forms.DataGridView" />, der die <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Auflistung eine oder mehrere Zeilen hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Add" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fügt der Auflistung eine neue Zeile hinzu.</summary>
        <returns>Der Index der neuen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Add> Überladung fügt Zeilen auf der Basis der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> von der <xref:System.Windows.Forms.DataGridView>. Die neue Zeile ist, wenn möglich freigegeben. Stellen Sie sicher, dass der Zeile angegeben wird, der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> Eigenschaft für eine optimale Skalierbarkeit gemeinsam genutzt werden kann. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 Dieser Vorgang würde eine fixierte Zeile hinter nicht fixierten Zeilen hinzufügen.</exception>
        <exception cref="T:System.ArgumentException">Die von der <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" />-Eigenschaft zurückgegebene Zeile hat mehr Zellen als Spalten im Steuerelement vorhanden sind.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">Die Anzahl der Zeilen, die der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung die angegebene Anzahl neuer Zeilen hinzu.</summary>
        <returns>Der Index der letzten Zeile, die hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Add%28System.Int32%29> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>. Die neuen Zeilen basieren auf der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> von der <xref:System.Windows.Forms.DataGridView>. Stellen Sie sicher, dass der Zeile angegeben wird, der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> Eigenschaft für eine optimale Skalierbarkeit gemeinsam genutzt werden kann. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="count" /> ist kleiner als 1.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 Die von der <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" />-Eigenschaft zurückgegebene Zeile hat mehr Zellen als Spalten im Steuerelement vorhanden sind.  
  
 - oder -   
  
 Dieser Vorgang würde fixierte Zeilen hinter nicht fixierten Zeilen hinzufügen.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Add(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (ParamArray values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">Eine variable Anzahl von Objekten, die die Zellen der neuen <see cref="T:System.Windows.Forms.DataGridViewRow" /> füllen.</param>
        <summary>Fügt der Auflistung eine neue Zeile hinzu und füllt die Zellen mit den angegebenen Objekten auf.</summary>
        <returns>Der Index der neuen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Add%28System.Object%5B%5D%29> Methode fügt eine Zeile aufgehoben, um die <xref:System.Windows.Forms.DataGridViewRowCollection>. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="values" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" />-Eigenschaft von <see cref="T:System.Windows.Forms.DataGridView" /> wird auf <see langword="true" /> festgelegt.  
  
 \- oder –  
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 Die von der <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" />-Eigenschaft zurückgegebene Zeile hat mehr Zellen als Spalten im Steuerelement vorhanden sind.  
  
 - oder -   
  
 Dieser Vorgang würde eine fixierte Zeile hinter nicht fixierten Zeilen hinzufügen.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Add(System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="dataGridViewRow">Das <see cref="T:System.Windows.Forms.DataGridViewRow" />, das in <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> eingefügt werden soll.</param>
        <summary>Fügt der Auflistung den angegebenen <see cref="T:System.Windows.Forms.DataGridViewRow" /> hinzu.</summary>
        <returns>Der Index des neuen <see cref="T:System.Windows.Forms.DataGridViewRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Add%28System.Windows.Forms.DataGridViewRow%29> Methode fügt eine freigegebene Zeile an die <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls ist die neue Zeile aufgehoben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />-Eigenschaft der <paramref name="dataGridViewRow" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 <paramref name="dataGridViewRow" /> verfügt über einen <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" />-Eigenschaftswert von <see langword="true" />.  
  
 - oder -   
  
 Dieser Vorgang würde eine fixierte Zeile hinter nicht fixierten Zeilen hinzufügen.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRow" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRow" /> hat mehr Zellen als Spalten im Steuerelement vorhanden sind.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="AddCopies">
      <MemberSignature Language="C#" Value="public virtual int AddCopies (int indexSource, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddCopies(int32 indexSource, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.AddCopies(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddCopies (indexSource As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AddCopies(int indexSource, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSource" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="indexSource">Der Index der Zeile, auf der die neuen Zeilen basieren sollen.</param>
        <param name="count">Die Anzahl der Zeilen, die der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung die angegebene Anzahl von Zeilen basierend auf der Zeile am angegebenen Index hinzu.</summary>
        <returns>Der Index der letzten Zeile, die hinzugefügt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> -Eigenschaft der neuen <xref:System.Windows.Forms.DataGridViewRow> hat die gleichen Werte wie die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> von der <xref:System.Windows.Forms.DataGridViewRow> am `indexSource`. Die <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls sind die neuen Zeilen nicht freigegeben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexSource" /> ist kleiner als 0 (null) bzw. größer oder gleich der Anzahl der Zeilen im Steuerelement.  
  
 - oder -   
  
 <paramref name="count" /> ist kleiner als Null.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Dieser Vorgang würde eine fixierte Zeile hinter nicht fixierten Zeilen hinzufügen.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="AddCopy">
      <MemberSignature Language="C#" Value="public virtual int AddCopy (int indexSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddCopy(int32 indexSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.AddCopy(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddCopy (indexSource As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AddCopy(int indexSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSource" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="indexSource">Der Index der Zeile, auf der die neue Zeile basieren soll.</param>
        <summary>Fügt auf Basis der Zeile, die den angegebenen Index hat, eine neue Zeile hinzu.</summary>
        <returns>Der Index der neuen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> Eigenschaft der neuen Zeile hat die gleichen Werte wie die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> die Zeile an `indexSource`. Die <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A> Methode fügt eine freigegebene Zeile an die <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls ist die neue Zeile aufgehoben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexSource" /> ist kleiner als 0 (null) bzw. größer oder gleich der Anzahl der Zeilen in der Auflistung.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Dieser Vorgang würde eine fixierte Zeile hinter nicht fixierten Zeilen hinzufügen.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (params System.Windows.Forms.DataGridViewRow[] dataGridViewRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.DataGridViewRow[] dataGridViewRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.AddRange(System.Windows.Forms.DataGridViewRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (ParamArray dataGridViewRows As DataGridViewRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(... cli::array &lt;System::Windows::Forms::DataGridViewRow ^&gt; ^ dataGridViewRows);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRows" Type="System.Windows.Forms.DataGridViewRow[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dataGridViewRows">Ein Array von <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekten, die der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> hinzugefügt werden sollen.</param>
        <summary>Fügt der Auflistung die angegebenen <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekte hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.AddRange%2A> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls sind die neuen Zeilen nicht freigegeben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
> [!IMPORTANT]
>  Aufgrund eines Fehlers die <xref:System.Windows.Forms.DataGridViewRowCollection.AddRange%2A> Methode wird die Anwendung beenden reagiert If stellen die <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> Eigenschaft ist `true` und die Zeile für neue Datensätze ausgewählt ist. Um diesen Fehler zu umgehen, müssen Sie Aufheben der Auswahl der Zeile vor dem Aufrufen dieser Methode, und wählen Sie die Zeile erneut. Weitere Informationen finden Sie im Codebeispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridViewRowCollection.AddRange%2A> Methode, wenn die Zeile für neue Datensätze ausgewählt ist, um den Fehler umgehen angegeben wird, klicken Sie im Abschnitt "Hinweise".  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRows" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRows" /> enthält nur eine Zeile, und diese Zeile verfügt über mehr Zellen, als Spalten im Steuerelement vorhanden sind.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Mindestens ein Eintrag im <paramref name="dataGridViewRows" />-Array ist <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 Mindestens eine Zeile im <paramref name="dataGridViewRows" />-Array verfügt über einen <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />-Eigenschaftswert, der nicht <see langword="null" /> ist.  
  
 - oder -   
  
 Mindestens eine Zeile im <paramref name="dataGridViewRows" />-Array verfügt über einen <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" />-Eigenschaftswert von <see langword="true" />.  
  
 - oder -   
  
 Mindestens zwei Zeilen im <paramref name="dataGridViewRows" />-Array sind identisch.  
  
 - oder -   
  
 Mindestens eine Zeile im <paramref name="dataGridViewRows" />-Array enthält mindestens eine Zelle eines Typs, der nicht mit dem Typ der entsprechenden Spalte des Steuerelements kompatibel ist.  
  
 - oder -   
  
 Mindestens eine Zeile im <paramref name="dataGridViewRows" />-Array enthält mehr Zellen, als Spalten im Steuerelement vorhanden sind.  
  
 - oder -   
  
 Dieser Vorgang würde fixierte Zeilen hinter nicht fixierten Zeilen hinzufügen.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.InsertRange(System.Int32,System.Windows.Forms.DataGridViewRow[])" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Auflistung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die Auflistung ist datengebunden, und das Löschen von Zeilendaten wird von der zugrunde liegenden Datenquelle nicht unterstützt.  
  
 - oder -   
  
 Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend die Änderung der Zeilenauflistung verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridViewRowCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Inhalt der Auflistung ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.DataGridViewRowCollection.CollectionChanged> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.DataGridViewRowCollection> mit dem Namen `DataGridViewRowCollection1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.DataGridViewRowCollection.CollectionChanged> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#373](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#373)]
 [!code-vb[System.Windows.Forms.EventExamples#373](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#373)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Contains(System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="dataGridViewRow">Das <see cref="T:System.Windows.Forms.DataGridViewRow" />, das in der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> gesucht werden soll.</param>
        <summary>Bestimmt, ob die angegebene <see cref="T:System.Windows.Forms.DataGridViewRow" /> in der Auflistung enthalten ist.</summary>
        <returns>
          <see langword="true" />, wenn <see cref="T:System.Windows.Forms.DataGridViewRow" /> in <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> gefunden wird, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Forms.DataGridViewRow[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Forms.DataGridViewRow[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.CopyTo(System.Windows.Forms.DataGridViewRow[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DataGridViewRow(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Forms::DataGridViewRow ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Forms.DataGridViewRow[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Ein <see cref="T:System.Windows.Forms.DataGridViewRow" />-Array, in das die Elemente aus der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> kopiert werden.</param>
        <param name="index">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</param>
        <summary>Kopiert die Elemente aus der Auflistung in das angegebene <see cref="T:System.Windows.Forms.DataGridViewRow" />-Array, wobei am angegebenen Index begonnen wird.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als Null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> ist mehrdimensional.  
  
 - oder -   
  
 Die Anzahl der Elemente im <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> ist größer als der verfügbare Platz zwischen <paramref name="index" /> und dem Ende von <paramref name="array" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Zeilen in der Auflistung ab.</summary>
        <value>Die Anzahl der Zeilen in <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="DataGridView">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.DataGridView DataGridView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView DataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.DataGridView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::DataGridView ^ DataGridView { System::Windows::Forms::DataGridView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Forms.DataGridView" /> ab, die die Auflistung besitzt.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DataGridView" />, der die <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> besitzt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die erste Zeile in der Auflistung, ab, die die angegebenen Kriterien erfüllt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstRow">
      <MemberSignature Language="C#" Value="public int GetFirstRow (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstRow(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstRow (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstRow(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <summary>Gibt den Index der ersten <see cref="T:System.Windows.Forms.DataGridViewRow" /> zurück, die die angegebenen Kriterien erfüllt.</summary>
        <returns>Der Index der ersten <see cref="T:System.Windows.Forms.DataGridViewRow" />, die über die von <paramref name="includeFilter" /> angegebenen Attribute verfügt, und -1, wenn keine Zeile gefunden wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstRow">
      <MemberSignature Language="C#" Value="public int GetFirstRow (System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstRow(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow(System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstRow (includeFilter As DataGridViewElementStates, excludeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstRow(System::Windows::Forms::DataGridViewElementStates includeFilter, System::Windows::Forms::DataGridViewElementStates excludeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <param name="excludeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <summary>Gibt den Index der ersten <see cref="T:System.Windows.Forms.DataGridViewRow" /> zurück, die die angegebenen Ein- und Ausschlusskriterien erfüllt.</summary>
        <returns>Der Index der ersten <see cref="T:System.Windows.Forms.DataGridViewRow" />, die über die von <paramref name="includeFilter" /> angegebenen Attribute und nicht über die von <paramref name="excludeFilter" /> angegebenen Attribute verfügt, und -1, wenn keine Zeile gefunden wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Mindestens einer der angegebenen Filterwerte ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetLastRow">
      <MemberSignature Language="C#" Value="public int GetLastRow (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastRow(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetLastRow(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastRow (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastRow(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <summary>Gibt den Index der letzten <see cref="T:System.Windows.Forms.DataGridViewRow" /> zurück, die die angegebenen Kriterien erfüllt.</summary>
        <returns>Der Index der letzten <see cref="T:System.Windows.Forms.DataGridViewRow" />, die über die von <paramref name="includeFilter" /> angegebenen Attribute verfügt, und -1, wenn keine Zeile gefunden wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die nächste Zeile in der Auflistung, ab, die die angegebenen Kriterien erfüllt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextRow">
      <MemberSignature Language="C#" Value="public int GetNextRow (int indexStart, System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextRow(int32 indexStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetNextRow(System.Int32,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextRow (indexStart As Integer, includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextRow(int indexStart, System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexStart" Type="System.Int32" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="indexStart">Der Index der Zeile, in der die Methode beginnen soll, nach der nächsten <see cref="T:System.Windows.Forms.DataGridViewRow" /> zu suchen.</param>
        <param name="includeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <summary>Gibt den Index der nächsten <see cref="T:System.Windows.Forms.DataGridViewRow" /> zurück, die die angegebenen Kriterien erfüllt.</summary>
        <returns>Der Index der ersten <see cref="T:System.Windows.Forms.DataGridViewRow" /> nach <paramref name="indexStart" />, die über die von <paramref name="includeFilter" /> angegebenen Attribute verfügt, oder -1, wenn keine Zeile gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%28System.Int32%2CSystem.Windows.Forms.DataGridViewElementStates%29> -Methode beginnt die Suche nach der Zeile, die beginnend mit der Zeile nach Kriterien entspricht `indexStart`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexStart" /> ist kleiner als -1.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetNextRow">
      <MemberSignature Language="C#" Value="public int GetNextRow (int indexStart, System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextRow(int32 indexStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetNextRow(System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextRow (indexStart As Integer, includeFilter As DataGridViewElementStates, excludeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextRow(int indexStart, System::Windows::Forms::DataGridViewElementStates includeFilter, System::Windows::Forms::DataGridViewElementStates excludeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexStart" Type="System.Int32" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="indexStart">Der Index der Zeile, in der die Methode beginnen soll, nach der nächsten <see cref="T:System.Windows.Forms.DataGridViewRow" /> zu suchen.</param>
        <param name="includeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <param name="excludeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <summary>Gibt den Index der nächsten <see cref="T:System.Windows.Forms.DataGridViewRow" /> zurück, die die angegebenen Ein- und Ausschlusskriterien erfüllt.</summary>
        <returns>Der Index der nächsten <see cref="T:System.Windows.Forms.DataGridViewRow" />, die über die von <paramref name="includeFilter" /> angegebenen Attribute und nicht über die von <paramref name="excludeFilter" /> angegebenen Attribute verfügt, und -1, wenn keine Zeile gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%28System.Int32%2CSystem.Windows.Forms.DataGridViewElementStates%2CSystem.Windows.Forms.DataGridViewElementStates%29> -Methode beginnt die Suche nach der Zeile, die beginnend mit der Zeile nach Kriterien entspricht `indexStart`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexStart" /> ist kleiner als -1.</exception>
        <exception cref="T:System.ArgumentException">Mindestens einer der angegebenen Filterwerte ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPreviousRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die vorherige Zeile in der Auflistung, ab, die die angegebenen Kriterien erfüllt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPreviousRow">
      <MemberSignature Language="C#" Value="public int GetPreviousRow (int indexStart, System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPreviousRow(int32 indexStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow(System.Int32,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousRow (indexStart As Integer, includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPreviousRow(int indexStart, System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexStart" Type="System.Int32" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="indexStart">Der Index der Zeile, in der die Methode beginnen soll, nach der vorherigen <see cref="T:System.Windows.Forms.DataGridViewRow" /> zu suchen.</param>
        <param name="includeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <summary>Gibt den Index der vorherigen <see cref="T:System.Windows.Forms.DataGridViewRow" /> zurück, die die angegebenen Kriterien erfüllt.</summary>
        <returns>Der Index der vorherigen <see cref="T:System.Windows.Forms.DataGridViewRow" />, die über die von <paramref name="includeFilter" /> angegebenen Attribute verfügt, und -1, wenn keine Zeile gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%28System.Int32%2CSystem.Windows.Forms.DataGridViewElementStates%29> -Methode beginnt die Suche nach der Zeile, die Zeile mit der vor dem Starten Kriterien entspricht `indexStart`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexStart" /> ist größer als die Anzahl der Zeilen in der Auflistung.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousRow">
      <MemberSignature Language="C#" Value="public int GetPreviousRow (int indexStart, System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPreviousRow(int32 indexStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow(System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousRow (indexStart As Integer, includeFilter As DataGridViewElementStates, excludeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPreviousRow(int indexStart, System::Windows::Forms::DataGridViewElementStates includeFilter, System::Windows::Forms::DataGridViewElementStates excludeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexStart" Type="System.Int32" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="indexStart">Der Index der Zeile, in der die Methode beginnen soll, nach der vorherigen <see cref="T:System.Windows.Forms.DataGridViewRow" /> zu suchen.</param>
        <param name="includeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <param name="excludeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <summary>Gibt den Index der vorherigen <see cref="T:System.Windows.Forms.DataGridViewRow" /> zurück, die die angegebenen Ein- und Ausschlusskriterien erfüllt.</summary>
        <returns>Der Index der vorherigen <see cref="T:System.Windows.Forms.DataGridViewRow" />, die über die von <paramref name="includeFilter" /> angegebenen Attribute und nicht über die von <paramref name="excludeFilter" /> angegebenen Attribute verfügt, und -1, wenn keine Zeile gefunden wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%28System.Int32%2CSystem.Windows.Forms.DataGridViewElementStates%2CSystem.Windows.Forms.DataGridViewElementStates%29> -Methode beginnt die Suche nach der Zeile, die Zeile mit der vor dem Starten Kriterien entspricht `indexStart`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexStart" /> ist größer als die Anzahl der Zeilen in der Auflistung.</exception>
        <exception cref="T:System.ArgumentException">Mindestens einer der angegebenen Filterwerte ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public int GetRowCount (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowCount(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetRowCount(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCount (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowCount(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <summary>Gibt die Anzahl der <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekte in der Auflistung zurück, die die angegebenen Kriterien erfüllen.</summary>
        <returns>Die Anzahl der <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekte in der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />, die über die von <paramref name="includeFilter" /> angegebenen Attribute verfügen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Methode zum Abrufen der Anzahl der ausgewählten Zeilen.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetRowsHeight">
      <MemberSignature Language="C#" Value="public int GetRowsHeight (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowsHeight(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowsHeight (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowsHeight(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</param>
        <summary>Gibt die kumulierte Höhe der <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekte zurück, die die angegebenen Kriterien erfüllen.</summary>
        <returns>Die kumulierte Höhe der <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekte in der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />, die über die von <paramref name="includeFilter" /> angegebenen Attribute verfügen.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> ist keine gültige bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetRowState">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewElementStates GetRowState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetRowState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetRowState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRowState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewElementStates GetRowState(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der Zeile.</param>
        <summary>Ruft den Zustand der Zeile mit dem angegebenen Index ab.</summary>
        <returns>Eine bitweise Kombination von <see cref="T:System.Windows.Forms.DataGridViewElementStates" />-Werten, die den Zustand der angegebenen Zeile angibt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> ist kleiner als 0 (null) und größer als die Anzahl der Zeilen in der Auflistung minus eins.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.IndexOf(System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="dataGridViewRow">Das <see cref="T:System.Windows.Forms.DataGridViewRow" />, das in der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> gesucht werden soll.</param>
        <summary>Gibt den Index eines bestimmten Elements in der Auflistung zurück.</summary>
        <returns>Der Index von <paramref name="value" />, wenn das Element eine in der <see cref="T:System.Windows.Forms.DataGridViewRow" /> gefundene <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> ist, andernfalls -1.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Auflistung eine oder mehrere Zeilen hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int rowIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 rowIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Insert(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (rowIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int rowIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Die Position, an der die Zeilen eingefügt werden sollen.</param>
        <param name="count">Die Anzahl von Zeilen, die in die <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> eingefügt werden sollen.</param>
        <summary>Fügt die angegebene Anzahl von Zeilen an der angegebenen Position in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Insert%28System.Int32%2CSystem.Int32%29> Methode fügt Zeilen auf der Basis der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> von der <xref:System.Windows.Forms.DataGridView>. Die neue Zeile ist, wenn möglich freigegeben. Stellen Sie sicher, dass der Zeile angegeben wird, der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> Eigenschaft für eine optimale Skalierbarkeit gemeinsam genutzt werden kann. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen in der Auflistung.  
  
 - oder -   
  
 <paramref name="count" /> ist kleiner als 1.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 <paramref name="rowIndex" /> ist gleich der Anzahl der Zeilen in der Auflistung, und die <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist auf <see langword="true" /> festgelegt.  
  
 - oder -   
  
 Die von der <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" />-Eigenschaft zurückgegebene Zeile hat mehr Zellen als Spalten im Steuerelement vorhanden sind.  
  
 - oder -   
  
 Bei diesem Vorgang würde eine fixierte Zeile nach nicht fixierten Zeilen oder eine nicht fixierte Zeile vor fixierten Zeilen eingefügt.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int rowIndex, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 rowIndex, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Insert(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (rowIndex As Integer, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int rowIndex, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rowIndex">Die Position, an der die Zeile eingefügt werden soll.</param>
        <param name="values">Eine variable Anzahl von Objekten, die die Zellen der neuen Zeile füllen.</param>
        <summary>Fügt eine Zeile an der angegebenen Position in die Auflistung ein und füllt die Zellen mit den angegebenen Objekten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Insert%28System.Int32%2CSystem.Object%5B%5D%29> Methode fügt eine Zeile aufgehoben, um die <xref:System.Windows.Forms.DataGridViewRowCollection>.  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen in der Auflistung.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="values" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" />-Eigenschaft von <see cref="T:System.Windows.Forms.DataGridView" /> wird auf <see langword="true" /> festgelegt.  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 <paramref name="rowIndex" /> ist gleich der Anzahl der Zeilen in der Auflistung, und die <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist auf <see langword="true" /> festgelegt.  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />-Eigenschaft der Zeile, die von der <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" />-Eigenschaft des Steuerelements zurückgegeben wird, ist nicht <see langword="null" />.  
  
 - oder -   
  
 Bei diesem Vorgang würde eine fixierte Zeile nach nicht fixierten Zeilen oder eine nicht fixierte Zeile vor fixierten Zeilen eingefügt.</exception>
        <exception cref="T:System.ArgumentException">Die von der <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" />-Eigenschaft des Steuerelements zurückgegebene Zeile verfügt über mehr Zellen, als Spalten im Steuerelement vorhanden sind.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int rowIndex, System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 rowIndex, class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Insert(System.Int32,System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int rowIndex, System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Die Position, an der die Zeile eingefügt werden soll.</param>
        <param name="dataGridViewRow">Das <see cref="T:System.Windows.Forms.DataGridViewRow" />, das in <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> eingefügt werden soll.</param>
        <summary>Fügt die angegebene <see cref="T:System.Windows.Forms.DataGridViewRow" /> in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Insert%28System.Int32%2CSystem.Windows.Forms.DataGridViewRow%29> Methode fügt eine freigegebene Zeile an die <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls ist die neue Zeile aufgehoben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen in der Auflistung.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRow" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 <paramref name="rowIndex" /> ist gleich der Anzahl der Zeilen in der Auflistung, und die <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist auf <see langword="true" /> festgelegt.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />-Eigenschaft von <paramref name="dataGridViewRow" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 <paramref name="dataGridViewRow" /> verfügt über einen <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" />-Eigenschaftswert von <see langword="true" />.  
  
 - oder -   
  
 Bei diesem Vorgang würde eine fixierte Zeile nach nicht fixierten Zeilen oder eine nicht fixierte Zeile vor fixierten Zeilen eingefügt.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRow" /> hat mehr Zellen als Spalten im Steuerelement vorhanden sind.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="InsertCopies">
      <MemberSignature Language="C#" Value="public virtual void InsertCopies (int indexSource, int indexDestination, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCopies(int32 indexSource, int32 indexDestination, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.InsertCopies(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertCopies (indexSource As Integer, indexDestination As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertCopies(int indexSource, int indexDestination, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSource" Type="System.Int32" />
        <Parameter Name="indexDestination" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="indexSource">Der Index der <see cref="T:System.Windows.Forms.DataGridViewRow" />, auf der die neuen Zeilen basieren sollen.</param>
        <param name="indexDestination">Die Position, an der die Zeilen eingefügt werden sollen.</param>
        <param name="count">Die Anzahl der <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekte, die der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> hinzugefügt werden sollen.</param>
        <summary>Fügt Zeilen an der angegebenen Position in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> -Eigenschaft der neuen <xref:System.Windows.Forms.DataGridViewRow> Objekte verfügt über die gleichen Werte wie die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> von der <xref:System.Windows.Forms.DataGridViewRow> am `indexSource`. Die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls sind die neuen Zeilen nicht freigegeben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexSource" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen in der Auflistung minus eins.  
  
 - oder -   
  
 <paramref name="indexDestination" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen in der Auflistung.  
  
 - oder -   
  
 <paramref name="count" /> ist kleiner als 1.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 <paramref name="indexDestination" /> ist gleich der Anzahl von Zeilen in der Auflistung, und <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> ist <see langword="true" />.  
  
 - oder -   
  
 Bei diesem Vorgang würden fixierte Zeilen nach nicht fixierten Zeilen oder nicht fixierte Zeilen vor fixierten Zeilen eingefügt.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="InsertCopy">
      <MemberSignature Language="C#" Value="public virtual void InsertCopy (int indexSource, int indexDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCopy(int32 indexSource, int32 indexDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.InsertCopy(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertCopy (indexSource As Integer, indexDestination As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertCopy(int indexSource, int indexDestination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSource" Type="System.Int32" />
        <Parameter Name="indexDestination" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="indexSource">Der Index der Zeile, auf der die neue Zeile basieren soll.</param>
        <param name="indexDestination">Die Position, an der die Zeile eingefügt werden soll.</param>
        <summary>Fügt eine Zeile an der angegebenen Position basierend auf der Zeile an der angegebenen Position in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode weist der neuen Zeile den im angegebenen Index der `indexDestination` Parameter und erhöht die Indizes für alle nachfolgenden Zeilen. Die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> -Eigenschaft der neuen <xref:System.Windows.Forms.DataGridViewRow> hat die gleichen Werte wie die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> von der <xref:System.Windows.Forms.DataGridViewRow> am `indexSource`. Die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A> Methode fügt eine freigegebene Zeile an die <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls ist die neue Zeile aufgehoben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexSource" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen in der Auflistung minus eins.  
  
 - oder -   
  
 <paramref name="indexDestination" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen in der Auflistung.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 <paramref name="indexDestination" /> ist gleich der Anzahl von Zeilen in der Auflistung, und <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> ist <see langword="true" />.  
  
 - oder -   
  
 Bei diesem Vorgang würde eine fixierte Zeile nach nicht fixierten Zeilen oder eine nicht fixierte Zeile vor fixierten Zeilen eingefügt.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int rowIndex, params System.Windows.Forms.DataGridViewRow[] dataGridViewRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 rowIndex, class System.Windows.Forms.DataGridViewRow[] dataGridViewRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.InsertRange(System.Int32,System.Windows.Forms.DataGridViewRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (rowIndex As Integer, ParamArray dataGridViewRows As DataGridViewRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int rowIndex, ... cli::array &lt;System::Windows::Forms::DataGridViewRow ^&gt; ^ dataGridViewRows);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataGridViewRows" Type="System.Windows.Forms.DataGridViewRow[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rowIndex">Die Position, an der die Zeilen eingefügt werden sollen.</param>
        <param name="dataGridViewRows">Ein Array von <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekten, die der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> hinzugefügt werden sollen.</param>
        <summary>Fügt die <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekte an der angegebenen Position in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertRange%2A> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls sind die neuen Zeilen nicht freigegeben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
> [!IMPORTANT]
>  Aufgrund eines Fehlers die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertRange%2A> Methode stellen die Anwendung beenden reagiert If alle Zeilen mit einem Index größer als `rowIndex` ausgewählt sind. Um diesen Fehler zu umgehen, müssen Sie Aufheben der Auswahl dieser Zeilen vor dem Aufrufen dieser Methode und danach die Zeilen. Weitere Informationen finden Sie im Codebeispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertRange%2A> Methode zum Einfügen von Zeilen vor der ausgewählten Zeilen, die den Fehler umgehen angegeben wird, klicken Sie im Abschnitt "Hinweise".  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRows" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen in der Auflistung.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRows" /> enthält nur eine Zeile, und diese Zeile verfügt über mehr Zellen, als Spalten im Steuerelement vorhanden sind.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 <paramref name="rowIndex" /> ist gleich der Anzahl von Zeilen in der Auflistung, und <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> ist <see langword="true" />.  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Mindestens ein Eintrag im <paramref name="dataGridViewRows" />-Array ist <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 Mindestens eine Zeile im <paramref name="dataGridViewRows" />-Array verfügt über einen <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />-Eigenschaftswert, der nicht <see langword="null" /> ist.  
  
 - oder -   
  
 Mindestens eine Zeile im <paramref name="dataGridViewRows" />-Array verfügt über einen <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" />-Eigenschaftswert von <see langword="true" />.  
  
 - oder -   
  
 Mindestens zwei Zeilen im <paramref name="dataGridViewRows" />-Array sind identisch.  
  
 - oder -   
  
 Mindestens eine Zeile im <paramref name="dataGridViewRows" />-Array enthält mindestens eine Zelle eines Typs, der nicht mit dem Typ der entsprechenden Spalte des Steuerelements kompatibel ist.  
  
 - oder -   
  
 Mindestens eine Zeile im <paramref name="dataGridViewRows" />-Array enthält mehr Zellen, als Spalten im Steuerelement vorhanden sind.  
  
 - oder -   
  
 Bei diesem Vorgang würden fixierte Zeilen nach nicht fixierten Zeilen oder nicht fixierte Zeilen vor fixierten Zeilen eingefügt.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.AddRange(System.Windows.Forms.DataGridViewRow[])" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ default[int] { System::Windows::Forms::DataGridViewRow ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des abzurufenden <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <summary>Ruft den <see cref="T:System.Windows.Forms.DataGridViewRow" /> am angegebenen Index ab.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DataGridViewRow" /> am angegebenen Index. Wenn mit diesem Indexer auf eine <see cref="T:System.Windows.Forms.DataGridViewRow" /> zugegriffen wird, wird die Freigabe der Zeile aufgehoben. Verwenden Sie die <see cref="M:System.Windows.Forms.DataGridViewRowCollection.SharedRow(System.Int32)" />-Methode, wenn die Zeile weiterhin freigegeben sein soll. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0.  
  
 \- oder –  
  
 <paramref name="index" /> ist größer oder gleich <see cref="P:System.Windows.Forms.DataGridViewRowCollection.Count" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array von <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekten ab.</summary>
        <value>Ein Array von <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.List%2A> hebt die Freigabe aller Zeilen in der <xref:System.Windows.Forms.DataGridViewRowCollection>, daher sollten die Verwendung dieser Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (e As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.ComponentModel.CollectionChangeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.DataGridViewRowCollection.CollectionChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridViewRowCollection.OnCollectionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie <see cref="M:System.Windows.Forms.DataGridViewRowCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.DataGridViewRowCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Remove(System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="dataGridViewRow">Die Zeile, die aus der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> entfernt werden soll.</param>
        <summary>Entfernt die Zeile aus der Auflistung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRow" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRow" /> ist nicht in dieser Auflistung enthalten.  
  
 - oder -   
  
 <paramref name="dataGridViewRow" /> ist eine freigegebene Zeile.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 <paramref name="dataGridViewRow" /> ist die Zeile für neue Datensätze.  
  
 - oder -   
  
 Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement ist an eine <see cref="T:System.ComponentModel.IBindingList" />-Implementierung mit <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> und <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />-Eigenschaftswerte, die nicht gleichzeitig <see langword="true" /> sind, gebunden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die Position der zu entfernenden Zeile.</param>
        <summary>Entfernt die Zeile an der angegebenen Position aus der Auflistung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) und größer als die Anzahl der Zeilen in der Auflistung minus eins.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 <paramref name="index" /> ist gleich der Anzahl der Zeilen in der Auflistung, und die <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist auf <see langword="true" /> festgelegt.  
  
 - oder -   
  
 Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement ist an eine <see cref="T:System.ComponentModel.IBindingList" />-Implementierung mit <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> und <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />-Eigenschaftswerte, die nicht gleichzeitig <see langword="true" /> sind, gebunden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="SharedRow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow SharedRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridViewRow SharedRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.SharedRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharedRow (rowIndex As Integer) As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataGridViewRow ^ SharedRow(int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">Der Index der abzurufenden <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <summary>Gibt die <see cref="T:System.Windows.Forms.DataGridViewRow" /> am angegebenen Index zurück.</summary>
        <returns>Die <see cref="T:System.Windows.Forms.DataGridViewRow" /> an der angegebenen Position.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.SharedRow%2A> Methode gibt ein <xref:System.Windows.Forms.DataGridViewRow> ohne Freigabe der Zeile aufzuheben. Wenn Sie eine freigegebene Zeile ändern, werden alle Zeilen, die diese Zeile freigeben geändert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> kopierten Elemente ist. Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</param>
        <param name="index">Der nullbasierte Index im <c>array</c>, ab dem kopiert wird.</param>
        <summary>Kopiert die Elemente der Auflistung in ein <see cref="T:System.Array" />, wobei bei dem angegebenen Index begonnen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als Null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> ist mehrdimensional.  
  
 - oder -   
  
 Die Anzahl der Elemente im <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> ist größer als der verfügbare Platz zwischen <paramref name="index" /> und dem Ende von <paramref name="array" />.</exception>
        <exception cref="T:System.InvalidCastException">Der Typ der Quelle <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> kann nicht automatisch in den Typ von <paramref name="array" /> umgewandelt werden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
        <value>Die Anzahl der Elemente, die in <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> enthalten sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert ist (threadsicher).</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator zurück, der die Auflistung durchläuft.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das <see cref="T:System.Object" />, das in <see cref="T:System.Collections.IList" /> eingefügt werden soll.</param>
        <summary>Fügt der Auflistung eine <see cref="T:System.Windows.Forms.DataGridViewRow" /> hinzu.</summary>
        <returns>Der Index des neuen <see cref="T:System.Windows.Forms.DataGridViewRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Diese Methode ruft die <xref:System.Windows.Forms.DataGridViewRowCollection.Add%28System.Windows.Forms.DataGridViewRow%29> -Überladung übergeben `value` nach der Umwandlung auf einen <xref:System.Windows.Forms.DataGridViewRow>.  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> ist keine <see cref="T:System.Windows.Forms.DataGridViewRow" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />-Eigenschaft der <paramref name="value" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 <paramref name="value" /> verfügt über einen <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" />-Eigenschaftswert von <see langword="true" />.  
  
 - oder -   
  
 Dieser Vorgang würde eine fixierte Zeile hinter nicht fixierten Zeilen hinzufügen.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> hat mehr Zellen als Spalten im Steuerelement vorhanden sind.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt alle Elemente aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Auflistung ist datengebunden, und das Löschen von Zeilendaten wird von der zugrunde liegenden Datenquelle nicht unterstützt.  
  
 - oder -   
  
 Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das Element, das in der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> gesucht werden soll.</param>
        <summary>Bestimmt, ob die Auflistung das angegebene Element enthält.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="value" /> eine in der <see cref="T:System.Windows.Forms.DataGridViewRow" /> vorhandene <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das im <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> zu suchende Objekt.</param>
        <summary>Gibt den Index eines bestimmten Elements in der Auflistung zurück.</summary>
        <returns>Der Index von <paramref name="value" />, wenn das Element eine in der Liste gefundene <see cref="T:System.Windows.Forms.DataGridViewRow" /> ist, andernfalls -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem <c>value</c> eingefügt werden soll.</param>
        <param name="value">Das <see cref="T:System.Windows.Forms.DataGridViewRow" />, das in <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> eingefügt werden soll.</param>
        <summary>Fügt eine <see cref="T:System.Windows.Forms.DataGridViewRow" /> am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Diese Methode ruft die <xref:System.Windows.Forms.DataGridViewRowCollection.Insert%28System.Int32%2CSystem.Windows.Forms.DataGridViewRow%29> -Überladung Wert nach der Umwandlung zum Übergeben einer <xref:System.Windows.Forms.DataGridViewRow>.  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> ist keine <see cref="T:System.Windows.Forms.DataGridViewRow" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) oder größer als die Anzahl der Zeilen in der Auflistung.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridView.DataSource" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 <paramref name="index" /> ist gleich der Anzahl der Zeilen in der Auflistung, und die <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist auf <see langword="true" /> festgelegt.  
  
 - oder -   
  
 Die <see cref="T:System.Windows.Forms.DataGridView" /> verfügt über keine Spalten.  
  
 - oder -   
  
 Die <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" />-Eigenschaft der <paramref name="value" /> ist nicht <see langword="null" />.  
  
 - oder -   
  
 <paramref name="value" /> verfügt über einen <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" />-Eigenschaftswert von <see langword="true" />.  
  
 - oder -   
  
 Bei diesem Vorgang würde eine fixierte Zeile nach nicht fixierten Zeilen oder eine nicht fixierte Zeile vor fixierten Zeilen eingefügt.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> hat mehr Zellen als Spalten im Steuerelement vorhanden sind.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Elements, das abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft das Element am angegebenen Index ab oder legt dieses fest.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DataGridViewRow" /> am angegebenen Index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung unterstützt das Festlegen dieser Eigenschaft nicht.  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Der Benutzer hat versucht, diese Eigenschaft festzulegen.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0.  
  
 \- oder –  
  
 <paramref name="index" /> ist größer oder gleich <see cref="P:System.Windows.Forms.DataGridViewRowCollection.Count" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der <see cref="T:System.Windows.Forms.DataGridViewRow" />, der aus der <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> entfernt werden soll.</param>
        <summary>Entfernt den angegebenen <see cref="T:System.Windows.Forms.DataGridViewRow" /> aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> ist keine <see cref="T:System.Windows.Forms.DataGridViewRow" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> ist nicht in dieser Auflistung enthalten.  
  
 - oder -   
  
 <paramref name="value" /> ist eine freigegebene Zeile.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 <paramref name="value" /> ist die Zeile für neue Datensätze.  
  
 - oder -   
  
 Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement ist an eine <see cref="T:System.ComponentModel.IBindingList" />-Implementierung mit <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> und <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />-Eigenschaftswerte, die nicht gleichzeitig <see langword="true" /> sind, gebunden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index der zu entfernenden <see cref="T:System.Windows.Forms.DataGridViewRow" />-Instanz.</param>
        <summary>Entfernt die <see cref="T:System.Windows.Forms.DataGridViewRow" /> an der angegebenen Position aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> ist kleiner als 0 (null) und größer als die Anzahl der Zeilen in der Auflistung minus eins.</exception>
        <exception cref="T:System.InvalidOperationException">Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement führt eine der folgenden Aktionen durch, die vorübergehend das Hinzufügen neuer Zeilen verhindert:  
  
-   Auswählen aller Zellen im Steuerelement.  
  
-   Aufheben der Auswahl.  
  
 - oder -   
  
 Diese Methode wird von einem Handler für eines der folgenden <see cref="T:System.Windows.Forms.DataGridView" />-Ereignisse aufgerufen:  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  
  
 - oder -   
  
 <paramref name="index" /> ist gleich der Anzahl der Zeilen in der Auflistung, und die <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" />-Eigenschaft der <see cref="T:System.Windows.Forms.DataGridView" /> ist auf <see langword="true" /> festgelegt.  
  
 - oder -   
  
 Das zugeordnete <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement ist an eine <see cref="T:System.ComponentModel.IBindingList" />-Implementierung mit <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> und <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" />-Eigenschaftswerte, die nicht gleichzeitig <see langword="true" /> sind, gebunden.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>