<Type Name="DataGridViewRowCollection" FullName="System.Windows.Forms.DataGridViewRowCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5c0489bd0127d314b7bb7cb15242d4f3a80afa9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36344230" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewRowCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewRowCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewRowCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewRowCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewRowCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type DataGridViewRowCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.DataGridViewRowCollectionCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A collection of <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection> enthält die <xref:System.Windows.Forms.DataGridViewRow> Objekte in einem <xref:System.Windows.Forms.DataGridView> Steuerelement. Sie können eine Instanz dieser Klasse über das Steuerelement abrufen <xref:System.Windows.Forms.DataGridView.Rows%2A> Eigenschaft. Die Auflistung behält einen Verweis auf das Steuerelement über die <xref:System.Windows.Forms.DataGridViewRowCollection.DataGridView%2A> Eigenschaft.  
  
 Zur Verbesserung der Leistung einer <xref:System.Windows.Forms.DataGridViewRowCollection> freigegebene und nicht freigegebene Zeilen enthält. Freigegebene Zeilen Freigeben von Speicher, um die Kosten für eine große Menge von Datensätzen zu reduzieren. Wenn sich die Datensatzgruppe sehr groß ist, sollte Sie darauf achten, die freigegebene Zeilen so weit wie möglich zu halten.  
  
 Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
    <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewRowCollection (System.Windows.Forms.DataGridView dataGridView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataGridView dataGridView) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.#ctor(System.Windows.Forms.DataGridView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewRowCollection(System::Windows::Forms::DataGridView ^ dataGridView);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewRowCollection : System.Windows.Forms.DataGridView -&gt; System.Windows.Forms.DataGridViewRowCollection" Usage="new System.Windows.Forms.DataGridViewRowCollection dataGridView" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
      </Parameters>
      <Docs>
        <param name="dataGridView">The <see cref="T:System.Windows.Forms.DataGridView" /> that owns the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> class.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds one or more rows to the collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Add" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add();" />
      <MemberSignature Language="F#" Value="abstract member Add : unit -&gt; int&#xA;override this.Add : unit -&gt; int" Usage="dataGridViewRowCollection.Add " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Adds a new row to the collection.</summary>
        <returns>The index of the new row.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Add> Überladung fügt Zeilen auf der Basis der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> von der <xref:System.Windows.Forms.DataGridView>. Die neue Zeile ist, wenn möglich freigegeben. Stellen Sie sicher, dass der Zeile angegeben wird, der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> Eigenschaft für eine optimale Skalierbarkeit gemeinsam genutzt werden kann. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  This operation would add a frozen row after unfrozen rows.</exception>
        <exception cref="T:System.ArgumentException">The row returned by the <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" /> property has more cells than there are columns in the control.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(int count);" />
      <MemberSignature Language="F#" Value="abstract member Add : int -&gt; int&#xA;override this.Add : int -&gt; int" Usage="dataGridViewRowCollection.Add count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">The number of rows to add to the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Adds the specified number of new rows to the collection.</summary>
        <returns>The index of the last row that was added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Add%28System.Int32%29> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>. Die neuen Zeilen basieren auf der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> von der <xref:System.Windows.Forms.DataGridView>. Stellen Sie sicher, dass der Zeile angegeben wird, der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> Eigenschaft für eine optimale Skalierbarkeit gemeinsam genutzt werden kann. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="count" /> is less than 1.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  The row returned by the <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" /> property has more cells than there are columns in the control.  -or-  This operation would add frozen rows after unfrozen rows.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Add(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (ParamArray values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj[] -&gt; int&#xA;override this.Add : obj[] -&gt; int" Usage="dataGridViewRowCollection.Add values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">A variable number of objects that populate the cells of the new <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <summary>Adds a new row to the collection, and populates the cells with the specified objects.</summary>
        <returns>The index of the new row.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Add%28System.Object%5B%5D%29> Methode fügt eine Zeile aufgehoben, um die <xref:System.Windows.Forms.DataGridViewRowCollection>. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="values" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is set to <see langword="true" />.  \- or -  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  The row returned by the <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" /> property has more cells than there are columns in the control.  -or-  This operation would add a frozen row after unfrozen rows.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Add(System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.DataGridViewRow -&gt; int&#xA;override this.Add : System.Windows.Forms.DataGridViewRow -&gt; int" Usage="dataGridViewRowCollection.Add dataGridViewRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="dataGridViewRow">The <see cref="T:System.Windows.Forms.DataGridViewRow" /> to add to the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Adds the specified <see cref="T:System.Windows.Forms.DataGridViewRow" /> to the collection.</summary>
        <returns>The index of the new <see cref="T:System.Windows.Forms.DataGridViewRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Add%28System.Windows.Forms.DataGridViewRow%29> Methode fügt eine freigegebene Zeile an die <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls ist die neue Zeile aufgehoben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  The <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> property of the <paramref name="dataGridViewRow" /> is not <see langword="null" />.  -or-  <paramref name="dataGridViewRow" /> has a <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" /> property value of <see langword="true" />.  -or-  This operation would add a frozen row after unfrozen rows.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRow" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRow" /> has more cells than there are columns in the control.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="AddCopies">
      <MemberSignature Language="C#" Value="public virtual int AddCopies (int indexSource, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddCopies(int32 indexSource, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.AddCopies(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddCopies (indexSource As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AddCopies(int indexSource, int count);" />
      <MemberSignature Language="F#" Value="abstract member AddCopies : int * int -&gt; int&#xA;override this.AddCopies : int * int -&gt; int" Usage="dataGridViewRowCollection.AddCopies (indexSource, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSource" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="indexSource">The index of the row on which to base the new rows.</param>
        <param name="count">The number of rows to add to the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Adds the specified number of rows to the collection based on the row at the specified index.</summary>
        <returns>The index of the last row that was added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> -Eigenschaft der neuen <xref:System.Windows.Forms.DataGridViewRow> hat die gleichen Werte wie die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> von der <xref:System.Windows.Forms.DataGridViewRow> am `indexSource`. Die <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls sind die neuen Zeilen nicht freigegeben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexSource" /> is less than zero or greater than or equal to the number of rows in the control.  -or-  <paramref name="count" /> is less than zero.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  This operation would add a frozen row after unfrozen rows.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="AddCopy">
      <MemberSignature Language="C#" Value="public virtual int AddCopy (int indexSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddCopy(int32 indexSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.AddCopy(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddCopy (indexSource As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AddCopy(int indexSource);" />
      <MemberSignature Language="F#" Value="abstract member AddCopy : int -&gt; int&#xA;override this.AddCopy : int -&gt; int" Usage="dataGridViewRowCollection.AddCopy indexSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSource" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="indexSource">The index of the row on which to base the new row.</param>
        <summary>Adds a new row based on the row at the specified index.</summary>
        <returns>The index of the new row.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> Eigenschaft der neuen Zeile hat die gleichen Werte wie die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> die Zeile an `indexSource`. Die <xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A> Methode fügt eine freigegebene Zeile an die <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls ist die neue Zeile aufgehoben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexSource" /> is less than zero or greater than or equal to the number of rows in the collection.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  This operation would add a frozen row after unfrozen rows.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (params System.Windows.Forms.DataGridViewRow[] dataGridViewRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.DataGridViewRow[] dataGridViewRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.AddRange(System.Windows.Forms.DataGridViewRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (ParamArray dataGridViewRows As DataGridViewRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(... cli::array &lt;System::Windows::Forms::DataGridViewRow ^&gt; ^ dataGridViewRows);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.DataGridViewRow[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.DataGridViewRow[] -&gt; unit" Usage="dataGridViewRowCollection.AddRange dataGridViewRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRows" Type="System.Windows.Forms.DataGridViewRow[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dataGridViewRows">An array of <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects to be added to the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Adds the specified <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects to the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.AddRange%2A> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls sind die neuen Zeilen nicht freigegeben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
> [!IMPORTANT]
>  Aufgrund eines Fehlers die <xref:System.Windows.Forms.DataGridViewRowCollection.AddRange%2A> Methode wird die Anwendung beenden reagiert If stellen die <xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A> Eigenschaft ist `true` und die Zeile für neue Datensätze ausgewählt ist. Um diesen Fehler zu umgehen, müssen Sie Aufheben der Auswahl der Zeile vor dem Aufrufen dieser Methode, und wählen Sie die Zeile erneut. Weitere Informationen finden Sie im Codebeispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridViewRowCollection.AddRange%2A> Methode, wenn die Zeile für neue Datensätze ausgewählt ist, um den Fehler umgehen angegeben wird, klicken Sie im Abschnitt "Hinweise".  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRows" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRows" /> contains only one row, and the row it contains has more cells than there are columns in the control.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  At least one entry in the <paramref name="dataGridViewRows" /> array is <see langword="null" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  At least one row in the <paramref name="dataGridViewRows" /> array has a <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> property value that is not <see langword="null" />.  -or-  At least one row in the <paramref name="dataGridViewRows" /> array has a <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" /> property value of <see langword="true" />.  -or-  Two or more rows in the <paramref name="dataGridViewRows" /> array are identical.  -or-  At least one row in the <paramref name="dataGridViewRows" /> array contains one or more cells of a type that is incompatible with the type of the corresponding column in the control.  -or-  At least one row in the <paramref name="dataGridViewRows" /> array contains more cells than there are columns in the control.  -or-  This operation would add frozen rows after unfrozen rows.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.InsertRange(System.Int32,System.Windows.Forms.DataGridViewRow[])" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="dataGridViewRowCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the collection.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The collection is data bound and the underlying data source does not support clearing the row data.  -or-  The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents the row collection from being modified:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataGridViewRowCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.CollectionChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the contents of the collection change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieses Elements. Im Beispiel meldet ein Ereignishandler für das Vorkommen der <xref:System.Windows.Forms.DataGridViewRowCollection.CollectionChanged> Ereignis. Dieser Bericht hilft Ihnen, um zu erfahren, wann das Ereignis tritt auf, und unterstützen Sie beim Debuggen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, sollten Sie ersetzen <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, das eine Instanz des Typs enthält <xref:System.Windows.Forms.DataGridViewRowCollection> mit dem Namen `DataGridViewRowCollection1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.DataGridViewRowCollection.CollectionChanged> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#373](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#373)]
 [!code-vb[System.Windows.Forms.EventExamples#373](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#373)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Contains(System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Windows.Forms.DataGridViewRow -&gt; bool&#xA;override this.Contains : System.Windows.Forms.DataGridViewRow -&gt; bool" Usage="dataGridViewRowCollection.Contains dataGridViewRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="dataGridViewRow">The <see cref="T:System.Windows.Forms.DataGridViewRow" /> to locate in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Determines whether the specified <see cref="T:System.Windows.Forms.DataGridViewRow" /> is in the collection.</summary>
        <returns>
          <see langword="true" /> if the <see cref="T:System.Windows.Forms.DataGridViewRow" /> is in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Forms.DataGridViewRow[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Forms.DataGridViewRow[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.CopyTo(System.Windows.Forms.DataGridViewRow[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DataGridViewRow(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Forms::DataGridViewRow ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Windows.Forms.DataGridViewRow[] * int -&gt; unit" Usage="dataGridViewRowCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Forms.DataGridViewRow[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">A <see cref="T:System.Windows.Forms.DataGridViewRow" /> array that is the destination of the items copied from the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <param name="index">The zero-based index in <c>array</c> at which copying begins.</param>
        <summary>Copies the items from the collection into the specified <see cref="T:System.Windows.Forms.DataGridViewRow" /> array, starting at the specified index.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> is multidimensional.  -or-  The number of elements in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.DataGridViewRowCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of rows in the collection.</summary>
        <value>Die Anzahl der Zeilen in <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="DataGridView">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.DataGridView DataGridView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView DataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.DataGridView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::DataGridView ^ DataGridView { System::Windows::Forms::DataGridView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataGridView : System.Windows.Forms.DataGridView" Usage="System.Windows.Forms.DataGridViewRowCollection.DataGridView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.Forms.DataGridView" /> that owns the collection.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DataGridView" />, der die <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> besitzt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the first row in the collection that meets the specified criteria.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstRow">
      <MemberSignature Language="C#" Value="public int GetFirstRow (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstRow(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstRow (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstRow(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetFirstRow : System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridViewRowCollection.GetFirstRow includeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <summary>Returns the index of the first <see cref="T:System.Windows.Forms.DataGridViewRow" /> that meets the specified criteria.</summary>
        <returns>The index of the first <see cref="T:System.Windows.Forms.DataGridViewRow" /> that has the attributes specified by <paramref name="includeFilter" />; -1 if no row is found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstRow">
      <MemberSignature Language="C#" Value="public int GetFirstRow (System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstRow(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow(System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstRow (includeFilter As DataGridViewElementStates, excludeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstRow(System::Windows::Forms::DataGridViewElementStates includeFilter, System::Windows::Forms::DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetFirstRow : System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridViewRowCollection.GetFirstRow (includeFilter, excludeFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <param name="excludeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <summary>Returns the index of the first <see cref="T:System.Windows.Forms.DataGridViewRow" /> that meets the specified inclusion and exclusion criteria.</summary>
        <returns>The index of the first <see cref="T:System.Windows.Forms.DataGridViewRow" /> that has the attributes specified by <paramref name="includeFilter" />, and does not have the attributes specified by <paramref name="excludeFilter" />; -1 if no row is found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">One or both of the specified filter values is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetLastRow">
      <MemberSignature Language="C#" Value="public int GetLastRow (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastRow(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetLastRow(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastRow (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastRow(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetLastRow : System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridViewRowCollection.GetLastRow includeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <summary>Returns the index of the last <see cref="T:System.Windows.Forms.DataGridViewRow" /> that meets the specified criteria.</summary>
        <returns>The index of the last <see cref="T:System.Windows.Forms.DataGridViewRow" /> that has the attributes specified by <paramref name="includeFilter" />; -1 if no row is found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the next row in the collection that meets the specified criteria.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextRow">
      <MemberSignature Language="C#" Value="public int GetNextRow (int indexStart, System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextRow(int32 indexStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetNextRow(System.Int32,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextRow (indexStart As Integer, includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextRow(int indexStart, System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetNextRow : int * System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridViewRowCollection.GetNextRow (indexStart, includeFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexStart" Type="System.Int32" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="indexStart">The index of the row where the method should begin to look for the next <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="includeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <summary>Returns the index of the next <see cref="T:System.Windows.Forms.DataGridViewRow" /> that meets the specified criteria.</summary>
        <returns>The index of the first <see cref="T:System.Windows.Forms.DataGridViewRow" /> after <paramref name="indexStart" /> that has the attributes specified by <paramref name="includeFilter" />, or -1 if no row is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%28System.Int32%2CSystem.Windows.Forms.DataGridViewElementStates%29> -Methode beginnt die Suche nach der Zeile, die beginnend mit der Zeile nach Kriterien entspricht `indexStart`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexStart" /> is less than -1.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetNextRow">
      <MemberSignature Language="C#" Value="public int GetNextRow (int indexStart, System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextRow(int32 indexStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetNextRow(System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextRow (indexStart As Integer, includeFilter As DataGridViewElementStates, excludeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextRow(int indexStart, System::Windows::Forms::DataGridViewElementStates includeFilter, System::Windows::Forms::DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetNextRow : int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridViewRowCollection.GetNextRow (indexStart, includeFilter, excludeFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexStart" Type="System.Int32" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="indexStart">The index of the row where the method should begin to look for the next <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="includeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <param name="excludeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <summary>Returns the index of the next <see cref="T:System.Windows.Forms.DataGridViewRow" /> that meets the specified inclusion and exclusion criteria.</summary>
        <returns>The index of the next <see cref="T:System.Windows.Forms.DataGridViewRow" /> that has the attributes specified by <paramref name="includeFilter" />, and does not have the attributes specified by <paramref name="excludeFilter" />; -1 if no row is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%28System.Int32%2CSystem.Windows.Forms.DataGridViewElementStates%2CSystem.Windows.Forms.DataGridViewElementStates%29> -Methode beginnt die Suche nach der Zeile, die beginnend mit der Zeile nach Kriterien entspricht `indexStart`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexStart" /> is less than -1.</exception>
        <exception cref="T:System.ArgumentException">One or both of the specified filter values is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPreviousRow">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the previous row in the collection that meets the specified criteria.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPreviousRow">
      <MemberSignature Language="C#" Value="public int GetPreviousRow (int indexStart, System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPreviousRow(int32 indexStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow(System.Int32,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousRow (indexStart As Integer, includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPreviousRow(int indexStart, System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousRow : int * System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridViewRowCollection.GetPreviousRow (indexStart, includeFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexStart" Type="System.Int32" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="indexStart">The index of the row where the method should begin to look for the previous <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="includeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <summary>Returns the index of the previous <see cref="T:System.Windows.Forms.DataGridViewRow" /> that meets the specified criteria.</summary>
        <returns>The index of the previous <see cref="T:System.Windows.Forms.DataGridViewRow" /> that has the attributes specified by <paramref name="includeFilter" />; -1 if no row is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%28System.Int32%2CSystem.Windows.Forms.DataGridViewElementStates%29> -Methode beginnt die Suche nach der Zeile, die Zeile mit der vor dem Starten Kriterien entspricht `indexStart`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexStart" /> is greater than the number of rows in the collection.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousRow">
      <MemberSignature Language="C#" Value="public int GetPreviousRow (int indexStart, System.Windows.Forms.DataGridViewElementStates includeFilter, System.Windows.Forms.DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPreviousRow(int32 indexStart, valuetype System.Windows.Forms.DataGridViewElementStates includeFilter, valuetype System.Windows.Forms.DataGridViewElementStates excludeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow(System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousRow (indexStart As Integer, includeFilter As DataGridViewElementStates, excludeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPreviousRow(int indexStart, System::Windows::Forms::DataGridViewElementStates includeFilter, System::Windows::Forms::DataGridViewElementStates excludeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousRow : int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridViewRowCollection.GetPreviousRow (indexStart, includeFilter, excludeFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexStart" Type="System.Int32" />
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="excludeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="indexStart">The index of the row where the method should begin to look for the previous <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="includeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <param name="excludeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <summary>Returns the index of the previous <see cref="T:System.Windows.Forms.DataGridViewRow" /> that meets the specified inclusion and exclusion criteria.</summary>
        <returns>The index of the previous <see cref="T:System.Windows.Forms.DataGridViewRow" /> that has the attributes specified by <paramref name="includeFilter" />, and does not have the attributes specified by <paramref name="excludeFilter" />; -1 if no row is found.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%28System.Int32%2CSystem.Windows.Forms.DataGridViewElementStates%2CSystem.Windows.Forms.DataGridViewElementStates%29> -Methode beginnt die Suche nach der Zeile, die Zeile mit der vor dem Starten Kriterien entspricht `indexStart`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexStart" /> is greater than the number of rows in the collection.</exception>
        <exception cref="T:System.ArgumentException">One or both of the specified filter values is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public int GetRowCount (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowCount(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetRowCount(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCount (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowCount(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetRowCount : System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridViewRowCollection.GetRowCount includeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <summary>Returns the number of <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects in the collection that meet the specified criteria.</summary>
        <returns>The number of <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> that have the attributes specified by <paramref name="includeFilter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Methode zum Abrufen der Anzahl der ausgewählten Zeilen.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetRowsHeight">
      <MemberSignature Language="C#" Value="public int GetRowsHeight (System.Windows.Forms.DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowsHeight(valuetype System.Windows.Forms.DataGridViewElementStates includeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight(System.Windows.Forms.DataGridViewElementStates)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowsHeight (includeFilter As DataGridViewElementStates) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowsHeight(System::Windows::Forms::DataGridViewElementStates includeFilter);" />
      <MemberSignature Language="F#" Value="member this.GetRowsHeight : System.Windows.Forms.DataGridViewElementStates -&gt; int" Usage="dataGridViewRowCollection.GetRowsHeight includeFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeFilter" Type="System.Windows.Forms.DataGridViewElementStates" />
      </Parameters>
      <Docs>
        <param name="includeFilter">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</param>
        <summary>Returns the cumulative height of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects that meet the specified criteria.</summary>
        <returns>The cumulative height of <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> that have the attributes specified by <paramref name="includeFilter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="includeFilter" /> is not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="GetRowState">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewElementStates GetRowState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetRowState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.GetRowState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRowState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewElementStates GetRowState(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetRowState : int -&gt; System.Windows.Forms.DataGridViewElementStates&#xA;override this.GetRowState : int -&gt; System.Windows.Forms.DataGridViewElementStates" Usage="dataGridViewRowCollection.GetRowState rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">The index of the row.</param>
        <summary>Gets the state of the row with the specified index.</summary>
        <returns>A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values indicating the state of the specified row.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> is less than zero and greater than the number of rows in the collection minus one.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.IndexOf(System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.DataGridViewRow -&gt; int" Usage="dataGridViewRowCollection.IndexOf dataGridViewRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="dataGridViewRow">The <see cref="T:System.Windows.Forms.DataGridViewRow" /> to locate in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Returns the index of a specified item in the collection.</summary>
        <returns>The index of <paramref name="value" /> if it is a <see cref="T:System.Windows.Forms.DataGridViewRow" /> found in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />; otherwise, -1.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inserts one or more rows into the collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int rowIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 rowIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Insert(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (rowIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int rowIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * int -&gt; unit&#xA;override this.Insert : int * int -&gt; unit" Usage="dataGridViewRowCollection.Insert (rowIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">The position at which to insert the rows.</param>
        <param name="count">The number of rows to insert into the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Inserts the specified number of rows into the collection at the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Insert%28System.Int32%2CSystem.Int32%29> Methode fügt Zeilen auf der Basis der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> von der <xref:System.Windows.Forms.DataGridView>. Die neue Zeile ist, wenn möglich freigegeben. Stellen Sie sicher, dass der Zeile angegeben wird, der <xref:System.Windows.Forms.DataGridView.RowTemplate%2A> Eigenschaft für eine optimale Skalierbarkeit gemeinsam genutzt werden kann. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> is less than zero or greater than the number of rows in the collection.  -or-  <paramref name="count" /> is less than 1.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  <paramref name="rowIndex" /> is equal to the number of rows in the collection and the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is set to <see langword="true" />.  -or-  The row returned by the <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" /> property has more cells than there are columns in the control.  -or-  This operation would insert a frozen row after unfrozen rows or an unfrozen row before frozen rows.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int rowIndex, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 rowIndex, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Insert(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (rowIndex As Integer, ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int rowIndex, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj[] -&gt; unit&#xA;override this.Insert : int * obj[] -&gt; unit" Usage="dataGridViewRowCollection.Insert (rowIndex, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rowIndex">The position at which to insert the row.</param>
        <param name="values">A variable number of objects that populate the cells of the new row.</param>
        <summary>Inserts a row into the collection at the specified position, and populates the cells with the specified objects.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Insert%28System.Int32%2CSystem.Object%5B%5D%29> Methode fügt eine Zeile aufgehoben, um die <xref:System.Windows.Forms.DataGridViewRowCollection>.  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> is less than zero or greater than the number of rows in the collection.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="values" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.VirtualMode" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is set to <see langword="true" />.  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  <paramref name="rowIndex" /> is equal to the number of rows in the collection and the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is set to <see langword="true" />.  -or-  The <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> property of the row returned by the control's <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" /> property is not <see langword="null" />.  -or-  This operation would insert a frozen row after unfrozen rows or an unfrozen row before frozen rows.</exception>
        <exception cref="T:System.ArgumentException">The row returned by the control's <see cref="P:System.Windows.Forms.DataGridView.RowTemplate" /> property has more cells than there are columns in the control.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int rowIndex, System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 rowIndex, class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Insert(System.Int32,System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int rowIndex, System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Forms.DataGridViewRow -&gt; unit&#xA;override this.Insert : int * System.Windows.Forms.DataGridViewRow -&gt; unit" Usage="dataGridViewRowCollection.Insert (rowIndex, dataGridViewRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="rowIndex">The position at which to insert the row.</param>
        <param name="dataGridViewRow">The <see cref="T:System.Windows.Forms.DataGridViewRow" /> to insert into the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Inserts the specified <see cref="T:System.Windows.Forms.DataGridViewRow" /> into the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.Insert%28System.Int32%2CSystem.Windows.Forms.DataGridViewRow%29> Methode fügt eine freigegebene Zeile an die <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls ist die neue Zeile aufgehoben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> is less than zero or greater than the number of rows in the collection.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRow" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  <paramref name="rowIndex" /> is equal to the number of rows in the collection and the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is set to <see langword="true" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  The <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> property of <paramref name="dataGridViewRow" /> is not <see langword="null" />.  -or-  <paramref name="dataGridViewRow" /> has a <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" /> property value of <see langword="true" />.  -or-  This operation would insert a frozen row after unfrozen rows or an unfrozen row before frozen rows.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRow" /> has more cells than there are columns in the control.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="InsertCopies">
      <MemberSignature Language="C#" Value="public virtual void InsertCopies (int indexSource, int indexDestination, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCopies(int32 indexSource, int32 indexDestination, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.InsertCopies(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertCopies (indexSource As Integer, indexDestination As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertCopies(int indexSource, int indexDestination, int count);" />
      <MemberSignature Language="F#" Value="abstract member InsertCopies : int * int * int -&gt; unit&#xA;override this.InsertCopies : int * int * int -&gt; unit" Usage="dataGridViewRowCollection.InsertCopies (indexSource, indexDestination, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSource" Type="System.Int32" />
        <Parameter Name="indexDestination" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="indexSource">The index of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> on which to base the new rows.</param>
        <param name="indexDestination">The position at which to insert the rows.</param>
        <param name="count">The number of <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects to add to the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Inserts rows into the collection at the specified position.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> -Eigenschaft der neuen <xref:System.Windows.Forms.DataGridViewRow> Objekte verfügt über die gleichen Werte wie die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> von der <xref:System.Windows.Forms.DataGridViewRow> am `indexSource`. Die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls sind die neuen Zeilen nicht freigegeben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexSource" /> is less than zero or greater than the number of rows in the collection minus one.  -or-  <paramref name="indexDestination" /> is less than zero or greater than the number of rows in the collection.  -or-  <paramref name="count" /> is less than 1.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  <paramref name="indexDestination" /> is equal to the number of rows in the collection and <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> is <see langword="true" />.  -or-  This operation would insert frozen rows after unfrozen rows or unfrozen rows before frozen rows.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="InsertCopy">
      <MemberSignature Language="C#" Value="public virtual void InsertCopy (int indexSource, int indexDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertCopy(int32 indexSource, int32 indexDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.InsertCopy(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertCopy (indexSource As Integer, indexDestination As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertCopy(int indexSource, int indexDestination);" />
      <MemberSignature Language="F#" Value="abstract member InsertCopy : int * int -&gt; unit&#xA;override this.InsertCopy : int * int -&gt; unit" Usage="dataGridViewRowCollection.InsertCopy (indexSource, indexDestination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexSource" Type="System.Int32" />
        <Parameter Name="indexDestination" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="indexSource">The index of the row on which to base the new row.</param>
        <param name="indexDestination">The position at which to insert the row.</param>
        <summary>Inserts a row into the collection at the specified position, based on the row at specified position.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode weist der neuen Zeile den im angegebenen Index der `indexDestination` Parameter und erhöht die Indizes für alle nachfolgenden Zeilen. Die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> -Eigenschaft der neuen <xref:System.Windows.Forms.DataGridViewRow> hat die gleichen Werte wie die <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> von der <xref:System.Windows.Forms.DataGridViewRow> am `indexSource`. Die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A> Methode fügt eine freigegebene Zeile an die <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls ist die neue Zeile aufgehoben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="indexSource" /> is less than zero or greater than the number of rows in the collection minus one.  -or-  <paramref name="indexDestination" /> is less than zero or greater than the number of rows in the collection.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  <paramref name="indexDestination" /> is equal to the number of rows in the collection and <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> is <see langword="true" />.  -or-  This operation would insert a frozen row after unfrozen rows or an unfrozen row before frozen rows.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int rowIndex, params System.Windows.Forms.DataGridViewRow[] dataGridViewRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 rowIndex, class System.Windows.Forms.DataGridViewRow[] dataGridViewRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.InsertRange(System.Int32,System.Windows.Forms.DataGridViewRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (rowIndex As Integer, ParamArray dataGridViewRows As DataGridViewRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int rowIndex, ... cli::array &lt;System::Windows::Forms::DataGridViewRow ^&gt; ^ dataGridViewRows);" />
      <MemberSignature Language="F#" Value="abstract member InsertRange : int * System.Windows.Forms.DataGridViewRow[] -&gt; unit&#xA;override this.InsertRange : int * System.Windows.Forms.DataGridViewRow[] -&gt; unit" Usage="dataGridViewRowCollection.InsertRange (rowIndex, dataGridViewRows)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataGridViewRows" Type="System.Windows.Forms.DataGridViewRow[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rowIndex">The position at which to insert the rows.</param>
        <param name="dataGridViewRows">An array of <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects to add to the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Inserts the <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects into the collection at the specified position.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertRange%2A> Methode fügt freigegebene Zeilen der <xref:System.Windows.Forms.DataGridViewRowCollection>, sofern dies möglich. Andernfalls sind die neuen Zeilen nicht freigegeben. Weitere Informationen finden Sie unter [Best Practices zum Skalieren des DataGridView-Steuerelements in Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
> [!IMPORTANT]
>  Aufgrund eines Fehlers die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertRange%2A> Methode stellen die Anwendung beenden reagiert If alle Zeilen mit einem Index größer als `rowIndex` ausgewählt sind. Um diesen Fehler zu umgehen, müssen Sie Aufheben der Auswahl dieser Zeilen vor dem Aufrufen dieser Methode und danach die Zeilen. Weitere Informationen finden Sie im Codebeispiel in diesem Thema.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.DataGridViewRowCollection.InsertRange%2A> Methode zum Einfügen von Zeilen vor der ausgewählten Zeilen, die den Fehler umgehen angegeben wird, klicken Sie im Abschnitt "Hinweise".  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRows" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> is less than zero or greater than the number of rows in the collection.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRows" /> contains only one row, and the row it contains has more cells than there are columns in the control.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  <paramref name="rowIndex" /> is equal to the number of rows in the collection and <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> is <see langword="true" />.  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  At least one entry in the <paramref name="dataGridViewRows" /> array is <see langword="null" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  At least one row in the <paramref name="dataGridViewRows" /> array has a <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> property value that is not <see langword="null" />.  -or-  At least one row in the <paramref name="dataGridViewRows" /> array has a <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" /> property value of <see langword="true" />.  -or-  Two or more rows in the <paramref name="dataGridViewRows" /> array are identical.  -or-  At least one row in the <paramref name="dataGridViewRows" /> array contains one or more cells of a type that is incompatible with the type of the corresponding column in the control.  -or-  At least one row in the <paramref name="dataGridViewRows" /> array contains more cells than there are columns in the control.  -or-  This operation would insert frozen rows after unfrozen rows or unfrozen rows before frozen rows.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.AddRange(System.Windows.Forms.DataGridViewRow[])" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRow Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRow ^ default[int] { System::Windows::Forms::DataGridViewRow ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.DataGridViewRow" Usage="System.Windows.Forms.DataGridViewRowCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> to get.</param>
        <summary>Gets the <see cref="T:System.Windows.Forms.DataGridViewRow" /> at the specified index.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DataGridViewRow" /> am angegebenen Index. Zugreifen auf eine <see cref="T:System.Windows.Forms.DataGridViewRow" /> mit diesem Indexer wird die Zeile aufgehoben wird. Um die Zeile weiterhin freigegeben ist, verwenden die <see cref="M:System.Windows.Forms.DataGridViewRowCollection.SharedRow(System.Int32)" /> Methode. Weitere Informationen finden Sie unter [bewährte Methoden für die Skalierung von Windows Forms-DataGridView-Control](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than 0.  \- or -  <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Forms.DataGridViewRowCollection.Count" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.ArrayList" Usage="System.Windows.Forms.DataGridViewRowCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an array of <see cref="T:System.Windows.Forms.DataGridViewRow" /> objects.</summary>
        <value>Ein Array von <see cref="T:System.Windows.Forms.DataGridViewRow" />-Objekten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.List%2A> hebt die Freigabe aller Zeilen in der <xref:System.Windows.Forms.DataGridViewRowCollection>, daher sollten die Verwendung dieser Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="OnCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCollectionChanged(class System.ComponentModel.CollectionChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCollectionChanged (e As CollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCollectionChanged(System::ComponentModel::CollectionChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit&#xA;override this.OnCollectionChanged : System.ComponentModel.CollectionChangeEventArgs -&gt; unit" Usage="dataGridViewRowCollection.OnCollectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
        <summary>Raises the <see cref="E:System.Windows.Forms.DataGridViewRowCollection.CollectionChanged" /> event.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.DataGridViewRowCollection.OnCollectionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Windows.Forms.DataGridViewRowCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Forms.DataGridViewRowCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.DataGridViewRow dataGridViewRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.DataGridViewRow dataGridViewRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.Remove(System.Windows.Forms.DataGridViewRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::DataGridViewRow ^ dataGridViewRow);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.DataGridViewRow -&gt; unit&#xA;override this.Remove : System.Windows.Forms.DataGridViewRow -&gt; unit" Usage="dataGridViewRowCollection.Remove dataGridViewRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewRow" Type="System.Windows.Forms.DataGridViewRow" />
      </Parameters>
      <Docs>
        <param name="dataGridViewRow">The row to remove from the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Removes the row from the collection.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewRow" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataGridViewRow" /> is not contained in this collection.  -or-  <paramref name="dataGridViewRow" /> is a shared row.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  <paramref name="dataGridViewRow" /> is the row for new records.  -or-  The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is bound to an <see cref="T:System.ComponentModel.IBindingList" /> implementation with <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> and <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" /> property values that are not both <see langword="true" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="dataGridViewRowCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The position of the row to remove.</param>
        <summary>Removes the row at the specified position from the collection.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero and greater than the number of rows in the collection minus one.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  <paramref name="index" /> is equal to the number of rows in the collection and the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is set to <see langword="true" />.  -or-  The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is bound to an <see cref="T:System.ComponentModel.IBindingList" /> implementation with <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> and <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" /> property values that are not both <see langword="true" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="SharedRow">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRow SharedRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataGridViewRow SharedRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.SharedRow(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharedRow (rowIndex As Integer) As DataGridViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataGridViewRow ^ SharedRow(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.SharedRow : int -&gt; System.Windows.Forms.DataGridViewRow" Usage="dataGridViewRowCollection.SharedRow rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">The index of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> to get.</param>
        <summary>Returns the <see cref="T:System.Windows.Forms.DataGridViewRow" /> at the specified index.</summary>
        <returns>The <see cref="T:System.Windows.Forms.DataGridViewRow" /> positioned at the specified index.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewRowCollection.SharedRow%2A> Methode gibt ein <xref:System.Windows.Forms.DataGridViewRow> ohne Freigabe der Zeile aufzuheben. Wenn Sie eine freigegebene Zeile ändern, werden alle Zeilen, die diese Zeile freigeben geändert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
        <param name="index">The zero-based index in <c>array</c> at which copying begins.</param>
        <summary>Copies the elements of the collection to an <see cref="T:System.Array" />, starting at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="array" /> is multidimensional.  -or-  The number of elements in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</exception>
        <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> cannot be cast automatically to the type of <paramref name="array" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.DataGridViewRowCollection.System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of elements contained in the collection.</summary>
        <value>Die Anzahl der Elemente, die in <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> enthalten sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.DataGridViewRowCollection.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.DataGridViewRowCollection.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object that can be used to synchronize access to the collection.</summary>
        <value>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Windows.Forms.DataGridViewRowCollection" /> synchronisiert werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
        <summary>Adds a <see cref="T:System.Windows.Forms.DataGridViewRow" /> to the collection.</summary>
        <returns>The index of the new <see cref="T:System.Windows.Forms.DataGridViewRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Diese Methode ruft die <xref:System.Windows.Forms.DataGridViewRowCollection.Add%28System.Windows.Forms.DataGridViewRow%29> -Überladung übergeben `value` nach der Umwandlung auf einen <xref:System.Windows.Forms.DataGridViewRow>.  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  The <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> property of the <paramref name="value" /> is not <see langword="null" />.  -or-  <paramref name="value" /> has a <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" /> property value of <see langword="true" />.  -or-  This operation would add a frozen row after unfrozen rows.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> has more cells than there are columns in the control.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all items from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The collection is data bound and the underlying data source does not support clearing the row data.  -or-  The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" /></exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The item to locate in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Determines whether the collection contains the specified item.</summary>
        <returns>
          <see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Windows.Forms.DataGridViewRow" /> found in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to locate in the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Returns the index of a specified item in the collection.</summary>
        <returns>The index of <paramref name="value" /> if it is a <see cref="T:System.Windows.Forms.DataGridViewRow" /> found in the list; otherwise, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index at which <c>value</c> should be inserted.</param>
        <param name="value">The <see cref="T:System.Windows.Forms.DataGridViewRow" /> to insert into the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Inserts a <see cref="T:System.Windows.Forms.DataGridViewRow" /> into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 Diese Methode ruft die <xref:System.Windows.Forms.DataGridViewRowCollection.Insert%28System.Int32%2CSystem.Windows.Forms.DataGridViewRow%29> -Überladung Wert nach der Umwandlung zum Übergeben einer <xref:System.Windows.Forms.DataGridViewRow>.  
  
 Zeilen im Steuerelement werden nicht automatisch sortiert werden, wenn neue Zeilen hinzugefügt werden. Aufrufen, um neue Zeilen in die richtige Position zu sortieren, die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.RowsAdded?displayProperty=nameWithType> -Ereignishandler. Kann auch aufgerufen werden soll die <xref:System.Windows.Forms.DataGridView.Sort%2A?displayProperty=nameWithType> Methode in einer <xref:System.Windows.Forms.DataGridView.CellValueChanged> -Ereignishandler, um die Zeilen sortieren, wenn der Benutzer eine Zelle ändert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero or greater than the number of rows in the collection.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  The <see cref="P:System.Windows.Forms.DataGridView.DataSource" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is not <see langword="null" />.  -or-  <paramref name="index" /> is equal to the number of rows in the collection and the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is set to <see langword="true" />.  -or-  The <see cref="T:System.Windows.Forms.DataGridView" /> has no columns.  -or-  The <see cref="P:System.Windows.Forms.DataGridViewElement.DataGridView" /> property of the <paramref name="value" /> is not <see langword="null" />.  -or-  <paramref name="value" /> has a <see cref="P:System.Windows.Forms.DataGridViewRow.Selected" /> property value of <see langword="true" />.  -or-  This operation would insert a frozen row after unfrozen rows or an unfrozen row before frozen rows.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> has more cells than there are columns in the control.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.DataGridViewRowCollection.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection has a fixed size.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.DataGridViewRowCollection.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the collection is read-only.</summary>
        <value>
          <see langword="false" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.DataGridViewRowCollection.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the element to get or set.</param>
        <summary>Gets or sets the element at the specified index.</summary>
        <value>Der <see cref="T:System.Windows.Forms.DataGridViewRow" /> am angegebenen Index.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung unterstützt das Festlegen dieser Eigenschaft nicht.  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The user tried to set this property.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than 0.  \- or -  <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Forms.DataGridViewRowCollection.Count" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Windows.Forms.DataGridViewRow" /> to remove from the <see cref="T:System.Windows.Forms.DataGridViewRowCollection" />.</param>
        <summary>Removes the specified <see cref="T:System.Windows.Forms.DataGridViewRow" /> from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <paramref name="value" /> is not a <see cref="T:System.Windows.Forms.DataGridViewRow" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is not contained in this collection.  -or-  <paramref name="value" /> is a shared row.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  <paramref name="value" /> is the row for new records.  -or-  The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is bound to an <see cref="T:System.ComponentModel.IBindingList" /> implementation with <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> and <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" /> property values that are not both <see langword="true" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRowCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> to remove.</param>
        <summary>Removes the <see cref="T:System.Windows.Forms.DataGridViewRow" /> from the collection at the specified position.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewRowCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is less than zero and greater than the number of rows in the collection minus one.</exception>
        <exception cref="T:System.InvalidOperationException">The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is performing one of the following actions that temporarily prevents new rows from being added:  -   Selecting all cells in the control.  -   Clearing the selection.  -or-  This method is being called from a handler for one of the following <see cref="T:System.Windows.Forms.DataGridView" /> events:  -   <see cref="E:System.Windows.Forms.DataGridView.CellEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidating" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.CellValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowEnter" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowLeave" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidated" />  
  
-   <see cref="E:System.Windows.Forms.DataGridView.RowValidating" />  -or-  <paramref name="index" /> is equal to the number of rows in the collection and the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToAddRows" /> property of the <see cref="T:System.Windows.Forms.DataGridView" /> is set to <see langword="true" />.  -or-  The associated <see cref="T:System.Windows.Forms.DataGridView" /> control is bound to an <see cref="T:System.ComponentModel.IBindingList" /> implementation with <see cref="P:System.ComponentModel.IBindingList.AllowRemove" /> and <see cref="P:System.ComponentModel.IBindingList.SupportsChangeNotification" /> property values that are not both <see langword="true" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>