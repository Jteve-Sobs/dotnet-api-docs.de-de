<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b899c91a8eee2fe00bb702129bb1fbe1ae795bd1" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58552851" /></Metadata><TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Informationen bereit, die von barrierefreien Anwendungen verwendet werden, um die Benutzeroberfläche von Anwendungen für Benutzer mit Einschränkungen anzupassen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Barrierefreiheitsanwendungen können die Funktionen der Anwendung zur Verbesserung der benutzerfreundlichkeit für Benutzer mit behinderungen anpassen.  
  
 Für Benutzer mit sehbehinderung, können Sie Software und Betriebssystem-Features zur Einhaltung von ihren Anforderungen anpassen. Sie können z. B. Text und Bilder vergrößern und mit einem Kontrast zu rendern. Darüber hinaus können Sie Color-blindness mit der entsprechenden Verwendung von Farben berücksichtigen. Für Benutzer, die visuell erheblich beeinträchtigt werden, stehen Computern Hilfsmitteln bei Bildschirm-überprüfen Sie, die auf dem Bildschirm übersetzt Text in Sprache oder eine dynamische, aktualisierbare, Blindenschrift Anzeige.  
  
 Für Benutzer, die hörgeschädigt sind, können Sie Programme entwerfen, die visuelle Hinweise, wie z. B. eine blinkende Symbolleiste verwenden; oder Sie gesprochene Nachrichten als Text anzeigen. Beispielsweise, wenn aktiviert, die `SoundSentry` -Funktion, eine Eingabehilfeoption in der Systemsteuerung bietet eine visual Warnung, wenn das System einen Alarm sound sendet.  
  
 Für Benutzer mit eingeschränkter Beweglichkeit können Sie entwerfen Steuerelemente, die zu optimieren oder Entfernen von Tastatur und Maus verwenden, wodurch Computer Barrierefreiheit verbessert. Systemsteuerung bietet Unterstützung zu erhalten. Beispielsweise ist eine Alternative für die Navigation der Zehnertastatur anstelle der Maus zu verwenden. Eine andere Option mit dem Namen `StickyKeys`, ermöglicht es Benutzern zu einem Zeitpunkt (z. B. STRG + P) zwei oder mehr Tasten gedrückt halten können, um das gleiche Ergebnis zu erhalten, geben Sie einen Schlüssel zu einem Zeitpunkt.  
  
 Für Benutzer mit cognitive Sprache behinderungen, Entwerfen Sie Softwareprogrammen an ihre Anforderungen besser zu erfüllen. Mithilfe von auffälligen oder Grundschulstandard Sequenzierung, unkomplizierten zeigt, weniger Wörter und eine Lesen-Ebene, die speziell für Programmentwickler konzipiert Grundschule Standards kann z. B. diese Benutzer profitieren.  
  
 Für Benutzer von Übernahme zu können Sie von Softwareprogrammen, Übernahme provozieren Muster zu beseitigen entwerfen.  
  
 Weitere Informationen zu Eingabehilfen, einschließlich Informationen über Eingabehilfen-Anwendungen finden Sie unter der Dokumentation zu Microsoft Accessibility in der MSDN Library oder auf der Microsoft-Website.  
  
> [!NOTE]
>  Verwenden der <xref:System.Windows.Forms.AccessibleObject>, müssen Sie einen Verweis zum Hinzufügen der `Accessibility` mit installierte Assembly die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Windows Forms unterstützt nur Active Accessibility 2.0.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Wenn Sie von dieser Klasse erben, können Sie alle Member überschreiben.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.AccessibleObject" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel, wenn Sie diese Methode verwenden, um ein barrierefreies Objekt zu erstellen, stellen Sie eigene Implementierungen der Eigenschaften und Methoden der Klasse, um die Funktionalität Ihrer Anwendung bereit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der untergeordneten Schnittstellen ab, die zu diesem Objekt gehören. Eine Beschreibung dieses Members finden Sie unter <see cref="P:Accessibility.IAccessible.accChildCount" />.</summary>
        <value>Die Anzahl der untergeordneten barrierefreien Objekte, die zu diesem Objekt gehören. Wenn das Objekt über keine untergeordneten Objekte verfügt, ist dieser Wert 0 (null).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:Accessibility.IAccessible>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die untergeordnete ID in dem Paar <see cref="T:Accessibility.IAccessible" />-Schnittstelle/untergeordnete ID, das das barrierefreie Objekt darstellt.</param>
        <summary>Führt die Standardaktion des angegebenen Objekts aus. Nicht alle Objekte verfügen über eine Standardaktion. Eine Beschreibung dieses Members finden Sie unter <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:Accessibility.IAccessible>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das den Tastaturfokus besitzt. Eine Beschreibung dieses Members finden Sie unter <see cref="P:Accessibility.IAccessible.accFocus" />.</summary>
        <value>Das Objekt, das den Tastaturfokus besitzt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Typ des Rückgabewerts der <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> Eigenschaft hängt von dem Objekt, das den Tastaturfokus verfügt. Die folgende Tabelle beschreibt das Objekt Typen, die <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> Eigenschaft zurückgibt.  
  
|Typ|Beschreibung |  
|----------|-----------------|  
|`null`|Dieses Objekt verfügt nicht über den Tastaturfokus selbst und enthält kein untergeordnetes Element, das den Tastaturfokus verfügt.|  
|Ganze Zahl|0, wenn das aktuelle Objekt über den Tastaturfokus verfügt; andernfalls, die untergeordnete ID des untergeordneten verfügbaren Objekts mit dem Tastaturfokus.|  
|<xref:Accessibility.IAccessible>|Das untergeordnete barrierefreie Objekt, das den Tastaturfokus verfügt.|  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:Accessibility.IAccessible>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">Die horizontale Koordinate.</param>
        <param name="yTop">Die vertikale Koordinate.</param>
        <summary>Ruft das untergeordnete Objekt an den angegebenen Bildschirmkoordinaten ab. Eine Beschreibung dieses Members finden Sie unter <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</summary>
        <returns>Das barrierefreie Objekt an dem von <paramref name="xLeft" /> und <paramref name="yTop" /> angegebenen Punkt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle beschreibt das Objekt Typen, die <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> Methode zurückgeben kann.  
  
|Typ|Beschreibung |  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|Das barrierefreie Objekt in der angegebenen Richtung.|  
|Ganze Zahl|0, wenn der angegebene Punkt, um das aktuelle Objekt ist oder außerhalb des Objekts Grenzen hinweg. andernfalls die ID des untergeordneten Elements, das das barrierefreie Objekt an der angegebenen Richtung identifiziert.|  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:Accessibility.IAccessible>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">Enthält nach dem Beenden der Methode die x-Koordinate des linken Objektrands. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <param name="pyTop">Enthält nach dem Beenden der Methode die y-Koordinate des oberen Objektrands. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <param name="pcxWidth">Enthält nach dem Beenden der Methode die Breite des Objekts. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <param name="pcyHeight">Enthält nach dem Beenden der Methode die Höhe des Objekts. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts. Dieser Parameter hat den Wert 0 (null), wenn die Position des Objekts abgerufen werden soll. Es kann sich bei dem Wert auch um die untergeordnete ID handeln, mit der die Position eines dem Objekt untergeordneten Objekts abgerufen werden kann.</param>
        <summary>Ruft die aktuelle Bildschirmposition des Objekts ab. Eine Beschreibung dieses Members finden Sie unter <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:Accessibility.IAccessible>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">Eine der <see cref="T:System.Windows.Forms.AccessibleNavigation" />-Enumerationen, die die Navigationsrichtung angibt.</param>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts. Dieser Parameter beträgt 0 (null), wenn von dem Objekt ausgegangen werden soll, oder der Wert ist die untergeordnete ID, wenn von einem der untergeordneten Objekte des Objekts ausgegangen werden soll.</param>
        <summary>Navigiert zu einem barrierefreien Objekt relativ zum aktuellen Objekt. Eine Beschreibung dieses Members finden Sie unter <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</summary>
        <returns>Das barrierefreie Objekt, das sich an dem durch <paramref name="navDir" /> angegebenen Wert befindet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle beschreibt das Objekt Typen, die <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> Methode zurückgeben kann.  
  
|Typ|Beschreibung |  
|----------|-----------------|  
|`null`|Es ist kein barrierefreies Objekt in der angegebenen Richtung.|  
|<xref:Accessibility.IAccessible>|Das barrierefreie Objekt in der angegebenen Richtung.|  
|Ganze Zahl|Die untergeordnete ID, das das barrierefreie Objekt an der angegebenen Richtung identifiziert. Verwenden Sie das übergeordnete Element <xref:Accessibility.IAccessible> und die untergeordnete ID, die Zugriff auf das Objekt zugegriffen werden kann.|  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:Accessibility.IAccessible>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das diesem Objekt übergeordnete barrierefreie Objekt ab. Eine Beschreibung dieses Members finden Sie unter <see cref="P:Accessibility.IAccessible.accParent" />.</summary>
        <value>Ein <see cref="T:Accessibility.IAccessible" />, das das übergeordnete Element des barrierefreien Objekts darstellt, oder <see langword="null" />, wenn kein übergeordnetes Objekt vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:Accessibility.IAccessible>-Schnittstelle umgewandelt wird. 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.AccessibleSelection" />-Werte.</param>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, mit der die Auswahl geändert wird. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Ändert die Auswahl oder verschiebt den Tastaturfokus des barrierefreien Objekts. Eine Beschreibung dieses Members finden Sie unter <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im folgenden wird beschrieben, welche <xref:System.Windows.Forms.AccessibleSelection> Werte angeben, wenn der Aufruf von `Select` komplexe Auswahlvorgänge ausführen.  
  
|Vorgang|Flag-Kombination|  
|---------------|----------------------|  
|Simuliert einen Klick|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|Ein Zielelement durch Simulieren von STRG + Klick auswählen|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|Zu Auswahl ein Zielelement Abbrechen, indem Sie Strg + Mausklick simulieren|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|Simulieren Sie UMSCHALT + Klicken Sie auf|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|Wählen Sie einen Bereich von-Objekten, und setzen Sie den Fokus auf das letzte Objekt|Geben Sie <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> für das Objekt ab, Auswahlanker festlegen. Wählen Sie dann erneut aufrufen, und geben Sie <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> oder <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> für das letzte Objekt.|  
|Alle Objekte deaktivieren|Geben Sie <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> auf ein beliebiges Objekt. Dieses Flag hebt die Auswahl aller ausgewählten Objekte mit Ausnahme des soeben ausgewählt. Wählen Sie dann erneut aufrufen, und geben Sie <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> für dasselbe Objekt.|  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:Accessibility.IAccessible>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ausgewählten untergeordneten Objekte eines barrierefreien Objekts ab. Eine Beschreibung dieses Members finden Sie unter <see cref="P:Accessibility.IAccessible.accSelection" />.</summary>
        <value>Die ausgewählten untergeordneten Objekte eines barrierefreien Objekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle beschreibt das Objekt Typen, die <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> -Eigenschaft gibt  
  
|Typ|Beschreibung |  
|----------|-----------------|  
|`null`|Keine untergeordneten Objekte ausgewählt sind.|  
|<xref:Accessibility.IAccessible>|Das untergeordnete barrierefreie Objekt, das ausgewählt ist.|  
|Ganze Zahl|Die untergeordnete ID, das das barrierefreie Objekt identifiziert, das ausgewählt ist. Verwenden Sie das übergeordnete Element <xref:Accessibility.IAccessible> und die untergeordnete ID, die Zugriff auf das Objekt zugegriffen werden kann.|  
|`IEnumVARIANT`|Eine Liste von untergeordneten Objekten, die ausgewählt werden.|  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:Accessibility.IAccessible>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des untergeordneten Objekts, das abgerufen werden soll.</param>
        <summary>Ruft ein angegebenes untergeordnetes Objekt ab.</summary>
        <returns>Das angegebene untergeordnete Objekt, falls vorhanden, oder andernfalls <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, für das die Standardaktion abgerufen werden soll. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Gibt eine Zeichenfolge zurück, die die Standardaktion des angegebenen Objekts angibt.</summary>
        <returns>Eine Zeichenfolge, die die Standardaktion von <paramref name="childID" /> angibt, oder <see langword="name" />, wenn <paramref name="childID" /> nicht über eine Standardaktion verfügt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, für das eine Beschreibung abgerufen werden soll. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Gibt eine Zeichenfolge zurück, die die visuelle Darstellung des angegebenen barrierefreien Objekts beschreibt.</summary>
        <returns>Eine lokalisierte Zeichenfolge, die das angegebene barrierefreie Objekt beschreibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, für das Hilfeinformationen abgerufen werden sollen. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Ruft den vollständigen Pfad der WinHelp-Datei ab, die dem angegebenen barrierefreien Objekt zugeordnet ist.</summary>
        <returns>Der vollständige Pfad der WinHelp-Datei, die der <paramref name="childID" /> zugeordnet ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">Wenn die Methode ein Ergebnis zurückgibt, der vollständige Pfad der WinHelp-Datei, die dem angegebenen Objekt zugeordnet ist.</param>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, für das ein Hilfethema abgerufen werden soll. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Ruft den vollständigen Pfad einer WinHelp-Datei ab, die dem angegebenen Objekt sowie dem Bezeichner eines bestimmten Themas in der Datei zugeordnet ist.</summary>
        <returns>Der Bezeichner eines bestimmten Themas in <paramref name="pszHelpFile" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, für das eine Tastenkombination abgerufen werden soll. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Ruft die Tastenkombination oder den Zugriffsschlüssel des angegebenen Objekts ab.</summary>
        <returns>Eine lokalisierte Zeichenfolge, die die Tastenkombination identifiziert, oder <see langword="null" />, wenn dem angegebenen Objekt keine Tastenkombination zugeordnet ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, dessen Name abgerufen werden soll. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Ruft den Namen des angegebenen Objekts ab.</summary>
        <returns>Der Name des angegebenen Objekts.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, für das Rolleninformationen abgerufen werden sollen. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Ruft Informationen ab, die die Rolle des angegebenen Objekts beschreiben.</summary>
        <returns>Ein Objekt, das Rolleninformationen über das angegebene barrierefreie Objekt bereitstellt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, für das Statusinformationen abgerufen werden sollen. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Ruft den aktuellen Zustand des angegebenen barrierefreien Objekts ab.</summary>
        <returns>Ein Objekt, das den aktuellen Zustand des angegebenen barrierefreien Objekts beschreibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, dessen Wert abgerufen werden soll. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <summary>Ruft den Wert des angegebenen barrierefreien Objekts ab. Nicht für alle Objekte liegt ein Wert vor.</summary>
        <returns>Der Wert der <paramref name="childID" /> oder <see langword="null" />, wenn das Objekt keinen Wert besitzt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, dem ein neuer Name zugewiesen werden soll. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <param name="newName">Der neue Name, der der <paramref name="childID" /> zugeordnet werden soll.</param>
        <summary>Weist dem angegebenen Element einen neuen barrierefreien Namen zu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Die ID-Nummer des barrierefreien Objekts, dem ein neuer Wert zugewiesen werden soll. Dieser Parameter hat den Wert 0 (null), wenn das Objekt ausgewählt werden soll, oder der Wert ist die untergeordnete ID, wenn eines der untergeordneten Objekte des Objekts ausgewählt werden soll.</param>
        <param name="newValue">Der neue Wert, der dem angegebenen barrierefreien Objekt zugewiesen werden soll.</param>
        <summary>Weist dem angegebenen Element einen neuen Wert zu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Position und Größe des Eingabehilfenobjekts ab.</summary>
        <value>Ein <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des zugreifbaren Objekts darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> -Eigenschaft ruft das Objekt des umschließenden Rechtecks in Bildschirmkoordinaten ab. Wenn das Objekt nicht rechteckige Form aufweist, stellt diese Eigenschaft das kleinste Rechteck befindet, das das gesamte Objekt Region vollständig umfasst dar. Aus diesem Grund für nicht rechteckige Objekte wie z. B. Elemente in der Listenansicht, die Koordinaten des umgebenden Rechtecks eines Objekts können fehlschlagen, wenn getestet werden, durch den Aufruf der <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> -Methode, da <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> bestimmt die Objektgrenzen auf Pixel-für-Pixel-Basis.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 Dieser Code-Ausschnitt veranschaulicht das Überschreiben der <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> Eigenschaft. Finden Sie unter den <xref:System.Windows.Forms.AccessibleObject> Übersicht über die Klasse für das gesamte Codebeispiel dargestellt.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Die Begrenzungen des Steuerelements können nicht abgerufen werden.</exception>
        <block subset="none" type="overrides"><para>Die Standardimplementierung gibt das barrierefreie Objekt umschließenden Rechtecks, wenn das Objekt dient als Wrapper für ein Systemsteuerelement zurück; Andernfalls wird <see cref="F:System.Drawing.Rectangle.Empty" />. Diese Methode müssen von allen sichtbare barrierefreien Objekten unterstützt werden. Sound Objekte unterstützen diese Methode nicht.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die die Standardaktion des Objekts beschreibt. Nicht alle Objekte verfügen über eine Standardaktion.</summary>
        <value>Eine Beschreibung der Standardaktion für ein Objekt bzw. <see langword="null" />, wenn dieses Objekt über keine Standardaktion verfügt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Zeichenfolge beschreibt die Aktion, die auf ein Objekt, was das Objekt daher nicht ausgeführt wird. Das heißt, hat eine Symbolleisten-Schaltfläche, die ein Dokument gedruckt wird eine Standardaktion "Press" statt "Gibt das aktuelle Dokument." Verwechseln Sie nicht das Default-Aktion mit dem Wert eines Objekts.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Die Standardaktion des Steuerelements kann nicht abgerufen werden.</exception>
        <block subset="none" type="overrides"><para>Die Standardimplementierung gibt Standardaktion für das barrierefreie Objekt zurück, wenn das Objekt ein Systemsteuerelement umschließt, die eine Standardaktion verfügt; Andernfalls wird <see langword="null" />. Nur die Steuerelemente, die Aktionen ausführen, sollten diese Methode unterstützt. Nicht alle Objekte verfügen, und einige Objekte möglicherweise eine Standardaktion, die zum Beziehen der <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> Eigenschaft an, wie in den folgenden Beispielen: ein aktiviertes Kontrollkästchen verfügt über eine Default-Aktion "Deaktivieren" und den Wert "Aktiviert". Ein deaktiviertes Kontrollkästchen verfügt über eine Standardaktion von "Überprüfen" und den Wert "Deaktiviert". Die Schaltfläche "Drucken" hat eine Standardaktion von "Press", ohne Wert. Ein statischer Text-Steuerelement oder ein Bearbeitungssteuerelement, das zeigt, "Drucker" verfügt über keine Standardaktion, aber müssten den Wert "Drucker". Ein Objekt des <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> Eigenschaft sollte ein Verb oder ein kurzer Ausdruck sein.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die die visuelle Darstellung des angegebenen Objekts beschreibt. Nicht für alle Objekte liegt eine Beschreibung vor.</summary>
        <value>Eine Beschreibung der visuellen Darstellung des Objekts für den Benutzer oder <see langword="null" />, wenn keine Beschreibung des Objekts vorliegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft beschreibt die visuelle Darstellung des Objekts, für den Benutzer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Die Beschreibung des Steuerelements kann nicht abgerufen werden.</exception>
        <block subset="none" type="overrides"><para>Die Standardimplementierung gibt das zugegriffen werden kann die Beschreibung des Objekts, wenn das Objekt dient als Wrapper für ein Systemsteuerelement; Andernfalls wird <see langword="null" />. Die Beschreibung wird normalerweise verwendet, um mehr Kontext für sehbehindert oder blind Benutzer bereitzustellen. Sie können auch zum Kontext zu suchen oder anderen Anwendungen verwendet werden. Server müssen zur Unterstützung der <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> Eigenschaft, wenn die Beschreibung nicht offensichtlich ist oder falls sie redundant ist, basierend auf dem Objekt des <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, und <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> Eigenschaften. Z. B. eine Schaltfläche "OK" werden keine zusätzlichen Informationen erforderlich, aber eine Schaltfläche mit dem Bild eines Kaktus würde. Die <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, und vielleicht <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> Eigenschaften der Kaktusschaltfläche beschreiben Verwendungszweck, aber die <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> -Eigenschaft übermittelt weniger konkrete Informationen, z. B. "Eine Schaltfläche, ein Bild eines Kaktus zeigt".</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt die Standardaktion aus, die diesem barrierefreien Objekt zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Clients können Standardaktion des Objekts durch Überprüfen eines Objekts abrufen <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> Eigenschaft. Ein Client kann mithilfe der Automatisierung (sofern unterstützt) anstelle von <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> zum Ausführen der Standardaktion des Objekts. Allerdings <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> bietet eine einfache Möglichkeit, ein Objekt Ausführen der Aktion am häufigsten verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Die Standardaktion des Steuerelements kann nicht ausgeführt werden.</exception>
        <block subset="none" type="overrides"><para>Die Standardaktion, die vom System bereitgestellte Elemente der Benutzeroberfläche ausgeführt, hängt von den Tastaturzustand ab. Also wenn Modifizierertaste wie UMSCHALT, ALT oder STRG gedrückt ist (entweder durch eine Benutzeraktion oder programmgesteuert) beim <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> aufgerufen wird, wird die standardmäßige Aktion möglicherweise nicht, wenn dieser Schlüssel nicht nach unten sind identisch. Nicht alle Objekte verfügen über eine Standardaktion.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des zugreifbaren untergeordneten Elements.</param>
        <summary>Ruft das zugreifbare untergeordnete Element ab, das dem angegebenen Index entspricht.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das zugreifbare untergeordnete Element darstellt, das dem angegebenen Index entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 Dieser Code-Ausschnitt veranschaulicht das Überschreiben der <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> Methode. Finden Sie unter den <xref:System.Windows.Forms.AccessibleObject> Übersicht über die Klasse für das gesamte Codebeispiel dargestellt.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Diese Eigenschaft müssen für alle Eingabehilfenobjekte unterstützt werden. Wenn die Methode nicht überschrieben wird, gibt es <see langword="null" />. Überschreiben Sie diese Methode, wenn ein barrierefreies Objekt bereitstellen, untergeordnete Elemente der benutzerdefinierten zugegriffen werden kann muss. Wenn der Index ist ungültig, diese Methode sollte zurückgeben <see langword="null" />. Wenn Sie diese Methode überschreiben, müssen Sie auch überschreiben <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Anzahl der untergeordneten Elemente ab, die zu einem Objekt gehören, auf das zugegriffen werden kann.</summary>
        <returns>Die Anzahl der untergeordneten Elemente, die zu einem Objekt gehören, auf das zugegriffen werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 Dieser Code veranschaulicht das Überschreiben der <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> Methode. Finden Sie unter den <xref:System.Windows.Forms.AccessibleObject> Übersicht über die Klasse für das gesamte Codebeispiel dargestellt.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Alle Objekte müssen diese Eigenschaft unterstützt werden. Die Standardimplementierung gibt -1 zurück. Überschreiben Sie diese Methode, wenn ein barrierefreies Objekt bereitstellen, untergeordnete Elemente der benutzerdefinierten zugegriffen werden kann muss. Wenn Sie diese Methode überschreiben, müssen Sie auch überschreiben <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das Objekt ab, das den Tastaturfokus besitzt.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das untergeordnete Element angibt, das gerade den Fokus besitzt. Diese Methode gibt das aufrufende Objekt zurück, wenn das Objekt selbst den Fokus besitzt. Gibt <see langword="null" /> zurück, wenn kein Objekt den Fokus besitzt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Konzept der Tastaturfokus bezieht sich auf der eines aktiven Fensters. Ein aktives Fenster ist das Vordergrundfenster in dem der Benutzer arbeitet. Das Objekt mit dem Tastaturfokus ist entweder das aktive Fenster oder ein untergeordnetes Objekt des aktiven Fensters.  
  
 Ein Objekt oder Element in einem Container kann den Fokus jeweils haben. Das Objekt mit dem Tastaturfokus ist nicht unbedingt das ausgewählte Objekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Das Steuerelement kann nicht abgerufen werden.</exception>
        <block subset="none" type="overrides"><para>Alle Objekte, die den Tastaturfokus erhalten können, müssen diese Eigenschaft unterstützen.</para></block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">Bei der Rückgabe enthält diese Eigenschaft den Pfad der Hilfedatei, die diesem barrierefreien Objekt zugeordnet ist.</param>
        <summary>Ruft einen Bezeichner für einen Hilfethemabezeichner und den Pfad der Hilfedatei ab, die diesem barrierefreien Objekt zugeordnet ist.</summary>
        <returns>Ein Bezeichner für ein Hilfethema oder -1, wenn kein Hilfethema vorhanden ist. Bei der Rückgabe enthält der <paramref name="fileName" />-Parameter den Pfad der Hilfedatei, die diesem barrierefreien Objekt zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Anzeigen der Hilfe für die <xref:System.Windows.Forms.AccessibleObject> verwenden das Windows-Hilfesystem, können Sie die Datei und die Thema-ID an den entsprechenden übergeben <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> -Methode der <xref:System.Windows.Forms.Help>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Das Hilfethema für das Steuerelement kann nicht abgerufen werden.</exception>
        <block subset="none" type="overrides"><para>Nicht alle Objekte müssen diese Eigenschaft unterstützen.</para></block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft das gerade ausgewählte untergeordnete Element ab.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das gerade ausgewählte untergeordnete Element darstellt. Diese Methode gibt das aufrufende Objekt zurück, wenn das Objekt selbst ausgewählt ist. Gibt <see langword="null" /> zurück, wenn derzeit kein untergeordnetes Element ausgewählt ist und das Objekt selbst nicht den Fokus besitzt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Das ausgewählte untergeordnete Element kann nicht abgerufen werden.</exception>
        <block subset="none" type="overrides"><para>Alle Objekte, die ausgewählt werden können, sollte diese Eigenschaft unterstützen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Beschreibung der Funktion und Verwendung des Objekts ab.</summary>
        <value>Ein <see cref="T:System.String" /> mit der Beschreibung der Funktion und Verwendung des Objekts. Gibt <see langword="null" /> zurück, wenn keine Hilfe definiert ist.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Der Hilfetext für das Steuerelement kann nicht abgerufen werden.</exception>
        <block subset="none" type="overrides"><para>Nicht alle Objekte müssen diese Eigenschaft unterstützen. Diese Eigenschaft enthält in der Regel QuickInfo-Formatinformationen, die beschreiben, was bewirkt, dass das Objekt oder seine Verwendung verwendet. Z. B. die <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> -Eigenschaft für eine Symbolleisten-Schaltfläche, die anzeigt, ist möglicherweise ein Drucker "gibt das aktuelle Dokument." Der Text für die <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> Eigenschaft hat keine in der Benutzeroberfläche eindeutig sein. Server müssen nicht zur Unterstützung der <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> Eigenschaft, wenn andere Eigenschaften ausreichend Informationen über das Objekt bereitstellen Anlass des und welche Aktionen, die das Objekt ausführen kann.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Die horizontale Bildschirmkoordinate.</param>
        <param name="y">Die vertikale Bildschirmkoordinate.</param>
        <summary>Ruft das untergeordnete Objekt an den angegebenen Bildschirmkoordinaten ab.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das untergeordnete Objekt an den angegebenen Bildschirmkoordinaten darstellt. Diese Methode gibt das aufrufende Objekt zurück, wenn das Objekt selbst sich an der angegebenen Position befindet. Gibt <see langword="null" /> zurück, wenn sich kein Objekt an der überprüften Position befindet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für nicht rechteckige Objekte wie z. B. Elemente in der Listenansicht, die Koordinaten des Objekts die das Begrenzungsrechteck abgerufen, indem <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> kann fehlschlagen, wenn mit getestet <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, da <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> bestimmt die Objektgrenzen auf Pixel-für-Pixel-Basis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Das Steuerelement kann nicht auf Treffer überprüft werden.</exception>
        <block subset="none" type="overrides"><para>Diese Methode müssen alle visuellen Objekte unterstützt werden; Sound Objekte unterstützen sie nicht.</para></block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Tastenkombination oder die Zugriffstaste für das barrierefreie Objekt ab.</summary>
        <value>Die Tastenkombination bzw. Zugriffstaste für das barrierefreie Objekt oder <see langword="null" />, wenn dem Objekt keine Tastenkombination zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Zugriffstaste, auch bekannt als mnemonisches Zeichen, ist eine unterstrichene Zeichen im Text der ein Menü, das Menüelement, die Bezeichnung eine Schaltfläche oder ein anderes Steuerelement verwenden. Beispielsweise kann ein Benutzer ein Menü anzuzeigen, durch Drücken der ALT-Taste und auch die angegebene unterstrichene Taste drückt, z. B. ALT + F, um zu öffnen der `File` Menü. Um die Zugriffstaste für ein Menüelement zu verwenden, müssen Sie im Menü mit dem Element aktiv sein. Steuerelemente wie Schaltflächen und Menüelemente verfügen häufig über Tastenkombinationen zugeordnet. Ein Menüelement kann sowohl die Zugriffstaste als auch eine Tastenkombination zugeordnet haben. Wenn der Wert des der <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> -Eigenschaft ist ein einzelnes Zeichen, Sie können davon ausgehen, es ist ein Zugriffsschlüssel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Die Tastenkombination des Steuerelements kann nicht abgerufen werden.</exception>
        <block subset="none" type="overrides"><para>Alle Objekte, die eine Tastenkombination oder Zugriffstaste haben, sollte diese Eigenschaft unterstützen.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Objektnamen ab oder legt diesen fest.</summary>
        <value>Der Objektname oder <see langword="null" />, wenn die Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.AccessibleObject.Name%2A> Eigenschaft ist eine Zeichenfolge, die von Clients zum Identifizieren, suchen oder ankündigen eines Objekts für den Benutzer verwendet. Sie müssen zuerst aufrufen, um Zugriff auf den Namen eines untergeordneten Objekts <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> mit dem Index des untergeordneten Elements, dessen Namen, die Sie abrufen möchten.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 Dieser Code-Ausschnitt veranschaulicht das Überschreiben der <xref:System.Windows.Forms.AccessibleObject.Name%2A> Eigenschaft. Finden Sie unter den <xref:System.Windows.Forms.AccessibleObject> Übersicht über die Klasse für das gesamte Codebeispiel dargestellt.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Der Name des Steuerelements kann nicht abgerufen oder festgelegt werden.</exception>
        <block subset="none" type="overrides"><para>Diese Eigenschaft sollte alle Objekte unterstützt werden. Der Name eines Objekts sollte, damit Benutzer die Bedeutung des Objekts oder den Zweck verstehen intuitiv. Stellen Sie außerdem sicher, dass die <see langword="Name" /> Eigenschaft gleichgeordneten Objekte in der übergeordneten eindeutig ist. Die Navigation in Tabellen schwierig besonders für einige Benutzer. Server-Entwickler sollten Zelle Tabellennamen aus diesem Grund als möglichst aussagekräftig. Beispielsweise können Sie erstellen einen Zellennamen durch die Kombination der Namen der Zeile und Spalte an, den es einnimmt, z. B. "A1". Es ist jedoch im Allgemeinen besser, verwenden Sie mehr beschreibende Namen, z. B. "Karin, Februar." Viele Objekte, z. B. Symbole, Menüs, Kontrollkästchen, Kombinationsfelder und andere Steuerelemente, verfügen die Bezeichnungen, die Benutzern angezeigt werden. Alle für Benutzer angezeigte Bezeichnung sollte verwendet werden, für des Objekts des <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> Eigenschaft. Weitere Informationen finden Sie unter den <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> Eigenschaft.  
  
Bei Verwendung der im Menü oder eine Schaltfläche Text für die <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> -Eigenschaft, entfernen Sie das kaufmännische und-Zeichen (&amp;), die die Zugriffstasten markieren.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir">Einer der <see cref="T:System.Windows.Forms.AccessibleNavigation" />-Werte.</param>
        <summary>Navigiert zu einem anderen zugreifbaren Objekt.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das einen der <see cref="T:System.Windows.Forms.AccessibleNavigation" />-Werte darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sowohl räumliche als auch logische Navigation ist immer auf die Elemente der Benutzeroberfläche in einem Container beschränkt. Räumliche Navigation können Clients nur auf ein gleichgeordnetes Element des Startobjekts navigieren. Abhängig von der Navigations-Flag mit logischen Navigation verwendet können Clients auf ein untergeordnetes Element oder ein gleichgeordnetes Element des Startobjekts navigieren. Diese Methode ändert nicht die Auswahl oder der Fokus. Verwenden, um den Fokus zu ändern oder ein Objekt auswählen <xref:System.Windows.Forms.AccessibleObject.Select%2A>. Die <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> Methode ruft nur Elemente der Benutzeroberfläche, die eine Bildschirmposition definiert haben.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 Dieser Code veranschaulicht das Überschreiben der <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> Methode. Finden Sie unter den <xref:System.Windows.Forms.AccessibleObject> Übersicht über die Klasse für das gesamte Codebeispiel dargestellt.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Fehler bei der Navigation.</exception>
        <block subset="none" type="overrides"><para>Diese Methode müssen alle visuellen Objekte unterstützt werden. Wenn ein Objekt den Status <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, Navigation zu dieser ausgeblendetes Objekt schlägt möglicherweise fehl. Einige vom System definierte Schnittstelle Elemente wie Menüs, Menüelemente und Popupmenüs verhindert die Navigation zu Objekten, die nicht sichtbar sind. Allerdings unterstützen andere System definierten Elemente der Benutzeroberfläche nicht dies. Wenn möglich, Server sollte die Navigation zu Objekten, die nicht sichtbar sind, unterstützen, aber diese Unterstützung ist nicht erforderlich, und Clients nicht erwarten, dass es.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das übergeordnete Element eines zugreifbaren Objekts ab.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.AccessibleObject" />, das das übergeordnete Element eines zugreifbaren Objekts darstellt, oder <see langword="null" />, wenn kein übergeordnetes Objekt vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 Dieser Code-Ausschnitt veranschaulicht das Überschreiben der <xref:System.Windows.Forms.AccessibleObject.Parent%2A> Eigenschaft. Finden Sie unter den <xref:System.Windows.Forms.AccessibleObject> Übersicht über die Klasse für das gesamte Codebeispiel dargestellt.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Diese Eigenschaft sollte alle Objekte unterstützt werden.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationText" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="notificationKind">Der Typ der Benachrichtigung.</param>
        <param name="notificationProcessing">Ein Indikator dafür, wie Benachrichtigungen verarbeitet werden.</param>
        <param name="notificationText">Der Text der Benachrichtigung.</param>
        <summary>Löst das Benachrichtigungsereignis der Benutzeroberflächenautomatisierung aus.</summary>
        <returns><see langword="true" />, wenn der Vorgang erfolgreich war; <see langword="false" />, wenn die zugrunde liegende Windows-Infrastruktur nicht verfügbar ist oder ein Fehler beim Vorgang aufgetreten ist. Rufen Sie <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" /> auf, um Details anzuzeigen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Dieses Ereignis ist ab Windows 10, Version 1709 verfügbar.
  
       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löst das LiveRegionChanged-Ereignis der Benutzeroberflächenautomatisierung aus.</summary>
        <returns><see langword="true" />, wenn der Vorgang erfolgreich ausgeführt wird, andernfalls <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Diese Methode muss in abgeleiteten Klassen überschrieben werden, die die UI Automation dynamischen Bereichs-Funktion unterstützen.
  
     ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Dynamische Bereiche für Barrierefreiheitsobjekte werden nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Rolle dieses zugreifbaren Objekts ab.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.AccessibleRole" />-Werte oder <see cref="F:System.Windows.Forms.AccessibleRole.None" />, wenn keine Rolle angegeben wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Rolle des Objekts kann die Funktion des Objekts beschreiben.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 Dieser Code-Ausschnitt veranschaulicht das Überschreiben der <xref:System.Windows.Forms.AccessibleObject.Role%2A> Eigenschaft. Finden Sie unter den <xref:System.Windows.Forms.AccessibleObject> Übersicht über die Klasse für das gesamte Codebeispiel dargestellt.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Diese Eigenschaft sollte alle Objekte unterstützt werden.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RuntimeIDFirstItem">
      <MemberSignature Language="C#" Value="protected const int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal int32 RuntimeIDFirstItem = (42)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberSignature Language="VB.NET" Value="Protected Const RuntimeIDFirstItem As Integer  = 42" />
      <MemberSignature Language="C++ CLI" Value="protected: int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="F#" Value="val mutable RuntimeIDFirstItem : int" Usage="System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags">Einer der <see cref="T:System.Windows.Forms.AccessibleSelection" />-Werte.</param>
        <summary>Ändert die Auswahl oder verschiebt den Tastaturfokus des barrierefreien Objekts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwendungen können diese Methode verwenden, komplexe Auswahlvorgänge ausführen zu können.  
  
 Im folgenden wird beschrieben, welche <xref:System.Windows.Forms.AccessibleSelection> Werte angeben, wenn der Aufruf von <xref:System.Windows.Forms.AccessibleObject.Select%2A> komplexe Auswahlvorgänge ausführen.  
  
|Vorgang|Flag-Kombination|  
|---------------|----------------------|  
|Simuliert einen Klick|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **Hinweis:** diese Kombination wird aktivieren das gewünschte Steuerelement nicht zu, wenn in Ihrer eigenen Anwendung aufgerufen. Sie müssen den gewünschten Effekt, allerdings, wenn aus einer externen Anwendung aufgerufen.|  
|Ein Zielelement durch Simulieren von STRG + Klick auswählen|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|Zu Auswahl ein Zielelement Abbrechen, indem Sie Strg + Mausklick simulieren|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|Simulieren Sie UMSCHALT + Klicken Sie auf|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|Wählen Sie einen Bereich von-Objekten, und setzen Sie den Fokus auf das letzte Objekt|Geben Sie <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> für das Objekt ab, Auswahlanker festlegen. Rufen Sie anschließend <xref:System.Windows.Forms.AccessibleObject.Select%2A> erneut aus, und geben Sie <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> für das letzte Objekt.|  
|Alle Objekte deaktivieren|Geben Sie <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> auf ein beliebiges Objekt. Dieses Flag hebt die Auswahl aller ausgewählten Objekte mit Ausnahme des soeben ausgewählt. Rufen Sie anschließend <xref:System.Windows.Forms.AccessibleObject.Select%2A> erneut aus, und geben Sie <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> für dasselbe Objekt.|  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 Dieser Code veranschaulicht das Überschreiben der <xref:System.Windows.Forms.AccessibleObject.Select%2A> Methode. Finden Sie unter den <xref:System.Windows.Forms.AccessibleObject> Übersicht über die Klasse für das gesamte Codebeispiel dargestellt.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Die Auswahl kann nicht durchgeführt werden.</exception>
        <block subset="none" type="overrides"><para>Alle Objekte, die ausgewählt werden können, oder den Tastaturfokus erhalten, müssen diese Methode unterstützt.</para></block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zustand dieses barrierefreien Objekts ab.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.AccessibleStates" />-Werte oder <see cref="F:System.Windows.Forms.AccessibleStates.None" />, wenn kein Zustand festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel veranschaulicht die Erstellung eines Diagramms Eingabehilfen-fähigen steuern, mit der <xref:System.Windows.Forms.AccessibleObject> und <xref:System.Windows.Forms.Control.ControlAccessibleObject> Klassen zugegriffen werden kann Informationen verfügbar machen. Das Steuerelement zeichnet zwei Kurven geteilt. zusammen mit einer Legende an. Die `ChartControlAccessibleObject` -Klasse, die abgeleitet `ControlAccessibleObject`, werden in der <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> Methode, um benutzerdefinierte zugegriffen werden Informationen für das Diagrammsteuerelement bereitzustellen. Da die Legende des Flächendiagramms nicht tatsächlich <xref:System.Windows.Forms.Control> -Steuerelement basiert, sondern gezeichnet wird vom Diagrammsteuerelement, keinen integrierten Informationen zugegriffen werden kann. Aus diesem Grund die `ChartControlAccessibleObject` -Klasse überschreibt die <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> -Methode zur Rückgabe der `CurveLegendAccessibleObject` , zugegriffen werden Informationen für jeden Teil der Legende darstellt. Wenn eine zugänglich-fähige Anwendung dieses Steuerelement verwendet wird, bieten das Steuerelement die erforderlichen Informationen für die zugegriffen werden kann.  
  
 Dieser Code-Ausschnitt veranschaulicht das Überschreiben der <xref:System.Windows.Forms.AccessibleObject.State%2A> Eigenschaft. Finden Sie unter den <xref:System.Windows.Forms.AccessibleObject> Übersicht über die Klasse für das gesamte Codebeispiel dargestellt.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Diese Eigenschaft sollte alle Objekte unterstützt werden.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu suchenden Felds.</param>
        <param name="bindingAttr">Die zum Steuern der Suche verwendeten Bindungsattribute.</param>
        <summary>Ruft das <see cref="T:System.Reflection.FieldInfo" />-Objekt ab, das dem angegebenen Feld und dem angegebenen Bindungsflag entspricht. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Ein <see cref="T:System.Reflection.FieldInfo" />-Objekt mit den Feldinformationen für das benannte Objekt, das die in <paramref name="bindingAttr" /> angegebenen Sucheinschränkungen erfüllt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Das Objekt implementiert mehrere Felder mit demselben Namen.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Die zum Steuern der Suche verwendeten Bindungsattribute.</param>
        <summary>Ruft ein Array von <see cref="T:System.Reflection.FieldInfo" />-Objekten ab, die allen Feldern der aktuellen Klasse entsprechen. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</summary>
        <returns>Ein Array von <see cref="T:System.Reflection.FieldInfo" />-Objekten mit sämtlichen Feldinformationen für dieses Reflektionsobjekt, das die in <paramref name="bindingAttr" /> angegebenen Sucheinschränkungen erfüllt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedes Feld muss einen eindeutigen Namen haben. Die <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> -Flag gibt an, dass nicht öffentliche Felder in der Suche enthalten sind. Die <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> -Flag gibt an, dass öffentliche Felder in der Suche enthalten sind.  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu suchenden Members.</param>
        <param name="bindingAttr">Die zum Steuern der Suche verwendeten Bindungsattribute.</param>
        <summary>Ruft ein Array von <see cref="T:System.Reflection.MemberInfo" />-Objekten ab, die entweder allen öffentlichen Membern oder allen Membern entsprechen, die mit einem angegebenen Namen übereinstimmen. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Ein Array von <see cref="T:System.Reflection.MemberInfo" />-Objekten, die dem name-Parameter entsprechen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Die zum Steuern der Suche verwendeten Bindungsattribute.</param>
        <summary>Ruft ein Array von <see cref="T:System.Reflection.MemberInfo" />-Objekten ab, die entweder allen öffentlichen Membern oder allen Membern der aktuellen Klasse entsprechen. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</summary>
        <returns>Ein Array von <see cref="T:System.Reflection.MemberInfo" />-Objekten, die sämtliche Memberinformationen für dieses Reflektionsobjekt enthalten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu suchenden Members.</param>
        <param name="bindingAttr">Die zum Steuern der Suche verwendeten Bindungsattribute.</param>
        <summary>Ruft ein <see cref="T:System.Reflection.MethodInfo" />-Objekt ab, das unter angegebenen Sucheinschränkungen einer angegebenen Methode entspricht. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Ein <see cref="T:System.Reflection.MethodInfo" />-Objekt, das die Methodeninformationen mit der Übereinstimmung enthält, die auf dem Methodennamen und den in <paramref name="bindingAttr" /> angegebenen Sucheinschränkungen beruht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Das Objekt implementiert mehrere Methoden mit demselben Namen.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu suchenden Members.</param>
        <param name="bindingAttr">Die zum Steuern der Suche verwendeten Bindungsattribute.</param>
        <param name="binder">Ein Objekt, das <see cref="T:System.Reflection.Binder" /> implementiert, das auf diese Methode bezogene Eigenschaften enthält.</param>
        <param name="types">Ein Array, das zum Auswählen überladener Methoden verwendet wird.</param>
        <param name="modifiers">Ein Array von Parametermodifizierern, das zur Bindung mit Parametersignaturen verwendet wird, in denen die Typen geändert wurden.</param>
        <summary>Ruft ein <see cref="T:System.Reflection.MethodInfo" />-Objekt ab, das einer angegebenen Methode entspricht, und verwendet für die Auswahl überladener Methoden ein Type-Array. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>Die angeforderte Methode, die allen angegebenen Parametern entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Rückgabewert ist eine Übereinstimmung basierend auf den Methodennamen angeben, die <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> -Enumeration, die Art der typkonvertierung, die gemäß der `binder` -Parameter, die Überladung, und die <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> , die die Signatur der Methode beschreibt.  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Das Objekt implementiert mehrere Methoden mit demselben Namen.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Die zum Steuern der Suche verwendeten Bindungsattribute.</param>
        <summary>Ruft ein Array von <see cref="T:System.Reflection.MethodInfo" />-Objekten mit allen öffentlichen Methoden oder allen Methoden der aktuellen Klasse ab. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</summary>
        <returns>Ein Array von <see cref="T:System.Reflection.MethodInfo" />-Objekten mit allen für dieses Reflektionsobjekt definierten Methoden, die die in <see langword="bindingAttr" /> angegebenen Sucheinschränkungen erfüllen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Das zum Steuern der Suche verwendete Bindungsattribut.</param>
        <summary>Ruft ein Array von <see cref="T:System.Reflection.PropertyInfo" />-Objekten ab, die entweder allen öffentlichen Eigenschaften oder allen Eigenschaften der aktuellen Klasse entsprechen. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</summary>
        <returns>Ein Array von <see cref="T:System.Reflection.PropertyInfo" />-Objekten für alle Eigenschaften, die für das Reflektionsobjekt definiert sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Der Name der zu suchenden Eigenschaft.</param>
        <param name="bindingAttr">Die zum Steuern der Suche verwendeten Bindungsattribute.</param>
        <summary>Ruft ein <see cref="T:System.Reflection.PropertyInfo" />-Objekt ab, das unter den angegebenen Sucheinschränkungen einer angegebenen Eigenschaft entspricht. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Ein <see cref="T:System.Reflection.PropertyInfo" />-Objekt für die gesuchte Eigenschaft, die die in <paramref name="bindingAttr" /> angegebenen Sucheinschränkungen erfüllt, oder <see langword="null" />, wenn die Eigenschaft nicht gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Das Objekt implementiert mehrere Methoden mit demselben Namen.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu suchenden Members.</param>
        <param name="bindingAttr">Die zum Steuern der Suche verwendeten Bindungsattribute.</param>
        <param name="binder">Ein Objekt, das Binder implementiert und auf diese Methode bezogene Eigenschaften enthält.</param>
        <param name="returnType">Ein Array, das zum Auswählen überladener Methoden verwendet wird.</param>
        <param name="types">Ein Array von Parametermodifizierern, das zur Bindung mit Parametersignaturen verwendet wird, in denen die Typen geändert wurden.</param>
        <param name="modifiers">Ein Array, das zum Auswählen der Parametermodifizierer verwendet wird.</param>
        <summary>Ruft ein <see cref="T:System.Reflection.PropertyInfo" />-Objekt ab, das unter den angegebenen Sucheinschränkungen einer angegebenen Eigenschaft entspricht. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>Ein <see cref="T:System.Reflection.PropertyInfo" />-Objekt für die gesuchte Eigenschaft, wenn in diesem Reflektionsobjekt eine Eigenschaft mit dem angegebenen Namen enthalten war, oder <see langword="null" />, wenn die Eigenschaft nicht gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">Der Name des zu suchenden Members.</param>
        <param name="invokeAttr">Eines der <see cref="T:System.Reflection.BindingFlags" />-Aufrufattribute.</param>
        <param name="binder">Eines der <see cref="T:System.Reflection.BindingFlags" />-Bitflags. Implementiert Binder und enthält auf diese Methode bezogene Eigenschaften.</param>
        <param name="target">Das Objekt, für das der angegebene Member aufgerufen werden soll. Für statische Member wird dieser Parameter ignoriert.</param>
        <param name="args">Ein Array von Objekten, das Anzahl, Reihenfolge und Typ der Parameter des aufzurufenden Members enthält. Dies ist ein leeres Array, wenn keine Parameter vorhanden sind.</param>
        <param name="modifiers">Ein Array von <see cref="T:System.Reflection.ParameterModifier" />-Objekten.</param>
        <param name="culture">Eine Instanz von <see cref="T:System.Globalization.CultureInfo" /> für die Steuerung der Umwandlung von Typen.</param>
        <param name="namedParameters">Ein Zeichenfolgenarray von Parametern.</param>
        <summary>Ruft einen angegebenen Member auf. Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</summary>
        <returns>Der angegebene Member.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `invokeAttr`-Parameter kann ein Konstruktor, eine Methode, eine Eigenschaft oder ein Feld sein. Es muss ein geeignetes Aufrufattribut angegeben werden. Rufen Sie den Standardmember einer Klasse auf, indem Sie die leere Zeichenfolge ("") als Name des Members übergeben.  
  
 Die `modifiers` Parameter hat die gleiche Länge wie der `args` Parameter stellt die Argumentattribute des aufgerufenen Members in den Metadaten. Ein Parameter kann die folgenden Attribute aufweisen: PdIn, PdOut, PdRetval, PdOptional und PdHasDefault. Diese stellen [In], [Out], [retval], [optional] und einen Standardparameter dar.  
  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="invokeAttr" /> ist <see cref="F:System.Reflection.BindingFlags.CreateInstance" />, und darüber hinaus wird ein weiteres Bitflag festgelegt.

Oder wenn <paramref name="invokeAttr" /> nicht <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> ist, und name den Wert <see langword="null" /> hat.

- oder -

<paramref name="invokeAttr" /> ist kein Aufrufattribut aus <see cref="T:System.Reflection.BindingFlags" />.

- oder -

<paramref name="invokeAttr" /> gibt sowohl get als auch set für eine Eigenschaft oder ein Feld an.

- oder -

<paramref name="invokeAttr" /> gibt sowohl eine Feldgruppe als auch eine Invoke-Methode an<paramref name="args" />. wird für eine Feld-get-Operation bereitgestellt.

- oder -

Für eine field set-Operation sind mehrere Argumente angegeben.</exception>
        <exception cref="T:System.MissingFieldException">Das Feld oder die Eigenschaft wurde nicht gefunden.</exception>
        <exception cref="T:System.MissingMethodException">Die Methode kann nicht gefunden werden.</exception>
        <exception cref="T:System.Security.SecurityException">Ein privater Member wurde ohne die erforderliche <see cref="T:System.Security.Permissions.ReflectionPermission" /> aufgerufen.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den zugrunde liegenden Typ ab, der das <see cref="T:System.Reflection.IReflect" />-Objekt darstellt. Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</summary>
        <value>Der zugrunde liegende Typ, der das <see cref="T:System.Reflection.IReflect" />-Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.AccessibleObject>-Instanz in eine <xref:System.Reflection.IReflect>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ordnet einer Instanz eines <see cref="T:System.Windows.Forms.AccessibleObject" /> ein Objekt zu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Ein <see cref="T:System.IntPtr" />, der das Handle des Objekts enthält.</param>
        <summary>Ordnet einer Instanz eines <see cref="T:System.Windows.Forms.AccessibleObject" /> auf Grundlage des Handles des Objekts ein Objekt zu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Server-Anwendungen können diese Funktion aufrufen, wenn sie ein benutzerdefiniertes UI-Objekt enthalten, das auf ein Objekt vom System bereitgestellten ähnlich ist. Server-Anwendungen rufen `CreateStdAccessibleObject` und überschreiben die <xref:Accessibility.IAccessible> Methoden und Eigenschaften nach Bedarf, um ihre benutzerdefinierten Objekts übereinstimmen. Dieser Ansatz speichert Server-Entwickler den Aufwand vollständig implementieren alle die <xref:Accessibility.IAccessible> Eigenschaften und Methoden. Diese Funktion ist vergleichbar mit `CreateStdAccessibleProxy`, außer dass `CreateStdAccessibleProxy` ermöglicht Ihnen die Angabe der Klassenname als Parameter verwendet, während `CreateStdAccessibleObject` verwendet die zugeordnete Klassenname der `hwnd`.  
  
 Diese Version von Aufrufen der `UseStdAccessible` entspricht dem Aufrufen der zwei Parameter-Version mit einer Objekt-ID des Clients.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle">Ein <see cref="T:System.IntPtr" />, der das Handle des Objekts enthält.</param>
        <param name="objid">Eine ganze Zahl, die den Typ des Objekts definiert, auf das der <paramref name="handle" />-Parameter verweist.</param>
        <summary>Ordnet einer Instanz eines <see cref="T:System.Windows.Forms.AccessibleObject" /> anhand des Handles und der Objekt-ID des Objekts ein Objekt zu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erstellt ein barrierefreies Objekt mit den Methoden und Eigenschaften für den angegebenen Typ der vom System bereitgestellten Element der Debuggerbenutzeroberfläche befindet.  
  
 Server-Anwendungen können diese Funktion aufrufen, wenn sie ein benutzerdefiniertes UI-Objekt enthalten, das auf ein Objekt vom System bereitgestellten ähnlich ist. Server-Anwendungen rufen `CreateStdAccessibleObject` und überschreiben die <xref:Accessibility.IAccessible> Methoden und Eigenschaften nach Bedarf, um ihre benutzerdefinierten Objekts übereinstimmen. Dieser Ansatz speichert Server-Entwickler den Aufwand vollständig implementieren alle die <xref:Accessibility.IAccessible> Eigenschaften und Methoden.  
  
 Gültige `objid` Werte.  
  
|Object|Wert|Beschreibung |  
|------------|-----------|-----------------|  
|WARNUNG|0xFFFFFFF6|Bezieht sich auf eine Meldung mit einem Fenster oder einer Anwendung.|  
|EINFÜGEMARKE|0xFFFFFFF8|Bezieht sich auf den Text eingefügt werden soll (Einfügemarke) im Fenster Leiste.|  
|CLIENT|0xFFFFFFFC|Bezieht sich auf den Clientbereich des Fensters. In den meisten Fällen das Betriebssystem steuert die Frameelemente, und das Client-Objekt enthält alle Elemente, die die Anwendung steuert.|  
|CURSOR|0xFFFFFFF7|Bezieht sich auf den Mauszeiger auf. Ist es im System nur ein Mauszeiger-auf, und es ist dabei nicht um ein untergeordnetes Element eines Fensters.|  
|HSCROLL|0xFFFFFFFA|Bezieht sich auf die horizontale Schiebeleiste des Fensters.|  
|MENU|0xFFFFFFFD|Bezieht sich auf der Menüleiste des Fensters.|  
|SIZEGRIP|0xFFFFFFF9|Bezieht sich auf das Fenster des Größenziehpunkts, eine optionale Frame-Komponente befindet sich in der unteren rechten Ecke des Fensterrahmens.|  
|TON|0xFFFFFFF5|Bezieht sich auf ein sound-Objekt. Sound Objekte Bildschirmpositionen oder untergeordneten Elemente nicht haben, jedoch müssen die Attribute Name und Zustand. Sie sind untergeordnete Elemente der Anwendung, die die Soundwiedergabe.|  
|SYSMENU|0xFFFFFFFF|Bezieht sich auf das Menü des Fensters System.|  
|TITLEBAR|0xFFFFFFFE|Bezieht sich auf die Titelleiste des Fensters.|  
|VSCROLL|0xFFFFFFFB|Bezieht sich auf einer vertikale scrollleiste des Fensters.|  
|FENSTER |0x00000000|Bezieht sich auf das Fenster selbst und nicht auf ein untergeordnetes Objekt.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert eines barrierefreien Objekts ab oder legt diesen fest.</summary>
        <value>Der Wert eines Objekts ab, auf das zugegriffen werden kann, oder <see langword="null" />, wenn für das Objekt kein Wert festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel die <xref:System.Windows.Forms.AccessibleObject.Value%2A> Eigenschaft stellt visuelle Informationen, die im Objekt enthaltenen dar. Nicht alle Objekte unterstützen die <xref:System.Windows.Forms.AccessibleObject.Value%2A> Eigenschaft.  
  
 In den meisten Fällen die <xref:System.Windows.Forms.AccessibleObject.Value%2A> Eigenschaft wird verwendet, um erzählen, dass den Client die visuelle Informationen in ein Objekt enthält. Beispielsweise wird der Wert für ein Bearbeitungssteuerelement ist der darin enthaltenen Text, aber ein Menüelement hat keinen Wert.  
  
 Die <xref:System.Windows.Forms.AccessibleObject.Value%2A> Eigenschaft bieten Hierarchieinformationen wie z. B. ein Strukturansicht-Steuerelement. Obwohl das übergeordnete Objekt in der Strukturansicht-Steuerelement keine Informationen in bietet die <xref:System.Windows.Forms.AccessibleObject.Value%2A> -Eigenschaft, jedes Element innerhalb des Steuerelements ist einen nullbasierten Wert, der die Ebene innerhalb der Hierarchie darstellt. Elemente der obersten Ebene einen Wert von 0 (null), Elemente der zweiten Ebene haben Sie einen Wert von eins und so weiter.  
  
> [!NOTE]
>  Die Werte zurückgegeben aus und Trackbar zugegriffen werden kann, dass Objekte in Prozent, anzugeben, damit sie ganze Zahlen zwischen 0 und 100 (einschließlich) sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Der Wert kann nicht festgelegt oder abgerufen werden.</exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>