<Type Name="BaseCollection" FullName="System.Windows.Forms.BaseCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0914fc599db38f5291a59d1bcabb79925a3a885e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BaseCollection : MarshalByRefObject, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BaseCollection extends System.MarshalByRefObject implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BaseCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class BaseCollection&#xA;Inherits MarshalByRefObject&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCollection : MarshalByRefObject, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f9212-101">Stellt die Basisfunktionen für das Erstellen datenbezogener Auflistungen im <see cref="N:System.Windows.Forms" />-Namespace bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9212-101">Provides the base functionality for creating data-related collections in the <see cref="N:System.Windows.Forms" /> namespace.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9212-102">Die <xref:System.Windows.Forms.BaseCollection> Klasse ist nicht für die Verwendung durch Anwendungsentwickler vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="f9212-102">The <xref:System.Windows.Forms.BaseCollection> class is not intended for use by application developers.</span></span> <span data-ttu-id="f9212-103">Anwendungsentwickler sollten verwenden <xref:System.Collections.CollectionBase> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="f9212-103">Application developers should use <xref:System.Collections.CollectionBase> instead.</span></span>  
  
 <span data-ttu-id="f9212-104">Die <xref:System.Windows.Forms.BaseCollection>-Klasse implementiert die <xref:System.Collections.ICollection>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="f9212-104">The <xref:System.Windows.Forms.BaseCollection> class implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 <span data-ttu-id="f9212-105">Abgeleitete Klassen die <xref:System.Windows.Forms.BaseCollection> Klasse einbeziehen:</span><span class="sxs-lookup"><span data-stu-id="f9212-105">Classes that derive from the <xref:System.Windows.Forms.BaseCollection> class include:</span></span>  
  
-   <xref:System.Windows.Forms.BindingsCollection>  
  
-   <xref:System.Windows.Forms.GridColumnStylesCollection>  
  
-   <xref:System.Windows.Forms.GridTableStylesCollection>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BaseCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BaseCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BaseCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9212-106">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.BaseCollection" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.BaseCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array ar, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array ar, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (ar As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ ar, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ar">
          <span data-ttu-id="f9212-107">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der aktuellen <see langword="Array" /> kopierten Elemente ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-107">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current <see langword="Array" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f9212-108">Der nullbasierte relative Index in <c>ar</c>, ab dem der Kopiervorgang beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-108">The zero-based relative index in <c>ar</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9212-109">Kopiert alle Elemente des aktuellen eindimensionalen <see cref="T:System.Array" /> in das angegebene eindimensionale <see cref="T:System.Array" />, beginnend am angegebenen Index des Ziel-<see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-109">Copies all the elements of the current one-dimensional <see cref="T:System.Array" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Array.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9212-110">Ruft die Gesamtanzahl von Elementen in der Auflistung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-110">Gets the total number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9212-111">Die Gesamtanzahl der Elemente in der Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-111">The total number of elements in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BaseCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9212-112">Ruft das Objekt ab, mit dem die Member der Auflistung durchlaufen werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-112">Gets the object that enables iterating through the members of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9212-113">Ein Objekt, das die <see cref="T:System.Collections.IEnumerator" />-Schnittstelle implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-113">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9212-114">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-114">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9212-115">Diese Eigenschaft ist immer <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-115">This property is always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9212-116">Die von Auflistungen der <xref:System.Windows.Forms.BaseCollection> Klasse sind immer schreibbar, deshalb gibt diese Eigenschaft immer `false`.</span><span class="sxs-lookup"><span data-stu-id="f9212-116">The collections that derive from the <xref:System.Windows.Forms.BaseCollection> class are always writable, which is why this property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9212-117">Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Collections.ICollection" /> synchronisiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-117">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9212-118">Diese Eigenschaft gibt immer <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-118">This property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9212-119">Wenn eine Auflistung threadsicher ist, ist die <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> -Eigenschaft gibt `true`, und der Programmierer muss keine gar nichts Unternehmen, um die Collection-Thread zu schützen.</span><span class="sxs-lookup"><span data-stu-id="f9212-119">If a collection is thread safe, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `true`, and the programmer does not have to do anything to keep the collection thread safe.</span></span>  
  
 <span data-ttu-id="f9212-120">Wenn als bei der Fall ist die <xref:System.Windows.Forms.BaseCollection>, die <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> -Eigenschaft gibt `false`, und klicken Sie dann die <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> Eigenschaft gibt ein Objekt, das mit c# verwendet werden kann `lock` Schlüsselwort.</span><span class="sxs-lookup"><span data-stu-id="f9212-120">If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword.</span></span> <span data-ttu-id="f9212-121">Verwenden Sie die statische <xref:System.Threading.Monitor.Enter%2A> und <xref:System.Threading.Monitor.Exit%2A> Methoden die <xref:System.Threading.Monitor> -Klasse auf manuell sperren und Entsperren der Synchronisierungsobjekt.</span><span class="sxs-lookup"><span data-stu-id="f9212-121">Use the static <xref:System.Threading.Monitor.Enter%2A> and <xref:System.Threading.Monitor.Exit%2A> methods of the <xref:System.Threading.Monitor> class to manually lock and unlock the synchronization object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9212-122">Ruft die Liste der in der <see cref="T:System.Windows.Forms.BaseCollection" />-Instanz enthaltenen Elemente ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-122">Gets the list of elements contained in the <see cref="T:System.Windows.Forms.BaseCollection" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9212-123">Eine <see cref="T:System.Collections.ArrayList" />, die die Elemente der Auflistung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-123">An <see cref="T:System.Collections.ArrayList" /> containing the elements of the collection.</span>
          </span>
          <span data-ttu-id="f9212-124">Diese Eigenschaft gibt <see langword="null" /> zurück, wenn sie nicht in einer abgeleiteten Klasse überschrieben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-124">This property returns <see langword="null" /> unless overridden in a derived class.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9212-125">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Windows.Forms.BaseCollection" /> synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-125">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.BaseCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9212-126">Ein Objekt, mit dem die <see cref="T:System.Windows.Forms.BaseCollection" /> synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9212-126">An object that can be used to synchronize the <see cref="T:System.Windows.Forms.BaseCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9212-127">Wenn als bei der Fall ist die <xref:System.Windows.Forms.BaseCollection>, die <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> -Eigenschaft gibt `false`, und klicken Sie dann die <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> Eigenschaft gibt ein Objekt, das mit c# verwendet werden kann `lock` Schlüsselwort.</span><span class="sxs-lookup"><span data-stu-id="f9212-127">If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>