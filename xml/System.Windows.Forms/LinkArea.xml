<Type Name="LinkArea" FullName="System.Windows.Forms.LinkArea">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7badb76e502cdf92de640828f1ade5b68f500753" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75178887" /></Metadata><TypeSignature Language="C#" Value="public struct LinkArea" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit LinkArea extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkArea" />
  <TypeSignature Language="VB.NET" Value="Public Structure LinkArea" />
  <TypeSignature Language="C++ CLI" Value="public value class LinkArea" />
  <TypeSignature Language="F#" Value="type LinkArea = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.LinkArea/LinkAreaConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Bereich in einem <see cref="T:System.Windows.Forms.LinkLabel" />-Steuerelement dar, das einen Link innerhalb des Steuerelements darstellt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es gibt zwei Möglichkeiten, dem Text eines <xref:System.Windows.Forms.LinkLabel> Steuer Elements einen Hyperlink hinzuzufügen. Sie können auf die <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A>-Methode der <xref:System.Windows.Forms.LinkLabel.LinkCollection>-Klasse über die <xref:System.Windows.Forms.LinkLabel.Links%2A>-Eigenschaft der <xref:System.Windows.Forms.LinkLabel> zugreifen, um dem Text des Steuer Elements mehrere Hyperlinks hinzuzufügen. Wenn Sie nur einen einzelnen Hyperlink zum Text des-Steuer Elements hinzufügen müssen, können Sie die <xref:System.Windows.Forms.LinkLabel.LinkArea%2A>-Eigenschaft der-<xref:System.Windows.Forms.LinkLabel>verwenden. Diese Eigenschaft akzeptiert einen <xref:System.Windows.Forms.LinkArea>, der die Position des Links im Text des Steuer Elements definiert. Wenn ein Hyperlink mithilfe der <xref:System.Windows.Forms.LinkArea>-Eigenschaft angegeben wird, wird der Link Bereich der <xref:System.Windows.Forms.LinkLabel.LinkCollection> auf die gleiche Weise hinzugefügt wie das Hinzufügen des Links mithilfe der <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A>-Methode der <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
 Die <xref:System.Windows.Forms.LinkArea.Length%2A>-Eigenschaft gibt die Anzahl der Zeichen im Text der <xref:System.Windows.Forms.LinkLabel> an, die im Link Bereich enthalten sein sollen. Die <xref:System.Windows.Forms.LinkArea.Start%2A>-Eigenschaft gibt das erste Zeichen im Steuerelement Text an, das in den Hyperlink eingeschlossen werden soll. Wenn Sie bestimmen möchten, ob eine bestimmte <xref:System.Windows.Forms.LinkArea> leer ist, können Sie die Eigenschaft <xref:System.Windows.Forms.LinkArea.IsEmpty%2A> verwenden, anstatt die Werte der Eigenschaften <xref:System.Windows.Forms.LinkArea.Start%2A> und <xref:System.Windows.Forms.LinkArea.Length%2A> zu überprüfen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.LinkLabel>-Klasse mit mehreren <xref:System.Windows.Forms.LinkArea> Abschnitten definiert wird, um eine Bezeichnung auf einem Formular anzuzeigen. Das Beispiel veranschaulicht das Festlegen der Eigenschaften <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>und <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A>, um das Aussehen der <xref:System.Windows.Forms.LinkLabel>anzupassen. Der erste <xref:System.Windows.Forms.LinkArea> wird mit der <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>-Eigenschaft angegeben. Zusätzliche Verknüpfungen werden dem <xref:System.Windows.Forms.LinkLabel> mithilfe der <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>-Methode hinzugefügt. Im Beispiel wird das <xref:System.Windows.Forms.LinkLabel.LinkClicked> Ereignis behandelt, indem der Webbrowser für Hyperlinks gestartet und eine <xref:System.Windows.Forms.MessageBox> für andere Links angezeigt wird.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.LinkLabel.LinkArea" />
    <altmember cref="T:System.Windows.Forms.LinkLabel" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkArea (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkArea(int start, int length);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LinkArea : int * int -&gt; System.Windows.Forms.LinkArea" Usage="new System.Windows.Forms.LinkArea (start, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">Die nullbasierte Anfangsposition des Linkbereichs im Text von <see cref="T:System.Windows.Forms.LinkLabel" />.</param>
        <param name="length">Die Anzahl der Zeichen nach dem Anfangszeichen, die in den Linkbereich eingefügt werden sollen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.LinkArea" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="linkArea.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Das mit diesem <see cref="T:System.Windows.Forms.LinkArea" /> zu vergleichende Objekt.</param>
        <summary>Bestimmt, ob die <see cref="T:System.Windows.Forms.LinkArea" />-Klasse dem angegebenen Objekt entspricht.</summary>
        <returns><see langword="true" />, wenn das angegebene Objekt und die aktuelle <see cref="T:System.Windows.Forms.LinkArea" /> gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="linkArea.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
        <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen. Diese ist der Hashcode für die Instanz.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Forms.LinkArea.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Windows.Forms.LinkArea" /> leer ist.</summary>
        <value><see langword="true" />, wenn der angegebene Anfang und die Länge einen leeren Linkbereich zurückgeben, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um zu bestimmen, ob ein gültiger Verknüpfungs Bereich in diesem-Objekt angegeben wurde, statt die Werte der Eigenschaften <xref:System.Windows.Forms.LinkArea.Length%2A> und <xref:System.Windows.Forms.LinkArea.Start%2A> auszuwerten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Windows.Forms.LinkArea.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Zeichen im Linkbereich ab oder legt diese fest.</summary>
        <value>Die Anzahl der Zeichen im Linkbereich, einschließlich Leerzeichen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Text aus dem <xref:System.Windows.Forms.LinkLabel> anzugeben, der als Link angezeigt werden soll, legen Sie die <xref:System.Windows.Forms.LinkArea.Start%2A>-Eigenschaft auf die Position im Text fest, um mit dem Erstellen der Verknüpfung zu beginnen. Nachdem die <xref:System.Windows.Forms.LinkArea.Start%2A>-Eigenschaft festgelegt wurde, legen Sie den Wert der <xref:System.Windows.Forms.LinkArea.Length%2A>-Eigenschaft auf die Anzahl der Zeichen fest, einschließlich der Zeichenposition, die in der <xref:System.Windows.Forms.LinkArea.Start%2A>-Eigenschaft angegeben ist, dass Sie den Linktext erstellen möchten. Wenn Sie z. b. das erste Wort mit dem Text "The Quick Brown Fox" a Link erstellen möchten, legen Sie die <xref:System.Windows.Forms.LinkArea.Start%2A>-Eigenschaft auf 0 (null) und die Eigenschaft <xref:System.Windows.Forms.LinkArea.Length%2A> auf drei (3) fest.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkArea.Start" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.LinkArea linkArea1, System.Windows.Forms.LinkArea linkArea2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Forms.LinkArea linkArea1, valuetype System.Windows.Forms.LinkArea linkArea2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.op_Equality(System.Windows.Forms.LinkArea,System.Windows.Forms.LinkArea)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (linkArea1 As LinkArea, linkArea2 As LinkArea) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::LinkArea linkArea1, System::Windows::Forms::LinkArea linkArea2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Forms.LinkArea * System.Windows.Forms.LinkArea -&gt; bool" Usage="linkArea1 = linkArea2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkArea1" Type="System.Windows.Forms.LinkArea" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="linkArea2" Type="System.Windows.Forms.LinkArea" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="linkArea1">Ein zu vergleichender <see cref="T:System.Windows.Forms.LinkArea" />.</param>
        <param name="linkArea2">Ein zu vergleichender <see cref="T:System.Windows.Forms.LinkArea" />.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob zwei Instanzen der <see cref="T:System.Windows.Forms.LinkArea" />-Klasse gleich sind.</summary>
        <returns><see langword="true" />, wenn zwei Instanzen der <see cref="T:System.Windows.Forms.LinkArea" />-Klasse gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Die entsprechende Methode für diesen Operator ist <xref:System.Windows.Forms.LinkArea.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.LinkArea linkArea1, System.Windows.Forms.LinkArea linkArea2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Forms.LinkArea linkArea1, valuetype System.Windows.Forms.LinkArea linkArea2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.op_Inequality(System.Windows.Forms.LinkArea,System.Windows.Forms.LinkArea)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (linkArea1 As LinkArea, linkArea2 As LinkArea) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::LinkArea linkArea1, System::Windows::Forms::LinkArea linkArea2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Forms.LinkArea * System.Windows.Forms.LinkArea -&gt; bool" Usage="System.Windows.Forms.LinkArea.op_Inequality (linkArea1, linkArea2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkArea1" Type="System.Windows.Forms.LinkArea" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="linkArea2" Type="System.Windows.Forms.LinkArea" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="linkArea1">Ein zu vergleichender <see cref="T:System.Windows.Forms.LinkArea" />.</param>
        <param name="linkArea2">Ein zu vergleichender <see cref="T:System.Windows.Forms.LinkArea" />.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob zwei Instanzen der <see cref="T:System.Windows.Forms.LinkArea" />-Klasse ungleich sind.</summary>
        <returns><see langword="true" />, wenn zwei Instanzen der <see cref="T:System.Windows.Forms.LinkArea" />-Klasse ungleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Start : int with get, set" Usage="System.Windows.Forms.LinkArea.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anfangsposition des Linkbereichs im Text von <see cref="T:System.Windows.Forms.LinkLabel" /> ab oder legt diesen fest.</summary>
        <value>Die Position im Text des <see cref="T:System.Windows.Forms.LinkLabel" />-Steuerelements, an der der Link anfängt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Text aus dem <xref:System.Windows.Forms.LinkLabel> anzugeben, der als Link angezeigt werden soll, legen Sie die <xref:System.Windows.Forms.LinkArea.Start%2A>-Eigenschaft auf die Position im Text fest, um mit dem Erstellen der Verknüpfung zu beginnen. Nachdem die <xref:System.Windows.Forms.LinkArea.Start%2A>-Eigenschaft festgelegt wurde, legen Sie den Wert der <xref:System.Windows.Forms.LinkArea.Length%2A>-Eigenschaft auf die Anzahl der Zeichen fest, einschließlich der Zeichenposition, die in der <xref:System.Windows.Forms.LinkArea.Start%2A>-Eigenschaft angegeben ist, dass Sie den Linktext erstellen möchten. Wenn Sie z. b. das erste Wort mit dem Text "The Quick Brown Fox" a Link erstellen möchten, legen Sie die <xref:System.Windows.Forms.LinkArea.Start%2A>-Eigenschaft auf 0 (null) und die Eigenschaft <xref:System.Windows.Forms.LinkArea.Length%2A> auf drei (3) fest.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkArea.Length" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="linkArea.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den vollqualifizierten Typnamen dieser Instanz zurück.</summary>
        <returns>Eine <see cref="T:System.String" />-Klasse, die den voll qualifizierten Typnamen enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
