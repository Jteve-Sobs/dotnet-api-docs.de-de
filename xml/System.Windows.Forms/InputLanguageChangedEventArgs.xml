<Type Name="InputLanguageChangedEventArgs" FullName="System.Windows.Forms.InputLanguageChangedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="334e5111164b70e0cc43deb3b1667ef671149226" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39730658" /></Metadata><TypeSignature Language="C#" Value="public class InputLanguageChangedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputLanguageChangedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class InputLanguageChangedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputLanguageChangedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type InputLanguageChangedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die Daten aus der <xref:System.Windows.Forms.InputLanguageChangedEventArgs> Entscheidungen darüber, ob der Eingabemethoden-Editoren (IME) zu ändern oder Werte für die rechts-nach-links-vertauscht. Sie können auch ändern, die <xref:System.Threading.Thread.CurrentCulture%2A> eines Threads und die <xref:System.Threading.Thread.CurrentUICulture%2A> Eigenschaften, damit andere Ressourcen ausgewählt werden.  
  
 Ein <xref:System.Windows.Forms.InputLanguageChangedEventArgs> bezeichnet das Gebietsschema und den Zeichensatz für die neue Eingabesprache.  
  
 Die <xref:System.Windows.Forms.Form.InputLanguageChanging> Ereignis steht die <xref:System.Windows.Forms.Form.InputLanguageChanged> Ereignis.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt ein neues <xref:System.Windows.Forms.Form> und fügt einen Ereignishandler an das <xref:System.Windows.Forms.Form.InputLanguageChanged> Ereignis. Dieses Ereignis wird die `IMEmode` Wenn sich die Eingabesprache auf Japanisch ändert.  
  
 [!code-cpp[InputLanguageChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/InputLanguageChanged/CPP/form1.cpp#1)]
 [!code-csharp[InputLanguageChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/InputLanguageChanged/CS/form1.cs#1)]
 [!code-vb[InputLanguageChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/InputLanguageChanged/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.InputLanguage" />
    <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangedEventArgs (System.Globalization.CultureInfo culture, byte charSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture, unsigned int8 charSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangedEventArgs.#ctor(System.Globalization.CultureInfo,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo, charSet As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangedEventArgs(System::Globalization::CultureInfo ^ culture, System::Byte charSet);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangedEventArgs : System.Globalization.CultureInfo * byte -&gt; System.Windows.Forms.InputLanguageChangedEventArgs" Usage="new System.Windows.Forms.InputLanguageChangedEventArgs (culture, charSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="charSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="culture">Das Gebietsschema der Eingabesprache.</param>
        <param name="charSet">Der der neuen Eingabesprache zugeordnete Zeichensatz.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />-Klasse mit dem angegebenen Gebietsschema und Zeichensatz.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputLanguageChangedEventArgs (System.Windows.Forms.InputLanguage inputLanguage, byte charSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.InputLanguage inputLanguage, unsigned int8 charSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.InputLanguageChangedEventArgs.#ctor(System.Windows.Forms.InputLanguage,System.Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputLanguageChangedEventArgs(System::Windows::Forms::InputLanguage ^ inputLanguage, System::Byte charSet);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.InputLanguageChangedEventArgs : System.Windows.Forms.InputLanguage * byte -&gt; System.Windows.Forms.InputLanguageChangedEventArgs" Usage="new System.Windows.Forms.InputLanguageChangedEventArgs (inputLanguage, charSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputLanguage" Type="System.Windows.Forms.InputLanguage" />
        <Parameter Name="charSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="inputLanguage">Die Eingabesprache.</param>
        <param name="charSet">Der der neuen Eingabesprache zugeordnete Zeichensatz.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />-Klasse mit der angegebenen Eingabesprache und dem angegebenen Zeichensatz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eingabesprache gibt eine Kombination aus Kultur/Tastaturlayout.  
  
 Finden Sie unter den <xref:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet%2A> -Eigenschaft für eine Liste der gültigen Zeichensätzen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
        <altmember cref="P:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public byte CharSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 CharSet" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharSet As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte CharSet { System::Byte get(); };" />
      <MemberSignature Language="F#" Value="member this.CharSet : byte" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.CharSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeichensatz ab, der der neuen Eingabesprache zugeordnet ist.</summary>
        <value>Eine dem Zeichensatz entsprechende 8-bit-Ganzzahl ohne Vorzeichen, wie in der folgenden Tabelle aufgeführt.  
  
 <list type="table"><listheader><term> Zeichensatz </term> <description> Wert </description> </listheader> <item> <term> ANSI_CHARSET </term> <description> 0 </description> </item> <item> <term> DEFAULT_CHARSET </term> <description> 1 </description> </item> <item> <term> SYMBOL_CHARSET </term> <description> 2 </description> </item> <item> <term> MAC_CHARSET </term> <description> 77 </description> </item> <item> <term> SHIFTJI_CHARSET </term> <description> 128 </description> </item> <item> <term> HANGEUL_CHARSET </term> <description> 129 </description> </item> <item> <term> HANGUL_CHARSET </term> <description> 129 </description> </item> <item> <term> JOHAB_CHARSET </term> <description> 130 </description> </item> <item> <term> GB2312_CHARSET </term> <description> 134 </description> </item> <item> <term> CHINESEBIG5_CHARSET </term> <description> 136 </description> </item> <item> <term> GREEK_CHARSET </term> <description> 161 </description> </item> <item> <term> TURKISH_CHARSET </term> <description> 162 </description> </item> <item> <term> VIETNAMESE_CHARSET </term> <description> 163 </description> </item> <item> <term> HEBREW_CHARSET </term> <description> 177 </description> </item> <item> <term> ARABIC_CHARSET </term> <description> 178 </description> </item> <item> <term> BALTIC_CHARSET </term> <description> 186 </description> </item> <item> <term> RUSSIAN_CHARSET </term> <description> 204 </description> </item> <item> <term> THAI_CHARSET </term> <description> 222 </description> </item> <item> <term> EASTEUROPE_CHARSET </term> <description> 238  </description> </item> <item> <term> OEM_CHARSET</term><description>255  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist der Win32-Zeichensatz ausgewählt werden, die der Benutzer gewechselt. Bei ANSI-Systemen kann diese Eigenschaft verwendet werden, um Schriftarten zu erstellen, die den richtige Zeichensatz anzeigen können. Für Unicode-Systeme in der Regel müssen nicht Sie diese Eigenschaft zu verwenden. Verwenden Sie stattdessen die <xref:System.Globalization.CultureInfo> -Klasse für diese Funktionen.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Gebietsschema der Eingabesprache ab.</summary>
        <value>Eine <see cref="T:System.Globalization.CultureInfo" />, die das Gebietsschema der Eingabesprache angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.InputLanguageChangedEventArgs.Culture%2A> Eigenschaft gibt an, eine <xref:System.Globalization.CultureInfo> und definiert einen Satz von Informationen über Benutzervoreinstellungen abhängig von der Sprache, untersprachen, Land/Region und kulturellen Konventionen des Benutzers.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.InputLanguage InputLanguage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.InputLanguage InputLanguage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.InputLanguageChangedEventArgs.InputLanguage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputLanguage As InputLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::InputLanguage ^ InputLanguage { System::Windows::Forms::InputLanguage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputLanguage : System.Windows.Forms.InputLanguage" Usage="System.Windows.Forms.InputLanguageChangedEventArgs.InputLanguage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Eingabesprache angibt.</summary>
        <value>Die Eingabesprache, die dem Objekt zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.Form> mit dem Namen `Form1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.Form.InputLanguageChanged?displayProperty=nameWithType> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.InputLanguage" />
      </Docs>
    </Member>
  </Members>
</Type>