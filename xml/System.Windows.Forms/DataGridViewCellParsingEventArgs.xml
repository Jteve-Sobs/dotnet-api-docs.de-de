<Type Name="DataGridViewCellParsingEventArgs" FullName="System.Windows.Forms.DataGridViewCellParsingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dfff469f8d65f3841a32b5b6f0607f7e7f24a7cc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69192773" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewCellParsingEventArgs : System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellParsingEventArgs extends System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellParsingEventArgs&#xA;Inherits ConvertEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellParsingEventArgs : System::Windows::Forms::ConvertEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewCellParsingEventArgs = class&#xA;    inherit ConvertEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ConvertEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="49764-101">Stellt Daten für das <see cref="E:System.Windows.Forms.DataGridView.CellParsing" />-Ereignis eines <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelements bereit.</span><span class="sxs-lookup"><span data-stu-id="49764-101">Provides data for the <see cref="E:System.Windows.Forms.DataGridView.CellParsing" /> event of a <see cref="T:System.Windows.Forms.DataGridView" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49764-102">Behandeln Sie <xref:System.Windows.Forms.DataGridView.CellParsing> das-Ereignis, um eine benutzerdefinierte Wert Konvertierung von einem benutzerdefinierten Wert in einen Wert in dem von der <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> Cell-Eigenschaft angegebenen Typ bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="49764-102">Handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event to provide custom value conversion from a user-specified value to a value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property.</span></span>  
  
 <span data-ttu-id="49764-103">Wenn Sie das <xref:System.Windows.Forms.DataGridView.CellParsing> -Ereignis behandeln, können Sie den Wert selbst konvertieren, oder Sie können die Standard Konvertierung anpassen.</span><span class="sxs-lookup"><span data-stu-id="49764-103">When you handle the <xref:System.Windows.Forms.DataGridView.CellParsing> event, you can convert the value yourself or you can customize the default conversion.</span></span> <span data-ttu-id="49764-104">Beispielsweise können Sie den Wert selbst mithilfe der Cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> -Methode mit Typkonvertern Ihrer Wahl konvertieren.</span><span class="sxs-lookup"><span data-stu-id="49764-104">For example, you can convert the value yourself using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with type converters of your choosing.</span></span> <span data-ttu-id="49764-105">Alternativ können Sie zulassen, dass die Standardtypkonverter den Wert analysieren, aber die <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>Eigenschaften <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, und <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> des Objekts ändern, das von der <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> Eigenschaft zurückgegeben wird, die mithilfe der Zelle <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> initialisiert wird. Property.</span><span class="sxs-lookup"><span data-stu-id="49764-105">Alternately, you can let the default type converters parse the value, but modify the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the object returned by the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=nameWithType> property, which is initialized using the cell <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> property.</span></span>  
  
 <span data-ttu-id="49764-106">Wenn Sie den Wert selbst konvertieren, ersetzen Sie den anfänglichen formatierten Wert der <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> -Eigenschaft durch den konvertierten Wert in dem von der Cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> -Eigenschaft angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="49764-106">When you convert the value yourself, replace the initial, formatted value of the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=nameWithType> property with the converted value in the type specified by the cell <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> property.</span></span> <span data-ttu-id="49764-107">Legen Sie die <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> -Eigenschaft auf `true`fest, um anzugeben, dass keine weitere-Verarbeitung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="49764-107">To indicate that no further parsing is necessary, set the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=nameWithType> property to `true`.</span></span>  
  
 <span data-ttu-id="49764-108">Wenn der-Ereignishandler abgeschlossen wird, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> Wenn `null` der oder der nicht der richtige Typ ist oder die <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> -Eigenschaft `false`ist, <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> wird der mithilfe der Cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> -Methode mit Standardtypkonvertern analysiert.</span><span class="sxs-lookup"><span data-stu-id="49764-108">When the event handler completes, if the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is `null` or is not of the correct type, or the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property is `false`, the <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> is parsed using the cell <xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A> method with default type converters.</span></span> <span data-ttu-id="49764-109">Die Standard Implementierung dieser Methode analysiert den Wert mithilfe der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>Eigenschaften, und <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> des Zellstils, der übertragen wird.</span><span class="sxs-lookup"><span data-stu-id="49764-109">The default implementation of this method parses the value using the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style passed in.</span></span> <span data-ttu-id="49764-110">Wenn der Wert nicht gleich <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>ist, wird der Wert mithilfe der <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> -Eigenschaft und der Übergabe der Typkonverter analysiert.</span><span class="sxs-lookup"><span data-stu-id="49764-110">If the value is not equal to <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, the value is parsed using the <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> property and the type converters passed in.</span></span>  
  
 <span data-ttu-id="49764-111">Um die Konvertierung eines Zellwerts in einen formatierten Wert für die Anzeige anzupassen, behandeln <xref:System.Windows.Forms.DataGridView.CellFormatting> Sie das-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="49764-111">To customize the conversion of a cell value into a formatted value for display, handle the <xref:System.Windows.Forms.DataGridView.CellFormatting> event.</span></span>  
  
 <span data-ttu-id="49764-112">Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="49764-112">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49764-113">Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> Verwendung von zum Überprüfen der Gültigkeit von Datums Einträgen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="49764-113">The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs> to check the validity of date entries.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
    <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
    <altmember cref="P:System.Windows.Forms.DataGridView.EditMode" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
    <altmember cref="M:System.Windows.Forms.DataGridViewCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
    <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellParsingEventArgs (int rowIndex, int columnIndex, object value, Type desiredType, System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 rowIndex, int32 columnIndex, object value, class System.Type desiredType, class System.Windows.Forms.DataGridViewCellStyle inheritedCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellParsingEventArgs.#ctor(System.Int32,System.Int32,System.Object,System.Type,System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rowIndex As Integer, columnIndex As Integer, value As Object, desiredType As Type, inheritedCellStyle As DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellParsingEventArgs(int rowIndex, int columnIndex, System::Object ^ value, Type ^ desiredType, System::Windows::Forms::DataGridViewCellStyle ^ inheritedCellStyle);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewCellParsingEventArgs : int * int * obj * Type * System.Windows.Forms.DataGridViewCellStyle -&gt; System.Windows.Forms.DataGridViewCellParsingEventArgs" Usage="new System.Windows.Forms.DataGridViewCellParsingEventArgs (rowIndex, columnIndex, value, desiredType, inheritedCellStyle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
        <Parameter Name="inheritedCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="rowIndex"><span data-ttu-id="49764-114">Der Zeilenindex der geänderten Zelle.</span><span class="sxs-lookup"><span data-stu-id="49764-114">The row index of the cell that was changed.</span></span></param>
        <param name="columnIndex"><span data-ttu-id="49764-115">Der Spaltenindex der geänderten Zelle.</span><span class="sxs-lookup"><span data-stu-id="49764-115">The column index of the cell that was changed.</span></span></param>
        <param name="value"><span data-ttu-id="49764-116">Der neue Wert.</span><span class="sxs-lookup"><span data-stu-id="49764-116">The new value.</span></span></param>
        <param name="desiredType"><span data-ttu-id="49764-117">Der Typ des neuen Werts.</span><span class="sxs-lookup"><span data-stu-id="49764-117">The type of the new value.</span></span></param>
        <param name="inheritedCellStyle"><span data-ttu-id="49764-118">Das Format, das auf die geänderte Zelle angewendet wurde.</span><span class="sxs-lookup"><span data-stu-id="49764-118">The style applied to the cell that was changed.</span></span></param>
        <summary><span data-ttu-id="49764-119">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="49764-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewCellParsingEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="M:System.Windows.Forms.DataGridView.OnCellParsing(System.Windows.Forms.DataGridViewCellParsingEventArgs)" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ValueType" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ColumnIndex">
      <MemberSignature Language="C#" Value="public int ColumnIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnIndex : int" Usage="System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49764-120">Ruft den Spaltenindex der Zelldaten ab, die eine Analyse erfordern.</span><span class="sxs-lookup"><span data-stu-id="49764-120">Gets the column index of the cell data that requires parsing.</span></span></summary>
        <value><span data-ttu-id="49764-121">Der Spaltenindex der geänderten Zelle.</span><span class="sxs-lookup"><span data-stu-id="49764-121">The column index of the cell that was changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49764-122">Verwenden Sie <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> die-Eigenschaft, um einen Index <xref:System.Windows.Forms.DataGridView.Columns%2A> in die- <xref:System.Windows.Forms.DataGridView>Eigenschaft eines abzurufen.</span><span class="sxs-lookup"><span data-stu-id="49764-122">Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Columns%2A> property of a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49764-123">Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> Verwendung von veranschaulicht, um zu ermitteln, ob die geänderte Zelle in der Date-Spalte ist.</span><span class="sxs-lookup"><span data-stu-id="49764-123">The following code example demonstrates using <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex%2A> to discover if the changed cell is in the date column.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Columns" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
      </Docs>
    </Member>
    <Member MemberName="InheritedCellStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property InheritedCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellStyle ^ InheritedCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InheritedCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49764-124">Ruft das auf die bearbeitete Zelle angewendete Format ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="49764-124">Gets or sets the style applied to the edited cell.</span></span></summary>
        <value><span data-ttu-id="49764-125">Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, das das aktuelle Format der bearbeiteten Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="49764-125">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> that represents the current style of the cell being edited.</span></span> <span data-ttu-id="49764-126">Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />-Eigenschaft der Zelle.</span><span class="sxs-lookup"><span data-stu-id="49764-126">The default value is the value of the cell <see cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49764-127">Sie können diese Eigenschaft verwenden, um die für die Zelle gültigen Formatierungen zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="49764-127">You can use this property to determine the formatting in effect for the cell.</span></span> <span data-ttu-id="49764-128">Das Festlegen dieser Eigenschaft oder das Ändern der Eigenschaften des Objekts, das von dieser Eigenschaft zurückgegeben <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> wird, hat keine Auswirkung, es sei denn, wenn der Ereignishandler beendet wird. `false`</span><span class="sxs-lookup"><span data-stu-id="49764-128">Setting this property or changing the properties of the object that this property returns has no effect unless the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> is `false` when the event handler exits.</span></span> <span data-ttu-id="49764-129">In diesem Fall <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>werden die Eigenschaften <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, und <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> des Zellstils verwendet, um den Zellwert zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="49764-129">In this case, the <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A>, <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>, and <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> properties of the cell style are used to parse the cell value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49764-130">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="49764-130">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="49764-131">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="49764-131">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="49764-132">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="49764-132">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="49764-133">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.</span><span class="sxs-lookup"><span data-stu-id="49764-133">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="49764-134">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält.</span><span class="sxs-lookup"><span data-stu-id="49764-134">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`.</span></span> <span data-ttu-id="49764-135">Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="49764-135">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]
 [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="ParsingApplied">
      <MemberSignature Language="C#" Value="public bool ParsingApplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParsingApplied" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingApplied As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ParsingApplied { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingApplied : bool with get, set" Usage="System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49764-136">Ruft einen Wert ab, der angibt, ob der Wert einer Zelle erfolgreich analysiert wurde, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="49764-136">Gets or sets a value indicating whether a cell's value has been successfully parsed.</span></span></summary>
        <value><span data-ttu-id="49764-137"><see langword="true" />, wenn der Wert der Zelle erfolgreich analysiert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49764-137"><see langword="true" /> if the cell's value has been successfully parsed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="49764-138">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49764-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49764-139">Mit wird die <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> -Eigenschaft fest gelegt,umanzugeben,obderneueZellwerterfolgreichanalysiertwurdeundkeineweitereKonvertierungerforderlichist.<xref:System.Windows.Forms.DataGridViewCellParsingEventHandler></span><span class="sxs-lookup"><span data-stu-id="49764-139">A <xref:System.Windows.Forms.DataGridViewCellParsingEventHandler> sets the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> property to indicate whether the new cell value was successfully parsed and no further conversion is necessary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49764-140">Im folgenden Codebeispiel wird <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> auf `true` festgelegt, wenn der Wert der Zelle erfolgreich analysiert wird.</span><span class="sxs-lookup"><span data-stu-id="49764-140">The following code example sets <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A> to `true` when the cell's value is successfully parsed.</span></span>  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellParsingEventHandler" />
        <altmember cref="P:System.Windows.Forms.ConvertEventArgs.Value" />
      </Docs>
    </Member>
    <Member MemberName="RowIndex">
      <MemberSignature Language="C#" Value="public int RowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RowIndex : int" Usage="System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49764-141">Ruft den Zeilenindex der Zelle ab, die eine Analyse erfordert.</span><span class="sxs-lookup"><span data-stu-id="49764-141">Gets the row index of the cell that requires parsing.</span></span></summary>
        <value><span data-ttu-id="49764-142">Der Zeilenindex der geänderten Zelle.</span><span class="sxs-lookup"><span data-stu-id="49764-142">The row index of the cell that was changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49764-143">Verwenden Sie <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex%2A> die-Eigenschaft, um einen Index <xref:System.Windows.Forms.DataGridView.Rows%2A> in die- <xref:System.Windows.Forms.DataGridView>Eigenschaft eines abzurufen.</span><span class="sxs-lookup"><span data-stu-id="49764-143">Use the <xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex%2A> property to obtain an index into the <xref:System.Windows.Forms.DataGridView.Rows%2A> property of a <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49764-144">Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="49764-144">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="49764-145">Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="49764-145">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="49764-146">Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können.</span><span class="sxs-lookup"><span data-stu-id="49764-146">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="49764-147">Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> empfiehlt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> es sich, durch zu ersetzen oder die Nachricht <xref:System.Windows.Forms.TextBox>an eine mehrzeilige anfügen.</span><span class="sxs-lookup"><span data-stu-id="49764-147">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="49764-148">Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz <xref:System.Windows.Forms.DataGridView> des `DataGridView1`Typs mit dem Namen enthält.</span><span class="sxs-lookup"><span data-stu-id="49764-148">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.DataGridView> named `DataGridView1`.</span></span> <span data-ttu-id="49764-149">Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="49764-149">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.DataGridView.CellParsing?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#303)]
 [!code-vb[System.Windows.Forms.EventExamples#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.Rows" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellParsing" />
      </Docs>
    </Member>
  </Members>
</Type>
