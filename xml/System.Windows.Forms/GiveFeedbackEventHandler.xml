<Type Name="GiveFeedbackEventHandler" FullName="System.Windows.Forms.GiveFeedbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5c2ca98e7c940fe777436c3a527f4d6036cf6da8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37511462" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void GiveFeedbackEventHandler(object sender, GiveFeedbackEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GiveFeedbackEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.GiveFeedbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub GiveFeedbackEventHandler(sender As Object, e As GiveFeedbackEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void GiveFeedbackEventHandler(System::Object ^ sender, GiveFeedbackEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type GiveFeedbackEventHandler = delegate of obj * GiveFeedbackEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="d4410-101">Die Quelle des Ereignisses.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4410-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="d4410-102">Ein <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4410-102">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="d4410-103">Stellt die Methode dar, die das <see cref="E:System.Windows.Forms.Control.GiveFeedback" />-Ereignis eines <see cref="T:System.Windows.Forms.Control" /> behandelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4410-103">Represents the method that handles the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event of a <see cref="T:System.Windows.Forms.Control" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4410-104">Beim Erstellen eines <xref:System.Windows.Forms.GiveFeedbackEventHandler>-Delegaten bestimmen Sie die Methode für die Ereignisbehandlung.</span><span class="sxs-lookup"><span data-stu-id="d4410-104">When you create a <xref:System.Windows.Forms.GiveFeedbackEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="d4410-105">Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie dem Ereignis eine Instanz des Delegaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="d4410-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="d4410-106">Der Ereignishandler wird bei jedem Eintreten des Ereignisses aufgerufen, sofern der Delegat nicht entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="d4410-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="d4410-107">Weitere Informationen zur Ereignisbehandlung mit Delegaten finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d4410-107">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d4410-108">Das folgende Beispiel zeigt einen Drag & Drop-Vorgang zwischen zwei <xref:System.Windows.Forms.ListBox> Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="d4410-108">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="d4410-109">Im Beispiel wird die <xref:System.Windows.Forms.Control.DoDragDrop%2A> Methode, wenn die Ziehaktion gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="d4410-109">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="d4410-110">Die Ziehaktion gestartet wird, wenn die Maus bewegt wurde mehr als <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> aus die Position des Mauszeigers während der <xref:System.Windows.Forms.Control.MouseDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d4410-110">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="d4410-111">Die <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> Methode wird verwendet, um zu bestimmen, den Index des Elements, das beim Ziehen die `MouseDown` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d4410-111">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="d4410-112">Das Beispiel veranschaulicht außerdem die Verwendung von benutzerdefiniertem Cursor für den Drag & Drop-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="d4410-112">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="d4410-113">Im Beispiel wird davon ausgegangen, dass zwei Cursordateien `3dwarro.cur` und `3dwno.cur`, im Verzeichnis der Anwendung für den benutzerdefinierten vorhanden und Drop bzw. den Cursor.</span><span class="sxs-lookup"><span data-stu-id="d4410-113">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="d4410-114">Die benutzerdefinierten Cursor verwendet werden, wenn die `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="d4410-114">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="d4410-115">In benutzerdefinierten Cursor festgelegt sind das <xref:System.Windows.Forms.Control.GiveFeedback> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d4410-115">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="d4410-116">Der Tastaturzustand wird ausgewertet, der <xref:System.Windows.Forms.Control.DragOver> -Ereignishandler für das Recht `ListBox`, um zu bestimmen, welche des Ziehvorgangs werden basierend auf den Zustand von UMSCHALTTASTE, STRG, ALT oder STRG + ALT +.</span><span class="sxs-lookup"><span data-stu-id="d4410-116">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="d4410-117">Die Position in der `ListBox` der Ablegevorgang richtet auch während der `DragOver` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d4410-117">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="d4410-118">Ist die abzulegenden Daten kein `String`, und klicken Sie dann die <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> nastaven NA hodnotu <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d4410-118">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d4410-119">Abschließend wird der Status der Dropdownliste angezeigt, der `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="d4410-119">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="d4410-120">Die Daten für den rechten löschen `ListBox` wird bestimmt, der <xref:System.Windows.Forms.Control.DragDrop> -Ereignishandler und die `String` Wert hinzugefügt wird, an der entsprechenden Stelle in der `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="d4410-120">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="d4410-121">Wenn Sie der Ziehvorgang entsteht, die außerhalb der Begrenzungen des Formulars verschoben wird, und klicken Sie dann der Drag & Drop-Vorgang wird abgebrochen, der <xref:System.Windows.Forms.Control.QueryContinueDrag> -Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d4410-121">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="d4410-122">Dieser Code veranschaulicht die Verwendung der <xref:System.Windows.Forms.GiveFeedbackEventHandler> mit Delegieren der <xref:System.Windows.Forms.Control.GiveFeedback> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d4410-122">This code excerpt demonstrates using the <xref:System.Windows.Forms.GiveFeedbackEventHandler> delegate with the <xref:System.Windows.Forms.Control.GiveFeedback> event.</span></span> <span data-ttu-id="d4410-123">Finden Sie unter den <xref:System.Windows.Forms.Control.DoDragDrop%2A> -Methode für das gesamte Codebeispiel dargestellt.</span><span class="sxs-lookup"><span data-stu-id="d4410-123">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.GiveFeedback" />
    <altmember cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />
  </Docs>
</Type>