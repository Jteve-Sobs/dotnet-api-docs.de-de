<Type Name="TextRenderer" FullName="System.Windows.Forms.TextRenderer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1839a393e20aa4ca67aec799d2650ab7b4e2914" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37564736" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRenderer sealed" />
  <TypeSignature Language="F#" Value="type TextRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden bereit, mit denen Text bemessen und gerendert wird. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer> Klasse bietet eine Reihe von `static` Methoden, die für die Messung und Zeichnen von Text auf einem Windows Form-Steuerelement verwendet werden können.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>t-Methoden von <xref:System.Windows.Forms.TextRenderer> werden zum Drucken nicht unterstützt. Verwenden Sie immer die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RenderText1` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet den angegebenen Gerätekontext, die angegebene Farbe und Schriftart.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Rendern von Text angeboten werden, indem die <xref:System.Windows.Forms.TextRenderer> Klasse basiert auf GDI-Text-Rendering und wird für das Drucken von Windows Forms nicht unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="pt">Der <see cref="T:System.Drawing.Point" />, der die obere linke Ecke des gezeichneten Texts angibt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart und Farbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert.  
  
 Wenn `font` ist `null` oder `forecolor` ist <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methode wird den Text in die Schriftart oder Farbe, die derzeit in den Gerätekontext, die anhand des ausgewählten zeichnen `dc`. Wenn `forecolor` ist <xref:System.Drawing.Color.Transparent%2A>, der Text wird nicht gezeichnet werden.  
  
 Das Rendern von Text angeboten werden, indem die <xref:System.Windows.Forms.TextRenderer> Klasse basiert auf GDI-Text-Rendering und wird für das Drucken von Windows Forms nicht unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die angeben, ein <xref:System.Drawing.Point> als der oberen linken Ecke des gezeichneten Texts nicht korrekt gerendert unter Windows 2000. Wenn Ihre Anwendung für die Verwendung auf Computern unter Windows 2000 vorgesehen ist, verwenden Sie eines der <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die angeben, ein <xref:System.Drawing.Rectangle> für die Grenzen des gezeichneten Texts.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RenderText1` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Texts darstellt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <summary>Zeichnet den angegebenen Text innerhalb der angegebenen Begrenzungen und verwendet den angegebenen Gerätekontext sowie die angegebene Schriftart und Farbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `font` oder `forecolor` ist `null` oder <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>bzw.; die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methode wird den Text in die Schriftart oder Farbe, die derzeit in den Gerätekontext, die anhand des ausgewählten zeichnen `dc`. Wenn `forecolor` ist <xref:System.Drawing.Color.Transparent%2A>, der Text wird nicht gezeichnet werden.  
  
 Diese Methode führt dazu, in Text, der horizontal und vertikal, in dem Rechteck, das gemäß zentriert wird der `bounds` Parameter. Verwenden Sie zum Ändern, wie der Text gezeichnet wird, eine Version von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> , akzeptiert eine <xref:System.Windows.Forms.TextFormatFlags> Parametertyp.  
  
 Das Rendern von Text angeboten werden, indem die <xref:System.Windows.Forms.TextRenderer> Klasse basiert auf GDI-Text-Rendering und wird für das Drucken von Windows Forms nicht unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RenderText2` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="pt">Der <see cref="T:System.Drawing.Point" />, der die obere linke Ecke des gezeichneten Texts angibt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" />, die auf den Hintergrundbereich des gezeichneten Texts angewendet werden soll.</param>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe und Hintergrundfarbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backColor` Parameter auf den rechteckigen Bereich mit den gezeichneten Text angewendet wird. Wenn `font`, `backcolor` oder `forecolor` ist `null` oder <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>bzw.; die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methode wird den Text in die Schriftart oder Farbe, die derzeit in den Gerätekontext, die anhand des ausgewählten zeichnen `dc`. Wenn `forecolor` ist <xref:System.Drawing.Color.Transparent%2A>, der Text wird nicht gezeichnet werden.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert.  
  
 Das Rendern von Text angeboten werden, indem die <xref:System.Windows.Forms.TextRenderer> Klasse basiert auf GDI-Text-Rendering und wird für das Drucken von Windows Forms nicht unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die angeben, ein <xref:System.Drawing.Point> als der oberen linken Ecke des gezeichneten Texts nicht korrekt gerendert unter Windows 2000. Wenn Ihre Anwendung für die Verwendung auf Computern unter Windows 2000 vorgesehen ist, verwenden Sie eines der <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die angeben, ein <xref:System.Drawing.Rectangle> für die Grenzen des gezeichneten Texts.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RenderText3` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="pt">Der <see cref="T:System.Drawing.Point" />, der die obere linke Ecke des gezeichneten Texts angibt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="flags">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.TextFormatFlags" />-Werte.</param>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe und die angegebenen Formatierungsanweisungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Die `backColor` -Parameter angewendet wird, auf den Bereich innerhalb der `bounds` Parameter. Wenn `font` oder `forecolor` ist `null` oder <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>bzw.; die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methode wird den Text in die Schriftart oder Farbe, die derzeit in den Gerätekontext, die anhand des ausgewählten zeichnen `dc`. Wenn `forecolor` ist <xref:System.Drawing.Color.Transparent%2A>, der Text wird nicht gezeichnet werden.  
  
 Das Rendern von Text angeboten werden, indem die <xref:System.Windows.Forms.TextRenderer> Klasse basiert auf GDI-Text-Rendering und wird für das Drucken von Windows Forms nicht unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
 Die <xref:System.Windows.Forms.TextRenderer> wird nicht unterstützt, Hinzufügen von Tabstopps in gezeichnetem Text, obwohl Sie vorhandene Registerkarte erweitern können nicht mehr die <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> Flag.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die angeben, ein <xref:System.Drawing.Point> als der oberen linken Ecke des gezeichneten Texts nicht korrekt gerendert unter Windows 2000. Wenn Ihre Anwendung für die Verwendung auf Computern unter Windows 2000 vorgesehen ist, verwenden Sie eines der <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die angeben, ein <xref:System.Drawing.Rectangle> für die Grenzen des gezeichneten Texts.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RenderText5` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Texts darstellt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" />, die auf den durch <c>bounds</c> dargestellten Bereich angewendet werden soll.</param>
        <summary>Zeichnet den angegebenen Text innerhalb der angegebenen Begrenzungen und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe und Hintergrundfarbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backColor` -Parameter angewendet wird, auf den Bereich innerhalb der `bounds` Parameter. Wenn `font`, `backcolor` oder `forecolor` ist `null` oder <xref:System.Drawing.Color.Empty>bzw.; die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methode wird den Text in die Schriftart oder Farbe, die derzeit in den Gerätekontext, die anhand des ausgewählten zeichnen `dc`. Wenn `forecolor` ist <xref:System.Drawing.Color.Transparent%2A>, der Text wird nicht gezeichnet werden.  
  
 Diese Methode führt dazu, in Text, der horizontal und vertikal, in dem Rechteck, das gemäß zentriert wird der `bounds` Parameter. Verwenden Sie zum Ändern, wie der Text gezeichnet wird, eine Version von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> , akzeptiert eine <xref:System.Windows.Forms.TextFormatFlags> Parametertyp.  
  
 Das Rendern von Text angeboten werden, indem die <xref:System.Windows.Forms.TextRenderer> Klasse basiert auf GDI-Text-Rendering und wird für das Drucken von Windows Forms nicht unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RenderText4` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Texts darstellt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="flags">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.TextFormatFlags" />-Werte.</param>
        <summary>Zeichnet den angegebenen Text innerhalb der angegebenen Begrenzungen und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe und die angegebenen Formatierungsanweisungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `font` oder `color` ist `null` oder <xref:System.Drawing.Color.Empty>bzw.; die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methode wird den Text in die Schriftart oder Farbe, die derzeit in den Gerätekontext, die anhand des ausgewählten zeichnen `dc`. Wenn `forecolor` ist <xref:System.Drawing.Color.Transparent%2A>, der Text wird nicht gezeichnet werden.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Das Rendern von Text angeboten werden, indem die <xref:System.Windows.Forms.TextRenderer> Klasse basiert auf GDI-Text-Rendering und wird für das Drucken von Windows Forms nicht unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
 Die <xref:System.Windows.Forms.TextRenderer> wird nicht unterstützt, Hinzufügen von Tabstopps in gezeichnetem Text, obwohl Sie vorhandene Registerkarte erweitern können nicht mehr die <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> Flag.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RenderText6` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="pt">Der <see cref="T:System.Drawing.Point" />, der die obere linke Ecke des gezeichneten Texts angibt.</param>
        <param name="foreColor">Die <see cref="T:System.Drawing.Color" />, die auf den Text angewendet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" />, die auf den Hintergrundbereich des gezeichneten Texts angewendet werden soll.</param>
        <param name="flags">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.TextFormatFlags" />-Werte.</param>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe, Hintergrundfarbe und die angegebenen Formatierungsanweisungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backcolor` -Parameter angewendet wird der rechteckige Bereich, der den gezeichneten Text enthält. Wenn `font` oder `forecolor` ist `null` oder <xref:System.Drawing.Color.Empty>bzw.; die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methode wird den Text in die Schriftart oder Farbe, die derzeit in den Gerätekontext, die anhand des ausgewählten zeichnen `dc`. Wenn `forecolor` ist <xref:System.Drawing.Color.Transparent%2A>, der Text wird nicht gezeichnet werden.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Das Rendern von Text angeboten werden, indem die <xref:System.Windows.Forms.TextRenderer> Klasse basiert auf GDI-Text-Rendering und wird für das Drucken von Windows Forms nicht unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
 Die <xref:System.Windows.Forms.TextRenderer> wird nicht unterstützt, Hinzufügen von Tabstopps in gezeichnetem Text, obwohl Sie vorhandene Registerkarte erweitern können nicht mehr die <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> Flag.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die angeben, ein <xref:System.Drawing.Point> als der oberen linken Ecke des gezeichneten Texts nicht korrekt gerendert unter Windows 2000. Wenn Ihre Anwendung für die Verwendung auf Computern unter Windows 2000 vorgesehen ist, verwenden Sie eines der <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die angeben, ein <xref:System.Drawing.Rectangle> für die Grenzen des gezeichneten Texts.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RenderText7` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Texts darstellt.</param>
        <param name="foreColor">Die <see cref="T:System.Drawing.Color" />, die auf den Text angewendet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" />, die auf den durch <c>bounds</c> dargestellten Bereich angewendet werden soll.</param>
        <param name="flags">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.TextFormatFlags" />-Werte.</param>
        <summary>Zeichnet den angegebenen Text innerhalb der angegebenen Begrenzungen und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe, Hintergrundfarbe und die angegebenen Formatierungsanweisungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `backcolor` -Parameter angewendet wird, auf den Bereich innerhalb der `bounds` Parameter`.` Wenn `font`, `forecolor` oder `backcolor` ist `null` oder <xref:System.Drawing.Color.Empty>bzw.; die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> wird Zeichnen Sie den Text in die Schriftart oder Farbe, die derzeit in den Gerätekontext, die anhand des ausgewählten `dc`. Wenn `forecolor` ist <xref:System.Drawing.Color.Transparent%2A>, der Text wird nicht gezeichnet werden.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Das Rendern von Text angeboten werden, indem die <xref:System.Windows.Forms.TextRenderer> Klasse basiert auf GDI-Text-Rendering und wird für das Drucken von Windows Forms nicht unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics> Klasse.  
  
 Die <xref:System.Windows.Forms.TextRenderer> wird nicht unterstützt, Hinzufügen von Tabstopps in gezeichnetem Text, obwohl Sie vorhandene Registerkarte erweitern können nicht mehr die <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> Flag.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `RenderText8` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Misst den angegebenen Text, wenn dieser in der angegebenen Schriftart gezeichnet wird.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser in der angegebenen Schriftart gezeichnet wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> (in Pixel) des <paramref name="text" />, der in einer einzelnen Zeile mit dem angegebenen <paramref name="font" /> gezeichnet wird. Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" /> beeinflussen, die einen <see cref="T:System.Windows.Forms.TextFormatFlags" />-Parameter akzeptiert. Standardmäßig fügt <see cref="T:System.Windows.Forms.TextRenderer" /> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" /> und <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" /> zu verwenden, die einen <see cref="T:System.Drawing.Size" />-Parameter und einen <see cref="T:System.Windows.Forms.TextFormatFlags" />-Parameter akzeptieren. Ein Beispiel finden Sie unter <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Methode erfordert, dass der Text in einer einzelnen Zeile gezeichnet wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methode verwenden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `MeasureText1` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text bemessen werden soll.</param>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser in der angegebenen Schriftart im angegebenen Gerätekontext gezeichnet wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> (in Pixel) des <paramref name="text" />, der in einer einzelnen Zeile mit dem angegebenen <paramref name="font" /> im angegebenen Gerätekontext gezeichnet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Methode erfordert, dass der Text in einer einzelnen Zeile gezeichnet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit einer von der <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `DrawALineOfText` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <param name="proposedSize">Die <see cref="T:System.Drawing.Size" /> des anfänglichen umgebenden Rechtecks.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser mit der angegebenen Schriftart gezeichnet wird und dabei mithilfe der angegebenen Größe ein anfängliches umgebendes Rechteck erstellt wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> des mit dem angegebenen <paramref name="text" /> gezeichneten <paramref name="font" /> in Pixel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> -Methode verwendet die `proposedSize` Parameter, um das Verhältnis von Höhe zu Breite anzugeben, wenn die Textgröße zu bestimmen. Beim Messen von Text in einer einzelnen Zeile, wenn die `proposedSize` Parameter repräsentiert eine <xref:System.Drawing.Size> mit einer Höhendimension, die größer als <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zurückgegebenen <xref:System.Drawing.Size> wird die tatsächliche Höhe des Texts entsprechend angepasst werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit einer von der <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `DrawALineOfText` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text bemessen werden soll.</param>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <param name="proposedSize">Die <see cref="T:System.Drawing.Size" /> des anfänglichen umgebenden Rechtecks.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser mit der angegebenen Schriftart im angegebenen Gerätekontext gezeichnet wird und dabei mithilfe der angegebenen Größe ein anfängliches umgebendes Rechteck für den Text erstellt wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> des mit dem angegebenen <paramref name="text" /> gezeichneten <paramref name="font" /> in Pixel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> -Methode verwendet die `proposedSize` Parameter, um das Verhältnis von Höhe zu Breite anzugeben, wenn die Textgröße zu bestimmen. Beim Messen von Text in einer einzelnen Zeile, wenn die `proposedSize` Parameter repräsentiert eine <xref:System.Drawing.Size> mit einer Höhendimension, die größer als <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zurückgegebenen <xref:System.Drawing.Size> wird die tatsächliche Höhe des Texts entsprechend angepasst werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit einer von der <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `DrawALineOfText` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <param name="proposedSize">Die <see cref="T:System.Drawing.Size" /> des anfänglichen umgebenden Rechtecks.</param>
        <param name="flags">Die Formatierungsanweisungen, die für den bemessenen Text gelten sollen.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser mit der angegebenen Schriftart und entsprechend den angegebenen Formatierungsanweisungen gezeichnet wird und dabei mithilfe der angegebenen Größe das anfängliche umgebende Rechteck für den Text erstellt wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> des mit dem angegebenen <paramref name="text" /> und Format gezeichneten <paramref name="font" /> in Pixel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> verwendet die `proposedSize` und `flags` Parameter, um das Verhältnis von Höhe zu Breite anzugeben, wenn die Textgröße zu bestimmen. Beim Messen von Text in einer einzelnen Zeile, wenn die `proposedSize` Parameter repräsentiert eine <xref:System.Drawing.Size> mit einer Höhendimension, die größer als <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zurückgegebenen <xref:System.Drawing.Size> wird die tatsächliche Höhe des Texts entsprechend angepasst werden.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  Diese Überladung der <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> ignoriert eine <xref:System.Windows.Forms.TextFormatFlags> Wert <xref:System.Windows.Forms.TextFormatFlags.NoPadding> oder <xref:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding>. Wenn Sie einen auffüllungswert als den Standardwert angeben, verwenden Sie die Überladung von <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> , akzeptiert eine <xref:System.Drawing.IDeviceContext> Objekt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit einer von der <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Methoden. Um dieses Beispiel auszuführen, fügen Sie den Code in einem Windows Form, und rufen `DrawALineOfText` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text bemessen werden soll.</param>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <param name="proposedSize">Die <see cref="T:System.Drawing.Size" /> des anfänglichen umgebenden Rechtecks.</param>
        <param name="flags">Die Formatierungsanweisungen, die für den bemessenen Text gelten sollen.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser mit dem angegebenen Gerätekontext, mit der angegebenen Schriftart und entsprechend den angegebenen Formatierungsanweisungen gezeichnet wird und dabei mithilfe der angegebenen Größe das anfängliche umgebende Rechteck für den Text erstellt wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> des mit dem angegebenen <paramref name="text" /> und Format gezeichneten <paramref name="font" /> in Pixel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> -Methode verwendet die `proposedSize` und `flags` Parameter, um das Verhältnis von Höhe zu Breite anzugeben, wenn die Textgröße zu bestimmen. Beim Messen von Text in einer einzelnen Zeile, wenn die `proposedSize` Parameter repräsentiert eine <xref:System.Drawing.Size> mit einer Höhendimension, die größer als <xref:System.Int32.MaxValue?displayProperty=nameWithType>, zurückgegebenen <xref:System.Drawing.Size> wird die tatsächliche Höhe des Texts entsprechend angepasst werden.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, verwenden Sie die Versionen der <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> , nehmen eine <xref:System.Drawing.Size> und <xref:System.Windows.Forms.TextFormatFlags> Parameter, wie im Beispiel gezeigt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> und <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, um eine einzelne Textzeile in andere Schriftschnitte zu zeichnen. Zum Ausführen dieses Beispiels fügen Sie den folgenden code in ein Windows Form, und rufen `DrawALineOfText` aus des Formulars <xref:System.Windows.Forms.Control.Paint> -Ereignishandler übergeben `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dc" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>