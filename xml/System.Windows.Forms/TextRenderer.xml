<Type Name="TextRenderer" FullName="System.Windows.Forms.TextRenderer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62142eedf88951864dfaba996499a1251a7294d7" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83533589" /></Metadata><TypeSignature Language="C#" Value="public static class TextRenderer" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TextRenderer extends System.Object" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextRenderer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextRenderer" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRenderer abstract sealed" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
  <TypeSignature Language="F#" Value="type TextRenderer = class" />
  <TypeSignature Language="C#" Value="public sealed class TextRenderer" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextRenderer extends System.Object" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextRenderer" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRenderer sealed" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden bereit, mit denen Text bemessen und gerendert wird. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer>-Klasse stellt eine Reihe von `static` Methoden bereit, die zum Messen und Zeichnen von Text in einem Windows Form-Steuerelement verwendet werden können.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel hierzu finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>t-Methoden von <xref:System.Windows.Forms.TextRenderer> werden zum Drucken nicht unterstützt. Sie sollten immer die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse verwenden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `RenderText1` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet den angegebenen Gerätekontext, die angegebene Farbe und Schriftart.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das von der <xref:System.Windows.Forms.TextRenderer>-Klasse angebotene Text Rendering basiert auf dem GDI-Text Rendering und wird nicht für das Drucken aus Windows Forms unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawText (dc As IDeviceContext, text As String, font As Font, pt As Point, foreColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="pt">Der <see cref="T:System.Drawing.Point" />, der die obere linke Ecke des gezeichneten Texts angibt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart und Farbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert.  
  
 Wenn `font` `null` oder `forecolor` <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>ist, zeichnet die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode den Text in der Schriftart oder Farbe, die derzeit im von `dc`angegebenen Gerätekontext ausgewählt ist. Wenn `forecolor` <xref:System.Drawing.Color.Transparent%2A>ist, wird der Text nicht gezeichnet.  
  
 Das von der <xref:System.Windows.Forms.TextRenderer>-Klasse angebotene Text Rendering basiert auf dem GDI-Text Rendering und wird nicht für das Drucken aus Windows Forms unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die ein <xref:System.Drawing.Point> als linke obere Ecke des gezeichneten Texts angeben, werden unter Windows 2000 nicht ordnungsgemäß angezeigt. Wenn Ihre Anwendung für die Verwendung auf Computern mit Windows 2000 vorgesehen ist, sollten Sie eine der <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden verwenden, die eine <xref:System.Drawing.Rectangle> für die Begrenzungen des gezeichneten Texts angeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `RenderText1` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawText (dc As IDeviceContext, text As String, font As Font, bounds As Rectangle, foreColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Texts darstellt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <summary>Zeichnet den angegebenen Text innerhalb der angegebenen Begrenzungen und verwendet den angegebenen Gerätekontext sowie die angegebene Schriftart und Farbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `font` oder `forecolor` `null` bzw. <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>ist, mit der <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode wird der Text in der Schriftart oder Farbe gezeichnet, die derzeit im durch `dc`angegebenen Gerätekontext ausgewählt ist. Wenn `forecolor` <xref:System.Drawing.Color.Transparent%2A>ist, wird der Text nicht gezeichnet.  
  
 Diese Methode führt zu Text, der horizontal und vertikal in dem Rechteck zentriert ist, das durch den `bounds`-Parameter angegeben wird. Um zu ändern, wie der Text gezeichnet wird, verwenden Sie eine Version von <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, die einen <xref:System.Windows.Forms.TextFormatFlags> Parametertyp annimmt.  
  
 Das von der <xref:System.Windows.Forms.TextRenderer>-Klasse angebotene Text Rendering basiert auf dem GDI-Text Rendering und wird nicht für das Drucken aus Windows Forms unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `RenderText2` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawText (dc As IDeviceContext, text As String, font As Font, pt As Point, foreColor As Color, backColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="pt">Der <see cref="T:System.Drawing.Point" />, der die obere linke Ecke des gezeichneten Texts angibt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" />, die auf den Hintergrundbereich des gezeichneten Texts angewendet werden soll.</param>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe und Hintergrundfarbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `backColor`-Parameter wird auf den rechteckigen Bereich angewendet, der den gezeichneten Text enthält. Wenn `font`, wird `backcolor` oder `forecolor` `null` bzw. <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>. mit der <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode wird der Text in der Schriftart oder Farbe gezeichnet, die derzeit im durch `dc`angegebenen Gerätekontext ausgewählt ist. Wenn `forecolor` <xref:System.Drawing.Color.Transparent%2A>ist, wird der Text nicht gezeichnet.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert.  
  
 Das von der <xref:System.Windows.Forms.TextRenderer>-Klasse angebotene Text Rendering basiert auf dem GDI-Text Rendering und wird nicht für das Drucken aus Windows Forms unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die ein <xref:System.Drawing.Point> als linke obere Ecke des gezeichneten Texts angeben, werden unter Windows 2000 nicht ordnungsgemäß angezeigt. Wenn Ihre Anwendung für die Verwendung auf Computern mit Windows 2000 vorgesehen ist, sollten Sie eine der <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden verwenden, die eine <xref:System.Drawing.Rectangle> für die Begrenzungen des gezeichneten Texts angeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `RenderText3` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawText (dc As IDeviceContext, text As String, font As Font, pt As Point, foreColor As Color, flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="pt">Der <see cref="T:System.Drawing.Point" />, der die obere linke Ecke des gezeichneten Texts angibt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="flags">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.TextFormatFlags" />-Werte.</param>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe und die angegebenen Formatierungsanweisungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel hierzu finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Der `backColor`-Parameter wird auf den Bereich innerhalb des `bounds`-Parameters angewendet. Wenn `font` oder `forecolor` `null` bzw. <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>ist, mit der <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode wird der Text in der Schriftart oder Farbe gezeichnet, die derzeit im durch `dc`angegebenen Gerätekontext ausgewählt ist. Wenn `forecolor` <xref:System.Drawing.Color.Transparent%2A>ist, wird der Text nicht gezeichnet.  
  
 Das von der <xref:System.Windows.Forms.TextRenderer>-Klasse angebotene Text Rendering basiert auf dem GDI-Text Rendering und wird nicht für das Drucken aus Windows Forms unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse.  
  
 Der <xref:System.Windows.Forms.TextRenderer> unterstützt das Hinzufügen von Tabstopps zum Zeichnen von Text nicht, obwohl Sie vorhandene Tabstopps mithilfe des <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> Flags erweitern können.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die ein <xref:System.Drawing.Point> als linke obere Ecke des gezeichneten Texts angeben, werden unter Windows 2000 nicht ordnungsgemäß angezeigt. Wenn Ihre Anwendung für die Verwendung auf Computern mit Windows 2000 vorgesehen ist, sollten Sie eine der <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden verwenden, die eine <xref:System.Drawing.Rectangle> für die Begrenzungen des gezeichneten Texts angeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `RenderText5` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawText (dc As IDeviceContext, text As String, font As Font, bounds As Rectangle, foreColor As Color, backColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Texts darstellt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" />, die auf den durch <paramref name="bounds" /> dargestellten Bereich angewendet werden soll.</param>
        <summary>Zeichnet den angegebenen Text innerhalb der angegebenen Begrenzungen und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe und Hintergrundfarbe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `backColor`-Parameter wird auf den Bereich innerhalb des `bounds`-Parameters angewendet. Wenn `font`, wird `backcolor` oder `forecolor` `null` bzw. <xref:System.Drawing.Color.Empty>. mit der <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode wird der Text in der Schriftart oder Farbe gezeichnet, die derzeit im durch `dc`angegebenen Gerätekontext ausgewählt ist. Wenn `forecolor` <xref:System.Drawing.Color.Transparent%2A>ist, wird der Text nicht gezeichnet.  
  
 Diese Methode führt zu Text, der horizontal und vertikal in dem Rechteck zentriert ist, das durch den `bounds`-Parameter angegeben wird. Um zu ändern, wie der Text gezeichnet wird, verwenden Sie eine Version von <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, die einen <xref:System.Windows.Forms.TextFormatFlags> Parametertyp annimmt.  
  
 Das von der <xref:System.Windows.Forms.TextRenderer>-Klasse angebotene Text Rendering basiert auf dem GDI-Text Rendering und wird nicht für das Drucken aus Windows Forms unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `RenderText4` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawText (dc As IDeviceContext, text As String, font As Font, bounds As Rectangle, foreColor As Color, flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Texts darstellt.</param>
        <param name="foreColor">Der <see cref="T:System.Drawing.Color" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="flags">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.TextFormatFlags" />-Werte.</param>
        <summary>Zeichnet den angegebenen Text innerhalb der angegebenen Begrenzungen und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe und die angegebenen Formatierungsanweisungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `font` oder `color` `null` bzw. <xref:System.Drawing.Color.Empty>ist, mit der <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode wird der Text in der Schriftart oder Farbe gezeichnet, die derzeit im durch `dc`angegebenen Gerätekontext ausgewählt ist. Wenn `forecolor` <xref:System.Drawing.Color.Transparent%2A>ist, wird der Text nicht gezeichnet.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel hierzu finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Das von der <xref:System.Windows.Forms.TextRenderer>-Klasse angebotene Text Rendering basiert auf dem GDI-Text Rendering und wird nicht für das Drucken aus Windows Forms unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse.  
  
 Der <xref:System.Windows.Forms.TextRenderer> unterstützt das Hinzufügen von Tabstopps zum Zeichnen von Text nicht, obwohl Sie vorhandene Tabstopps mithilfe des <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> Flags erweitern können.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `RenderText6` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawText (dc As IDeviceContext, text As String, font As Font, pt As Point, foreColor As Color, backColor As Color, flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, pt, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="pt">Der <see cref="T:System.Drawing.Point" />, der die obere linke Ecke des gezeichneten Texts angibt.</param>
        <param name="foreColor">Die <see cref="T:System.Drawing.Color" />, die auf den Text angewendet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" />, die auf den Hintergrundbereich des gezeichneten Texts angewendet werden soll.</param>
        <param name="flags">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.TextFormatFlags" />-Werte.</param>
        <summary>Zeichnet den angegebenen Text an der angegebenen Position und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe, Hintergrundfarbe und die angegebenen Formatierungsanweisungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `backcolor`-Parameter wird auf den rechteckigen Bereich angewendet, der den gezeichneten Text enthält. Wenn `font` oder `forecolor` `null` bzw. <xref:System.Drawing.Color.Empty>ist, mit der <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode wird der Text in der Schriftart oder Farbe gezeichnet, die derzeit im durch `dc`angegebenen Gerätekontext ausgewählt ist. Wenn `forecolor` <xref:System.Drawing.Color.Transparent%2A>ist, wird der Text nicht gezeichnet.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel hierzu finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Das von der <xref:System.Windows.Forms.TextRenderer>-Klasse angebotene Text Rendering basiert auf dem GDI-Text Rendering und wird nicht für das Drucken aus Windows Forms unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse.  
  
 Der <xref:System.Windows.Forms.TextRenderer> unterstützt das Hinzufügen von Tabstopps zum Zeichnen von Text nicht, obwohl Sie vorhandene Tabstopps mithilfe des <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> Flags erweitern können.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden, die ein <xref:System.Drawing.Point> als linke obere Ecke des gezeichneten Texts angeben, werden unter Windows 2000 nicht ordnungsgemäß angezeigt. Wenn Ihre Anwendung für die Verwendung auf Computern mit Windows 2000 vorgesehen ist, sollten Sie eine der <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Methoden verwenden, die eine <xref:System.Drawing.Rectangle> für die Begrenzungen des gezeichneten Texts angeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `RenderText7` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawText (dc As IDeviceContext, text As String, font As Font, bounds As Rectangle, foreColor As Color, backColor As Color, flags As TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member DrawText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Windows.Forms.TextFormatFlags -&gt; unit" Usage="System.Windows.Forms.TextRenderer.DrawText (dc, text, font, bounds, foreColor, backColor, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text gezeichnet werden soll.</param>
        <param name="text">Der zu zeichnende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den gezeichneten Text angewendet werden soll.</param>
        <param name="bounds">Das <see cref="T:System.Drawing.Rectangle" />, das die Begrenzungen des Texts darstellt.</param>
        <param name="foreColor">Die <see cref="T:System.Drawing.Color" />, die auf den Text angewendet werden soll.</param>
        <param name="backColor">Die <see cref="T:System.Drawing.Color" />, die auf den durch <paramref name="bounds" /> dargestellten Bereich angewendet werden soll.</param>
        <param name="flags">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.TextFormatFlags" />-Werte.</param>
        <summary>Zeichnet den angegebenen Text innerhalb der angegebenen Begrenzungen und verwendet dabei den angegebenen Gerätekontext, die angegebene Schriftart, Farbe, Hintergrundfarbe und die angegebenen Formatierungsanweisungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `backcolor`-Parameter wird auf den Bereich innerhalb des `bounds`-Parameters angewendet`.` wenn `font`, `forecolor` oder `backcolor` `null` bzw. <xref:System.Drawing.Color.Empty>ist. mit der <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode wird der Text in der Schriftart oder Farbe gezeichnet, die derzeit im durch `dc`angegebenen Gerätekontext ausgewählt ist. Wenn `forecolor` <xref:System.Drawing.Color.Transparent%2A>ist, wird der Text nicht gezeichnet.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel hierzu finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Das von der <xref:System.Windows.Forms.TextRenderer>-Klasse angebotene Text Rendering basiert auf dem GDI-Text Rendering und wird nicht für das Drucken aus Windows Forms unterstützt. Verwenden Sie stattdessen die <xref:System.Drawing.Graphics.DrawString%2A> Methoden der <xref:System.Drawing.Graphics>-Klasse.  
  
 Der <xref:System.Windows.Forms.TextRenderer> unterstützt das Hinzufügen von Tabstopps zum Zeichnen von Text nicht, obwohl Sie vorhandene Tabstopps mithilfe des <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> Flags erweitern können.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.DrawText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `RenderText8` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Misst den angegebenen Text, wenn dieser in der angegebenen Schriftart gezeichnet wird.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MeasureText (text As String, font As Font) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser in der angegebenen Schriftart gezeichnet wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> (in Pixel) des <paramref name="text" />, der in einer einzelnen Zeile mit dem angegebenen <paramref name="font" /> gezeichnet wird. Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" /> beeinflussen, die einen <see cref="T:System.Windows.Forms.TextFormatFlags" />-Parameter akzeptiert. Standardmäßig fügt <see cref="T:System.Windows.Forms.TextRenderer" /> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" /> und <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" /> zu verwenden, die einen <see cref="T:System.Drawing.Size" />-Parameter und einen <see cref="T:System.Windows.Forms.TextFormatFlags" />-Parameter akzeptieren. Ein Beispiel hierzu finden Sie unter <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methode erfordert, dass der Text in einer einzelnen Zeile gezeichnet wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methode verwenden. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `MeasureText1` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MeasureText (dc As IDeviceContext, text As String, font As Font) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text bemessen werden soll.</param>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser in der angegebenen Schriftart im angegebenen Gerätekontext gezeichnet wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> (in Pixel) des <paramref name="text" />, der in einer einzelnen Zeile mit dem angegebenen <paramref name="font" /> im angegebenen Gerätekontext gezeichnet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methode erfordert, dass der Text in einer einzelnen Zeile gezeichnet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine der <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methoden verwendet wird. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `DrawALineOfText` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MeasureText (text As String, font As Font, proposedSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <param name="proposedSize">Die <see cref="T:System.Drawing.Size" /> des anfänglichen umgebenden Rechtecks.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser mit der angegebenen Schriftart gezeichnet wird und dabei mithilfe der angegebenen Größe ein anfängliches umgebendes Rechteck erstellt wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> des mit dem angegebenen <paramref name="text" /> gezeichneten <paramref name="font" /> in Pixel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methode verwendet den `proposedSize`-Parameter, um die Beziehung zwischen Höhe und Breite beim Bestimmen der Textgröße anzugeben. Beim Messen von Text in einer einzelnen Zeile wird die zurückgegebene <xref:System.Drawing.Size> angepasst, um die tatsächliche Höhe des Texts widerzuspiegeln, wenn der `proposedSize`-Parameter ein <xref:System.Drawing.Size> mit einer Height-Dimension darstellt, die größer als <xref:System.Int32.MaxValue?displayProperty=nameWithType>ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine der <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methoden verwendet wird. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `DrawALineOfText` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MeasureText (dc As IDeviceContext, text As String, font As Font, proposedSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text bemessen werden soll.</param>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <param name="proposedSize">Die <see cref="T:System.Drawing.Size" /> des anfänglichen umgebenden Rechtecks.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser mit der angegebenen Schriftart im angegebenen Gerätekontext gezeichnet wird und dabei mithilfe der angegebenen Größe ein anfängliches umgebendes Rechteck für den Text erstellt wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> des mit dem angegebenen <paramref name="text" /> gezeichneten <paramref name="font" /> in Pixel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methode verwendet den `proposedSize`-Parameter, um die Beziehung zwischen Höhe und Breite beim Bestimmen der Textgröße anzugeben. Beim Messen von Text in einer einzelnen Zeile wird die zurückgegebene <xref:System.Drawing.Size> angepasst, um die tatsächliche Höhe des Texts widerzuspiegeln, wenn der `proposedSize`-Parameter ein <xref:System.Drawing.Size> mit einer Height-Dimension darstellt, die größer als <xref:System.Int32.MaxValue?displayProperty=nameWithType>ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine der <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methoden verwendet wird. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `DrawALineOfText` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MeasureText (text As String, font As Font, proposedSize As Size, flags As TextFormatFlags) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <param name="proposedSize">Die <see cref="T:System.Drawing.Size" /> des anfänglichen umgebenden Rechtecks.</param>
        <param name="flags">Die Formatierungsanweisungen, die für den bemessenen Text gelten sollen.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser mit der angegebenen Schriftart und entsprechend den angegebenen Formatierungsanweisungen gezeichnet wird und dabei mithilfe der angegebenen Größe das anfängliche umgebende Rechteck für den Text erstellt wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> des mit dem angegebenen <paramref name="text" /> und Format gezeichneten <paramref name="font" /> in Pixel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> verwendet die Parameter `proposedSize` und `flags`, um die Beziehung zwischen Höhe und Breite beim Bestimmen der Textgröße anzugeben. Beim Messen von Text in einer einzelnen Zeile wird die zurückgegebene <xref:System.Drawing.Size> angepasst, um die tatsächliche Höhe des Texts widerzuspiegeln, wenn der `proposedSize`-Parameter ein <xref:System.Drawing.Size> mit einer Height-Dimension darstellt, die größer als <xref:System.Int32.MaxValue?displayProperty=nameWithType>ist.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diesen zusätzlichen Leerraum zeichnen müssen, empfiehlt es sich, die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> zu verwenden, die einen <xref:System.Drawing.Size>-Parameter und einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptieren. Ein Beispiel hierzu finden Sie unter <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  Diese Überladung von <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> ignoriert einen <xref:System.Windows.Forms.TextFormatFlags> Wert von <xref:System.Windows.Forms.TextFormatFlags.NoPadding> oder <xref:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding>. Wenn Sie einen anderen Auffüll Wert als den Standardwert angeben, sollten Sie die Überladung von <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> verwenden, die ein <xref:System.Drawing.IDeviceContext>-Objekt annimmt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine der <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methoden verwendet wird. Fügen Sie zum Ausführen dieses Beispiels den Code in ein Windows Form ein, und geben Sie `DrawALineOfText` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MeasureText (dc As IDeviceContext, text As String, font As Font, proposedSize As Size, flags As TextFormatFlags) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberSignature Language="F#" Value="static member MeasureText : System.Drawing.IDeviceContext * string * System.Drawing.Font * System.Drawing.Size * System.Windows.Forms.TextFormatFlags -&gt; System.Drawing.Size" Usage="System.Windows.Forms.TextRenderer.MeasureText (dc, text, font, proposedSize, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Der Gerätekontext, in dem der Text bemessen werden soll.</param>
        <param name="text">Der zu bemessende Text.</param>
        <param name="font">Der <see cref="T:System.Drawing.Font" />, der auf den bemessenen Text angewendet werden soll.</param>
        <param name="proposedSize">Die <see cref="T:System.Drawing.Size" /> des anfänglichen umgebenden Rechtecks.</param>
        <param name="flags">Die Formatierungsanweisungen, die für den bemessenen Text gelten sollen.</param>
        <summary>Gibt die Größe des angegebenen Texts in Pixel an, wenn dieser mit dem angegebenen Gerätekontext, mit der angegebenen Schriftart und entsprechend den angegebenen Formatierungsanweisungen gezeichnet wird und dabei mithilfe der angegebenen Größe das anfängliche umgebende Rechteck für den Text erstellt wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Size" /> des mit dem angegebenen <paramref name="text" /> und Format gezeichneten <paramref name="font" /> in Pixel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>-Methode verwendet die Parameter `proposedSize` und `flags`, um die Beziehung zwischen Höhe und Breite beim Bestimmen der Textgröße anzugeben. Beim Messen von Text in einer einzelnen Zeile wird die zurückgegebene <xref:System.Drawing.Size> angepasst, um die tatsächliche Höhe des Texts widerzuspiegeln, wenn der `proposedSize`-Parameter ein <xref:System.Drawing.Size> mit einer Height-Dimension darstellt, die größer als <xref:System.Int32.MaxValue?displayProperty=nameWithType>ist.  
  
 Wie der Text gezeichnet wird, können Sie mithilfe einer der Überladungen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> beeinflussen, die einen <xref:System.Windows.Forms.TextFormatFlags>-Parameter akzeptiert. Standardmäßig fügt <xref:System.Windows.Forms.TextRenderer> dem umgebenden Rechteck des gezeichneten Texts einen Abstand hinzu, damit überhängende Symbole aufgenommen werden können. Wenn Sie eine Textzeile ohne diese zusätzlichen Leerzeichen zeichnen müssen, verwenden Sie die Versionen von <xref:System.Windows.Forms.TextRenderer.DrawText%2A> und <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>, die einen <xref:System.Drawing.Size> und <xref:System.Windows.Forms.TextFormatFlags> Parameter annehmen, wie im Beispiel gezeigt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die Methoden <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> und <xref:System.Windows.Forms.TextRenderer.DrawText%2A> verwendet werden, um eine einzelne Textzeile in verschiedenen Schriftarten von Text zu zeichnen. Fügen Sie zum Ausführen dieses Beispiels den folgenden Code in ein Windows Form ein, und geben Sie `DrawALineOfText` aus dem <xref:System.Windows.Forms.Control.Paint> Ereignishandler des Formulars ein, wobei `e` als <xref:System.Windows.Forms.PaintEventArgs>übergeben werden.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dc" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
