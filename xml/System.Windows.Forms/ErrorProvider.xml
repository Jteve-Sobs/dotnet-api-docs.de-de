<Type Name="ErrorProvider" FullName="System.Windows.Forms.ErrorProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="606d2bf7b33b04a7d16b72d2e469e3a9dcd0d8bf" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57933275" /></Metadata><TypeSignature Language="C#" Value="public class ErrorProvider : System.ComponentModel.Component, System.ComponentModel.IExtenderProvider, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ErrorProvider extends System.ComponentModel.Component implements class System.ComponentModel.IExtenderProvider, class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ErrorProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ErrorProvider&#xA;Inherits Component&#xA;Implements IExtenderProvider, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrorProvider : System::ComponentModel::Component, System::ComponentModel::IExtenderProvider, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type ErrorProvider = class&#xA;    inherit Component&#xA;    interface IExtenderProvider&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("IconPadding", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("IconAlignment", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Error", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bietet eine Benutzeroberfläche, über die angezeigt werden kann, dass für ein Steuerelement auf einem Formular ein zugeordneter Fehler vorliegt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ErrorProvider> Stellt einen einfachen Mechanismus bereit, der angibt, für den Endbenutzer an, dass einem Steuerelement in einem Formular Fehler zugeordnet ist. Wenn eine Zeichenfolge zur fehlerbeschreibung für das Steuerelement angegeben wird, wird ein Symbol neben dem Steuerelement angezeigt. Das Symbol blinkt, in dem durch angegebenen <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>, vom angegebenen Rate <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>. Wenn der Mauszeiger über dem Symbol zeigt eine QuickInfo angezeigt wird, zeigt die Zeichenfolge zur fehlerbeschreibung.  
  
 Normalerweise verwenden Sie <xref:System.Windows.Forms.ErrorProvider> im Zusammenhang mit datengebundenen Steuerelementen. Bei Verwendung <xref:System.Windows.Forms.ErrorProvider> mit datengebundenen Steuerelementen, Sie müssen angeben, die <xref:System.Windows.Forms.ErrorProvider.ContainerControl%2A>, entweder im Konstruktor oder durch Festlegen der <xref:System.Windows.Forms.ErrorProvider.ContainerControl%2A> Eigenschaft.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.ErrorProvider> Komponente bietet keine integrierten Unterstützung für Eingabehilfen-Clients. Um die Anwendung zugreifen können, wenn Sie diese Komponente verwenden, müssen Sie einen zusätzliche, gut erreichbaren Feedbackmechanismus angeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ErrorProvider> Klasse, um die Benutzer über einen Dateneingabefehler zu benachrichtigen. Das Beispiel erstellt eine <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.TextBox> -Steuerelement, ein <xref:System.Windows.Forms.NumericUpDown> -Steuerelement, und ein <xref:System.Windows.Forms.ComboBox> überprüfen Sie, überprüfen den Inhalt, und ein <xref:System.Windows.Forms.ErrorProvider> für jedes Steuerelement. Im Beispiel wird Fehler Symboloptionen, die mithilfe der <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> und <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> Eigenschaften und die <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> und <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> Methoden. Die <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Methode wird aufgerufen, mit oder ohne entsprechenden Fehlertext während eines Steuerelements <xref:System.Windows.Forms.Control.Validated> -Ereignis, abhängig von den Inhalt des Steuerelements.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ErrorProvider> mit einem <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> und <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> ein Datenfehler an den Benutzer an.  
  
 [!code-cpp[Classic ErrorProvider Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ErrorProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ErrorProvider Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ErrorProvider Example/CS/source.cs#1)]
 [!code-vb[Classic ErrorProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ErrorProvider Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ErrorProvider" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ErrorProvider" />-Klasse und die Standardeinstellungen für die <see cref="P:System.Windows.Forms.ErrorProvider.BlinkRate" />, <see cref="P:System.Windows.Forms.ErrorProvider.BlinkStyle" /> und das <see cref="P:System.Windows.Forms.ErrorProvider.Icon" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgende Tabelle werden die anfänglichen Eigenschaftenwerte für eine Instanz von <xref:System.Windows.Forms.ErrorProvider>.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Windows.Forms.ErrorProvider.Icon%2A>|Ein Symbol, das von einem Ausrufezeichen in einem Kreis mit rotem Hintergrund besteht aus.|  
|<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>|250|  
|<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>|<xref:System.Windows.Forms.ErrorBlinkStyle.BlinkIfDifferentError>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorProvider (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorProvider(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ErrorProvider : System.ComponentModel.IContainer -&gt; System.Windows.Forms.ErrorProvider" Usage="new System.Windows.Forms.ErrorProvider container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="container">Der <see cref="T:System.ComponentModel.IContainer" />, der auf Fehler überwacht werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ErrorProvider" />-Klasse, die einer <see cref="T:System.ComponentModel.IContainer" />-Implementierung angefügt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.IContainer> angegeben wurde, ist das Containerobjekt für die datengebundenen Steuerelemente zum Fehleranbieter zugeordnet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorProvider (System.Windows.Forms.ContainerControl parentControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ContainerControl parentControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.#ctor(System.Windows.Forms.ContainerControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentControl As ContainerControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorProvider(System::Windows::Forms::ContainerControl ^ parentControl);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ErrorProvider : System.Windows.Forms.ContainerControl -&gt; System.Windows.Forms.ErrorProvider" Usage="new System.Windows.Forms.ErrorProvider parentControl" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentControl" Type="System.Windows.Forms.ContainerControl" />
      </Parameters>
      <Docs>
        <param name="parentControl">Der Container des Steuerelements für die Fehlerüberwachung.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.ErrorProvider" />-Klasse, die einem Container angefügt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.Control> gemäß <xref:System.Windows.Forms.ErrorProvider.ContainerControl%2A> das Containerobjekt für das datengebundene Steuerelemente zum Fehleranbieter zugeordnet ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToDataAndErrors">
      <MemberSignature Language="C#" Value="public void BindToDataAndErrors (object newDataSource, string newDataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindToDataAndErrors(object newDataSource, string newDataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.BindToDataAndErrors(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToDataAndErrors (newDataSource As Object, newDataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToDataAndErrors(System::Object ^ newDataSource, System::String ^ newDataMember);" />
      <MemberSignature Language="F#" Value="member this.BindToDataAndErrors : obj * string -&gt; unit" Usage="errorProvider.BindToDataAndErrors (newDataSource, newDataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newDataSource" Type="System.Object" />
        <Parameter Name="newDataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newDataSource">Ein Dataset auf Grundlage der <see cref="T:System.Collections.IList" />-Schnittstelle, das auf Fehler überwacht werden soll. Dabei handelt es sich i. d. R. um ein <see cref="T:System.Data.DataSet" />, das auf Fehler überwacht wird.</param>
        <param name="newDataMember">Eine Auflistung innerhalb des <paramref name="newDataSource" />, das auf Fehler überwacht werden soll. In der Regel handelt es sich dabei um eine <see cref="T:System.Data.DataTable" />.</param>
        <summary>Stellt eine Methode für das Festlegen der <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" /> und des <see cref="P:System.Windows.Forms.ErrorProvider.DataMember" /> zur Laufzeit bereit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zur Vermeidung von Konflikten bei der Ausführung, die auftreten können, wenn Sie <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> und <xref:System.Windows.Forms.ErrorProvider.DataMember%2A>, verwenden Sie <xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A> statt <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> und <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> einzeln.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlinkRate">
      <MemberSignature Language="C#" Value="public int BlinkRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlinkRate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.BlinkRate" />
      <MemberSignature Language="VB.NET" Value="Public Property BlinkRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlinkRate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlinkRate : int with get, set" Usage="System.Windows.Forms.ErrorProvider.BlinkRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(250)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Frequenz ab, in der das Fehlersymbol blinkt, oder legt diese fest.</summary>
        <value>Die Frequenz, in der das Fehlersymbol blinken soll, in Millisekunden. Der Standardwert ist 250 Millisekunden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Fehlersymbol blinkt, mit der angegebenen Rate. Der Wert 0 (null) legt <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> zu <xref:System.Windows.Forms.ErrorBlinkStyle.NeverBlink>.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ErrorProvider> Klasse, um die Benutzer über einen Dateneingabefehler zu benachrichtigen. Das Beispiel erstellt eine <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.TextBox> -Steuerelement, ein <xref:System.Windows.Forms.NumericUpDown> -Steuerelement, und ein <xref:System.Windows.Forms.ComboBox> überprüfen Sie, überprüfen den Inhalt, und ein <xref:System.Windows.Forms.ErrorProvider> für jedes Steuerelement. Im Beispiel wird Fehler Symboloptionen, die mithilfe der <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> und <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> Eigenschaften und die <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> und <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> Methoden. Die <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Methode wird aufgerufen, mit oder ohne entsprechenden Fehlertext während eines Steuerelements <xref:System.Windows.Forms.Control.Validated> -Ereignis, abhängig von den Inhalt des Steuerelements.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Windows.Forms.ErrorProvider.BlinkStyle" />
      </Docs>
    </Member>
    <Member MemberName="BlinkStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ErrorBlinkStyle BlinkStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ErrorBlinkStyle BlinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.BlinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BlinkStyle As ErrorBlinkStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ErrorBlinkStyle BlinkStyle { System::Windows::Forms::ErrorBlinkStyle get(); void set(System::Windows::Forms::ErrorBlinkStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BlinkStyle : System.Windows.Forms.ErrorBlinkStyle with get, set" Usage="System.Windows.Forms.ErrorProvider.BlinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ErrorBlinkStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, wann das Fehlersymbol blinkt, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.ErrorBlinkStyle" />-Werte. Die Standardeinstellung ist <see cref="F:System.Windows.Forms.ErrorBlinkStyle.BlinkIfDifferentError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Fehlersymbol blinkt, auf die Weise, die gemäß der zugewiesenen <xref:System.Windows.Forms.ErrorBlinkStyle> Wenn ein Fehler auftritt. Festlegen der <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> auf 0 (null) legt die <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> zu <xref:System.Windows.Forms.ErrorBlinkStyle.NeverBlink>.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ErrorProvider> Klasse, um die Benutzer über einen Dateneingabefehler zu benachrichtigen. Das Beispiel erstellt eine <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.TextBox> -Steuerelement, ein <xref:System.Windows.Forms.NumericUpDown> -Steuerelement, und ein <xref:System.Windows.Forms.ComboBox> überprüfen Sie, überprüfen den Inhalt, und ein <xref:System.Windows.Forms.ErrorProvider> für jedes Steuerelement. Im Beispiel wird Fehler Symboloptionen, die mithilfe der <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> und <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> Eigenschaften und die <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> und <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> Methoden. Die <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Methode wird aufgerufen, mit oder ohne entsprechenden Fehlertext während eines Steuerelements <xref:System.Windows.Forms.Control.Validated> -Ereignis, abhängig von den Inhalt des Steuerelements.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der zugewiesene Wert ist keiner der <see cref="T:System.Windows.Forms.ErrorBlinkStyle" />-Werte.</exception>
        <altmember cref="T:System.Windows.Forms.ErrorBlinkStyle" />
        <altmember cref="P:System.Windows.Forms.ErrorProvider.BlinkRate" />
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object extendee);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExtend(object extendee) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (extendee As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ extendee);" />
      <MemberSignature Language="F#" Value="abstract member CanExtend : obj -&gt; bool&#xA;override this.CanExtend : obj -&gt; bool" Usage="errorProvider.CanExtend extendee" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extendee" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="extendee">Das zu erweiternde Steuerelement.</param>
        <summary>Ruft einen Wert ab, der angibt, ob ein Steuerelement erweitert werden kann.</summary>
        <returns><see langword="true" />, wenn das Steuerelement erweitert werden kann, andernfalls <see langword="false" />.  
  
Diese Eigenschaft ist <see langword="true" />, wenn das Objekt ein <see cref="T:System.Windows.Forms.Control" />, aber kein <see cref="T:System.Windows.Forms.Form" /> bzw. keine <see cref="T:System.Windows.Forms.ToolBar" /> ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie in der Regel <xref:System.Windows.Forms.ErrorProvider.CanExtend%2A> zu bestimmen, ob Sie anfügen können, eine <xref:System.Windows.Forms.ErrorProvider> auf das angegebene Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errorProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht alle dieser Komponente zugeordneten Einstellungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Aufrufen dieser Methode löscht alle eigenschafteneinstellungen für diesen <xref:System.Windows.Forms.ErrorProvider>, Wiederherstellen der Eigenschaften auf ihre Standardwerte zurück. Um die Fehlermeldung zu löschen, rufen die <xref:System.Windows.Forms.ErrorProvider.SetError%2A> -Methode und übergeben Sie <xref:System.String.Empty> für die <xref:System.String> Wert. Dadurch wird das Fehlersymbol entfernt, aus dem angegebenen <xref:System.Windows.Forms.Control>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContainerControl ContainerControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContainerControl ContainerControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerControl As ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ContainerControl ^ ContainerControl { System::Windows::Forms::ContainerControl ^ get(); void set(System::Windows::Forms::ContainerControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContainerControl : System.Windows.Forms.ContainerControl with get, set" Usage="System.Windows.Forms.ErrorProvider.ContainerControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContainerControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der das übergeordnete Steuerelement für diesen <see cref="T:System.Windows.Forms.ErrorProvider" /> angibt, oder legt diesen fest.</summary>
        <value>Das <see cref="T:System.Windows.Forms.ContainerControl" />, in dem das Steuerelement enthalten ist, dem der <see cref="T:System.Windows.Forms.ErrorProvider" /> angefügt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist normalerweise die <xref:System.Windows.Forms.Form> die datengebundenen Steuerelemente befinden sich auf.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">für abgeleitete Klassen, die diese Eigenschaft überschreiben. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.ErrorProvider.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die zu überwachende Liste in einer Datenquelle ab oder legt diese fest.</summary>
        <value>Die Zeichenfolge, die eine Liste in der Datenquelle darstellt, die von der zu überwachenden <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" /> angegeben wird. In der Regel handelt es sich dabei um eine <see cref="T:System.Data.DataTable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> ist eine Navigationszeichenfolge basierend auf <xref:System.Windows.Forms.ErrorProvider.DataSource%2A>.  
  
 Zur Vermeidung von Konflikten bei der Ausführung, die auftreten können, wenn Sie <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> und <xref:System.Windows.Forms.ErrorProvider.DataMember%2A>, verwenden Sie <xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A> statt <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> und <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> einzeln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ErrorProvider> mit einem <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> und <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> ein Datenfehler an den Benutzer an.  
  
 [!code-cpp[Classic ErrorProvider Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ErrorProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ErrorProvider Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ErrorProvider Example/CS/source.cs#1)]
 [!code-vb[Classic ErrorProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ErrorProvider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.ErrorProvider.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Datenquelle ab, die der <see cref="T:System.Windows.Forms.ErrorProvider" /> überwacht, oder legt diese fest.</summary>
        <value>Eine Datenquelle auf der Grundlage der <see cref="T:System.Collections.IList" />-Schnittstelle, die auf Fehler überwacht werden soll. Dabei handelt es sich i. d. R. um ein <see cref="T:System.Data.DataSet" />, das auf Fehler überwacht wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> ist eine Datenquelle, die Sie an ein Steuerelement anfügen können, und die auf Fehler überwacht werden soll. <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> kann festgelegt werden, um eine beliebige Sammlung, die implementiert <xref:System.Collections.IList>.  
  
 Zur Vermeidung von Konflikten bei der Ausführung, die auftreten können, wenn Sie <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> und <xref:System.Windows.Forms.ErrorProvider.DataMember%2A>, verwenden Sie <xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A> statt <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> und <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> einzeln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.ErrorProvider> mit einem <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> und <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> ein Datenfehler an den Benutzer an. Dieser Code setzt voraus, erstellt und aufgefüllt, Sie haben eine <xref:System.Data.DataSet> mit dem Namen `dataSet1` , enthält eine <xref:System.Data.DataTable> mit dem Namen `dataTable1`. Beim Binden der <xref:System.Data.DataSet> an ein Steuerelement wie z. B. die <xref:System.Windows.Forms.DataGridView> zu steuern, über angegebene Fehler <xref:System.Data.DataRow> Objekte werden als Fehler Glyphen in der <xref:System.Windows.Forms.DataGridView> Steuerelement.  
  
 [!code-cpp[Classic ErrorProvider Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ErrorProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ErrorProvider Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ErrorProvider Example/CS/source.cs#1)]
 [!code-vb[Classic ErrorProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ErrorProvider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ErrorProvider.DataMember" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="errorProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.ComponentModel.Component" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetError">
      <MemberSignature Language="C#" Value="public string GetError (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetError(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.GetError(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetError(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetError : System.Windows.Forms.Control -&gt; string" Usage="errorProvider.GetError control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Das Element, für das die Zeichenfolge zur Fehlerbeschreibung abgerufen werden soll.</param>
        <summary>Gibt die aktuelle Zeichenfolge zur Fehlerbeschreibung für das angegebene Steuerelement zurück.</summary>
        <returns>Die Zeichenfolge zur Fehlerbeschreibung für das angegebene Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird die <xref:System.Windows.Forms.ErrorProvider.GetError%2A> Methode, um ein Fehler vor dem Öffnen eines Dateidialogfelds. Um dieses Beispiel auszuführen, fügen Sie in den folgenden Code in ein Formular enthält ein <xref:System.Windows.Forms.TextBox> mit dem Namen `TextBox1`, <xref:System.Windows.Forms.OpenFileDialog> mit dem Namen `OpenFileDialog1`, eine Schaltfläche namens `Button1`, und ein <xref:System.Windows.Forms.ErrorProvider> mit dem Namen `ErrorProvider1`. Stellen Sie sicher, dass alle Ereignisse Ereignishandlern zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.FileDialog#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#2)]
 [!code-csharp[System.Windows.Forms.FileDialog#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#2)]
 [!code-vb[System.Windows.Forms.FileDialog#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetError(System.Windows.Forms.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetIconAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ErrorIconAlignment GetIconAlignment (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.ErrorIconAlignment GetIconAlignment(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.GetIconAlignment(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ErrorIconAlignment GetIconAlignment(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetIconAlignment : System.Windows.Forms.Control -&gt; System.Windows.Forms.ErrorIconAlignment" Usage="errorProvider.GetIconAlignment control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ErrorIconAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Das Steuerelement, für das die Position des Symbols abgerufen werden soll.</param>
        <summary>Ruft einen Wert ab, der angibt, an welcher Position das Fehlersymbol relativ zum Steuerelement platziert werden soll.</summary>
        <returns>Einer der <see cref="T:System.Windows.Forms.ErrorIconAlignment" />-Werte. Die Standardsymbolausrichtung ist <see cref="F:System.Windows.Forms.ErrorIconAlignment.MiddleRight" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="GetIconPadding">
      <MemberSignature Language="C#" Value="public int GetIconPadding (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetIconPadding(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.GetIconPadding(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetIconPadding(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetIconPadding : System.Windows.Forms.Control -&gt; int" Usage="errorProvider.GetIconPadding control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Das Steuerelement, für das der Leerraum abgerufen werden soll.</param>
        <summary>Gibt den zusätzlichen Zwischenraum zurück, der neben dem Fehlersymbol eingefügt wird.</summary>
        <returns>Die Anzahl der Pixel für den Leerraum zwischen Symbol und Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viele Symbole haben in der Regel zusätzliche Platz, um ihre zentralen-Images, also der Abstandswert nur erforderlich ist, wenn zusätzlicher Speicherplatz erforderlich ist. -Abstandswerts kann positiv oder negativ sein. Negative Werte dazu führen, dass das Symbol, um den Rand des Steuerelements überlappen. Die Symbol-standardauffüllung ist 0.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.ErrorProvider.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Drawing.Icon" /> ab, das neben einem Steuerelement angezeigt wird, wenn für das Steuerelement eine Zeichenfolge zur Fehlerbeschreibung festgelegt wurde, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Icon" />, das das Auftreten eines Fehlers signalisiert. Das Standardsymbol besteht aus einem Ausrufezeichen in einem Kreis mit einem roten Hintergrund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie für optimale Ergebnisse ein Symbol, der die Größe 16 x 16 Pixel. Angegebene Symbole werden angepasst, um 16 x 16 Pixel, um bei Bedarf werden zu können.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der zugewiesene Wert von <see cref="T:System.Drawing.Icon" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.Icon" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="errorProvider.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.ErrorProvider.RightToLeftChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Überschreiben von <see cref="M:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged(System.EventArgs)" /> in einer abgeleiteten Klasse, werden Sie sicher, dass die Basisklasse aufrufen <see cref="M:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeft { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : bool with get, set" Usage="System.Windows.Forms.ErrorProvider.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Komponente in einem Gebietsschema verwendet wird, das von rechts nach links geschriebene Schriftarten unterstützt.</summary>
        <value><see langword="true" />, wenn die Komponente in einem Gebietsschema verwendet wird, das von rechts nach links geschriebene Schriftarten unterstützt, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft festgelegt ist auf "true", wird den Fehler Symbol wird angezeigt, auf der linken Seite des zugeordneten Steuerelements und der QuickInfo-Text in rechts-nach-links-Reihenfolge angezeigt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ErrorProvider.RightToLeftChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftChanged : EventHandler " Usage="member this.RightToLeftChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich der Wert der <see cref="P:System.Windows.Forms.ErrorProvider.RightToLeft" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung des neuen Elements. Im Beispiel meldet sich ein Ereignishandler für das Vorhandensein der <xref:System.Windows.Forms.ErrorProvider.RightToLeftChanged> Ereignis. In diesem Bericht können Sie entnehmen, wann das Ereignis tritt auf, können Sie beim Debuggen unterstützen. Um den Bericht über mehrere Ereignisse oder Ereignisse, die häufig auftreten, beachten Sie, und Ersetzen Sie dabei <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> mit <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder die Nachricht anfügen, um ein mehrzeiliges <xref:System.Windows.Forms.TextBox>.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt, eine Instanz des Typs enthält <xref:System.Windows.Forms.ErrorProvider> mit dem Namen `ErrorProvider1`. Stellen Sie sicher, dass der Ereignishandler zugeordnet ist die <xref:System.Windows.Forms.ErrorProvider.RightToLeftChanged> Ereignis.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#382](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#382)]
 [!code-vb[System.Windows.Forms.EventExamples#382](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#382)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public void SetError (System.Windows.Forms.Control control, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetError(class System.Windows.Forms.Control control, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.SetError(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetError(System::Windows::Forms::Control ^ control, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetError : System.Windows.Forms.Control * string -&gt; unit" Usage="errorProvider.SetError (control, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Das Steuerelement, für das die Zeichenfolge zur Fehlerbeschreibung festgelegt werden soll.</param>
        <param name="value">Die Fehlerbeschreibungszeichenfolge oder <see langword="null" /> oder <see cref="F:System.String.Empty" />, um den Fehler zu entfernen.</param>
        <summary>Legt die Zeichenfolge zur Fehlerbeschreibung für das angegebene Steuerelement fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Länge des `value` ist größer als 0 (null), und klicken Sie dann das Symbol "Fehler" angezeigt wird, und die QuickInfo für das Symbol "Fehler" der Fehler Beschreibungstext ist. Wenn die Länge 0 (null) oder `value` ist `null`, das Symbol "Fehler" ist ausgeblendet.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ErrorProvider> Klasse, um die Benutzer über einen Dateneingabefehler zu benachrichtigen. Das Beispiel erstellt eine <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.TextBox> -Steuerelement, ein <xref:System.Windows.Forms.NumericUpDown> -Steuerelement, und ein <xref:System.Windows.Forms.ComboBox> überprüfen Sie, überprüfen den Inhalt, und ein <xref:System.Windows.Forms.ErrorProvider> für jedes Steuerelement. Im Beispiel wird Fehler Symboloptionen, die mithilfe der <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> und <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> Eigenschaften und die <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> und <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> Methoden. Die <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Methode wird aufgerufen, mit oder ohne entsprechenden Fehlertext während eines Steuerelements <xref:System.Windows.Forms.Control.Validated> -Ereignis, abhängig von den Inhalt des Steuerelements.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.GetError(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetIconAlignment">
      <MemberSignature Language="C#" Value="public void SetIconAlignment (System.Windows.Forms.Control control, System.Windows.Forms.ErrorIconAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIconAlignment(class System.Windows.Forms.Control control, valuetype System.Windows.Forms.ErrorIconAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIconAlignment(System::Windows::Forms::Control ^ control, System::Windows::Forms::ErrorIconAlignment value);" />
      <MemberSignature Language="F#" Value="member this.SetIconAlignment : System.Windows.Forms.Control * System.Windows.Forms.ErrorIconAlignment -&gt; unit" Usage="errorProvider.SetIconAlignment (control, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.Windows.Forms.ErrorIconAlignment" />
      </Parameters>
      <Docs>
        <param name="control">Das Steuerelement, für das die Position des Symbols festgelegt werden soll.</param>
        <param name="value">Einer der <see cref="T:System.Windows.Forms.ErrorIconAlignment" />-Werte.</param>
        <summary>Legt die Position fest, an der das Fehlersymbol relativ zum Steuerelement platziert werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die endgültige Position des Symbols wird durch das Symbol-Abstandswerts geändert.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ErrorProvider> Klasse, um die Benutzer über einen Dateneingabefehler zu benachrichtigen. Das Beispiel erstellt eine <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.TextBox> -Steuerelement, ein <xref:System.Windows.Forms.NumericUpDown> -Steuerelement, und ein <xref:System.Windows.Forms.ComboBox> überprüfen Sie, überprüfen den Inhalt, und ein <xref:System.Windows.Forms.ErrorProvider> für jedes Steuerelement. Im Beispiel wird Fehler Symboloptionen, die mithilfe der <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> und <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> Eigenschaften und die <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> und <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> Methoden. Die <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Methode wird aufgerufen, mit oder ohne entsprechenden Fehlertext während eines Steuerelements <xref:System.Windows.Forms.Control.Validated> -Ereignis, abhängig von den Inhalt des Steuerelements.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.GetIconAlignment(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="SetIconPadding">
      <MemberSignature Language="C#" Value="public void SetIconPadding (System.Windows.Forms.Control control, int padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIconPadding(class System.Windows.Forms.Control control, int32 padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIconPadding(System::Windows::Forms::Control ^ control, int padding);" />
      <MemberSignature Language="F#" Value="member this.SetIconPadding : System.Windows.Forms.Control * int -&gt; unit" Usage="errorProvider.SetIconPadding (control, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="padding" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">Das <paramref name="control" />, für das der Leerraum festgelegt werden soll.</param>
        <param name="padding">Die Anzahl der Pixel, die zwischen dem Symbol und <paramref name="control" /> eingefügt werden soll.</param>
        <summary>Legt den zusätzlichen Leerraum zwischen dem angegebenen Steuerelement und dem Fehlersymbol fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Viele Symbole haben in der Regel zusätzlichen Leerraum um zentrale Bild, sodass nur der Abstandswert erforderlich ist, wenn zusätzlicher Speicherplatz erforderlich ist. -Abstandswerts kann positiv oder negativ sein. Negative Werte dazu führen, dass das Symbol, um den Rand des Steuerelements überlappen.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Windows.Forms.ErrorProvider> Klasse, um die Benutzer über einen Dateneingabefehler zu benachrichtigen. Das Beispiel erstellt eine <xref:System.Windows.Forms.Form> , enthält eine <xref:System.Windows.Forms.TextBox> -Steuerelement, ein <xref:System.Windows.Forms.NumericUpDown> -Steuerelement, und ein <xref:System.Windows.Forms.ComboBox> überprüfen Sie, überprüfen den Inhalt, und ein <xref:System.Windows.Forms.ErrorProvider> für jedes Steuerelement. Im Beispiel wird Fehler Symboloptionen, die mithilfe der <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> und <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> Eigenschaften und die <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> und <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> Methoden. Die <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Methode wird aufgerufen, mit oder ohne entsprechenden Fehlertext während eines Steuerelements <xref:System.Windows.Forms.Control.Validated> -Ereignis, abhängig von den Inhalt des Steuerelements.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.GetIconPadding(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site {  void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite" Usage="System.Windows.Forms.ErrorProvider.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.ComponentModel.ISite" /> von <see cref="T:System.ComponentModel.Component" /> ab oder legt ihn fest.</summary>
        <value>Der mit <see cref="T:System.ComponentModel.Component" /> verbundene <see cref="T:System.ComponentModel.ISite" /> oder NULL, wenn <see cref="T:System.ComponentModel.Component" /> nicht in einem <see cref="T:System.ComponentModel.IContainer" /> gekapselt ist, der <see cref="T:System.ComponentModel.Component" /> kein <see cref="T:System.ComponentModel.ISite" /> zugeordnet wurde oder <see cref="T:System.ComponentModel.Component" /> aus seinem <see cref="T:System.ComponentModel.IContainer" /> entfernt wurde.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert dem Objekt den Start der Initialisierung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert dem Objekt den Abschluss der Initialisierung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ErrorProvider.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das Daten über die Komponente enthält, oder legt dieses fest.</summary>
        <value>Ein Objekt, das Daten über das Steuerelement enthält. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft zum Speichern benutzerdefinierter Daten über die Komponente an.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBinding">
      <MemberSignature Language="C#" Value="public void UpdateBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.UpdateBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateBinding();" />
      <MemberSignature Language="F#" Value="member this.UpdateBinding : unit -&gt; unit" Usage="errorProvider.UpdateBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt eine Methode zum Aktualisieren der Bindungen der <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" />, des <see cref="P:System.Windows.Forms.ErrorProvider.DataMember" /> und des Fehlertextes bereit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel Sie diese Methode aufrufen, nachdem Sie aufgerufen haben <xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>