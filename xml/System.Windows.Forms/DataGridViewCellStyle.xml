<Type Name="DataGridViewCellStyle" FullName="System.Windows.Forms.DataGridViewCellStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6394dce2f29025abd7fa5921d01ab2ebd4a4920" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30640674" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewCellStyle : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewCellStyle extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewCellStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewCellStyle&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewCellStyle : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataGridViewCellStyleEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewCellStyleConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Formatierung und die Stilinformationen dar, die auf einzelne Zellen in einem <see cref="T:System.Windows.Forms.DataGridView" />-Steuerelement angewendet wurden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewCellStyle> -Klasse können Sie die Stilinformationen mehrere <xref:System.Windows.Forms.DataGridView> Zellen, Zeilen, Spalten und Zeilen- oder Spaltenüberschriften, die arbeitsspeicheranforderungen für Einstellungseigenschaften für einzelne Zellen zu vermeiden. Weitere Informationen zu den Klassen, die eine des Typs Eigenschaft <xref:System.Windows.Forms.DataGridViewCellStyle> und wie diese miteinander in Beziehung stehen, finden Sie unter [Zellstile im DataGridView-Steuerelement von Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die Auswirkung der Einstellung von Eigenschaften auf mehreren <xref:System.Windows.Forms.DataGridViewCellStyle> Objekte. In diesem Beispiel wird die Hintergrundfarbe der Zellen in der <xref:System.Windows.Forms.DataGridView> durch Festlegen der <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> Eigenschaft auf die <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> Eigenschaft. Die Farbe des Hintergrunds überschrieben wird, auf die sich abwechselnden Zeilen, da die <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> Eigenschaft wird festgelegt, auf die <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> Eigenschaft. Im Beispiel wird auch bestimmt das Format der Daten in der Spalte mit dem Namen `Last Prepared` durch Festlegen der <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A> Eigenschaft für der Spaltenwerts <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A> Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#10)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
    <altmember cref="E:System.Windows.Forms.DataGridView.CellStyleContentChanged" />
    <altmember cref="P:System.Windows.Forms.DataGridViewBand.InheritedStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewBand.DefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.InheritedStyle" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.Style" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCellFormattingEventArgs" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />-Klasse.</summary>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />-Klasse mit den Standardeigenschaftswerten.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewCellStyle (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.#ctor(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewCellStyle(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">Der als Vorlage für die Bereitstellung anfänglicher Eigenschaftswerte verwendete <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />-Klasse unter Verwendung der Eigenschaftswerte des angegebenen <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewCellStyle" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewContentAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewContentAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As DataGridViewContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewContentAlignment Alignment { System::Windows::Forms::DataGridViewContentAlignment get(); void set(System::Windows::Forms::DataGridViewContentAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die Position des Zelleninhalts in einer <see cref="T:System.Windows.Forms.DataGridView" />-Zelle angibt, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.DataGridViewContentAlignment" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.DataGridViewContentAlignment.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#072](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#072)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#072](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#072)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Eigenschaftswert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewContentAlignment" />-Wert.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public virtual void ApplyStyle (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyStyle(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.ApplyStyle(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyStyle(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle">Der auf den aktuellen <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> anzuwendende <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />.</param>
        <summary>Übernimmt den angegebenen <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> für den aktuellen <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewCellStyle.ApplyStyle%2A> -Methode angewendet wird, die Werte der Eigenschaften, die festgelegt werden, in der `dataGridViewCellStyle` Parameter mit dem aktuellen <xref:System.Windows.Forms.DataGridViewCellStyle>. Wenn eine Eigenschaft nicht, im festgelegt ist `dataGridViewCellStyle`, das aktuelle <xref:System.Windows.Forms.DataGridViewCellStyle> behält ihren Wert dieser Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridViewCellStyle" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hintergrundfarbe für eine <see cref="T:System.Windows.Forms.DataGridView" />-Zelle ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe für eine Zelle darstellt. Der Standardwert ist <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel legt die Hintergrundfarbe der Zellen in der <xref:System.Windows.Forms.DataGridView> durch Festlegen der <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> Eigenschaft auf die <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A> Eigenschaft. Beachten Sie, dass die Farbe des Hintergrunds außer Kraft gesetzt wird, auf die sich abwechselnden Zeilen, da die <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> Eigenschaft wird festgelegt, auf die <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.DataGridViewCellStyle> Klasse.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewCellStyle Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewCellStyle Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewCellStyle ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine genaue Kopie von dieser <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der eine genaue Kopie dieses Zellenstils darstellt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceNullValue">
      <MemberSignature Language="C#" Value="public object DataSourceNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSourceNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSourceNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den in der Datenquelle gespeicherten Wert ab, wenn der Benutzer einen NULL-Wert in eine Zelle eingibt, oder legt diesen fest.</summary>
        <value>Der in der Datenquelle gespeicherte Wert, wenn der Benutzer einen NULL Zellenwert angibt. Der Standardwert ist <see cref="F:System.DBNull.Value" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Benutzer kann einen null-Wert in eine Zelle eingeben, durch Drücken von STRG + 0 oder durch Eingabe des Werts der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaft. Wenn der Benutzer die Änderung ein Commit ausgeführt wird, wird der zugrunde liegenden Zellenwert festlegen, auf den Wert des der <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> Eigenschaft oder `null` Wenn <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> ist <xref:System.DBNull.Value?displayProperty=nameWithType> und die Zelle <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> einen Referenztyp darstellt. Diese Konvertierung findet kein statt, beim Festlegen der <xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType> Eigenschaft programmgesteuert.  
  
> [!NOTE]
>  Das Steuerelement zeigt keine der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaftswert für Zellwerte, die gleich der <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> Eigenschaftswert, wenn <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> außer auf einen Wert festgelegt ist <xref:System.DBNull.Value?displayProperty=nameWithType> oder `null`. In diesem Fall können Sie behandeln die <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> Ereignis zum Anzeigen der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaftswert. Weitere Informationen finden Sie im Codebeispiel in diesem Thema.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Eigenschaft. In diesem Beispiel eine <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> Ereignishandler zeigt den Wert der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaft, wenn der Wert der Zelle entspricht <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.IsDataSourceNullValueDefault" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <see langword="null" />.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob diese Instanz mit dem angegebenen Objekt übereinstimmt.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="o" /> ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> ist und über dieselben Eigenschaftswerte wie diese Instanz verfügt, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die auf den Textinhalt einer <see cref="T:System.Windows.Forms.DataGridView" />-Zelle angewendete Schriftart ab oder legt diese fest.</summary>
        <value>Der auf den Zellentext angewendete <see cref="T:System.Drawing.Font" />. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, so ändern Sie das Schriftbild den Zellentext. Da eine <xref:System.Drawing.Font> ist unveränderlich (seine Eigenschaften sind schreibgeschützt), Sie können diese Eigenschaft nur durch Zuweisung eines neuen oder vorhandenen <xref:System.Drawing.Font> Sie können nicht geändert werden die Eigenschaften des zurückgegebenen Objekts direkt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Schriftart für Spaltenköpfe. Um dieses Beispiel auszuführen, fügen Sie den Code in ein Formular, enthält ein <xref:System.Windows.Forms.DataGridView> mit dem Namen `GridView1`, und rufen Sie anschließend die `SetupUpDataGridView` und `PopulateDataGridView` Methoden aus den Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.OnLoad%2A> Methode. Stellen Sie sicher, dass alle Ereignisse ihre Ereignisbehandlungsmethoden zugeordnet sind.  
  
 [!code-cpp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.GridViewUnbound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.GridViewUnbound/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe für eine <see cref="T:System.Windows.Forms.DataGridView" />-Zelle ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe für eine Zelle darstellt. Der Standardwert ist <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> Eigenschaft in der Regel sollte eine Farbe angeben, die mit werden die Unterschiede zwischen den <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht das Festlegen der <xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A> und <xref:System.Windows.Forms.DataGridViewCellStyle.BackColor%2A> Eigenschaften für Zellen in sich abwechselnden Zeilen. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.DataGridViewCellStyle> Klasse.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FormatStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die auf den Textinhalt einer <see cref="T:System.Windows.Forms.DataGridView" />-Zelle angewendete Formatzeichenfolge ab oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die das Format des Zellenwerts angibt. Der Standardwert ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A> Eigenschaft gibt an, wie Zellenwerte als Zeichenfolgen formatiert werden. Weitere Informationen finden Sie unter [Formatieren von Typen in .NET](~/docs/standard/base-types/formatting-types.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel legt das Format von Datumsangaben in der Spalte mit dem Namen `Last Fixed` , "Monat, Jahr" durch Festlegen der <xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A> Eigenschaft für der Spaltenwerts <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A> Eigenschaft. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Windows.Forms.DataGridViewCellStyle> Klasse.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="FormatProvider">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatProvider As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatProvider { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt für die Bereitstellung der kulturspezifischen Formatierung der <see cref="T:System.Windows.Forms.DataGridView" />-Zellenwerte ab oder legt dieses Objekt fest.</summary>
        <value>Ein für die Zellenformatierung verwendeter <see cref="T:System.IFormatProvider" />. Der Standardwert ist <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fungiert als Hashfunktion für einen besonderen Typ.</summary>
        <returns>Ein Hashcode für die aktuelle <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="IsDataSourceNullValueDefault">
      <MemberSignature Language="C#" Value="public bool IsDataSourceNullValueDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataSourceNullValueDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.IsDataSourceNullValueDefault" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDataSourceNullValueDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDataSourceNullValueDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />-Eigenschaft festgelegt wurde.</summary>
        <value>
          <see langword="true" />, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />-Eigenschaft der Standardwert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um zu bestimmen, ob die <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> Eigenschaft ohne Speichern den Standardwert für den Vergleich explizit festgelegt wurde. Dies ist hilfreich, da die <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> Eigenschaft hat einen nicht leeren Standardwert, im Gegensatz zu den meisten anderen <xref:System.Windows.Forms.DataGridViewCellStyle> Eigenschaften, die Standardwerte, z. B. besitzen `null`, <xref:System.Drawing.Color.Empty>, oder <xref:System.Windows.Forms.DataGridViewContentAlignment.NotSet>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
      </Docs>
    </Member>
    <Member MemberName="IsFormatProviderDefault">
      <MemberSignature Language="C#" Value="public bool IsFormatProviderDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFormatProviderDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.IsFormatProviderDefault" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFormatProviderDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFormatProviderDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />-Eigenschaft festgelegt wurde.</summary>
        <value>
          <see langword="true" />, wenn die <see cref="P:System.Windows.Forms.DataGridViewCellStyle.FormatProvider" />-Eigenschaft dem Standardwert entspricht, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um zu bestimmen, ob die <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> Eigenschaft ohne Speichern den Standardwert für den Vergleich explizit festgelegt wurde. Dies ist hilfreich, da die <xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A> Eigenschaft hat einen nicht leeren Standardwert, im Gegensatz zu den meisten anderen <xref:System.Windows.Forms.DataGridViewCellStyle> Eigenschaften, die Standardwerte, z. B. besitzen `null`, <xref:System.Drawing.Color.Empty>, oder <xref:System.Windows.Forms.DataGridViewContentAlignment.NotSet>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="IsNullValueDefault">
      <MemberSignature Language="C#" Value="public bool IsNullValueDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullValueDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.IsNullValueDefault" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullValueDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullValueDefault { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />-Eigenschaft festgelegt wurde.</summary>
        <value>
          <see langword="true" />, wenn der Wert der <see cref="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />-Eigenschaft der Standardwert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um zu bestimmen, ob die <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaft ohne Speichern den Standardwert für den Vergleich explizit festgelegt wurde. Dies ist hilfreich, da die <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaft hat einen nicht leeren Standardwert, im Gegensatz zu den meisten anderen <xref:System.Windows.Forms.DataGridViewCellStyle> Eigenschaften, die Standardwerte, z. B. besitzen `null`, <xref:System.Drawing.Color.Empty>, oder <xref:System.Windows.Forms.DataGridViewContentAlignment.NotSet>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="public object NullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.NullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Windows.Forms.DataGridView" />-Zellenanzeigewert ab, der dem Zellenwert von <see cref="F:System.DBNull.Value" /> oder <see langword="null" /> entspricht, oder legt diesen fest.</summary>
        <value>Das Objekt, mit dem ein NULL-Wert in einer Zelle angegeben wird. Der Standardwert ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Windows.Forms.DataGridView> Zelle mit diesem Zellstil hat den Wert <xref:System.DBNull.Value?displayProperty=nameWithType> oder `null` oder der Benutzer die Zelle bearbeitet, und drücken Sie STRG + 0, die <xref:System.Windows.Forms.DataGridView> -Steuerelement zeigt die <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaftswert. Wenn ein Benutzer eine Zelle mit diesem Zellenstil bearbeitet und wird der Wert dieser Eigenschaft eingegeben, oder drücken STRG + 0, setzt das Steuerelement den Zellenwert auf den Wert von der <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> Eigenschaft oder `null` Wenn <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> ist <xref:System.DBNull.Value?displayProperty=nameWithType> und die Zelle <xref:System.Windows.Forms.DataGridViewCell.ValueType%2A> ist ein der Verweistyp. Diese Konvertierung findet kein statt, beim Festlegen der <xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=nameWithType> Eigenschaft programmgesteuert.  
  
> [!NOTE]
>  Das Steuerelement zeigt keine der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaftswert für Zellwerte, die gleich der <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> Eigenschaftswert, wenn <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A> außer auf einen Wert festgelegt ist <xref:System.DBNull.Value?displayProperty=nameWithType> oder `null`. In diesem Fall können Sie behandeln die <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> Ereignis zum Anzeigen der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaftswert. Weitere Informationen finden Sie im Codebeispiel in diesem Thema.  
  
 Diese Eigenschaft akzeptiert jedes Objekt dadurch können Sie einen Wert mit einem für den Anzeigetyp der Zelle geeigneten Typ angeben. Beispielsweise können Sie diese Eigenschaft Zeichenfolgenwerte für die Verwendung durch den Textfeldzellen oder Bilder für die Verwendung von Image Zellen festlegen.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Eigenschaft. In diesem Beispiel eine <xref:System.Windows.Forms.DataGridView.CellFormatting?displayProperty=nameWithType> Ereignishandler zeigt den Wert der <xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A> Eigenschaft, wenn der Wert der Zelle entspricht <xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A>.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.CellFormatting" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.Value" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.IsDataSourceNullValueDefault" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen dem Rand einer <see cref="T:System.Windows.Forms.DataGridViewCell" /> und ihrem Inhalt ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.Windows.Forms.Padding" />, der den Abstand zwischen dem Rand einer <see cref="T:System.Windows.Forms.DataGridViewCell" /> und ihrem Inhalt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Festlegen der <xref:System.Windows.Forms.DataGridViewCellStyle.Padding%2A> Eigenschaft wirkt sich auf, wo das Bearbeitungssteuerelement von der <xref:System.Windows.Forms.DataGridViewCell> gezeichnet wird. Wenn Sie festlegen, z. B. <xref:System.Windows.Forms.DataGridViewCellStyle.Padding%2A> auf eine <xref:System.Windows.Forms.DataGridViewTextBoxCell> auf eine <xref:System.Windows.Forms.Padding?displayProperty=nameWithType> mit dem Wert von 10 für seine <xref:System.Windows.Forms.Padding.Left%2A>, <xref:System.Windows.Forms.Padding.Top%2A>, <xref:System.Windows.Forms.Padding.Right%2A>, und <xref:System.Windows.Forms.Padding.Bottom%2A> Eigenschaften, die den Inhalt der Zelle gezeichnet wird, in der Mitte der Zelle mit einem Leerzeichen von 10 Pixel zwischen den Rändern des Textfelds und den Rändern der Zelle.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement, das ownerdrawn-Zeilen enthält. Jede Zeile zeigt Text an, die die gesamte Breite der Zeile unter dem regulären Zelleninhalt umfasst. Die <xref:System.Windows.Forms.DataGridViewCellStyle.Padding%2A> Eigenschaft wird verwendet, um den zusätzlichen Speicherplatz für diesen Text bereitzustellen. Im Beispiel wird die zusätzliche erforderliche Höhe in eine Konstante namens gespeichert `CUSTOM_CONTENT_HEIGHT`.  
  
 Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels. Das vollständige Beispiel finden Sie unter [wie: Anpassen der Darstellung von Zeilen im DataGridView-Steuerelement von Windows Forms](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="SelectionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die beim Auswählen einer <see cref="T:System.Windows.Forms.DataGridView" />-Zelle verwendete Hintergrundfarbe ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Hintergrundfarbe für eine ausgewählte Zelle darstellt. Der Standardwert ist <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement soll in erster Linie für die Anzeige. In diesem Beispiel wird die visuelle Darstellung des Steuerelements auf unterschiedliche Weise angepasst wird und das Steuerelement für eingeschränkte Interaktivität konfiguriert ist. In diesem Beispiel ist Teil eines umfangreicheren Beispiels zur Verfügung, in der <xref:System.Windows.Forms.DataGridViewCellStyle> -Klassenübersicht.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="SelectionForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die beim Auswählen einer <see cref="T:System.Windows.Forms.DataGridView" />-Zelle verwendete Vordergrundfarbe ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe für eine ausgewählte Zelle darstellt. Der Standardwert ist <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionForeColor%2A> Eigenschaft in der Regel sollte eine Farbe angeben, die mit werden die Unterschiede zwischen den <xref:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Eigenschaft in einem <xref:System.Windows.Forms.DataGridView> Steuerelement soll in erster Linie für die Anzeige. In diesem Beispiel wird die visuelle Darstellung des Steuerelements auf unterschiedliche Weise angepasst wird und das Steuerelement für eingeschränkte Interaktivität konfiguriert ist. In diesem Beispiel ist Teil eines umfangreicheren Beispiels zur Verfügung, in der <xref:System.Windows.Forms.DataGridViewCellStyle> -Klassenübersicht.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine genaue Kopie von dieser <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />.</summary>
        <returns>Ein <see cref="T:System.Windows.Forms.DataGridViewCellStyle" />, der eine genaue Kopie dieses Zellenstils darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Forms.DataGridViewCellStyle>-Instanz in eine <xref:System.ICloneable>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das zusätzliche, auf den <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> bezogene Daten enthält, oder legt dieses fest.</summary>
        <value>Ein Objekt, das zusätzliche Daten enthält. Der Standardwert ist <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewCellStyle.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die die aktuellen Eigenschafteneinstellungen von <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> angibt.</summary>
        <returns>Eine Zeichenfolge, die die aktuellen Eigenschafteneinstellungen von <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> angibt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewTriState WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewTriState WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewCellStyle.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As DataGridViewTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewTriState WrapMode { System::Windows::Forms::DataGridViewTriState get(); void set(System::Windows::Forms::DataGridViewTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Textinhalt in einer <see cref="T:System.Windows.Forms.DataGridView" />-Zelle abgeschnitten oder auf die nachfolgenden Zeilen umbrochen wird, wenn er zu lang für eine Zeile ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.DataGridViewTriState" />-Werte. Der Standardwert ist <see cref="F:System.Windows.Forms.DataGridViewTriState.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> ist <xref:System.Windows.Forms.DataGridViewTriState.False> für eine Zelle, die Text enthält, die Zelle zeigt den Text in einer einzelnen Zeile und zeigt keine eingebettete neue Zeilenvorschubzeichen als ein Zeichen. Wenn <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> ist <xref:System.Windows.Forms.DataGridViewTriState.True> für eine Zelle, die Text enthält, zeigt die Zelle Zeilenumbruchzeichen Zeile unterbrochen, sondern auch dient als Wrapper für alle Zeilen, die die Breite der Zelle zu überschreiten.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung dieser Eigenschaft.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc#074](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/CS/datagridviewmisc.cs#074)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc#074](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc/VB/datagridviewmisc.vb#074)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Eigenschaftswert ist kein gültiger <see cref="T:System.Windows.Forms.DataGridViewTriState" />-Wert.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>