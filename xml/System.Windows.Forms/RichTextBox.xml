<Type Name="RichTextBox" FullName="System.Windows.Forms.RichTextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97933cc54a469d17a4311cf5aa575674735d5d4c" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82503702" /></Metadata><TypeSignature Language="C#" Value="public class RichTextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RichTextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.RichTextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class RichTextBox&#xA;Inherits TextBoxBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RichTextBox : System::Windows::Forms::TextBoxBase" />
  <TypeSignature Language="F#" Value="type RichTextBox = class&#xA;    inherit TextBoxBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.RichTextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.RichTextBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Windows-Textfeld-Steuerelement für RTF dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dem <xref:System.Windows.Forms.RichTextBox>-Steuerelement kann der Benutzer Text eingeben und bearbeiten. Das-Steuerelement bietet auch erweiterte Formatierungsfunktionen als das Standard <xref:System.Windows.Forms.TextBox>-Steuerelement. Text kann direkt dem Steuerelement zugewiesen oder aus einer RTF-Datei (Rich Textformat) oder einer nur-Text-Datei geladen werden. Dem Text im-Steuerelement können Zeichen-und Absatz Formatierung zugewiesen werden.  
  
 Das <xref:System.Windows.Forms.RichTextBox>-Steuerelement bietet eine Reihe von Eigenschaften, die Sie verwenden können, um Formatierungen auf einen beliebigen Textteil im Steuerelement anzuwenden. Um die Formatierung von Text zu ändern, muss Sie zuerst ausgewählt werden. Nur ausgewählter Text kann Zeichen-und Absatz Formatierung zugewiesen werden. Nachdem eine Einstellung für einen ausgewählten Textabschnitt festgelegt wurde, wird der gesamte Text, der nach der Auswahl eingegeben wird, auch mit denselben Einstellungen formatiert, bis eine Einstellungs Änderung vorgenommen oder ein anderer Abschnitt des Steuer Elements ausgewählt ist. Mit der <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>-Eigenschaft können Sie Text fett oder kursiv formatieren. Sie können diese Eigenschaft auch verwenden, um die Größe und Schriftart des Texts zu ändern. Die <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A>-Eigenschaft ermöglicht es Ihnen, die Farbe des Texts zu ändern. Zum Erstellen von aufzurufenen Listen können Sie die <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A>-Eigenschaft verwenden. Sie können die Absatz Formatierung auch anpassen, indem Sie die Eigenschaften <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A>, <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A>und <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A> festlegen.  
  
 Das <xref:System.Windows.Forms.RichTextBox>-Steuerelement stellt Methoden bereit, die Funktionen zum Öffnen und Speichern von Dateien bereitstellen. Die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode ermöglicht es Ihnen, eine vorhandene RTF-oder ASCII-Textdatei in das-Steuerelement zu laden. Sie können auch Daten aus einem bereits geöffneten Datenstrom laden. Mit der <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> können Sie eine Datei im RTF-oder ASCII-Text speichern. Ähnlich wie bei der <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode können Sie auch die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode verwenden, um Daten in einem geöffneten Datenstrom zu speichern. Das <xref:System.Windows.Forms.RichTextBox>-Steuerelement bietet auch Funktionen zum Suchen von Text Zeichenfolgen. Die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode ist überladen, um sowohl Text Zeichenfolgen als auch bestimmte Zeichen im Text des Steuer Elements zu finden.  
  
 Sie können auch das <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit Daten initialisieren, die im Arbeitsspeicher gespeichert sind. Beispielsweise können Sie die <xref:System.Windows.Forms.RichTextBox.Rtf%2A>-Eigenschaft mit einer Zeichenfolge initialisieren, die den anzuzeigenden Text enthält, einschließlich der RTF-Codes, die bestimmen, wie der Text formatiert werden soll.  
  
 Wenn der Text im Steuerelement links enthält, z. b. einen Link zu einer Website, können Sie die <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A>-Eigenschaft verwenden, um den Link im Text des Steuer Elements entsprechend anzuzeigen. Anschließend können Sie das <xref:System.Windows.Forms.RichTextBox.LinkClicked>-Ereignis behandeln, um die dem Link zugeordneten Aufgaben auszuführen. Die <xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A>-Eigenschaft ermöglicht es Ihnen, Text innerhalb des Steuer Elements vor der Bearbeitung durch den Benutzer zu schützen. Mit geschütztem Text in Ihrem Steuerelement können Sie das <xref:System.Windows.Forms.RichTextBox.Protected>-Ereignis behandeln, um zu bestimmen, wann der Benutzer versucht hat, geschützten Text zu ändern, und entweder den Benutzer darüber informieren, dass der Text geschützt ist, oder dem Benutzer eine Standardmethode zur Bearbeitung des geschützten Texts bereitstellen.  
  
 Anwendungen, die bereits <xref:System.Windows.Forms.TextBox> Steuerelemente verwenden, können problemlos angepasst werden, um <xref:System.Windows.Forms.RichTextBox> Steuerelemente zu verwenden. Das <xref:System.Windows.Forms.RichTextBox>-Steuerelement verfügt jedoch nicht über die gleiche Kapazitätsgrenze von 64 KB des <xref:System.Windows.Forms.TextBox> Steuer Elements. Der <xref:System.Windows.Forms.RichTextBox> wird in der Regel verwendet, um Textbearbeitung und Features anzuzeigen, ähnlich wie bei Textverarbeitungsanwendungen wie z. b. Microsoft Word.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.TextBoxBase.Undo%2A?displayProperty=nameWithType>-Methode funktioniert nicht mit den <xref:System.Windows.Forms.Control.KeyPress>-oder <xref:System.Windows.Forms.Control.TextChanged>-Ereignissen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.RichTextBox> Steuerelement erstellt, das eine RTF-Datei in das-Steuerelement lädt und nach der ersten Instanz des Worts "Text" sucht. Der Code ändert dann den Schrift Schnitt, den Schrift Grad und die Schriftfarbe des markierten Texts und speichert die Änderungen wieder in der ursprünglichen Datei. Der Beispielcode wird beendet, indem das-Steuerelement der <xref:System.Windows.Forms.Form>hinzugefügt wird. Dieses Beispiel erfordert, dass die im Beispielcode erstellte-Methode einer <xref:System.Windows.Forms.Form>-Klasse hinzugefügt und aus dem Konstruktor des Formulars aufgerufen wird. Im Beispiel muss außerdem eine RTF-Datei im Stammverzeichnis des Laufwerks C erstellt werden, die das Wort "Text" enthält.  
  
 [!code-cpp[Classic RichTextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TextBoxBase" />
    <altmember cref="T:System.Windows.Forms.TextBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RichTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RichTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Forms.RichTextBox" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig wird die <xref:System.Windows.Forms.TextBoxBase.Multiline%2A>-Eigenschaft des-Steuer Elements auf `true`festgelegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Windows.Forms.RichTextBox> Steuerelement erstellt, das eine RTF-Datei in das-Steuerelement lädt und nach der ersten Instanz des Worts "Text" sucht. Der Code ändert dann den Schrift Schnitt, den Schrift Grad und die Schriftfarbe des markierten Texts und speichert die Änderungen wieder in der ursprünglichen Datei. Der Beispielcode wird beendet, indem das-Steuerelement der <xref:System.Windows.Forms.Form>hinzugefügt wird. Dieses Beispiel erfordert, dass die im Beispielcode erstellte-Methode einer <xref:System.Windows.Forms.Form>-Klasse hinzugefügt und aus dem Konstruktor des Formulars aufgerufen wird. Im Beispiel muss außerdem eine RTF-Datei im Stammverzeichnis des Laufwerks C erstellt werden, die das Wort "Text" enthält.  
  
 [!code-cpp[Classic RichTextBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public override bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.RichTextBox.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement Drag &amp; Drop-Vorgänge ermöglicht.</summary>
        <value><see langword="true" />, wenn Drag &amp; amp; Drop im Steuerelement aktiviert ist. Andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Drag & Drop-Vorgänge mit einem <xref:System.Windows.Forms.ListBox>-Steuerelement durchgeführt werden, das Elemente enthält, die in einem <xref:System.Windows.Forms.RichTextBox> Steuerelement abgelegt werden sollen. Der Konstruktor des Formulars legt die <xref:System.Windows.Forms.RichTextBox.AllowDrop%2A>-Eigenschaft auf `true` fest, damit Drag & amp; Drop-Vorgänge im <xref:System.Windows.Forms.RichTextBox>auftreten können. Im Beispiel wird das <xref:System.Windows.Forms.Control.MouseDown>-Ereignis des <xref:System.Windows.Forms.ListBox> verwendet, um den Zieh Vorgang durch Aufrufen der <xref:System.Windows.Forms.Control.DoDragDrop%2A>-Methode zu starten. Das Beispiel verwendet das <xref:System.Windows.Forms.Control.DragEnter>-Ereignis, um zu bestimmen, ob ein Element, das in die <xref:System.Windows.Forms.RichTextBox> gezogen wird, ein gültiger Datentyp ist. Das <xref:System.Windows.Forms.Control.DragDrop>-Ereignis führt das tatsächliche Ablegen eines gezogenen Elements in das <xref:System.Windows.Forms.RichTextBox>-Steuerelement an der aktuellen Cursorposition innerhalb des <xref:System.Windows.Forms.RichTextBox>aus. Für dieses Beispiel ist es erforderlich, dass die <xref:System.Windows.Forms.Control.DragDrop>-und <xref:System.Windows.Forms.Control.DragEnter>-Ereignisse mit den Ereignis Handlern verbunden sind, die im Beispiel definiert sind.  
  
 [!code-cpp[RichTextBox.AllowDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.AllowDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.AllowDrop/CS/form1.cs#1)]
 [!code-vb[RichTextBox.AllowDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.AllowDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.RichTextBox.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Im aktivierten Zustand <see langword="true" />, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoWordSelection : bool with get, set" Usage="System.Windows.Forms.RichTextBox.AutoWordSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die automatische Wortauswahl aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die automatische Wortauswahl aktiviert ist, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `true`festgelegt ist, wählt die Auswahl eines beliebigen Teils des Texts im Steuerelement das gesamte Wort aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.RichTextBox> erstellt wird, mit dem Text vergrößert wird, automatisch Wörter im Text des-Steuer Elements ausgewählt werden, wenn auf ein Wort Doppel geklickt wird und ein Rand auf der rechten Seite des Client Bereichs des Steuer Elements angezeigt wird. Wenn das <xref:System.Windows.Forms.RichTextBox> Steuerelement eine kleine Breite hat, wird mit diesem Code ein <xref:System.Windows.Forms.RichTextBox> erstellt, in dem jedes Textzeichen in einer eigenen Zeile angezeigt wird. Wenn Sie in dieser vertikalen Anzeigeposition auf einen beliebigen Teil eines Worts klicken, werden alle Zeichen des Worts unabhängig von der Tatsache ausgewählt, dass der Text vertikal angezeigt wird. Dieses Beispiel erfordert, dass Sie über ein Formular verfügen, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`enthält.  
  
 [!code-cpp[RichTextBox.ZoomFactor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.ZoomFactor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CS/form1.cs#1)]
 [!code-vb[RichTextBox.ZoomFactor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.ZoomFactor/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.RichTextBox.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Das im Steuerelement angezeigte Hintergrundbild.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.RichTextBox.BackgroundImage" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.RichTextBox.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value>Das Layout des im -Steuerelement angezeigten Hintergrundbilds.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.Forms.RichTextBox.BackgroundImageLayout" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BulletIndent">
      <MemberSignature Language="C#" Value="public int BulletIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BulletIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.BulletIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property BulletIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BulletIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BulletIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.BulletIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Einzug ab, der im <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement verwendet wird, wenn der Aufzählungssymbolstil auf den Text angewendet wird, oder legt diesen fest.</summary>
        <value>Die Anzahl der Pixel, die nach einem Aufzählungszeichen als Einzug eingefügt werden. Der Standardwert beträgt 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie den Aufzählungs Stil auf einen Textabschnitt anwenden möchten, legen Sie die <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A>-Eigenschaft auf `true` fest, und legen Sie dann die <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A>-Eigenschaft auf die Anzahl der Pixel fest, in die der Text eingezogen werden soll. Auf den Absatz wird der Aufzählungs Stil mit der angegebenen Menge an Einzug nach dem Aufzählungs Zeichen angewendet. Diese Eigenschaft wirkt sich nur auf den aktuellen Absatz im Text des Steuer Elements und das aktuell ausgewählte Aufzählungs Zeichen in einer Liste von Aufzählungs Elementen aus. Um eine andere Einzugs Ebene auf eine vollständige Liste der Auflistungs Elemente anzuwenden, muss der gesamte Text der aufzurufenen Elemente vor dem Festlegen der <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A>-Eigenschaft ausgewählt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A>-Eigenschaft mit den Eigenschaften <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A>, <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>und <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> verwendet wird, um eine Auflistungs Liste in einem <xref:System.Windows.Forms.RichTextBox>-Steuerelement zu erstellen. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1` in einem Formular erstellt wird.  
  
 [!code-cpp[RichTextBox.BulletIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.BulletIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.BulletIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.BulletIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.BulletIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.BulletIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der angegebene Einzug ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionBullet" />
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste (System.Windows.Forms.DataFormats.Format clipFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanPaste(class System.Windows.Forms.DataFormats/Format clipFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste (clipFormat As DataFormats.Format) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste(System::Windows::Forms::DataFormats::Format ^ clipFormat);" />
      <MemberSignature Language="F#" Value="member this.CanPaste : System.Windows.Forms.DataFormats.Format -&gt; bool" Usage="richTextBox.CanPaste clipFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipFormat" Type="System.Windows.Forms.DataFormats+Format" />
      </Parameters>
      <Docs>
        <param name="clipFormat">Einer der <see cref="T:System.Windows.Forms.DataFormats.Format" />-Werte.</param>
        <summary>Bestimmt, ob Sie Informationen aus der Zwischenablage im angegebenen Datenformat einfügen können.</summary>
        <returns><see langword="true" />, wenn Sie Daten aus der Zwischenablage im angegebenen Datenformat einfügen können, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie bestimmen, ob sich der aktuelle Inhalt der Zwischenablage in einem angegebenen Zwischenablage-Datenformat befindet, bevor der Benutzer die Informationen in das <xref:System.Windows.Forms.RichTextBox> Steuerelement einfügen kann. Beispielsweise können Sie einen Ereignishandler für ein <xref:System.Windows.Forms.MenuItem.Popup> Ereignis eines Einfügebefehls <xref:System.Windows.Forms.MenuItem> erstellen und mithilfe dieser Methode ermitteln, ob der Einfüge<xref:System.Windows.Forms.MenuItem> basierend auf dem Typ der Daten in der Zwischenablage aktiviert werden soll.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.RichTextBox.Paste%2A>-Methode verwendet wird, um eine Bitmap in das <xref:System.Windows.Forms.RichTextBox>-Steuerelement einzufügen. Nach dem Öffnen einer Bitmap aus einer Datei verwendet das Beispiel die <xref:System.Windows.Forms.Clipboard.SetDataObject%2A>-Methode, um die Bitmap in die Windows-Zwischenablage zu kopieren. Zum Schluss ruft das Beispiel das Format für das <xref:System.Drawing.Bitmap> Objekt ab, verwendet die <xref:System.Windows.Forms.RichTextBox.CanPaste%2A>-Methode, um zu überprüfen, ob das Format in das <xref:System.Windows.Forms.RichTextBox>-Steuerelement eingefügt werden kann, und verwendet dann die <xref:System.Windows.Forms.RichTextBox.Paste%2A>-Methode zum Einfügen der Daten.  
  
 [!code-cpp[RichText_Paste#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichText_Paste/CPP/form1.cpp#1)]
 [!code-csharp[RichText_Paste#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichText_Paste/CS/form1.cs#1)]
 [!code-vb[RichText_Paste#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichText_Paste/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.Paste(System.Windows.Forms.DataFormats.Format)" />
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRedo : bool" Usage="System.Windows.Forms.RichTextBox.CanRedo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob in <see cref="T:System.Windows.Forms.RichTextBox" /> ausgeführte Aktionen vorhanden sind, die erneut ausgeführt werden können.</summary>
        <value><see langword="true" />, wenn rückgängig gemachte Vorgänge vorhanden sind, die auf den Inhalt des Steuerelements erneut angewendet werden können, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um zu bestimmen, ob der letzte Vorgang, der im <xref:System.Windows.Forms.RichTextBox> rückgängig gemacht wurde, mithilfe der <xref:System.Windows.Forms.RichTextBox.Redo%2A>-Methode erneut angewendet werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Eigenschaften <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> und <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> und die <xref:System.Windows.Forms.RichTextBox.Redo%2A>-Methode verwendet werden, um einen Redo-Vorgang auf eine beliebige Aktion außer dem Löschen von Text einzuschränken. Für dieses Beispiel ist es erforderlich, dass Sie über ein Formular verfügen, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement enthält, und dass ein Vorgang innerhalb des <xref:System.Windows.Forms.RichTextBox> durchgeführt und rückgängig gemacht wird, bevor der Code in diesem Beispiel aufgerufen wird.  
  
 [!code-cpp[RichTextBox.RedoAction#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.RedoAction/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.RedoAction#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.RedoAction/CS/form1.cs#1)]
 [!code-vb[RichTextBox.RedoAction#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.RedoAction/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.Redo" />
      </Docs>
    </Member>
    <Member MemberName="ContentsResized">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ContentsResizedEventHandler ContentsResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ContentsResizedEventHandler ContentsResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.ContentsResized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentsResized As ContentsResizedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ContentsResizedEventHandler ^ ContentsResized;" />
      <MemberSignature Language="F#" Value="member this.ContentsResized : System.Windows.Forms.ContentsResizedEventHandler " Usage="member this.ContentsResized : System.Windows.Forms.ContentsResizedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContentsResizedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Größe von Inhalten im Steuerelement geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.RichTextBox.ContentsResized> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.RichTextBox> mit dem Namen `RichTextBox1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.RichTextBox.ContentsResized>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#537](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#537)]
 [!code-vb[System.Windows.Forms.EventExamples#537](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#537)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContentsResizedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.RichTextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benötigten Erstellungsparameter ab, wenn das Steuerelementhandle erstellt wird.</summary>
        <value>Eine <see cref="T:System.Windows.Forms.CreateParams" />-Eigenschaft, die die erforderlichen Erstellungsparameter enthält, wenn das Handle für das Steuerelement erstellt wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRichEditOleCallback">
      <MemberSignature Language="C#" Value="protected virtual object CreateRichEditOleCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateRichEditOleCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.CreateRichEditOleCallback" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRichEditOleCallback () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateRichEditOleCallback();" />
      <MemberSignature Language="F#" Value="abstract member CreateRichEditOleCallback : unit -&gt; obj&#xA;override this.CreateRichEditOleCallback : unit -&gt; obj" Usage="richTextBox.CreateRichEditOleCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein <see langword="IRichEditOleCallback" />-kompatibles Objekt für die Behandlung von Rich-Edit-Rückrufvorgängen.</summary>
        <returns>Ein Objekt, das die <see langword="IRichEditOleCallback" />-Schnittstelle implementiert.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Sie können diese Methode in der abgeleiteten Klasse überschreiben, um den Zugriff auf die zugrunde liegenden Rich-Edit-Funktionen zu ermöglichen. Wenn Sie diese Methode überschreiben, werden nicht alle Drag &amp; Drop-Ereignisse ausgelöst. Daher müssen Sie Ihre eigene Unterstützung für Drag &amp; Drop-Vorgänge bereitstellen. Weitere Informationen zur <see langword="IRichEditOleCallback" />-Schnittstelle finden Sie in der Platform SDK-Dokumentation unter https://docs.microsoft.com/windows/win32/api/richole/nn-richole-iricheditolecallback.</para></block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.RichTextBox.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Standardgröße des Steuerelements ab.</summary>
        <value>Ein <see cref="T:System.Drawing.Size" />-Wert.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DetectUrls">
      <MemberSignature Language="C#" Value="public bool DetectUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DetectUrls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.DetectUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property DetectUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DetectUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DetectUrls : bool with get, set" Usage="System.Windows.Forms.RichTextBox.DetectUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Windows.Forms.RichTextBox" /> eine URL (Uniform Resource Locator) automatisch formatiert, wenn diese in das Steuerelement eingegeben wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die <see cref="T:System.Windows.Forms.RichTextBox" /> in das Steuerelement eingegebene URLs automatisch als Links formatiert, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf `true`festgelegt ist, wird jeder Text, der in das Steuerelement eingegeben wird, das vom <xref:System.Windows.Forms.RichTextBox> als URL festgelegt wird, automatisch als Link formatiert. Sie können einen Ereignishandler für das <xref:System.Windows.Forms.RichTextBox.LinkClicked> Ereignis erstellen, um alle Links zu verarbeiten, auf die im Steuerelement geklickt wurde. Der <xref:System.Windows.Forms.LinkClickedEventArgs>, der für den Ereignishandler für das <xref:System.Windows.Forms.RichTextBox.LinkClicked> Ereignis bereitgestellt wird, stellt Daten bereit, mit deren Hilfe Sie bestimmen können, auf welchen Link im-Steuerelement geklickt wurde, um den Link zu verarbeiten.  
  
   
  
## Examples  
 Das folgende Codebeispiel enthält einen Ereignishandler für das <xref:System.Windows.Forms.RichTextBox.LinkClicked>-Ereignis. Der ereignishandlerprozess verarbeitet Link Klicks innerhalb des Dokuments eines <xref:System.Windows.Forms.RichTextBox>-Steuer Elements und öffnet eine Instanz des Standard Browsers (mit der <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType>-Methode) und zeigt die Seite für den Link an, auf den geklickt wurde. Für dieses Beispiel ist es erforderlich, dass der Ereignishandler mit dem <xref:System.Windows.Forms.RichTextBox.LinkClicked>-Ereignis für eine <xref:System.Windows.Forms.RichTextBox>verbunden ist.  
  
 [!code-cpp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.RichTextBox.LinkClicked" />
        <altmember cref="T:System.Windows.Forms.LinkClickedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer auf das <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement doppelklickt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer einen Drag &amp; Drop-Vorgang abschließt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Objekt in die Begrenzungen des Steuerelements gezogen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.RichTextBox.DragEnter> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.RichTextBox> mit dem Namen `RichTextBox1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.RichTextBox.DragEnter>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#539](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#539)]
 [!code-vb[System.Windows.Forms.EventExamples#539](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#539)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Objekt aus den Grenzen des Steuerelements gezogen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ist für diese Klasse nicht relevant. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Objekt über die Begrenzungen des Steuerelements gezogen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ist für diese Klasse nicht relevant. Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawToBitmap">
      <MemberSignature Language="C#" Value="public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawToBitmap(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Rectangle targetBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DrawToBitmap (bitmap As Bitmap, targetBounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawToBitmap(System::Drawing::Bitmap ^ bitmap, System::Drawing::Rectangle targetBounds);" />
      <MemberSignature Language="F#" Value="override this.DrawToBitmap : System.Drawing.Bitmap * System.Drawing.Rectangle -&gt; unit" Usage="richTextBox.DrawToBitmap (bitmap, targetBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetBounds" Type="System.Drawing.Rectangle" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="bitmap">Ein <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="targetBounds">Ein <see cref="T:System.Drawing.Rectangle" />.</param>
        <summary>Diese Methode ist für diese Klasse nicht relevant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoDragDrop">
      <MemberSignature Language="C#" Value="public bool EnableAutoDragDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoDragDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.EnableAutoDragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoDragDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoDragDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableAutoDragDrop : bool with get, set" Usage="System.Windows.Forms.RichTextBox.EnableAutoDragDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der Drag &amp; Drop-Vorgänge für Text, Bilder und andere Daten ermöglicht, oder legt ihn fest.</summary>
        <value><see langword="true" />, um Drag &amp; Drop-Vorgänge zu aktivieren. Andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Durchsucht den Inhalt der <see cref="T:System.Windows.Forms.RichTextBox" /> nach Text.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (char[] characterSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(char[] characterSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (characterSet As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(cli::array &lt;char&gt; ^ characterSet);" />
      <MemberSignature Language="F#" Value="member this.Find : char[] -&gt; int" Usage="richTextBox.Find characterSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterSet" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="characterSet">Das zu suchende Array von Zeichen.</param>
        <summary>Durchsucht den Text eines <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelements nach der ersten Instanz eines Zeichens aus einer Liste von Zeichen.</summary>
        <returns>Die Position innerhalb des Steuerelements, an der die zu suchenden Zeichen gefunden wurden, oder -1, wenn die Gruppe zu suchender Zeichen nicht gefunden wurde oder im <paramref name="char" />-Parameter eine leere Gruppe zu suchender Zeichen angegeben wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode sucht nach der ersten Instanz eines Zeichens aus einer Liste von Zeichen, die im `characterSet`-Parameter angegeben sind, und gibt den Speicherort des Zeichens zurück. Beispielsweise übergeben Sie ein Array von Zeichen, das das Zeichen ' Q ' enthält. Wenn das Steuerelement den Text "The Quick Brown Fox" enthielt, würde die <xref:System.Windows.Forms.RichTextBox.Find%2A> Methode den Wert von vier zurückgeben. Ein Großbuchstabe und ein Kleinbuchstabe werden bei der Suche als unterschiedliche Werte betrachtet.  
  
 Wenn die Eigenschaft einen negativen Wert zurückgibt, wurden die gesuchten Zeichen im Inhalt des Steuer Elements nicht gefunden. Mit dieser Methode können Sie eine Gruppe von Zeichen im-Steuerelement suchen. Diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A> Methode erfordert, dass das gesamte Dokument, das im-Steuerelement enthalten ist, nach den Zeichen durchsucht wird. Wenn ein Zeichen aus der Zeichen Liste, das im `characterSet`-Parameter der Methode bereitgestellt wird, gefunden wird, ist der von dieser Methode zurückgegebene Wert ein NULL basierter Index der Position des Zeichens im-Steuerelement. Ein Leerzeichen wird von der-Methode als Zeichen betrachtet, wenn die Position eines Zeichens bestimmt wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Inhalt eines <xref:System.Windows.Forms.RichTextBox> nach den Zeichen durchsucht, die im `text`-Parameter an die-Methode übergeben werden. Wenn der Inhalt des `text` Arrays in der <xref:System.Windows.Forms.RichTextBox>gefunden wird, gibt die Methode den Index des gefundenen Werts zurück. Andernfalls wird-1 zurückgegeben. Das Beispiel setzt voraus, dass diese Methode in der Klasse eines <xref:System.Windows.Forms.Form> platziert wird, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1` enthält, und ein <xref:System.Windows.Forms.Button> Steuerelement mit dem Namen `button1`, das mit dem im Beispiel definierten `Click` Ereignishandler verbunden ist.  
  
 [!code-cpp[RichTextBox.FindChar1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.FindChar1/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.FindChar1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.FindChar1/CS/form1.cs#1)]
 [!code-vb[RichTextBox.FindChar1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.FindChar1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str);" />
      <MemberSignature Language="F#" Value="member this.Find : string -&gt; int" Usage="richTextBox.Find str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Der im Steuerelement zu suchende Text.</param>
        <summary>Durchsucht den Text in einem <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement nach einer Zeichenfolge.</summary>
        <returns>Die Position innerhalb des Steuerelements, an der der Suchtext gefunden wurde, oder -1, wenn die Suchzeichenfolge nicht gefunden wurde oder im <paramref name="str" />-Parameter eine leere Suchzeichenfolge angegeben wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode sucht nach dem im `str`-Parameter angegebenen Text und gibt den Speicherort des ersten Zeichens im-Steuerelement zurück. Wenn die Eigenschaft einen negativen Wert zurückgibt, wurde die Text Zeichenfolge, nach der gesucht wird, im Inhalt des Steuer Elements nicht gefunden. Mit dieser Methode können Sie Suchfunktionen erstellen, die für den Benutzer des-Steuer Elements bereitgestellt werden können. Sie können diese Methode auch verwenden, um nach Text zu suchen, der durch ein bestimmtes Format ersetzt werden soll. Wenn der Benutzer z. b. Datumsangaben in das-Steuerelement eingegeben hat, können Sie die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode verwenden, um nach allen Datumsangaben im Dokument zu suchen und diese durch das entsprechende Format zu ersetzen, bevor Sie die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode des Steuer Elements verwenden.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.RichTextBox.Find%2A> Methoden, die ein `string` als Parameter akzeptieren, können keinen Text finden, der in mehr als einer Textzeile innerhalb des <xref:System.Windows.Forms.RichTextBox>enthalten ist. Durch das Durchführen einer solchen Suche wird der Wert "-1" zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der gesamte Inhalt eines <xref:System.Windows.Forms.RichTextBox> für die erste Instanz einer Such Zeichenfolge durchsucht, die an den Text-Parameter der-Methode übergeben wird. Wenn die Such Zeichenfolge in der <xref:System.Windows.Forms.RichTextBox>gefunden wird, gibt die Methode den Wert `true` zurück und hebt den Suchtext hervor. andernfalls wird `false`zurückgegeben. Das Beispiel setzt voraus, dass diese Methode in der Klasse eines <xref:System.Windows.Forms.Form> platziert wird, das eine <xref:System.Windows.Forms.RichTextBox> mit dem Namen `richTextBox1`enthält.  
  
 [!code-cpp[Classic RichTextBox.Find Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.Find Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.Find Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.Find Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.Find Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.Find Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (char[] characterSet, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(char[] characterSet, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (characterSet As Char(), start As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(cli::array &lt;char&gt; ^ characterSet, int start);" />
      <MemberSignature Language="F#" Value="member this.Find : char[] * int -&gt; int" Usage="richTextBox.Find (characterSet, start)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterSet" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterSet">Das zu suchende Array von Zeichen.</param>
        <param name="start">Die Position im Text des Steuerelements, an der die Suche begonnen werden soll.</param>
        <summary>Durchsucht den Text eines <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelements ab einem bestimmten Anfangspunkt nach der ersten Instanz eines Zeichens aus einer Zeichenliste.</summary>
        <returns>Die Position im Steuerelement, an der die zu suchenden Zeichen gefunden wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode sucht nach der ersten Instanz eines Zeichens aus einer Liste von Zeichen, die im `characterSet`-Parameter angegeben sind, und gibt den Speicherort des Zeichens zurück. Beispielsweise übergeben Sie ein Array von Zeichen, das das Zeichen ' Q ' enthält. Wenn das Steuerelement den Text "The Quick Brown Fox" enthielt, würde die <xref:System.Windows.Forms.RichTextBox.Find%2A> Methode den Wert von vier zurückgeben. Ein Großbuchstabe und ein Kleinbuchstabe werden bei der Suche als unterschiedliche Werte betrachtet.  
  
 Wenn die Eigenschaft einen negativen Wert zurückgibt, wurden die gesuchten Zeichen im Inhalt des Steuer Elements nicht gefunden. Mit dieser Methode können Sie eine Gruppe von Zeichen im-Steuerelement suchen. Wenn ein Zeichen aus der Zeichen Liste, das im `characterSet`-Parameter der Methode bereitgestellt wird, gefunden wird, ist der von dieser Methode zurückgegebene Wert ein NULL basierter Index der Position des Zeichens im-Steuerelement. Ein Leerzeichen wird von der-Methode als Zeichen betrachtet, wenn die Position eines Zeichens bestimmt wird.  
  
 Diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode ermöglicht es Ihnen, einen Zeichensatz von einer angegebenen Startposition im Text des Steuer Elements zu suchen, indem Sie einen Wert für den `start`-Parameter angeben. Der Wert 0 (null) gibt an, dass die Suche am Anfang des Dokument Steuer Elements beginnen soll. Sie können diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode verwenden, um Ihre Suche einzuschränken, um zu vermeiden, dass Text, den Sie bereits kennen, nicht die angegebenen Zeichen enthält, nach denen Sie suchen oder die in der Suche nicht wichtig sind.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Inhalt eines <xref:System.Windows.Forms.RichTextBox> nach den Zeichen durchsucht, die im `text`-Parameter an die-Methode übergeben werden. Die Suche beginnt an der Position innerhalb der <xref:System.Windows.Forms.RichTextBox>, die durch den `start`-Parameter der `FindMyText`-Methode angegeben wird. Wenn der Inhalt des Textarrays in der <xref:System.Windows.Forms.RichTextBox>gefunden wird, gibt die Methode den Index des gefundenen Werts zurück. Andernfalls wird-1 zurückgegeben. Das Beispiel setzt voraus, dass diese Methode in der Klasse eines <xref:System.Windows.Forms.Form> platziert wird, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1` enthält, und ein <xref:System.Windows.Forms.Button> Steuerelement mit dem Namen `button1`, das mit dem im Beispiel definierten <xref:System.Windows.Forms.Control.Click> Ereignishandler verbunden ist.  
  
 [!code-cpp[RichTextBox.FindChar2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.FindChar2/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.FindChar2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.FindChar2/CS/form1.cs#1)]
 [!code-vb[RichTextBox.FindChar2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.FindChar2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str, System.Windows.Forms.RichTextBoxFinds options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str, valuetype System.Windows.Forms.RichTextBoxFinds options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String,System.Windows.Forms.RichTextBoxFinds)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String, options As RichTextBoxFinds) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str, System::Windows::Forms::RichTextBoxFinds options);" />
      <MemberSignature Language="F#" Value="member this.Find : string * System.Windows.Forms.RichTextBoxFinds -&gt; int" Usage="richTextBox.Find (str, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="options" Type="System.Windows.Forms.RichTextBoxFinds" />
      </Parameters>
      <Docs>
        <param name="str">Der im Steuerelement zu suchende Text.</param>
        <param name="options">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.RichTextBoxFinds" />-Werte.</param>
        <summary>Durchsucht den Text in einem <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement mit spezifischen Suchoptionen nach einer Zeichenfolge.</summary>
        <returns>Die Position im Steuerelement, an der der Suchtext gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode sucht nach dem im `str`-Parameter angegebenen Text und gibt den Speicherort des ersten Zeichens im-Steuerelement zurück. Wenn die Eigenschaft einen negativen Wert zurückgibt, wurde die Text Zeichenfolge, nach der gesucht wird, im Inhalt des Steuer Elements nicht gefunden. Mit dieser Methode können Sie Suchfunktionen erstellen, die für den Benutzer des-Steuer Elements bereitgestellt werden können. Sie können diese Methode auch verwenden, um nach Text zu suchen, der durch ein bestimmtes Format ersetzt werden soll. Wenn der Benutzer z. b. Datumsangaben in das-Steuerelement eingegeben hat, können Sie die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode verwenden, um nach allen Datumsangaben im Dokument zu suchen und diese durch das entsprechende Format zu ersetzen, bevor Sie die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode des Steuer Elements verwenden.  
  
 Mit dieser Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode können Sie Optionen angeben, die es Ihnen ermöglichen, Ihre Suche zu erweitern oder einzuschränken. Sie können Optionen angeben, die es Ihnen ermöglichen, die Groß-/Kleinschreibung des Suchworts abzugleichen oder nach ganzen Wörtern anstelle von partiellen Wörtern zu suchen. Wenn Sie die `RichTextBoxFinds.Reverse`-Enumeration im `options`-Parameter angeben, können Sie statt der standardmäßigen Suchmethode von oben nach Text vom Ende des Dokuments bis zum oberen Rand suchen.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.RichTextBox.Find%2A> Methoden, die ein `string` als Parameter akzeptieren, können keinen Text finden, der in mehr als einer Textzeile innerhalb des <xref:System.Windows.Forms.RichTextBox>enthalten ist. Durch das Durchführen einer solchen Suche wird der Wert "-1" zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der gesamte Inhalt eines <xref:System.Windows.Forms.RichTextBox> für die erste Instanz einer Such Zeichenfolge durchsucht, die an den Text-Parameter der-Methode übergeben wird. Wenn die Such Zeichenfolge in der <xref:System.Windows.Forms.RichTextBox>gefunden wird, gibt die Methode den Wert `true` zurück und markiert den Text. Andernfalls wird `false`zurückgegeben. Das Beispiel gibt auch Optionen in der Suche an, die der Groß-/Kleinschreibung der angegebenen Such Zeichenfolge entsprechen. Das Beispiel setzt voraus, dass diese Methode in der Klasse eines <xref:System.Windows.Forms.Form> platziert wird, das eine <xref:System.Windows.Forms.RichTextBox> mit dem Namen `richTextBox1`enthält.  
  
 [!code-cpp[Classic RichTextBox.Find1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.Find1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.Find1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.Find1 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.Find1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.Find1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (char[] characterSet, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(char[] characterSet, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (characterSet As Char(), start As Integer, end As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(cli::array &lt;char&gt; ^ characterSet, int start, int end);" />
      <MemberSignature Language="F#" Value="member this.Find : char[] * int * int -&gt; int" Usage="richTextBox.Find (characterSet, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characterSet" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characterSet">Das zu suchende Array von Zeichen.</param>
        <param name="start">Die Position im Text des Steuerelements, an der die Suche begonnen werden soll.</param>
        <param name="end">Die Position im Text des Steuerelements, an der die Suche beendet werden soll.</param>
        <summary>Durchsucht einen Textbereich in einem <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement nach der ersten Instanz eines Zeichens aus einer Liste von Zeichen.</summary>
        <returns>Die Position im Steuerelement, an der die zu suchenden Zeichen gefunden wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode sucht nach der ersten Instanz eines Zeichens aus einer Liste von Zeichen, die im `characterSet`-Parameter angegeben sind, und gibt den Speicherort des Zeichens zurück. Beispielsweise übergeben Sie ein Array von Zeichen, das das Zeichen ' Q ' enthält. Wenn das Steuerelement den Text "The Quick Brown Fox" enthielt, würde die <xref:System.Windows.Forms.RichTextBox.Find%2A> Methode den Wert von vier zurückgeben. Ein Großbuchstabe und ein Kleinbuchstabe werden bei der Suche als unterschiedliche Werte betrachtet.  
  
 Wenn die Eigenschaft einen negativen Wert zurückgibt, wurden die gesuchten Zeichen im Inhalt des Steuer Elements nicht gefunden. Mit dieser Methode können Sie eine Gruppe von Zeichen im-Steuerelement suchen. Wenn ein Zeichen aus der Zeichen Liste, das im `characterSet`-Parameter der Methode bereitgestellt wird, gefunden wird, ist der von dieser Methode zurückgegebene Wert ein NULL basierter Index der Position des Zeichens im-Steuerelement. Ein Leerzeichen wird von der-Methode als Zeichen betrachtet, wenn die Position eines Zeichens bestimmt wird.  
  
 Diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode ermöglicht es Ihnen, einen Zeichensatz aus einem Textbereich im Steuerelement zu suchen, indem Sie einen Wert für die `start`-und `end`-Parameter angeben. Der Wert 0 (null) für den `start`-Parameter gibt an, dass die Suche am Anfang des Dokument Steuer Elements beginnen soll. Ein-1-Wert für den `end`-Parameter gibt an, dass die Suche am Ende des Texts im-Steuerelement enden soll. Sie können diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode verwenden, um die Suche auf einen bestimmten Textbereich im Steuerelement einzuschränken, um die Suche nach Bereichen des Dokuments zu vermeiden, die für die Anforderungen der Anwendung nicht wichtig sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="characterSet" /> ist NULL.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="start" /> ist kleiner als 0 (null) oder größer als die Länge des Texts im Steuerelement.</exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str, int start, System.Windows.Forms.RichTextBoxFinds options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str, int32 start, valuetype System.Windows.Forms.RichTextBoxFinds options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String, start As Integer, options As RichTextBoxFinds) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str, int start, System::Windows::Forms::RichTextBoxFinds options);" />
      <MemberSignature Language="F#" Value="member this.Find : string * int * System.Windows.Forms.RichTextBoxFinds -&gt; int" Usage="richTextBox.Find (str, start, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="options" Type="System.Windows.Forms.RichTextBoxFinds" />
      </Parameters>
      <Docs>
        <param name="str">Der im Steuerelement zu suchende Text.</param>
        <param name="start">Die Position im Text des Steuerelements, an der die Suche begonnen werden soll.</param>
        <param name="options">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.RichTextBoxFinds" />-Werte.</param>
        <summary>Durchsucht den Text in einem <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement nach einer Zeichenfolge an einer bestimmten Position im Steuerelement und mit spezifischen Suchoptionen.</summary>
        <returns>Die Position im Steuerelement, an der der Suchtext gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode sucht nach dem im `str`-Parameter angegebenen Text und gibt den Speicherort des ersten Zeichens der Such Zeichenfolge im-Steuerelement zurück. Wenn die Eigenschaft einen negativen Wert zurückgibt, wurde die Text Zeichenfolge, nach der gesucht wird, im Inhalt des Steuer Elements nicht gefunden. Mit dieser Methode können Sie Suchfunktionen erstellen, die für den Benutzer des-Steuer Elements bereitgestellt werden können. Sie können diese Methode auch verwenden, um nach Text zu suchen, der durch ein bestimmtes Format ersetzt werden soll. Wenn der Benutzer z. b. Datumsangaben in das-Steuerelement eingegeben hat, können Sie die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode verwenden, um nach allen Datumsangaben im Dokument zu suchen und diese durch das entsprechende Format zu ersetzen, bevor Sie die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode des Steuer Elements verwenden.  
  
 Mit dieser Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode können Sie Optionen angeben, die es Ihnen ermöglichen, Ihre Suche zu erweitern oder einzuschränken. Sie können Optionen angeben, die es Ihnen ermöglichen, die Groß-/Kleinschreibung des Suchworts abzugleichen oder nach ganzen Wörtern anstelle von partiellen Wörtern zu suchen. Wenn Sie die `RichTextBoxFinds.Reverse`-Enumeration im `options`-Parameter angeben, können Sie statt der standardmäßigen Suchmethode von oben nach Text vom Ende des Dokuments bis zum oberen Rand suchen. Diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode ermöglicht es Ihnen außerdem, die Suche nach Text einzuschränken, indem eine bestimmte Anfangsposition im Text des Steuer Elements ausgewählt wird. Mit dieser Funktion können Sie Text vermeiden, der möglicherweise bereits durchsucht wurde oder in dem der gesuchte Text, den Sie suchen, nicht vorhanden ist. Wenn der `RichTextBoxFinds.Reverse` Wert im `options`-Parameter angegeben wird, gibt der Wert des `start`-Parameters die Position an, an der die umgekehrte Suche endet, da die Suche am Ende des Dokuments beginnt, wenn diese Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode verwendet wird.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.RichTextBox.Find%2A> Methoden, die ein `string` als Parameter akzeptieren, können keinen Text finden, der in mehr als einer Textzeile innerhalb des <xref:System.Windows.Forms.RichTextBox>enthalten ist. Durch das Durchführen einer solchen Suche wird der Wert "-1" zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der gesamte Inhalt eines <xref:System.Windows.Forms.RichTextBox> für die erste Instanz einer Such Zeichenfolge durchsucht, die an den Text-Parameter der-Methode übergeben wird. Der Such Start Speicherort wird durch den Start-Parameter der-Methode angegeben. Wenn die Such Zeichenfolge in der <xref:System.Windows.Forms.RichTextBox>gefunden wird, gibt die Methode die Indexposition des ersten Zeichens des gefundenen Texts zurück und hebt den gefundenen Text hervor. Andernfalls wird der Wert-1 zurückgegeben. Das Beispiel gibt auch Optionen in der Suche an, die der Groß-/Kleinschreibung der angegebenen Such Zeichenfolge entsprechen. Das Beispiel setzt voraus, dass diese Methode in der Klasse eines <xref:System.Windows.Forms.Form> platziert wird, das eine <xref:System.Windows.Forms.RichTextBox> mit dem Namen `richTextBox1`enthält. Sie können dieses Beispiel verwenden, um einen "Find Next"-Vorgangstyp auszuführen. Nachdem eine Instanz des Suchtexts gefunden wurde, können Sie weitere Instanzen des Texts suchen, indem Sie den Wert des `start`-Parameters so ändern, dass er an einem Speicherort nach der aktuellen Treffer Position sucht.  
  
 [!code-cpp[Classic RichTextBox.Find2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.Find2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.Find2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.Find2 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.Find2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.Find2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public int Find (string str, int start, int end, System.Windows.Forms.RichTextBoxFinds options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Find(string str, int32 start, int32 end, valuetype System.Windows.Forms.RichTextBoxFinds options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (str As String, start As Integer, end As Integer, options As RichTextBoxFinds) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Find(System::String ^ str, int start, int end, System::Windows::Forms::RichTextBoxFinds options);" />
      <MemberSignature Language="F#" Value="member this.Find : string * int * int * System.Windows.Forms.RichTextBoxFinds -&gt; int" Usage="richTextBox.Find (str, start, end, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="options" Type="System.Windows.Forms.RichTextBoxFinds" />
      </Parameters>
      <Docs>
        <param name="str">Der im Steuerelement zu suchende Text.</param>
        <param name="start">Die Position im Text des Steuerelements, an der die Suche begonnen werden soll.</param>
        <param name="end">Die Position im Text des Steuerelements, an der die Suche beendet werden soll. Dieser Wert muss -1 oder größer oder gleich dem <paramref name="start" />-Parameter sein.</param>
        <param name="options">Eine bitweise Kombination der <see cref="T:System.Windows.Forms.RichTextBoxFinds" />-Werte.</param>
        <summary>Durchsucht den Text in einem <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement nach einer Zeichenfolge innerhalb eines bestimmten Textbereichs im Steuerelement und mit spezifischen Suchoptionen.</summary>
        <returns>Die Position im Steuerelement, an der der Suchtext gefunden wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode sucht nach dem im `str`-Parameter angegebenen Text und gibt den Speicherort des ersten Zeichens der Such Zeichenfolge im-Steuerelement zurück. Wenn die Eigenschaft einen negativen Wert zurückgibt, wurde die Text Zeichenfolge, nach der gesucht wird, im Inhalt des Steuer Elements nicht gefunden. Mit dieser Methode können Sie Suchfunktionen erstellen, die für den Benutzer des-Steuer Elements bereitgestellt werden können. Sie können diese Methode auch verwenden, um nach Text zu suchen, der durch ein bestimmtes Format ersetzt werden soll. Wenn der Benutzer z. b. Datumsangaben in das-Steuerelement eingegeben hat, können Sie die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode verwenden, um nach allen Datumsangaben im Dokument zu suchen und diese durch das entsprechende Format zu ersetzen, bevor Sie die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode des Steuer Elements verwenden.  
  
 Mit dieser Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode können Sie Optionen angeben, die es Ihnen ermöglichen, Ihre Suche zu erweitern oder einzuschränken. Sie können Optionen angeben, die es Ihnen ermöglichen, die Groß-/Kleinschreibung des Suchworts abzugleichen oder nach ganzen Wörtern anstelle von partiellen Wörtern zu suchen. Wenn Sie die `RichTextBoxFinds.Reverse`-Enumeration im `options`-Parameter angeben, können Sie statt der standardmäßigen Suchmethode von oben nach Text vom Ende des Dokuments bis zum oberen Rand suchen. Mit dieser Version der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode können Sie auch die Suche nach Text eingrenzen, indem Sie eine bestimmte Start-und Endposition im Text des Steuer Elements auswählen. Mit dieser Funktion können Sie den Suchbereich auf einen bestimmten Abschnitt des Steuerelement Texts beschränken. Wenn dem `end`-Parameter der Wert minus eins (-1) zugewiesen wird, wird die Methode bis zum Ende des Texts in der <xref:System.Windows.Forms.RichTextBox> nach normalen Such Vorgängen durchsucht. Bei umgekehrten suchen gibt der Wert "-1", der dem `end`-Parameter zugewiesen ist, an, dass Text vom Ende des Texts (unten) bis zur durch `start` Parameter definierten Position durchsucht wird. Wenn die Parameter "`start`" und "`end`" denselben Wert bereitstellen, wird das gesamte Steuerelement nach normalen Such Vorgängen durchsucht. Bei einer umgekehrten Suche wird das gesamte Steuerelement durchsucht, aber die Suche beginnt am Ende des Dokuments und durchsucht den Anfang des Dokuments.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.RichTextBox.Find%2A> Methoden, die ein `string` als Parameter akzeptieren, können keinen Text finden, der in mehr als einer Textzeile innerhalb des <xref:System.Windows.Forms.RichTextBox>enthalten ist. Durch das Durchführen einer solchen Suche wird der Wert "-1" zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Textabschnitt in einer <xref:System.Windows.Forms.RichTextBox> für die erste Instanz einer Such Zeichenfolge durchsucht, die an den `searchText`-Parameter der-Methode übergeben wird. Der Bereich für die Suche nach Text innerhalb des Steuer Elements wird durch die `searchStart`-und `searchEnd` Parameter der-Methode angegeben. Wenn die Such Zeichenfolge in der <xref:System.Windows.Forms.RichTextBox>gefunden wird, gibt die Methode die Indexposition des ersten Zeichens des gefundenen Texts zurück und hebt den gefundenen Text hervor. Andernfalls wird der Wert-1 zurückgegeben. Im Beispiel wird auch der `options`-Parameter der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode verwendet, um anzugeben, dass der gefundene Text der Groß-/Kleinschreibung der Such Zeichenfolge entsprechen soll. Das Beispiel setzt voraus, dass diese Methode in der-Klasse eines <xref:System.Windows.Forms.Form> platziert wird, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`enthält. Nachdem die erste Instanz der Such Zeichenfolge gefunden wurde, können Sie dieses Beispiel verwenden, um nach anderen Instanzen im Text zu suchen.  
  
 [!code-cpp[RichTextBox.FindStringStartEnd#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.FindStringStartEnd/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.FindStringStartEnd#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.FindStringStartEnd/CS/form1.cs#1)]
 [!code-vb[RichTextBox.FindStringStartEnd#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.FindStringStartEnd/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="str" />-Parameter war <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="start" />-Parameter war kleiner als 0 (null).

- oder - 
Der <paramref name="end" />-Parameter war kleiner als der <paramref name="start" />-Parameter.</exception>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.RichTextBox.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schriftart für die Anzeige von Text im Steuerelement ab oder legt diese fest.</summary>
        <value>Der <see cref="T:System.Drawing.Font" />, der auf den Text angewendet werden soll, der im Steuerelement angezeigt wird. Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultFont" />-Eigenschaft.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.RichTextBox.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Vordergrundfarbe des Steuerelements ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Vordergrundfarbe des Steuerelements darstellt.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="richTextBox.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="pt">Die zu suchende Position.</param>
        <summary>Ruft das Zeichen ab, das sich am nächsten zur angegebenen Position befindet.</summary>
        <returns>Das Zeichen an der angegebenen Position.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public override int GetCharIndexFromPosition (System.Drawing.Point pt);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharIndexFromPosition (pt As Point) As Integer" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharIndexFromPosition(System::Drawing::Point pt);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="richTextBox.GetCharIndexFromPosition pt" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public int GetCharIndexFromPosition (System.Drawing.Point pt);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharIndexFromPosition (pt As Point) As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharIndexFromPosition(System::Drawing::Point pt);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="richTextBox.GetCharIndexFromPosition pt" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Die zu suchende Position.</param>
        <summary>Ruft den Index des Zeichens ab, das sich am nächsten zur angegebenen Position befindet.</summary>
        <returns>Der nullbasierte Zeichenindex an der angegebenen Position.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt den Zeichen Index zurück, der der im `pt`-Parameter angegebenen Position am nächsten liegt. Der Zeichen Index ist ein NULL basierter Text Index im-Steuerelement, einschließlich Leerzeichen. Sie können diese Methode verwenden, um zu bestimmen, wo sich der Benutzer mit dem Mauszeiger befindet, indem Sie die Maus Koordinaten an diese Methode übergeben. Dies kann hilfreich sein, wenn Sie Aufgaben ausführen möchten, wenn der Benutzer mit dem Mauszeiger auf ein Wort im Text des Steuer Elements bewegt wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition%2A>-Methode mit der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode verwendet wird, um nach einer bestimmten Zeichenfolge innerhalb eines <xref:System.Windows.Forms.RichTextBox>-Steuer Elements zu suchen und den Zeichen Index anzuzeigen, in dem sich die gefundene Zeichenfolge innerhalb des <xref:System.Windows.Forms.RichTextBox> Steuer Elements befindet. Das Beispiel sucht nach dem Wort "Brown" innerhalb des Inhalts des Steuer Elements und gibt die Zeichen Indexposition zurück, an der sich die Such Zeichenfolge befindet. Dieses Beispiel erfordert, dass Sie über ein Formular verfügen, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1` enthält, das Text enthält. Außerdem ist es erforderlich, dass der Code im Beispiel mit dem <xref:System.Windows.Forms.Control.MouseDown>-Ereignis des <xref:System.Windows.Forms.RichTextBox>verbunden ist.  
  
 [!code-cpp[RichTextBox.GetCharIndexFromPosition#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.GetCharIndexFromPosition/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.GetCharIndexFromPosition#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.GetCharIndexFromPosition/CS/form1.cs#1)]
 [!code-vb[RichTextBox.GetCharIndexFromPosition#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.GetCharIndexFromPosition/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public override int GetLineFromCharIndex (int index);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLineFromCharIndex (index As Integer) As Integer" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLineFromCharIndex(int index);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.GetLineFromCharIndex : int -&gt; int" Usage="richTextBox.GetLineFromCharIndex index" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public int GetLineFromCharIndex (int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineFromCharIndex(int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineFromCharIndex (index As Integer) As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineFromCharIndex(int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.GetLineFromCharIndex : int -&gt; int" Usage="richTextBox.GetLineFromCharIndex index" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Die zu suchende Zeichenindexposition.</param>
        <summary>Ruft die Zeilennummer von der angegebenen Zeichenposition im Text des <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelements ab.</summary>
        <returns>Die nullbasierte Nummer der Zeile, in der sich der Zeichenindex befindet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie die Zeilennummer auf Grundlage des Zeichen Indexes ermitteln, der im `index`-Parameter der-Methode angegeben ist. Die erste Textzeile im-Steuerelement gibt den Wert 0 (null) zurück. Die <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A>-Methode gibt die physische Zeilennummer zurück, in der sich das indizierte Zeichen im-Steuerelement befindet. Wenn z. b. ein Teil der ersten logischen Textzeile im-Steuerelement in die nächste Zeile umbrochen wird, gibt die <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A>-Methode 1 zurück, wenn das Zeichen am angegebenen Zeichen Index in die zweite physische Zeile umschlossen ist. Wenn <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> auf `false`festgelegt ist, wird kein Teil der Zeile zum nächsten umschlossen, und die Methode gibt 0 für den angegebenen Zeichen Index zurück. Sie können diese Methode verwenden, um zu bestimmen, in welcher Zeile sich ein bestimmter Zeichen Index befindet. Wenn Sie z. b. die <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode aufrufen, um nach Text zu suchen, können Sie den Zeichen Index abrufen, in dem die Suchergebnisse gefunden werden. Sie können diese Methode mit dem von der <xref:System.Windows.Forms.RichTextBox.Find%2A>-Methode zurückgegebenen Zeichen Index aufgerufen werden, um zu bestimmen, welche Zeile das Wort gefunden hat.  
  
 In bestimmten Fällen löst <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> keine Ausnahme aus, wenn der `index` Parameter ein ungültiger Wert ist. Beispiel:  
  
-   Wenn der `index`-Parameter <xref:System.Int32.MinValue> oder-1 ist, gibt <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> 0 zurück.  
  
-   Wenn der `index`-Parameter die Textlänge oder <xref:System.Int32.MaxValue>ist, gibt <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A> die Nummer der letzten Textzeile zurück, die nicht notwendigerweise mit `Lines.Length-1`identisch ist, je nach Wert der <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>-Eigenschaft.  
  
 Überprüfen Sie in diesen Fällen die Eingabe, bevor Sie <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A>aufrufen.  
  
> [!NOTE]
>  Wenn der im `index`-Parameter angegebene Zeichen Index die verfügbare Anzahl der im Steuerelement enthaltenen Zeilen überschreitet, wird die letzte Zeilennummer zurückgegeben.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Windows.Forms.RichTextBox.GetLineFromCharIndex%2A>-Methode veranschaulicht. Um das Beispiel auszuführen, fügen Sie den folgenden Code in ein Formular ein, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `RichTextBox1`, eine Schaltfläche mit dem Namen `Button1` und zwei Textfelder namens `TextBox1` und `TextBox2`enthält. Wenn das Beispiel ausgeführt wird, geben Sie eine Such Zeichenfolge in `TextBox2` ein, und klicken Sie auf die Schaltfläche, um die Suchergebnisse  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxGetLine#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxGetLine/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxGetLine#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxGetLine/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxGetLine#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxGetLine/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public override System.Drawing.Point GetPositionFromCharIndex (int index);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPositionFromCharIndex (index As Integer) As Point" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Point GetPositionFromCharIndex(int index);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="richTextBox.GetPositionFromCharIndex index" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.Drawing.Point GetPositionFromCharIndex (int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionFromCharIndex (index As Integer) As Point" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point GetPositionFromCharIndex(int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="richTextBox.GetPositionFromCharIndex index" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der Index des Zeichens, für das die Position abgerufen werden soll.</param>
        <summary>Ruft die Position innerhalb des Steuerelements am angegebenen Zeichenindex ab.</summary>
        <returns>Die Position des angegebenen Zeichens.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie bestimmen, wo sich ein bestimmter Zeichen Index im-Steuerelement befindet. Sie können diese Methode für Aufgaben wie das Anzeigen von Kontextmenü Elementen oder Hilfe Informationen für ein Wort im-Steuerelement verwenden. Wenn Sie z. b. ein Menü der Optionen für den Benutzer anzeigen möchten, wenn der Benutzer mit der rechten Maustaste auf ein Wort im-Steuerelement klickt, können Sie diese Methode verwenden, um die Position des Worts zu bestimmen, um ein <xref:System.Windows.Forms.ContextMenu> Steuerelement ordnungsgemäß anzuzeigen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.GetLineFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt während eines Ziehvorgangs ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HScroll">
      <MemberSignature Language="C#" Value="public event EventHandler HScroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HScroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.HScroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HScroll As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HScroll;" />
      <MemberSignature Language="F#" Value="member this.HScroll : EventHandler " Usage="member this.HScroll : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer auf die horizontale Schiebeleiste des Steuerelements klickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.RichTextBox.HScroll> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.RichTextBox> mit dem Namen `RichTextBox1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.RichTextBox.HScroll>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#540](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#540)]
 [!code-vb[System.Windows.Forms.EventExamples#540](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#540)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeChange">
      <MemberSignature Language="C#" Value="public event EventHandler ImeChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeChange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.ImeChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeChange;" />
      <MemberSignature Language="F#" Value="member this.ImeChange : EventHandler " Usage="member this.ImeChange : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn Benutzer die Eingabemethoden in einer asiatischen Version des Windows-Betriebssystems wechseln.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.RichTextBox.ImeChange> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.RichTextBox> mit dem Namen `RichTextBox1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.RichTextBox.ImeChange>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#542](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#542)]
 [!code-vb[System.Windows.Forms.EventExamples#542](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#542)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageOption">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.RichTextBoxLanguageOptions LanguageOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RichTextBoxLanguageOptions LanguageOption" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.LanguageOption" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageOption As RichTextBoxLanguageOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::RichTextBoxLanguageOptions LanguageOption { System::Windows::Forms::RichTextBoxLanguageOptions get(); void set(System::Windows::Forms::RichTextBoxLanguageOptions value); };" />
      <MemberSignature Language="F#" Value="member this.LanguageOption : System.Windows.Forms.RichTextBoxLanguageOptions with get, set" Usage="System.Windows.Forms.RichTextBox.LanguageOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RichTextBoxLanguageOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der <see cref="T:System.Windows.Forms.RichTextBox" />-Einstellungen für die Unterstützung des Eingabemethoden-Editors (IME, Input Methode Editor) und asiatischer Sprachen angibt, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.RichTextBoxLanguageOptions" />-Werte. Der Standardwert lautet <see cref="F:System.Windows.Forms.RichTextBoxLanguageOptions.AutoFontSizeAdjust" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkClicked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LinkClickedEventHandler LinkClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LinkClickedEventHandler LinkClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.LinkClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LinkClicked As LinkClickedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LinkClickedEventHandler ^ LinkClicked;" />
      <MemberSignature Language="F#" Value="member this.LinkClicked : System.Windows.Forms.LinkClickedEventHandler " Usage="member this.LinkClicked : System.Windows.Forms.LinkClickedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkClickedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn Benutzer auf einen Link im Text des Steuerelements klicken.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ereignishandler für dieses Ereignis erstellen, um einen Link zu verarbeiten, auf den im-Steuerelement geklickt wurde. Mithilfe der Informationen, die für den-Ereignishandler bereitgestellt werden, können Sie bestimmen, auf welchen Link im Dokument geklickt wurde.  
  
> [!IMPORTANT]
>  Standardmäßig werden Links als Text angezeigt und sind nicht klickbar. Legen Sie die <xref:System.Windows.Forms.RichTextBox.DetectUrls%2A>-Eigenschaft auf `true`fest, damit Sie auf Sie klicken können.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel enthält einen Ereignishandler für das <xref:System.Windows.Forms.RichTextBox.LinkClicked>-Ereignis. Der ereignishandlerprozess verarbeitet Link Klicks innerhalb des Dokuments eines <xref:System.Windows.Forms.RichTextBox>-Steuer Elements und öffnet eine Instanz des Standard Browsers (mit der <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType>-Methode) und zeigt die Seite für den Link an, auf den geklickt wurde. Für dieses Beispiel ist es erforderlich, dass der Ereignishandler mit dem <xref:System.Windows.Forms.RichTextBox.LinkClicked>-Ereignis für eine <xref:System.Windows.Forms.RichTextBox>verbunden ist.  
  
 [!code-cpp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LinkClicked Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LinkClicked Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.DetectUrls" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFile">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt den Inhalt einer Datei in das <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public void LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.LoadFile : string -&gt; unit" Usage="richTextBox.LoadFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Name und Speicherort der in das Steuerelement zu ladenden Datei.</param>
        <summary>Lädt eine RTF-Datei (Rich Text Format) oder eine standardmäßige ASCII-Textdatei in das <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Laden einer Datei mit der <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode ersetzt der Inhalt der Datei, die geladen wird, den gesamten Inhalt des <xref:System.Windows.Forms.RichTextBox> Steuer Elements. Dies bewirkt, dass die Werte der Eigenschaften <xref:System.Windows.Forms.TextBoxBase.Text%2A> und <xref:System.Windows.Forms.RichTextBox.Rtf%2A> geändert werden. Sie können diese Methode verwenden, um ein zuvor erstelltes Text-oder RTF-Dokument zur Bearbeitung in das-Steuerelement zu laden. Wenn Sie die Datei speichern möchten, können Sie die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode verwenden.  
  
> [!NOTE]
>  Bei dieser Version der <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode wird eine Ausnahme ausgelöst, wenn die Datei, die geladen wird, kein RTF-Dokument ist. Um einen anderen Dateityp (z. b. eine ASCII-Textdatei) zu laden, verwenden Sie die anderen Versionen dieser Methode, die einen Wert aus der <xref:System.Windows.Forms.RichTextBoxStreamType>-Enumeration als Parameter akzeptieren.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode öffnet eine Datei erst, wenn ein Handle für die <xref:System.Windows.Forms.RichTextBox>erstellt wurde. Stellen Sie sicher, dass das Handle des Steuer Elements erstellt wird, bevor Sie die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> Methode aufrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine RTF-Datei in das <xref:System.Windows.Forms.RichTextBox>-Steuerelement geöffnet. Im Beispiel wird die <xref:System.Windows.Forms.OpenFileDialog>-Klasse verwendet, um ein Dialogfeld anzuzeigen, in dem die Datei vom Benutzer angefordert wird. Der Code lädt dann diese Datei, wobei angenommen wird, dass es sich um eine RTF-Dokument Datei handelt. Wenn die Datei nicht ist, wird im Beispielcode eine Ausnahme ausgelöst. In diesem Beispiel muss der Code in einer <xref:System.Windows.Forms.Form> Klasse platziert werden, die über ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`verfügt.  
  
 [!code-cpp[Classic RichTextBox.LoadFile Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LoadFile Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LoadFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LoadFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Fehler beim Laden der Datei in das Steuerelement.</exception>
        <exception cref="T:System.ArgumentException">Die zu ladende Datei ist kein RTF-Dokument.</exception>
        <altmember cref="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public void LoadFile (System.IO.Stream data, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFile(class System.IO.Stream data, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFile (data As Stream, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFile(System::IO::Stream ^ data, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.LoadFile : System.IO.Stream * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.LoadFile (data, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="data">Ein in das <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement zu ladender Datenstream.</param>
        <param name="fileType">Einer der <see cref="T:System.Windows.Forms.RichTextBoxStreamType" />-Werte.</param>
        <summary>Lädt den Inhalt eines vorhandenen Datenstreams in das <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Version der <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode verwenden, um die <xref:System.Windows.Forms.RichTextBox> mit Daten aus einem vorhandenen Datenstrom zu laden. Die Daten, die in das-Steuerelement geladen werden, ersetzen den gesamten Inhalt des <xref:System.Windows.Forms.RichTextBox> Steuer Elements. Dies bewirkt, dass die Werte der Eigenschaften <xref:System.Windows.Forms.TextBoxBase.Text%2A> und <xref:System.Windows.Forms.RichTextBox.Rtf%2A> geändert werden. Mit dieser Methode können Sie eine Datei, die zuvor in einem Datenstrom geöffnet war, zur Bearbeitung in das-Steuerelement laden. Wenn Sie den Inhalt des Steuer Elements wieder im Stream speichern möchten, können Sie die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode verwenden, die ein <xref:System.IO.Stream>-Objekt als Parameter akzeptiert.  
  
 Mit dieser Version der <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode können Sie auch den Typ der Daten angeben, die in das-Steuerelement geladen werden. Diese Funktion ermöglicht es Ihnen, Datenströme zu verwenden, die andere Daten als die RTF-Dokumente (Rich Textformat) im-Steuerelement enthalten.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode öffnet eine Datei erst, wenn ein Handle für die <xref:System.Windows.Forms.RichTextBox>erstellt wurde. Stellen Sie sicher, dass das Handle des Steuer Elements erstellt wird, bevor Sie die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> Methode aufrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der Methoden <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> und <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> mit Streams veranschaulicht. Außerdem wird die Verwendung des <xref:System.Windows.Forms.FileDialog.FileName%2A?displayProperty=nameWithType>-, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A?displayProperty=nameWithType>-, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>-und <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType>-Members veranschaulicht.  
  
 Dies ist ein umfassendes Beispiel, das ausgeführt werden kann, wenn Sie es in Ihr Projekt kopieren.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Fehler beim Laden der Datei in das Steuerelement.</exception>
        <exception cref="T:System.ArgumentException">Die zu ladende Datei ist kein RTF-Dokument.</exception>
        <altmember cref="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public void LoadFile (string path, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFile(string path, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFile (path As String, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFile(System::String ^ path, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.LoadFile : string * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.LoadFile (path, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="path">Der Name und Speicherort der in das Steuerelement zu ladenden Datei.</param>
        <param name="fileType">Einer der <see cref="T:System.Windows.Forms.RichTextBoxStreamType" />-Werte.</param>
        <summary>Lädt einen spezifischen Dateityp in das <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Laden einer Datei mit der <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode ersetzt der Inhalt der Datei, die geladen wird, den gesamten Inhalt des <xref:System.Windows.Forms.RichTextBox> Steuer Elements. Dies bewirkt, dass die Werte der Eigenschaften <xref:System.Windows.Forms.TextBoxBase.Text%2A> und <xref:System.Windows.Forms.RichTextBox.Rtf%2A> geändert werden. Sie können diese Methode verwenden, um ein zuvor erstelltes Text-oder RTF-Dokument (Rich Textformat) zur Bearbeitung in das-Steuerelement zu laden. Wenn Sie die Datei speichern möchten, können Sie die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode verwenden.  
  
 Sie können diese Version der <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode verwenden, um den Dateityp der Datei anzugeben, die geladen wird. Diese Funktion ermöglicht es Ihnen, andere Dateien als RTF-Dokumente in das-Steuerelement zu laden.  
  
> [!NOTE]
>  Die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode öffnet eine Datei erst, wenn ein Handle für die <xref:System.Windows.Forms.RichTextBox>erstellt wurde. Stellen Sie sicher, dass das Handle des Steuer Elements erstellt wird, bevor Sie die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> Methode aufrufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Textdatei in das <xref:System.Windows.Forms.RichTextBox>-Steuerelement geöffnet. Im Beispiel wird die <xref:System.Windows.Forms.OpenFileDialog>-Klasse verwendet, um ein Dialogfeld anzuzeigen, in dem die Datei vom Benutzer angefordert wird. Der Code lädt dann diese Datei in das <xref:System.Windows.Forms.RichTextBox>-Steuerelement. Im Beispiel wird diese Version der <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode verwendet, um anzugeben, dass die Datei nicht im standardmäßigen Rich-Text-Format, sondern als ASCII-Textdatei geöffnet werden soll. In diesem Beispiel muss der Code in einer <xref:System.Windows.Forms.Form> Klasse platziert werden, die über ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`verfügt.  
  
 [!code-cpp[Classic RichTextBox.LoadFile1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.LoadFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.LoadFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.LoadFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.LoadFile1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Fehler beim Laden der Datei in das Steuerelement.</exception>
        <exception cref="T:System.ArgumentException">Die zu ladende Datei ist kein RTF-Dokument.</exception>
        <altmember cref="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public override int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.RichTextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Anzahl an Zeichen ab, die Benutzer in das RichTextBox-Steuerelement eingeben oder einfügen können, oder legt diese fest.</summary>
        <value>Die Anzahl der Zeichen, die in das Steuerelement eingegeben werden können. Der Standardwert lautet <see cref="F:System.Int32.MaxValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft auf 0 festgelegt ist, beträgt die maximale Länge des Texts, der im Steuerelement eingegeben werden kann, 64 KB von Zeichen. Diese Eigenschaft wird in der Regel verwendet, wenn die <xref:System.Windows.Forms.RichTextBox> verwendet wird, um eine einzelne Zeile des RTF-Texts (Rich Textformat) anzuzeigen. Sie können diese Eigenschaft verwenden, um die im Steuerelement eingegebene Textlänge für Werte wie Postleitzahlen und Telefonnummern einzuschränken oder um die Länge des Texts einzuschränken, der eingegeben wird, wenn die Daten in eine Datenbank eingegeben werden sollen. Sie können den in das-Steuerelement eingegebenen Text auf die maximale Länge des entsprechenden Felds in der Datenbank beschränken.  
  
> [!NOTE]
>  Im Code können Sie den Wert der <xref:System.Windows.Forms.TextBoxBase.Text%2A>-Eigenschaft auf einen Wert festlegen, dessen Länge größer ist als der Wert, der von der <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>-Eigenschaft angegeben wird. Diese Eigenschaft wirkt sich nur auf Text aus, der zur Laufzeit in das Steuerelement eingegeben wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.RichTextBox.MaxLength%2A>-Eigenschaft verwendet wird, um zu bestimmen, ob der einem <xref:System.Windows.Forms.RichTextBox>-Steuerelement zugewiesene Text größer ist als der Wert, der der <xref:System.Windows.Forms.RichTextBox.MaxLength%2A>-Eigenschaft zugewiesen ist. Wenn der Text nicht größer ist, wird im Beispiel die <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>-Eigenschaft verwendet, um den Text dem Steuerelement zuzuweisen. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`zu einem Formular hinzugefügt wurde und dass die-Methode im Beispiel mit Text aufgerufen wird, der für den-Parameter bereitgestellt wird, der in das-Steuerelement eingefügt werden soll. Das Beispiel erfordert auch, dass die <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>-Eigenschaft auf einen Wert festgelegt wurde, um den Text Eintrag in die <xref:System.Windows.Forms.RichTextBox>einzuschränken.  
  
 [!code-cpp[RichTextBox.MaxLength#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.MaxLength/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.MaxLength#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.MaxLength/CS/form1.cs#1)]
 [!code-vb[RichTextBox.MaxLength#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.MaxLength/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der zugewiesene Eigenschaftswert ist kleiner als 0 (null).</exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.RichTextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dies ein mehrzeiliges <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das Steuerelement ein mehrzeiliges <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement ist, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="richTextBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentsResized">
      <MemberSignature Language="C#" Value="protected virtual void OnContentsResized (System.Windows.Forms.ContentsResizedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentsResized(class System.Windows.Forms.ContentsResizedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentsResized (e As ContentsResizedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentsResized(System::Windows::Forms::ContentsResizedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentsResized : System.Windows.Forms.ContentsResizedEventArgs -&gt; unit&#xA;override this.OnContentsResized : System.Windows.Forms.ContentsResizedEventArgs -&gt; unit" Usage="richTextBox.OnContentsResized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ContentsResizedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.ContentsResizedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.RichTextBox.ContentsResized" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.RichTextBox.OnContentsResized%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.RichTextBox.OnContentsResized(System.Windows.Forms.ContentsResizedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.ContentsResized" />
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuChanged">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnContextMenuChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuChanged : EventArgs -&gt; unit" Usage="richTextBox.OnContextMenuChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /> aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="richTextBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.Control.HandleCreated" /> aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="richTextBox.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnHScroll (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHScroll(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHScroll (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHScroll(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHScroll : EventArgs -&gt; unit&#xA;override this.OnHScroll : EventArgs -&gt; unit" Usage="richTextBox.OnHScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.RichTextBox.HScroll" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.RichTextBox.OnHScroll%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.RichTextBox.OnHScroll(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.HScroll" />
      </Docs>
    </Member>
    <Member MemberName="OnImeChange">
      <MemberSignature Language="C#" Value="protected virtual void OnImeChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnImeChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnImeChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnImeChange(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnImeChange : EventArgs -&gt; unit&#xA;override this.OnImeChange : EventArgs -&gt; unit" Usage="richTextBox.OnImeChange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.RichTextBox.ImeChange" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.RichTextBox.OnImeChange%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.RichTextBox.OnImeChange(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.ImeChange" />
      </Docs>
    </Member>
    <Member MemberName="OnLinkClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnLinkClicked (System.Windows.Forms.LinkClickedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLinkClicked(class System.Windows.Forms.LinkClickedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLinkClicked (e As LinkClickedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLinkClicked(System::Windows::Forms::LinkClickedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLinkClicked : System.Windows.Forms.LinkClickedEventArgs -&gt; unit&#xA;override this.OnLinkClicked : System.Windows.Forms.LinkClickedEventArgs -&gt; unit" Usage="richTextBox.OnLinkClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LinkClickedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.LinkClickedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.RichTextBox.LinkClicked" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.RichTextBox.OnLinkClicked%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.RichTextBox.OnLinkClicked(System.Windows.Forms.LinkClickedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.LinkClicked" />
      </Docs>
    </Member>
    <Member MemberName="OnProtected">
      <MemberSignature Language="C#" Value="protected virtual void OnProtected (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProtected(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProtected (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProtected(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnProtected : EventArgs -&gt; unit&#xA;override this.OnProtected : EventArgs -&gt; unit" Usage="richTextBox.OnProtected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.RichTextBox.Protected" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.RichTextBox.OnProtected%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.RichTextBox.OnProtected(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.Protected" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="richTextBox.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="richTextBox.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.RichTextBox.SelectionChanged" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.RichTextBox.OnSelectionChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.RichTextBox.OnSelectionChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="richTextBox.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="e">Ein Objekt, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="richTextBox.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="e">Ein Objekt, das Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.Control.TextChanged" /> aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnVScroll (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVScroll(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVScroll (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVScroll(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVScroll : EventArgs -&gt; unit&#xA;override this.OnVScroll : EventArgs -&gt; unit" Usage="richTextBox.OnVScroll e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das Ereignis <see cref="E:System.Windows.Forms.RichTextBox.VScroll" /> aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Windows.Forms.RichTextBox.OnVScroll%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Windows.Forms.RichTextBox.OnVScroll(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Windows.Forms.RichTextBox.VScroll" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (System.Windows.Forms.DataFormats.Format clipFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(class System.Windows.Forms.DataFormats/Format clipFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Paste(System.Windows.Forms.DataFormats.Format)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (clipFormat As DataFormats.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::Windows::Forms::DataFormats::Format ^ clipFormat);" />
      <MemberSignature Language="F#" Value="override this.Paste : System.Windows.Forms.DataFormats.Format -&gt; unit" Usage="richTextBox.Paste clipFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipFormat" Type="System.Windows.Forms.DataFormats+Format" />
      </Parameters>
      <Docs>
        <param name="clipFormat">Das Zwischenablageformat, in dem die Daten aus der Zwischenablage abgerufen werden sollen.</param>
        <summary>Fügt den Inhalt der Zwischenablage in das angegebene Zwischenablageformat ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie Daten aus der Zwischenablage in das-Steuerelement einfügen. Diese Version der <xref:System.Windows.Forms.RichTextBox.Paste%2A>-Methode unterscheidet sich von der <xref:System.Windows.Forms.TextBoxBase.Paste%2A?displayProperty=nameWithType>-Methode, da Sie das Einfügen von Text in ein bestimmtes Zwischenablage Format ermöglicht. Sie können die <xref:System.Windows.Forms.RichTextBox.CanPaste%2A>-Methode verwenden, um zu bestimmen, ob die Daten innerhalb der Zwischenablage das angegebene Zwischenablage Format aufweisen. Anschließend können Sie diese Version der <xref:System.Windows.Forms.RichTextBox.Paste%2A>-Methode aufzurufen, um sicherzustellen, dass der Einfügevorgang mit dem entsprechenden Datenformat erfolgt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.RichTextBox.Paste%2A>-Methode verwendet wird, um eine Bitmap in das <xref:System.Windows.Forms.RichTextBox>-Steuerelement einzufügen. Nach dem Öffnen einer Bitmap aus einer Datei verwendet das Beispiel die <xref:System.Windows.Forms.Clipboard.SetDataObject%2A>-Methode, um die Bitmap in die Windows-Zwischenablage zu kopieren. Schließlich ruft das Beispiel das Format für das <xref:System.Drawing.Bitmap> Objekt ab, überprüft, ob das Format in das <xref:System.Windows.Forms.RichTextBox>-Steuerelement eingefügt werden kann, und verwendet die <xref:System.Windows.Forms.RichTextBox.Paste%2A>-Methode, um die Daten einzufügen.  
  
 [!code-cpp[RichText_Paste#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichText_Paste/CPP/form1.cpp#1)]
 [!code-csharp[RichText_Paste#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichText_Paste/CS/form1.cs#1)]
 [!code-vb[RichText_Paste#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichText_Paste/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.RichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="T:System.Windows.Forms.DataFormats.Format" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message m, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; m, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef m As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % m, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey : Message * System.Windows.Forms.Keys -&gt; bool" Usage="richTextBox.ProcessCmdKey (m, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="m">Eine als Verweis übergebene <see cref="T:System.Windows.Forms.Message" />, die die zu verarbeitende Fenstermeldung darstellt.</param>
        <param name="keyData">Einer der <see cref="T:System.Windows.Forms.Keys" />-Werte, die die zu verarbeitende Taste darstellen.</param>
        <summary>Verarbeitet eine Befehlstaste.</summary>
        <returns><see langword="true" />, wenn das Zeichen vom Steuerelement verarbeitet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="Protected">
      <MemberSignature Language="C#" Value="public event EventHandler Protected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Protected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.Protected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Protected As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Protected;" />
      <MemberSignature Language="F#" Value="member this.Protected : EventHandler " Usage="member this.Protected : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn Benutzer versuchen, geschützten Text im Steuerelement zu ändern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ereignishandler für dieses Ereignis in Ihren Anwendungen erstellen, um zu bestimmen, wann der Benutzer versucht hat, Text zu ändern, der im Steuerelement als geschützt gekennzeichnet wurde. Der Ereignishandler kann verwendet werden, um den Benutzer darüber zu benachrichtigen, dass der Text, den der Benutzer zu ändern versucht, geschützt ist, oder ein Dialogfeld anzuzeigen, in dem der Benutzer entsprechende Änderungen am Text vornehmen kann. Wenn der geschützte Bereich z. b. ein Datum ist, können Sie ein Dialogfeld anzeigen, in dem der Benutzer ein Datum auswählen kann, das dann auf den Text des Steuer Elements angewendet werden kann.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.RichTextBox.Protected> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.RichTextBox> mit dem Namen `RichTextBox1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.RichTextBox.Protected>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#543](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#543)]
 [!code-vb[System.Windows.Forms.EventExamples#543](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#543)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dieses Ereignis ist für diese Klasse nicht relevant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public void Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redo();" />
      <MemberSignature Language="F#" Value="member this.Redo : unit -&gt; unit" Usage="richTextBox.Redo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wendet die Operation, die im Steuerelement zuletzt rückgängig gemacht wurde, erneut an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anschließend können Sie die <xref:System.Windows.Forms.RichTextBox.Redo%2A>-Methode verwenden, um den letzten Rückgängig-Vorgang auf das-Steuerelement anzuwenden. Die <xref:System.Windows.Forms.RichTextBox.CanRedo%2A>-Methode ermöglicht Ihnen, zu bestimmen, ob der letzte Vorgang, den der Benutzer rückgängig gemacht hat, erneut auf das Steuerelement angewendet werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Eigenschaften <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> und <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> und die <xref:System.Windows.Forms.RichTextBox.Redo%2A>-Methode verwendet werden, um einen Redo-Vorgang auf eine beliebige Aktion außer dem Löschen von Text einzuschränken. Für dieses Beispiel ist es erforderlich, dass Sie über ein Formular verfügen, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement enthält, und dass ein Vorgang innerhalb des <xref:System.Windows.Forms.RichTextBox> durchgeführt und rückgängig gemacht wird, bevor der Code in diesem Beispiel aufgerufen wird.  
  
 [!code-cpp[RichTextBox.RedoAction#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.RedoAction/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.RedoAction#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.RedoAction/CS/form1.cs#1)]
 [!code-vb[RichTextBox.RedoAction#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.RedoAction/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.CanRedo" />
      </Docs>
    </Member>
    <Member MemberName="RedoActionName">
      <MemberSignature Language="C#" Value="public string RedoActionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedoActionName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.RedoActionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RedoActionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RedoActionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RedoActionName : string" Usage="System.Windows.Forms.RichTextBox.RedoActionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Aktion ab, die bei Aufruf der <see cref="M:System.Windows.Forms.RichTextBox.Redo" />-Methode erneut auf das Steuerelement angewendet werden kann.</summary>
        <value>Eine Zeichenfolge, die den Namen der Aktion darstellt, die bei Aufruf der <see cref="M:System.Windows.Forms.RichTextBox.Redo" />-Methode ausgeführt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft eine leere Zeichenfolge ("") zurückgibt, ist kein Vorgang verfügbar, der erneut auf das Steuerelement angewendet werden kann. Sie können diese Methode verwenden, um die letzte Aktion zu bestimmen, die im <xref:System.Windows.Forms.RichTextBox> Steuerelement rückgängig gemacht wird, das dann erneut auf das Steuerelement angewendet werden kann, wenn ein Aufrufvorgang der <xref:System.Windows.Forms.RichTextBox.Redo%2A>-Methode erfolgt. Mithilfe der <xref:System.Windows.Forms.RichTextBox.CanRedo%2A>-Eigenschaft können Sie feststellen, ob Vorgänge für das Steuerelement erneut angewendet werden müssen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die Eigenschaften <xref:System.Windows.Forms.RichTextBox.CanRedo%2A> und <xref:System.Windows.Forms.RichTextBox.RedoActionName%2A> und die <xref:System.Windows.Forms.RichTextBox.Redo%2A>-Methode verwendet werden, um einen Redo-Vorgang auf eine beliebige Aktion außer dem Löschen von Text einzuschränken. Für dieses Beispiel ist es erforderlich, dass Sie über ein Formular verfügen, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement enthält, und dass ein Vorgang innerhalb des <xref:System.Windows.Forms.RichTextBox> durchgeführt und rückgängig gemacht wird, bevor der Code in diesem Beispiel aufgerufen wird.  
  
 [!code-cpp[RichTextBox.RedoAction#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.RedoAction/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.RedoAction#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.RedoAction/CS/form1.cs#1)]
 [!code-vb[RichTextBox.RedoAction#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.RedoAction/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.CanRedo" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.Redo" />
      </Docs>
    </Member>
    <Member MemberName="RichTextShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool RichTextShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RichTextShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property RichTextShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RichTextShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RichTextShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.RichTextBox.RichTextShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist für diese Klasse nicht relevant.</summary>
        <value><see langword="true" />, wenn Tastenkombinationen aktiviert wurden, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist für diese Klasse nicht relevant.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightMargin">
      <MemberSignature Language="C#" Value="public int RightMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RightMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.RightMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property RightMargin As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RightMargin { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RightMargin : int with get, set" Usage="System.Windows.Forms.RichTextBox.RightMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe einer einzelnen Textzeile im <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement ab oder legt diese fest.</summary>
        <value>Die Größe einer einzelnen Textzeile im Steuerelement in Pixel. Der Standardwert beträgt 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Wert größer als 0 (null) in das-Steuerelement eingegeben wird, wird ein nicht sichtbarer Rand im-Steuerelement mit der angegebenen Anzahl von Pixeln von der linken Seite des-Steuer Elements platziert. Jeder Text, der über diesen Rand hinausgeht, wird in der nächsten Textzeile im Steuerelement platziert. Diese Eigenschaft wirkt sich auf den derzeit in das-Steuerelement eingegebenen Text sowie auf den zusätzlichen Text aus, der nach dem Festlegen der Eigenschaft in das Steuerelement eingegeben wird. Sie können diese Eigenschaft verwenden, um eine maximale Linienbreite für den gesamten Text anzugeben, der in ein <xref:System.Windows.Forms.RichTextBox> Steuerelement eingegeben wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.RichTextBox> erstellt wird, mit dem Text vergrößert wird, automatisch Wörter im Text des-Steuer Elements ausgewählt werden, wenn auf ein Wort Doppel geklickt wird und ein Rand auf der rechten Seite des Client Bereichs des Steuer Elements angezeigt wird. Wenn das <xref:System.Windows.Forms.RichTextBox> Steuerelement eine kleine Breite hat, wird mit diesem Code ein <xref:System.Windows.Forms.RichTextBox> erstellt, in dem jedes Textzeichen in einer eigenen Zeile angezeigt wird. Wenn Sie in dieser vertikalen Anzeigeposition auf einen beliebigen Teil eines Worts klicken, werden alle Zeichen des Worts unabhängig von der Tatsache ausgewählt, dass der Text vertikal angezeigt wird. Dieses Beispiel erfordert, dass Sie über ein Formular verfügen, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`enthält.  
  
 [!code-cpp[RichTextBox.ZoomFactor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.ZoomFactor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CS/form1.cs#1)]
 [!code-vb[RichTextBox.ZoomFactor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.ZoomFactor/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der angegebene Wert ist kleiner als 0 (null).</exception>
      </Docs>
    </Member>
    <Member MemberName="Rtf">
      <MemberSignature Language="C#" Value="public string Rtf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Rtf" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Rtf" />
      <MemberSignature Language="VB.NET" Value="Public Property Rtf As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Rtf { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Rtf : string with get, set" Usage="System.Windows.Forms.RichTextBox.Rtf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text des <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelements ab, einschließlich aller RTF-Codes (Rich Text Format), oder legt diesen fest.</summary>
        <value>Der Text des Steuerelements im RTF-Format.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie RTF-formatierten Text im-Steuerelement für die Anzeige platzieren oder den Text des Steuer Elements mit der angegebenen RTF-Formatierung extrahieren, die im Text des Steuer Elements definiert ist. Diese Eigenschaft wird normalerweise verwendet, wenn Sie RTF-Text aus einer anderen RTF-Quelle, z. b. Microsoft Word oder Windows WordPad, dem Steuerelement zuweisen.  
  
 Wenn Sie die <xref:System.Windows.Forms.Control.RightToLeft%2A>-Eigenschaft zur Laufzeit ändern, wird nur unformatierter Text ohne Formatierung beibehalten.  
  
 Die RTF-Codes finden Sie in der [RTF-Spezifikation (Rich Text Format), Version 1,6](https://docs.microsoft.com/previous-versions/office/developer/office2000/aa140277(v=office.10)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Speichert den Inhalt der <see cref="T:System.Windows.Forms.RichTextBox" /> in einer Datei.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveFile">
      <MemberSignature Language="C#" Value="public void SaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.SaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SaveFile : string -&gt; unit" Usage="richTextBox.SaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Name und Speicherort der zu speichernden Datei.</param>
        <summary>Speichert den Inhalt der <see cref="T:System.Windows.Forms.RichTextBox" /> in einer RTF-Datei (Rich Text Format).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode ermöglicht es Ihnen, den gesamten Inhalt des-Steuer Elements in einer RTF-Datei zu speichern, die von anderen Programmen wie Microsoft Word und Windows WordPad verwendet werden kann. Wenn der Dateiname, der an den `path`-Parameter übergeben wird, bereits im angegebenen Verzeichnis vorhanden ist, wird die Datei ohne vorherige Ankündigung überschrieben. Sie können die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode verwenden, um den Inhalt einer Datei in die <xref:System.Windows.Forms.RichTextBox>zu laden.  
  
> [!NOTE]
>  Um den Inhalt des-Steuer Elements in einem anderen Datei Formattyp wie z. b. ASCII-Text zu speichern, verwenden Sie die anderen Versionen dieser Methode, die einen Wert aus der <xref:System.Windows.Forms.RichTextBoxStreamType>-Enumeration als Parameter akzeptieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Inhalt eines <xref:System.Windows.Forms.RichTextBox>-Steuer Elements in einer RTF-Datei gespeichert. Im Beispiel wird die <xref:System.Windows.Forms.SaveFileDialog>-Klasse verwendet, um ein Dialogfeld anzuzeigen, das vom Benutzer angefordert werden soll, den Pfad und den Dateinamen der zu speichernden Datei. Der Code speichert die Datei dann, wenn der Inhalt im Rich-Text-Format vorliegt. Wenn die Datei bereits vorhanden ist, wird Sie automatisch überschrieben. In diesem Beispiel muss der Code in einer <xref:System.Windows.Forms.Form> Klasse platziert werden, die über ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`verfügt.  
  
 [!code-cpp[Classic RichTextBox.SaveFile Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SaveFile Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SaveFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SaveFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Beim Speichern des Inhalts des Steuerelements in einer Datei ist ein Fehler aufgetreten.</exception>
        <altmember cref="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SaveFile">
      <MemberSignature Language="C#" Value="public void SaveFile (System.IO.Stream data, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFile(class System.IO.Stream data, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFile (data As Stream, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFile(System::IO::Stream ^ data, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.SaveFile : System.IO.Stream * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.SaveFile (data, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="data">Der Datenstream, der die Datei enthält, in der gespeichert werden soll.</param>
        <param name="fileType">Einer der <see cref="T:System.Windows.Forms.RichTextBoxStreamType" />-Werte.</param>
        <summary>Speichert den Inhalt eines <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelements in einem geöffneten Datenstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version der <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode ermöglicht es Ihnen, den gesamten Inhalt des-Steuer Elements im Datenstrom zu speichern, der bereits geöffnet ist. Der Datenstrom kann dann die Informationen in einer Datei speichern. Sie können die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode verwenden, um den Inhalt einer Datei in die <xref:System.Windows.Forms.RichTextBox>zu laden.  
  
 Mit dieser Version der <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode können Sie auch ein Datenformat der Informationen angeben, die an das <xref:System.IO.Stream>-Objekt gesendet werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der Methoden <xref:System.Windows.Forms.RichTextBox.SaveFile%2A> und <xref:System.Windows.Forms.RichTextBox.LoadFile%2A> mit Streams veranschaulicht. Außerdem wird die Verwendung des <xref:System.Windows.Forms.FileDialog.FileName%2A?displayProperty=nameWithType>-, <xref:System.Windows.Forms.FileDialog.DefaultExt%2A?displayProperty=nameWithType>-, <xref:System.Windows.Forms.SaveFileDialog.CreatePrompt%2A?displayProperty=nameWithType>-und <xref:System.Windows.Forms.SaveFileDialog.OverwritePrompt%2A?displayProperty=nameWithType>-Members veranschaulicht.  
  
 Dies ist ein umfassendes Beispiel, das ausgeführt werden kann, wenn Sie es in Ihr Projekt kopieren.  
  
 [!code-cpp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.RichTextBoxSaveFile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RichTextBoxSaveFile/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Im <paramref name="fileType" />-Parameter wurde ein ungültiger Dateityp angegeben.</exception>
        <exception cref="T:System.IO.IOException">Beim Speichern des Inhalts des Steuerelements in einer Datei ist ein Fehler aufgetreten.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="SaveFile">
      <MemberSignature Language="C#" Value="public void SaveFile (string path, System.Windows.Forms.RichTextBoxStreamType fileType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveFile(string path, valuetype System.Windows.Forms.RichTextBoxStreamType fileType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveFile (path As String, fileType As RichTextBoxStreamType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveFile(System::String ^ path, System::Windows::Forms::RichTextBoxStreamType fileType);" />
      <MemberSignature Language="F#" Value="member this.SaveFile : string * System.Windows.Forms.RichTextBoxStreamType -&gt; unit" Usage="richTextBox.SaveFile (path, fileType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileType" Type="System.Windows.Forms.RichTextBoxStreamType" />
      </Parameters>
      <Docs>
        <param name="path">Der Name und Speicherort der zu speichernden Datei.</param>
        <param name="fileType">Einer der <see cref="T:System.Windows.Forms.RichTextBoxStreamType" />-Werte.</param>
        <summary>Speichert den Inhalt der <see cref="T:System.Windows.Forms.RichTextBox" /> in einem bestimmten Dateiformat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode ermöglicht es Ihnen, den gesamten Inhalt des-Steuer Elements in einer RTF-Datei zu speichern, die von anderen Programmen wie Microsoft Word und Windows WordPad verwendet werden kann. Wenn der Dateiname, der an den `path`-Parameter übergeben wird, bereits im angegebenen Verzeichnis vorhanden ist, wird die Datei ohne vorherige Ankündigung überschrieben. Sie können die <xref:System.Windows.Forms.RichTextBox.LoadFile%2A>-Methode verwenden, um den Inhalt einer Datei in die <xref:System.Windows.Forms.RichTextBox>zu laden.  
  
 Mit dieser Version der <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode können Sie einen Dateityp angeben, in dem der Inhalt des Steuer Elements gespeichert werden soll. Mit dieser Funktion können Sie sicherstellen, dass die Datei auf der Grundlage des Inhalts des Steuer Elements im richtigen Format gespeichert wird. Wenn das Dokument z. b. keine Unterschiede im Schrift Schnitt oder in der Farbgebung hat, können Sie die Datei als ASCII-Textdatei speichern, indem Sie den `fileType`-Parameter auf `RichTextBoxStreamType.PlainText`festlegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird der Inhalt des <xref:System.Windows.Forms.RichTextBox> in einer ASCII-Textdatei gespeichert. Im Beispiel wird die <xref:System.Windows.Forms.SaveFileDialog>-Klasse verwendet, um ein Dialogfeld anzuzeigen, in dem der Pfad und der Dateiname vom Benutzer angefordert werden. Der Code speichert dann den Inhalt des-Steuer Elements in dieser Datei. Im Beispiel wird diese Version der <xref:System.Windows.Forms.RichTextBox.SaveFile%2A>-Methode verwendet, um anzugeben, dass die Datei nicht im standardmäßigen Rich-Text-Format, sondern als ASCII-Textdatei gespeichert werden soll. In diesem Beispiel muss der Code in einer <xref:System.Windows.Forms.Form> Klasse platziert werden, die über ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`verfügt.  
  
 [!code-cpp[Classic RichTextBox.SaveFile1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SaveFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SaveFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SaveFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SaveFile1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Im <paramref name="fileType" />-Parameter wurde ein ungültiger Dateityp angegeben.</exception>
        <exception cref="T:System.IO.IOException">Beim Speichern des Inhalts des Steuerelements in einer Datei ist ein Fehler aufgetreten.</exception>
        <altmember cref="M:System.Windows.Forms.RichTextBox.LoadFile(System.String)" />
        <altmember cref="T:System.Windows.Forms.RichTextBoxStreamType" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.RichTextBoxScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RichTextBoxScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollBars As RichTextBoxScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::RichTextBoxScrollBars ScrollBars { System::Windows::Forms::RichTextBoxScrollBars get(); void set(System::Windows::Forms::RichTextBoxScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Windows.Forms.RichTextBoxScrollBars with get, set" Usage="System.Windows.Forms.RichTextBox.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RichTextBoxScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der im <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement anzuzeigenden Schiebeleisten ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.RichTextBoxScrollBars" />-Werte. Der Standardwert lautet <see langword="RichTextBoxScrollBars.Both" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht Ihnen das Bereitstellen von horizontalen und vertikalen Schiebe leisten für den Benutzer des <xref:System.Windows.Forms.RichTextBox>-Steuer Elements, um den Bildlauf Text innerhalb des Steuer Elements zu aktivieren, das sich außerhalb der physischen Abmessungen des Steuer Elements befindet. Sie können diese Eigenschaft auch verwenden, um Schiebe leisten aus dem Steuerelement zu entfernen, um den Bildlauf für den Inhalt des Steuer Elements einzuschränken.  
  
> [!NOTE]
>  Horizontale Schiebe leisten werden nicht angezeigt, wenn die <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> `true`ist, unabhängig vom Wert der <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist nicht in der <see cref="T:System.Windows.Forms.RichTextBoxScrollBars" />-Enumeration definiert.</exception>
        <altmember cref="T:System.Windows.Forms.RichTextBoxScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="SelectedRtf">
      <MemberSignature Language="C#" Value="public string SelectedRtf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedRtf" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectedRtf" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedRtf As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedRtf { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedRtf : string with get, set" Usage="System.Windows.Forms.RichTextBox.SelectedRtf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den derzeit markierten Text des Steuerelements im RTF-Format (Rich Text Format) ab oder legt diesen fest.</summary>
        <value>Der markierte Text des Steuerelements im RTF-Format.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie den ausgewählten Text im-Steuerelement abrufen, einschließlich der RTF-Formatierungscodes. Sie können diese Eigenschaft verwenden, um Text aus dem Steuerelement zu kopieren, mit Formatierungen abzuschließen und den Text in andere Anwendungen einzufügen, die RTF-formatierten Text akzeptieren, wie z. b. Microsoft Word und Windows WordPad. Um den markierten Text ohne RTF-Formatierungscodes zu erhalten, verwenden Sie die <xref:System.Windows.Forms.TextBoxBase.SelectedText%2A>-Eigenschaft.  
  
 Wenn derzeit kein Text ausgewählt ist, wird der in dieser Eigenschaft angegebene Text an der Einfügemarke eingefügt. Wenn Text ausgewählt ist, ersetzt jeder Text, der dieser Eigenschaft zugewiesen ist, den markierten Text.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.Rtf" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public override string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.RichTextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den markierten Text in <see cref="T:System.Windows.Forms.RichTextBox" /> ab oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die den markierten Text im Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A>-Eigenschaft mit den Eigenschaften <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>und <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> verwendet wird, um eine Auflistungs Liste in einem <xref:System.Windows.Forms.RichTextBox>-Steuerelement zu erstellen. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1` in einem Formular erstellt wird.  
  
 [!code-cpp[RichTextBox.SelectionBullet#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionBullet#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionBullet#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionBullet/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment SelectionAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment SelectionAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionAlignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment SelectionAlignment { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionAlignment : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die auf die aktuelle Auswahl oder Einfügemarke anzuwendende Ausrichtung ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn im-Steuerelement kein Absatz ausgewählt ist, wird durch das Festlegen dieser Eigenschaft die Ausrichtungs Einstellung auf den Absatz, in dem die Einfügemarke angezeigt wird, sowie auf Absätze angewendet, die nach dem Absatz mit der Einstellung der Ausrichtungs Eigenschaft erstellt werden. Wenn z. b. zwei Absätze in einem <xref:System.Windows.Forms.RichTextBox>-Steuerelement vorhanden sind und die Einfügemarke innerhalb des zweiten Absatzes liegt. Wenn Sie die <xref:System.Windows.Forms.RichTextBox.SelectionAlignment%2A>-Eigenschaft auf `HorizontalAlignment.Center`festlegen, wird der Absatz an der Einfügemarke im-Steuerelement zentriert. Wenn ein dritter Absatz nach dem zweiten Absatz erstellt wird, wird er auch an der Mitte des Steuer Elements ausgerichtet.  
  
 Wenn eine Auswahl innerhalb des-Steuer Elements erfolgt, wenn die-Eigenschaft festgelegt wird, werden alle ausgewählten Absätze basierend auf dieser Eigenschafts Einstellung ausgerichtet. Sie können diese Eigenschaft verwenden, um die Absätze in einem Dokument auszurichten, das in der <xref:System.Windows.Forms.RichTextBox>erstellt wird. Wenn Sie z. b. möchten, dass alle Absätze in einem Dokument zentriert werden, können Sie alle Absätze im-Steuerelement auswählen und die <xref:System.Windows.Forms.RichTextBox.SelectionAlignment%2A>-Eigenschaft auf `HorizontalAlignment.Center`festlegen.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.RichTextBox.SelectionAlignment%2A> gibt `SelectionAlignment.Left` zurück, wenn die Textauswahl mehrere Absätze mit gemischter Ausrichtung enthält.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Text innerhalb der <xref:System.Windows.Forms.RichTextBox>ausgerichtet wird. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`dem Formular hinzugefügt wurde.  
  
 [!code-cpp[RichTextBox.SelectionAlignment#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionAlignment/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionAlignment#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionAlignment/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionAlignment#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionAlignment/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Wert ist keiner der in der <see cref="T:System.Windows.Forms.HorizontalAlignment" />-Klasse definierten Werte.</exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
      </Docs>
    </Member>
    <Member MemberName="SelectionBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Textfarbe ab oder legt die Textfarbe fest, die verwendet wird, wenn Text in einem <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement ausgewählt ist.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Textfarbe darstellt, wenn der Text ausgewählt wird. Der Standardwert ist der Wert der <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />-Eigenschaft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Windows.Forms.RichTextBox.SelectionBackColor%2A>, um die Farbe von ausgewähltem Text im <xref:System.Windows.Forms.RichTextBox>zu erhalten oder festzulegen. Wenn derzeit kein Text ausgewählt ist, wird die <xref:System.Windows.Forms.RichTextBox.SelectionBackColor%2A>-Eigenschaft auf die aktuelle Position der Einfügemarke angewendet. Zeichen, die an dieser Position eingegeben werden, haben die angegebene <xref:System.Windows.Forms.RichTextBox.SelectionBackColor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBullet">
      <MemberSignature Language="C#" Value="public bool SelectionBullet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectionBullet" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionBullet" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBullet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectionBullet { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBullet : bool with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionBullet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Aufzählungssymbolstil auf die aktuelle Auswahl oder Einfügemarke angewendet wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Aufzählungssymbolstil auf die aktuelle Auswahl oder Einfügemarke angewendet wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn kein Text ausgewählt ist, wird der Aufzählungs Zeichenstil auf die aktuelle Einfügemarke und auf alle Absätze angewendet, die der Benutzer nach der Einfügemarke eingibt. Der Aufzählungs Zeichenstil wird auf den Text des Steuer Elements angewendet, bis die Einfügemarke verschoben wird oder wenn der Benutzer die Eingabetaste auf ein leeres Aufzählungs Element drückt.  
  
 Wenn Text im-Steuerelement ausgewählt wird, wenn diese Eigenschaft festgelegt ist, werden alle Absätze innerhalb des ausgewählten Texts in aufgeschachtelte Elemente in der Auflistungs Liste konvertiert. Sie können diese Eigenschaft verwenden, um aufzurufene Listen innerhalb der Dokumente zu erstellen, die Sie im <xref:System.Windows.Forms.RichTextBox> Steuerelement erstellen.  
  
 Mit der <xref:System.Windows.Forms.RichTextBox.BulletIndent%2A>-Eigenschaft können Sie angeben, wie viel Einzug zwischen dem Aufzählungs Zeichen und dem Text des Aufzählungs Elements angewendet werden soll.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.RichTextBox.SelectionBullet%2A>-Eigenschaft mit den Eigenschaften <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>, <xref:System.Windows.Forms.RichTextBox.SelectedText%2A>und <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A> verwendet wird, um eine Auflistungs Liste in einem <xref:System.Windows.Forms.RichTextBox>-Steuerelement zu erstellen. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1` in einem Formular erstellt wird.  
  
 [!code-cpp[RichTextBox.SelectionBullet#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionBullet#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionBullet/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionBullet#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionBullet/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.BulletIndent" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich die Textauswahl im Steuerelement geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen Ereignishandler für dieses Ereignis erstellen, um zu bestimmen, wann der Benutzer die Textauswahl im Steuerelement geändert hat. Ein Ereignishandler für dieses Ereignis kann verwendet werden, um den Text so lange ausgewählt zu lassen, bis der Benutzer eine Aufgabe innerhalb der Anwendung abgeschlossen hat.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.RichTextBox.SelectionChanged> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.RichTextBox> mit dem Namen `RichTextBox1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.RichTextBox.SelectionChanged>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#544](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#544)]
 [!code-vb[System.Windows.Forms.EventExamples#544](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#544)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionCharOffset">
      <MemberSignature Language="C#" Value="public int SelectionCharOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionCharOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionCharOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionCharOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionCharOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionCharOffset : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionCharOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob der Text im Steuerelement auf der Baseline, hochgestellt oder tiefergestellt unterhalb der Basislinie angezeigt wird, oder legt diesen fest.</summary>
        <value>Eine Zahl, die den Zeichenversatz angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert dieser Eigenschaft muss zwischen-2000 und 2000 liegen.  
  
 Wenn diese Eigenschaft auf 0 (null) festgelegt ist, wird der Text in der Baseline angezeigt. Wenn es sich um eine positive Zahl handelt, gibt die Zahl die Anzahl der Pixel an, um die die Textauswahl oberhalb der Baseline erhöht werden soll. Wenn es sich um eine negative Zahl handelt, gibt diese Zahl die Anzahl der Pixel an, nach der die Textauswahl festgelegt wird. Sie können diese Eigenschaft verwenden, um Text als hoch gestellt anzugeben oder zu abonnieren.  
  
 Wenn kein Text ausgewählt ist, wird der Offset auf die aktuelle Einfügemarke und auf den gesamten Text angewendet, den der Benutzer nach der Einfügemarke eingibt. Der Zeichen Offset wird erst angewendet, wenn die-Eigenschaft in einen anderen Wert geändert wird oder bis die Einfügemarke in einen anderen Abschnitt innerhalb des-Steuer Elements verschoben wird.  
  
 Wenn im Steuerelement Text ausgewählt ist, wird für den ausgewählten Text und für jeden Text, der nach der Textauswahl eingegeben wird, der Wert dieser Eigenschaft angewendet. Sie können diese Eigenschaft verwenden, um hoch gestellt zu erstellen und Text für solche Anwendungen als mathematische Ausdrücke zu indizieren.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Windows.Forms.RichTextBox.SelectionCharOffset%2A>-Eigenschaft hoch gestellt und Index Text in der <xref:System.Windows.Forms.RichTextBox> angeben. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`dem Formular hinzugefügt wurde.  
  
 [!code-cpp[RichTextBox.SelectionCharOffset#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionCharOffset/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionCharOffset#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionCharOffset/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionCharOffset#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionCharOffset/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der angegebene Wert ist kleiner als -2000 oder größer als 2000.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Textfarbe der aktuellen Textauswahl oder der aktuellen Einfügemarke ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Color" />, die die Farbe darstellt, die auf die aktuelle Textauswahl oder auf den nach der Einfügemarke eingegebenen Text angewendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn für die aktuelle Textauswahl mehr als eine Farbe angegeben ist, gibt diese Eigenschaft `Color.Empty`zurück. Wenn derzeit kein Text ausgewählt ist, wird die in dieser Eigenschaft angegebene Textfarbe auf die aktuelle Einfügemarke und auf den gesamten Text angewendet, der nach der Einfügemarke in das Steuerelement eingegeben wird. Die Einstellung für die Textfarbe gilt, bis die Eigenschaft in eine andere Farbe geändert wird oder bis die Einfügemarke in einen anderen Abschnitt innerhalb des Steuer Elements verschoben wird.  
  
 Wenn im Steuerelement Text ausgewählt ist, wird für den ausgewählten Text und für jeden Text, der nach der Textauswahl eingegeben wird, der Wert dieser Eigenschaft angewendet. Sie können diese Eigenschaft verwenden, um die Textfarbe in der <xref:System.Windows.Forms.RichTextBox>zu ändern.  
  
 Um den Text im Steuerelement Fett zu formatieren, verwenden Sie die <xref:System.Windows.Forms.RichTextBox.SelectionFont%2A>-Eigenschaft, um eine neue Schriftart zuzuweisen, für die das Fett formatierte Schriftformat angegeben ist  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird dem Benutzer eine <xref:System.Windows.Forms.ColorDialog> angezeigt, um eine Farbe für die aktuelle Textauswahl oder den Text anzugeben, der nach der aktuellen Einfügemarke in einem <xref:System.Windows.Forms.RichTextBox> Steuerelement eingegeben wurde. Dieses Beispiel setzt voraus, dass die im Beispiel definierte-Methode zu einer <xref:System.Windows.Forms.Form>-Klasse hinzugefügt wird, die ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`enthält.  
  
 [!code-cpp[Classic RichTextBox.SelectionColor Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SelectionColor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SelectionColor Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SelectionColor Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SelectionColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SelectionColor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionFont" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font SelectionFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font SelectionFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionFont" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ SelectionFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schriftart der aktuellen Textauswahl oder Einfügemarke ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Drawing.Font" />, der die Schriftart darstellt, die auf die aktuelle Textauswahl oder auf den nach der Einfügemarke eingegebenen Text angewendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn für die aktuelle Textauswahl mehr als eine Schriftart angegeben ist, wird diese Eigenschaft `null`. Wenn derzeit kein Text ausgewählt ist, wird die in dieser Eigenschaft angegebene Schriftart auf die aktuelle Einfügemarke und auf den gesamten Text angewendet, der nach der Einfügemarke in das Steuerelement eingegeben wird. Die Schriftart Einstellung wird erst angewendet, wenn die-Eigenschaft in eine andere Schriftart geändert wird oder bis die Einfügemarke in einen anderen Abschnitt innerhalb des-Steuer Elements verschoben wird.  
  
 Wenn im Steuerelement Text ausgewählt ist, wird für den ausgewählten Text und für jeden Text, der nach der Textauswahl eingegeben wird, der Wert dieser Eigenschaft angewendet. Sie können diese Eigenschaft verwenden, um den Schriftart Text in der <xref:System.Windows.Forms.RichTextBox>zu ändern. Sie können den Text im-Steuerelement fett formatieren, kursiv formatieren und unterstrichen machen. Sie können auch die Größe des Texts und die Schriftart ändern, die auf den Text angewendet wird.  
  
 Verwenden Sie die <xref:System.Windows.Forms.RichTextBox.SelectionColor%2A>-Eigenschaft, um die Farbe des Texts im-Steuerelement zu ändern.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die aktuelle Schriftart fett Formatierungs Einstellung für die Textauswahl oder Text, der nach der Einfügemarke im <xref:System.Windows.Forms.RichTextBox> Steuerelement eingegeben wurde, geändert. Für dieses Beispiel ist es erforderlich, dass der Code in einer Methode in einer <xref:System.Windows.Forms.Form>enthalten ist. Das Beispiel erfordert auch, dass der <xref:System.Windows.Forms.Form>eine <xref:System.Windows.Forms.RichTextBox>mit dem Namen `richTextBox1`hinzugefügt wurde.  
  
 [!code-cpp[Classic RichTextBox.SelectionFont Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RichTextBox.SelectionFont Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RichTextBox.SelectionFont Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RichTextBox.SelectionFont Example/CS/source.cs#1)]
 [!code-vb[Classic RichTextBox.SelectionFont Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RichTextBox.SelectionFont Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionColor" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionHangingIndent">
      <MemberSignature Language="C#" Value="public int SelectionHangingIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionHangingIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionHangingIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionHangingIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionHangingIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionHangingIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionHangingIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen dem linken Rand der ersten Textzeile des markierten Absatzes und dem linken Rand nachfolgender Zeilen in demselben Absatz ab oder legt diesen fest.</summary>
        <value>Der Abstand für den hängenden Einzug, der auf die aktuelle Textauswahl oder Einfügemarke angewendet wird (in Pixel).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn derzeit kein Text ausgewählt ist, wird der hängende Einzug auf den Absatz angewendet, in dem die Einfügemarke angezeigt wird, und auf den gesamten Text, der nach der Einfügemarke in das Steuerelement eingegeben wird. Die Einstellung für den hängenden Einzug gilt, bis die-Eigenschaft in einen anderen Wert geändert wird oder bis die Einfügemarke in einen anderen Absatz innerhalb des-Steuer Elements verschoben wird.  
  
 Wenn im Steuerelement Text ausgewählt ist, wird für den ausgewählten Text und für jeden Text, der nach der Textauswahl eingegeben wird, der Wert dieser Eigenschaft angewendet. Mit dieser Eigenschaft können Sie einen hängenden Einzug auf Ihre Absätze anwenden.  
  
 Verwenden Sie die <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A>-Eigenschaft, um die Einzugs der ersten Zeile einer Absatz Auswahl festzulegen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A>-Eigenschaft Hängende Einzüge innerhalb des <xref:System.Windows.Forms.RichTextBox> angegeben werden. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`dem Formular hinzugefügt wurde.  
  
 [!code-cpp[RichTextBox.SelectionHangingIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionHangingIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionHangingIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionHangingIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionHangingIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionHangingIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionIndent" />
      </Docs>
    </Member>
    <Member MemberName="SelectionIndent">
      <MemberSignature Language="C#" Value="public int SelectionIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Für Abruf oder Festlegung der Länge (in Pixeln) des Einzugs der ersten Zeile der Auswahl.</summary>
        <value>Der aktuelle Abstand des Einzugs, der auf den linken Rand der aktuellen Textauswahl oder Einfügemarke angewendet wird, in Pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn derzeit kein Text ausgewählt ist, wird die Einzugs Einstellung auf den Absatz angewendet, in dem die Einfügemarke angezeigt wird, und auf den gesamten Text, der nach der Einfügemarke in das Steuerelement eingegeben wird. Die Einzugs Einstellung wird erst angewendet, wenn die-Eigenschaft in einen anderen Wert geändert wird oder bis die Einfügemarke in einen anderen Absatz innerhalb des-Steuer Elements verschoben wird.  
  
 Wenn im Steuerelement Text ausgewählt ist, wird für den ausgewählten Text und für jeden Text, der nach der Textauswahl eingegeben wird, der Wert dieser Eigenschaft angewendet. Sie können diese Eigenschaft verwenden, um die im Dokument der <xref:System.Windows.Forms.RichTextBox>enthaltenen Absätze einzugeben. Sie können diese Eigenschaft in Verbindung mit dem <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A> verwenden, um in Absätzen angezeigte Absätze zu erstellen.  
  
 Um einen hängenden Einzug für Absätze im-Steuerelement zu erstellen, verwenden Sie die <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eingerückt Text innerhalb der <xref:System.Windows.Forms.RichTextBox> mit der <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A>-Eigenschaft angeben. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`dem Formular hinzugefügt wurde.  
  
 [!code-cpp[RichTextBox.SelectionIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionRightIndent" />
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectionHangingIndent" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public override int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der im Steuerelement markierten Zeichen ab oder legt diese fest.</summary>
        <value>Die Anzahl der markierten Zeichen im Textfeld.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie feststellen, ob im Textfeld-Steuerelement momentan Zeichen ausgewählt sind, bevor Sie Vorgänge für den ausgewählten Text ausführen. Sie können diese Eigenschaft auch verwenden, um die Gesamtzahl der Zeichen (einschließlich Leerzeichen) zu bestimmen, die beim Ausführen von Aufgaben mit einem einzelnen Zeichen in einer `for` Schleife ausgewählt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Forms.RichTextBox.SelectionLength%2A>-Eigenschaft verwendet wird, um zu bestimmen, ob im <xref:System.Windows.Forms.RichTextBox>Text ausgewählt ist. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`dem Formular hinzugefügt wurde. Das Beispiel erfordert auch, dass `richTextBox1` Text enthält, der im-Steuerelement ausgewählt ist.  
  
 [!code-cpp[RichTextBox.SelectionLength#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionLength/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionLength#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionLength/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionLength#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionLength/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionProtected">
      <MemberSignature Language="C#" Value="public bool SelectionProtected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectionProtected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionProtected" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionProtected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectionProtected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionProtected : bool with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionProtected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die aktuelle Textauswahl geschützt ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die aktuelle Auswahl Änderungen am Inhalt verhindert, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn derzeit kein Text ausgewählt ist, wird die Schutz Einstellung auf den Absatz angewendet, in dem die Einfügemarke angezeigt wird, und auf den gesamten Text, der nach der Einfügemarke in das Steuerelement eingegeben wird. Die Schutz Einstellung wird erst angewendet, wenn die-Eigenschaft in einen anderen Wert geändert wird oder bis die Einfügemarke in einen anderen Absatz innerhalb des-Steuer Elements verschoben wird.  
  
 Wenn im Steuerelement Text ausgewählt ist, wird für den ausgewählten Text und für jeden Text, der nach der Textauswahl eingegeben wird, der Wert dieser Eigenschaft angewendet. Sie können diese Eigenschaft verwenden, um zu verhindern, dass der Benutzer Textabschnitte im Steuerelement ändert.  
  
 Wenn diese Eigenschaft auf `true`festgelegt ist, wird das <xref:System.Windows.Forms.RichTextBox.Protected>-Ereignis ausgelöst, wenn der Benutzer versucht, die aktuelle Textauswahl zu ändern.  
  
> [!NOTE]
>  Diese Eigenschaft gibt `true` nur dann zurück, wenn die gesamte Auswahl im Steuerelement geschützten Inhalt enthält.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie geschützter Text innerhalb der <xref:System.Windows.Forms.RichTextBox> mit der <xref:System.Windows.Forms.RichTextBox.SelectionProtected%2A>-Eigenschaft angegeben wird. Dieses Beispiel setzt voraus, dass ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`dem Formular hinzugefügt wurde und dass dem <xref:System.Windows.Forms.RichTextBox> Steuerelement Text hinzugefügt wurde, der das Wort "RichTextBox" enthält.  
  
 [!code-cpp[RichTextBox.SelectionProtected#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionProtected/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionProtected#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionProtected/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionProtected#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionProtected/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.RichTextBox.Protected" />
      </Docs>
    </Member>
    <Member MemberName="SelectionRightIndent">
      <MemberSignature Language="C#" Value="public int SelectionRightIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionRightIndent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionRightIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionRightIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionRightIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionRightIndent : int with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionRightIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Abstand zwischen dem rechten Rand des <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelements und dem rechten Rand des markierten oder an der aktuellen Einfügemarke hinzugefügten Texts in Pixel.</summary>
        <value>Die Größe des Einzugs am rechten Rand der aktuellen Auswahl oder Einfügemarke in Pixel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn derzeit kein Text ausgewählt ist, wird die Einzugs Einstellung auf den Absatz angewendet, in dem die Einfügemarke angezeigt wird, und auf den gesamten Text, der nach der Einfügemarke in das Steuerelement eingegeben wird. Die Einzugs Einstellung wird erst angewendet, wenn die-Eigenschaft in einen anderen Wert geändert wird oder bis die Einfügemarke in einen anderen Absatz innerhalb des-Steuer Elements verschoben wird.  
  
 Wenn im Steuerelement Text ausgewählt ist, wird für den ausgewählten Text und für jeden Text, der nach der Textauswahl eingegeben wird, der Wert dieser Eigenschaft angewendet. Sie können diese Eigenschaft verwenden, um die im Dokument der <xref:System.Windows.Forms.RichTextBox>enthaltenen Absätze einzugeben. Sie können diese Eigenschaft in Verbindung mit dem <xref:System.Windows.Forms.RichTextBox.SelectionIndent%2A> verwenden, um in Absätzen angezeigte Absätze zu erstellen.  
  
 Um einen hängenden Einzug für Absätze im-Steuerelement zu erstellen, verwenden Sie die <xref:System.Windows.Forms.RichTextBox.SelectionHangingIndent%2A>-Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein rechter Rand in einem <xref:System.Windows.Forms.RichTextBox> mithilfe der <xref:System.Windows.Forms.RichTextBox.SelectionRightIndent%2A>-Eigenschaft erstellt wird. Für das Beispiel ist es erforderlich, dass Sie über ein Formular verfügen, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`enthält, und dass der Beispielcode von einem Ereignis innerhalb der Klasse des Formulars aufgerufen wird.  
  
 [!code-cpp[RichTextBox.SelectionRightIndent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.SelectionRightIndent/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.SelectionRightIndent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.SelectionRightIndent/CS/form1.cs#1)]
 [!code-vb[RichTextBox.SelectionRightIndent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.SelectionRightIndent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionTabs">
      <MemberSignature Language="C#" Value="public int[] SelectionTabs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] SelectionTabs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionTabs" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionTabs As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ SelectionTabs { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionTabs : int[] with get, set" Usage="System.Windows.Forms.RichTextBox.SelectionTabs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die absoluten Positionen der Tabstopps in einem <see cref="T:System.Windows.Forms.RichTextBox" />-Steuerelement ab oder legt diese fest.</summary>
        <value>Ein Array, in dem jeder Member einen Tabstoppoffset in Pixel angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie ein Array abrufen, das den Abstand für jede Registerkarte in der aktuellen Textauswahl im <xref:System.Windows.Forms.RichTextBox> Steuerelement enthält. Anschließend können Sie diese Eigenschaft verwenden, um die Größe der einzelnen Registerkarten innerhalb der Textauswahl anzupassen. Wenn Sie z. b. den Tabstopp Bereich innerhalb des Dokuments anpassen möchten, können Sie das gesamte Dokument auswählen und die Liste der Tabstopps mithilfe der <xref:System.Windows.Forms.RichTextBox.SelectionTabs%2A>-Eigenschaft abrufen. Anschließend können Sie Sie an neue Werte anpassen und diese Eigenschaft erneut zuweisen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Das Array weist mehr als die maximal zulässigen 32 Elemente auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.RichTextBoxSelectionTypes SelectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RichTextBoxSelectionTypes SelectionType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.SelectionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionType As RichTextBoxSelectionTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::RichTextBoxSelectionTypes SelectionType { System::Windows::Forms::RichTextBoxSelectionTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionType : System.Windows.Forms.RichTextBoxSelectionTypes" Usage="System.Windows.Forms.RichTextBox.SelectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RichTextBoxSelectionTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Auswahltyp im Steuerelement ab.</summary>
        <value>Eine bitweise Kombination der <see cref="T:System.Windows.Forms.RichTextBoxSelectionTypes" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um den Datentyp zu bestimmen, der derzeit im-Steuerelement ausgewählt ist, um die Auswahl beim Ausführen von Aufgaben innerhalb des Steuer Elements für die aktuelle Auswahl ordnungsgemäß zu verarbeiten. Die-Eigenschaft kann eine beliebige Kombination von Werten aus der <xref:System.Windows.Forms.RichTextBoxSelectionTypes>-Enumeration darstellen, die die vielen Typen von Objekten in der aktuellen Auswahl darstellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.RichTextBox.SelectedRtf" />
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionMargin">
      <MemberSignature Language="C#" Value="public bool ShowSelectionMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ShowSelectionMargin" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionMargin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionMargin { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowSelectionMargin : bool with get, set" Usage="System.Windows.Forms.RichTextBox.ShowSelectionMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob in der <see cref="T:System.Windows.Forms.RichTextBox" /> ein Auswahlrand angezeigt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn ein Auswahlrand im Steuerelement aktiviert ist, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Eigenschaft können Sie es dem Benutzer ermöglichen, Textzeilen im <xref:System.Windows.Forms.RichTextBox>einfach auszuwählen. Der Auswahl Rand wird auf der linken Seite der <xref:System.Windows.Forms.RichTextBox>hinzugefügt. Dieser Rand erleichtert dem Benutzer die Auswahl von Text, beginnend auf der linken Seite des Steuer Elements. Der Benutzer kann auf den Auswahl Rand klicken, um eine einzelne Textzeile auszuwählen, oder doppelklicken, um den gesamten Absatz auszuwählen, in dem die in der Zeile doppelt angeklickte Zeile enthalten ist.  
  
> [!NOTE]
>  Wenn die <xref:System.Windows.Forms.RichTextBox.ShowSelectionMargin%2A>-Eigenschaft auf `true`festgelegt ist, werden beim Festlegen der <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A>-Eigenschaft auf `RichTextBoxScrollBars.Horizontal`, `RichTextBoxScrollBars.Vertical`oder `RichTextBoxScrollBars.Both` keine Schiebe leisten angezeigt. Um Bild Lauf leisten anzuzeigen, während die <xref:System.Windows.Forms.RichTextBox.ShowSelectionMargin%2A>-Eigenschaft auf `true`festgelegt ist, legen Sie die Eigenschaft <xref:System.Windows.Forms.RichTextBox.ScrollBars%2A> auf `RichTextBoxScrollBars.ForcedHorizontal`, `RichTextBoxScrollBars.ForcedVertical`oder `RichTextBoxScrollBars.ForcedBoth`fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.RichTextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Text in der RichTextBox ab oder legt diesen fest.</summary>
        <value>Der im Steuerelement angezeigte Text.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie mehrere Textzeilen in einem <xref:System.Windows.Forms.RichTextBox>anzeigen möchten, legen Sie die Eigenschaft <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> auf `true`fest. Um den Text eines mehrzeiligen Textfelds zu lesen oder festzulegen, verwenden Sie die <xref:System.Windows.Forms.TextBoxBase.Lines%2A>-Eigenschaft. Die <xref:System.Windows.Forms.RichTextBox.Text%2A>-Eigenschaft gibt keine Informationen über die auf den Inhalt des <xref:System.Windows.Forms.RichTextBox>angewendete Formatierung zurück. Um die RTF-Codes (Rich Textformatierung) zu erhalten, verwenden Sie die <xref:System.Windows.Forms.RichTextBox.Rtf%2A>-Eigenschaft. Der Text, der im <xref:System.Windows.Forms.RichTextBox> Steuerelement eingegeben werden kann, ist nur durch den verfügbaren System Arbeitsspeicher beschränkt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public override int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.RichTextBox.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Länge des Texts im Steuerelement ab.</summary>
        <value>Die Anzahl der Zeichen im Text des Steuerelements.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
      </Docs>
    </Member>
    <Member MemberName="UndoActionName">
      <MemberSignature Language="C#" Value="public string UndoActionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UndoActionName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.UndoActionName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UndoActionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UndoActionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoActionName : string" Usage="System.Windows.Forms.RichTextBox.UndoActionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Aktion ab, die bei Aufruf der <see cref="M:System.Windows.Forms.TextBoxBase.Undo" />-Methode im Steuerelement rückgängig gemacht werden kann.</summary>
        <value>Der Textname der Aktion, die rückgängig gemacht werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ermöglicht es Ihnen, die letzte Aktion zu bestimmen, die im Steuerelement ausgeführt wurde, das rückgängig gemacht werden kann. Sie können diese Eigenschaft verwenden, um die Vorgänge einzuschränken, die vom Benutzer des Steuer Elements rückgängig gemacht werden können.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="VScroll">
      <MemberSignature Language="C#" Value="public event EventHandler VScroll;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VScroll" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.RichTextBox.VScroll" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VScroll As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VScroll;" />
      <MemberSignature Language="F#" Value="member this.VScroll : EventHandler " Usage="member this.VScroll : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Benutzer auf die vertikalen Schiebeleisten des Steuerelements klickt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung dieses Members veranschaulicht. Im Beispiel meldet ein Ereignishandler das Vorkommen des <xref:System.Windows.Forms.RichTextBox.VScroll> Ereignisses. Mit diesem Bericht können Sie lernen, wann das Ereignis auftritt und Sie beim Debuggen unterstützen können. Wenn Sie mehrere Ereignisse oder Ereignisse, die häufig auftreten, melden möchten, können Sie <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> durch <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ersetzen oder die Nachricht an eine mehrzeilige <xref:System.Windows.Forms.TextBox>anhängen.  
  
 Um den Beispielcode auszuführen, fügen Sie ihn in ein Projekt ein, das eine Instanz des Typs <xref:System.Windows.Forms.RichTextBox> mit dem Namen `RichTextBox1`enthält. Stellen Sie dann sicher, dass der Ereignishandler dem <xref:System.Windows.Forms.RichTextBox.VScroll>-Ereignis zugeordnet ist.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#545](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#545)]
 [!code-vb[System.Windows.Forms.EventExamples#545](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#545)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.RichTextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="richTextBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Ein Windows-Meldungsobjekt.</param>
        <summary>Verarbeitet Windows-Meldungen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomFactor">
      <MemberSignature Language="C#" Value="public float ZoomFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ZoomFactor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.RichTextBox.ZoomFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property ZoomFactor As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ZoomFactor { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ZoomFactor : single with get, set" Usage="System.Windows.Forms.RichTextBox.ZoomFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Zoomfaktor der <see cref="T:System.Windows.Forms.RichTextBox" /> ab oder legt diesen fest.</summary>
        <value>Der Faktor, um den für den Inhalt des Steuerelements ein Zoom durchgeführt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert dieser Eigenschaft kann zwischen 1/64 (0,015625) und 64,0 (nicht inklusiv) liegen. Der Wert 1,0 gibt an, dass kein Zoom auf das Steuerelement angewendet wird. Die Zoomfunktion wird optimal durchführt, wenn das Dokument TrueType-Schriftarten enthält. Wenn eine Schriftart, die nicht TrueType ist, innerhalb des Dokuments des Steuer Elements verwendet wird, verwendet die <xref:System.Windows.Forms.RichTextBox.ZoomFactor%2A>-Eigenschaft den nächstgelegenen ganzzahligen Wert. Sie können diese Eigenschaft verwenden, um es dem Benutzer des <xref:System.Windows.Forms.RichTextBox>-Steuer Elements zu ermöglichen, die Abschnitte der Dokumentation zu vergrößern, die zu klein sind, um die Ansicht anzuzeigen oder die Ansicht zu verscheinigen, damit das Dokument auf dem Bildschirm angezeigt werden kann.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Windows.Forms.RichTextBox> erstellt wird, mit dem Text vergrößert wird, automatisch Wörter im Text des-Steuer Elements ausgewählt werden, wenn auf ein Wort Doppel geklickt wird und ein Rand auf der rechten Seite des Client Bereichs des Steuer Elements angezeigt wird. Wenn das <xref:System.Windows.Forms.RichTextBox> Steuerelement eine kleine Breite hat, wird mit diesem Code ein <xref:System.Windows.Forms.RichTextBox> erstellt, in dem jedes Textzeichen in einer eigenen Zeile angezeigt wird. Wenn Sie in dieser vertikalen Anzeigeposition auf einen beliebigen Teil eines Worts klicken, werden alle Zeichen des Worts unabhängig von der Tatsache ausgewählt, dass der Text vertikal angezeigt wird. Dieses Beispiel erfordert, dass Sie über ein Formular verfügen, das ein <xref:System.Windows.Forms.RichTextBox>-Steuerelement mit dem Namen `richTextBox1`enthält.  
  
 [!code-cpp[RichTextBox.ZoomFactor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CPP/form1.cpp#1)]
 [!code-csharp[RichTextBox.ZoomFactor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextBox.ZoomFactor/CS/form1.cs#1)]
 [!code-vb[RichTextBox.ZoomFactor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextBox.ZoomFactor/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der angegebene Zoomfaktor liegt nicht im zulässigen Bereich.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
