<Type Name="ServiceSecurityAuditBehavior" FullName="System.ServiceModel.Description.ServiceSecurityAuditBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c79f5395b2089da194167d9f9570c36899a31483" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53298905" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceSecurityAuditBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceSecurityAuditBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceSecurityAuditBehavior" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceSecurityAuditBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceSecurityAuditBehavior sealed : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceSecurityAuditBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Legt das Überwachungsverhalten für Sicherheitsereignisse fest. Im Allgemeinen bestehen die Sicherheitsereignisse aus Authentifizierungsereignissen wie Transport, Nachricht oder Negotiate-Authentifizierung und Autorisierungsereignis. Weitere Informationen finden Sie unter <see cref="T:System.ServiceModel.ServiceAuthorizationManager" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior> Klasse wird zum Überwachen von Ereignissen für Windows Communication Foundation (WCF)-Authentifizierung verwendet. Ist die Überwachung aktiviert, können entweder erfolgreiche oder fehlgeschlagene Authentifizierungsversuche (oder beides) überwacht werden. Die Ereignisse werden in eines der drei Ereignisprotokolle geschrieben: das Anwendungs-, Sicherheits- oder Standardprotokoll für die Betriebssystemversion. Die Ereignisprotokolle können alle mit der Windows-Ereignisanzeige angezeigt werden.  
  
 Geben Sie mithilfe dieser Klasse an, in welches Ereignisprotokoll geschrieben werden soll sowie welche Arten von Authentifizierungsereignissen geschrieben werden sollen. Sie können auch angeben, ob Überwachungsfehler unterdrückt werden sollen, indem Sie die <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.SuppressAuditFailure%2A>-Eigenschaft auf `false` festlegen (die Standardeinstellung ist `true`).  
  
 Weitere Informationen zur Überwachung von Sicherheitsereignissen für WCF-Anwendungen finden Sie unter [Überwachung](~/docs/framework/wcf/feature-details/auditing-security-events.md).  
  
 Verwenden Sie zum Angeben von Überwachungsverhalten in der Konfiguration der [ &lt;ServiceSecurityAudit&gt;](~/docs/framework/configure-apps/file-schema/wcf/servicesecurityaudit.md).  
  
   
  
## Examples  
 Mithilfe des folgenden Codes wird eine Instanz der <xref:System.ServiceModel.ServiceHost>-Klasse erstellt, und der Verhaltensauflistung wird ein neues <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior> hinzugefügt.  
  
 [!code-csharp[AuditingSecurityEvents#1](~/samples/snippets/csharp/VS_Snippets_CFX/auditingsecurityevents/cs/auditingsecurityevents.cs#1)]
 [!code-vb[AuditingSecurityEvents#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/auditingsecurityevents/vb/auditingsecurityevents.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityAuditBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityAuditBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ServiceSecurityAuditBehavior" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Instanz wird mit den folgenden Standardeinstellungen erstellt:  
  
-   <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.AuditLogLocation%2A> = <xref:System.ServiceModel.AuditLogLocation.Default>;  
  
-   <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.SuppressAuditFailure%2A> = `true`;  
  
-   <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.ServiceAuthorizationAuditLevel%2A> = <xref:System.ServiceModel.AuditLevel.None>;  
  
-   <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.MessageAuthenticationAuditLevel%2A> = <xref:System.ServiceModel.AuditLevel.None>.  
  
   
  
## Examples  
 Der folgende Code erstellt eine Instanz der <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior>-Klasse.  
  
 [!code-csharp[AuditingSecurityEvents#2](~/samples/snippets/csharp/VS_Snippets_CFX/auditingsecurityevents/cs/auditingsecurityevents.cs#2)]
 [!code-vb[AuditingSecurityEvents#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/auditingsecurityevents/vb/auditingsecurityevents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditLogLocation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.AuditLogLocation AuditLogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.AuditLogLocation AuditLogLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.AuditLogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property AuditLogLocation As AuditLogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::AuditLogLocation AuditLogLocation { System::ServiceModel::AuditLogLocation get(); void set(System::ServiceModel::AuditLogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.AuditLogLocation : System.ServiceModel.AuditLogLocation with get, set" Usage="System.ServiceModel.Description.ServiceSecurityAuditBehavior.AuditLogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AuditLogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dient zum Abrufen oder Festlegen des Speicherorts, in den sicherheitsbezogene Ereignisprotokolle geschrieben werden.</summary>
        <value>Die <see cref="T:System.ServiceModel.AuditLogLocation" />. Der Standardwert ist <see cref="F:System.ServiceModel.AuditLogLocation.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um in `AuditLogLocation.Security` schreiben zu können, muss der ausgeführte Thread (oder Prozess) über `SeAuditPrivilege` verfügen.  
  
 Sie können auch festlegen, diesen Wert mithilfe der [ &lt;ServiceSecurityAudit&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicesecurityaudit.md) in einer Konfigurationsdatei der Clientanwendung.  
  
   
  
## Examples  
 Im folgenden Code wird eine Instanz der <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior>-Klasse erstellt und diese Eigenschaft festgelegt.  
  
 [!code-csharp[AuditingSecurityEvents#2](~/samples/snippets/csharp/VS_Snippets_CFX/auditingsecurityevents/cs/auditingsecurityevents.cs#2)]
 [!code-vb[AuditingSecurityEvents#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/auditingsecurityevents/vb/auditingsecurityevents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see langword="set" /> und <see langword="value" /> sind keine gültigen Member von <see cref="T:System.ServiceModel.AuditLogLocation" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MessageAuthenticationAuditLevel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.AuditLevel MessageAuthenticationAuditLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.AuditLevel MessageAuthenticationAuditLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.MessageAuthenticationAuditLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageAuthenticationAuditLevel As AuditLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::AuditLevel MessageAuthenticationAuditLevel { System::ServiceModel::AuditLevel get(); void set(System::ServiceModel::AuditLevel value); };" />
      <MemberSignature Language="F#" Value="member this.MessageAuthenticationAuditLevel : System.ServiceModel.AuditLevel with get, set" Usage="System.ServiceModel.Description.ServiceSecurityAuditBehavior.MessageAuthenticationAuditLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AuditLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der auf Nachrichtenebene zu überprüfenden Authentifizierungsereignisse ab oder legt ihn fest.</summary>
        <value>Einer der <see cref="T:System.ServiceModel.AuditLevel" />-Enumerationswerte. Der Standardwert ist <see cref="F:System.ServiceModel.AuditLevel.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Communication Foundation (WCF)-Service-Anwendungen haben zwei Ebenen, in denen Sicherheit erzwungen werden kann. Auf der *Service* Ebene werden alle Methoden des Diensts durch die gleichen Sicherheitsrichtlinien erzwungen. Für einzelne Methoden innerhalb des Diensts kann eine andere (strengere) Sicherheitsrichtlinie gelten. Mithilfe der <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.MessageAuthenticationAuditLevel%2A>-Eigenschaft können Sie steuern, welche Ereignisse auf Nachrichtenebene geprüft werden.  
  
 Sie können auch festlegen, diesen Wert mithilfe der [ &lt;ServiceSecurityAudit&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicesecurityaudit.md) in einer Konfigurationsdatei der Clientanwendung.  
  
   
  
## Examples  
 Im folgenden Code wird eine Instanz der <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior>-Klasse erstellt und diese Eigenschaft festgelegt.  
  
 [!code-csharp[AuditingSecurityEvents#3](~/samples/snippets/csharp/VS_Snippets_CFX/auditingsecurityevents/cs/auditingsecurityevents.cs#3)]
 [!code-vb[AuditingSecurityEvents#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/auditingsecurityevents/vb/auditingsecurityevents.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see langword="set" /> und <see langword="value" /> sind keine gültigen Member von <see cref="T:System.ServiceModel.AuditLevel" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceAuthorizationAuditLevel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.AuditLevel ServiceAuthorizationAuditLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.AuditLevel ServiceAuthorizationAuditLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.ServiceAuthorizationAuditLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceAuthorizationAuditLevel As AuditLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::AuditLevel ServiceAuthorizationAuditLevel { System::ServiceModel::AuditLevel get(); void set(System::ServiceModel::AuditLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceAuthorizationAuditLevel : System.ServiceModel.AuditLevel with get, set" Usage="System.ServiceModel.Description.ServiceSecurityAuditBehavior.ServiceAuthorizationAuditLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AuditLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ der auf Dienstebene zu überprüfenden Autorisierungsereignisse ab oder legt ihn fest.</summary>
        <value>Einer der <see cref="T:System.ServiceModel.AuditLevel" />-Enumerationswerte. Der Standardwert ist <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows Communication Foundation (WCF)-Service-Anwendungen haben zwei Ebenen, in denen Sicherheit erzwungen werden kann. Auf der *Service* Ebene werden alle Methoden des Diensts durch die gleichen Sicherheitsrichtlinien erzwungen. Für einzelne Methoden innerhalb des Diensts kann eine andere (strengere) Sicherheitsrichtlinie gelten. Mithilfe der <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior.ServiceAuthorizationAuditLevel%2A>-Eigenschaft können Sie steuern, welche Ereignisse auf Dienstebene geprüft werden.  
  
 Sie können auch festlegen, diesen Wert mithilfe der [ &lt;ServiceSecurityAudit&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicesecurityaudit.md) in einer Konfigurationsdatei der Clientanwendung.  
  
   
  
## Examples  
 Im folgenden Code wird eine Instanz der <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior>-Klasse erstellt und diese Eigenschaft festgelegt.  
  
 [!code-csharp[AuditingSecurityEvents#3](~/samples/snippets/csharp/VS_Snippets_CFX/auditingsecurityevents/cs/auditingsecurityevents.cs#3)]
 [!code-vb[AuditingSecurityEvents#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/auditingsecurityevents/vb/auditingsecurityevents.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see langword="set" /> und <see langword="value" /> sind keine gültigen Member von <see cref="T:System.ServiceModel.AuditLevel" />. Die Standardeinstellung ist <see cref="F:System.ServiceModel.AuditLevel.None" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SuppressAuditFailure">
      <MemberSignature Language="C#" Value="public bool SuppressAuditFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressAuditFailure" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceSecurityAuditBehavior.SuppressAuditFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressAuditFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressAuditFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressAuditFailure : bool with get, set" Usage="System.ServiceModel.Description.ServiceSecurityAuditBehavior.SuppressAuditFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hiermit wird ein Wert abgerufen oder festgelegt, der angibt, ob durch einen Überwachungsfehler die Anwendung beeinträchtigt wird.</summary>
        <value><see langword="true" />, wenn die Anwendung durch einen Überwachungsfehler nicht beeinträchtigt wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Falls die Eigenschaft den Wert `false` aufweist, wird durch Überwachungsfehler eine Ausnahme ausgelöst und die Benutzeranforderung schlägt fehl.  
  
 Sie können auch festlegen, diesen Wert mithilfe der [ &lt;ServiceSecurityAudit&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicesecurityaudit.md) in einer Konfigurationsdatei der Clientanwendung.  
  
   
  
## Examples  
 Im folgenden Code wird eine Instanz der <xref:System.ServiceModel.Description.ServiceSecurityAuditBehavior>-Klasse erstellt und diese Eigenschaft festgelegt.  
  
 [!code-csharp[AuditingSecurityEvents#4](~/samples/snippets/csharp/VS_Snippets_CFX/auditingsecurityevents/cs/auditingsecurityevents.cs#4)]
 [!code-vb[AuditingSecurityEvents#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/auditingsecurityevents/vb/auditingsecurityevents.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Der <see cref="T:System.ServiceModel.Description.ServiceDescription" /> des Diensts.</param>
        <param name="serviceHostBase">Der Host des Diensts.</param>
        <param name="endpoints">Die Dienstendpunkte.</param>
        <param name="parameters">Ein <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />.</param>
        <summary>Übergibt benutzerdefinierte Daten an Bindungselemente, um die Vertragsimplementierung zu unterstützen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um der `parameters`-Auflistung benutzerdefinierte Datenobjekte hinzuzufügen, mit der Bindungselemente zusätzliche Informationen zur Unterstützung des Vertrags abrufen können.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see langword="set" /> und <paramref name="parameters" /> sind <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Der <see cref="T:System.ServiceModel.Description.ServiceDescription" /> des Diensts.</param>
        <param name="serviceHostBase">Der Host des Diensts.</param>
        <summary>Stellt die Funktion zum Ausführen von Eigenschaftswerten zur Laufzeit oder zum Einfügen von benutzerdefinierten Erweiterungsobjekten, wie Fehlerhandler, Nachrichten- oder Parameterinterceptoren, Sicherheitserweiterungen und anderen benutzerdefinierten Erweiterungsobjekten, bereit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um das zu erstellende <xref:System.ServiceModel.ServiceHostBase>-Objekt zu prüfen oder zu ändern, damit benutzerdefinierte Ausführungsszenarien unterstützt werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" /> oder <paramref name="serviceHostBase" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceSecurityAuditBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Der <see cref="T:System.ServiceModel.Description.ServiceDescription" /> des Diensts.</param>
        <param name="serviceHostBase">Der Host des Diensts.</param>
        <summary>Nicht implementiert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>