<Type Name="IOperationBehavior" FullName="System.ServiceModel.Description.IOperationBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d2f195f38b2a9f71c444f7c1736f6ade9c35e8f8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70403586" /></Metadata><TypeSignature Language="C#" Value="public interface IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationBehavior" />
  <TypeSignature Language="F#" Value="type IOperationBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="36c59-101">Implementiert Methoden, die verwendet werden können, um das Laufzeitverhalten eines Vorgangs in einer Dienst- oder Clientanwendung zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="36c59-101">Implements methods that can be used to extend run-time behavior for an operation in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c59-102">Implementiert die <xref:System.ServiceModel.Description.IOperationBehavior>-Schnittstelle, um Aspekte der vorgangsweiten Ausführung auf Anwendungsebene für Client- oder Dienstanwendungen zu ändern, zu überprüfen oder zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="36c59-102">Implement the <xref:System.ServiceModel.Description.IOperationBehavior> interface to modify, examine, or extend some aspect of operation-wide execution at the application level for either client or service applications.</span></span>  
  
-   <span data-ttu-id="36c59-103">Verwenden Sie die <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A>-Methode, um benutzerdefinierte Daten zur Laufzeit zu übergeben, die bewirken, dass Bindungen benutzerdefiniertes Verhalten unterstützen.</span><span class="sxs-lookup"><span data-stu-id="36c59-103">Use the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to pass custom data at runtime to enable bindings to support custom behavior.</span></span>  
  
-   <span data-ttu-id="36c59-104">Verwenden Sie die <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A>-Methode, um in einer Clientanwendung Erweiterungen in einem Clientverteiler zu ändern, zu überprüfen oder hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="36c59-104">Use the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a client dispatcher in a client application.</span></span>  
  
-   <span data-ttu-id="36c59-105">Verwenden Sie die <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A>-Methode, um in einer Dienstanwendung Erweiterungen einer vorgangsweiten Ausführung zu ändern oder zu überprüfen oder hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="36c59-105">Use the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to operation-wide execution in a service application.</span></span>  
  
-   <span data-ttu-id="36c59-106">Verwenden Sie die <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A>-Methode, um zu prüfen, ob <xref:System.ServiceModel.Description.OperationDescription> bestimmte Anforderungen erfüllt.</span><span class="sxs-lookup"><span data-stu-id="36c59-106">Use the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method to confirm that a <xref:System.ServiceModel.Description.OperationDescription> meets specific requirements.</span></span> <span data-ttu-id="36c59-107">Dies kann zur Prüfung verwendet werden, ob für einen Vorgang eine bestimmte Konfigurationseinstellung aktiviert wurde und ob er bestimmte Funktionen und andere Anforderungen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="36c59-107">This can be used to ensure that an operation has a certain configuration setting enabled, supports a particular feature and other requirements.</span></span>  
  
 <span data-ttu-id="36c59-108"><xref:System.ServiceModel.Description.IOperationBehavior>-Objekte können jede dieser Methoden verwenden, aber häufig ist nur eine von Bedeutung. in solchen Fällen können die nicht verwendeten Methoden zurückgeben, sodass keine Aktion durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-108"><xref:System.ServiceModel.Description.IOperationBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36c59-109">Alle <xref:System.ServiceModel.Description.IOperationBehavior>-Methoden übergeben ein <xref:System.ServiceModel.Description.OperationDescription>-Objekt als Parameter.</span><span class="sxs-lookup"><span data-stu-id="36c59-109">All of the <xref:System.ServiceModel.Description.IOperationBehavior> methods pass an <xref:System.ServiceModel.Description.OperationDescription> object as a parameter.</span></span> <span data-ttu-id="36c59-110">Dieser Parameter dient nur für die Prüfung; wenn Sie das <xref:System.ServiceModel.Description.OperationDescription>-Objekt ändern, ist das Ausführungsverhalten nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="36c59-110">This parameter is for examination only; if you modify the <xref:System.ServiceModel.Description.OperationDescription> object the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="36c59-111"><xref:System.ServiceModel.Description.IOperationBehavior>-Objekte werden in der Regel verwendet, um auf die verschiedenen Eigenschaften der <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>-Objekte in einer Dienstanwendung und <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>-Objekte in einer Clientanwendung zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="36c59-111"><xref:System.ServiceModel.Description.IOperationBehavior> objects are typically used to access the various properties of the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> object in a service application and the <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> object in a client application.</span></span>  
  
 <span data-ttu-id="36c59-112">In der Regel prüft der Entwickler zunächst die Erweiterungspunkte, um zu ermitteln, welche Anpassungsoption am besten für das Anwendungsszenario geeignet ist, und implementiert dann die Anpassung im entsprechenden Bereich.</span><span class="sxs-lookup"><span data-stu-id="36c59-112">Typically, the developer first reviews the extensibility points to determine which customization option suits the application scenario and then implements the customization at the appropriate scope.</span></span> <span data-ttu-id="36c59-113"><xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>-Objekte können beispielsweise Anpassungen für alle Nachrichten in einem Dienst einfügen, und <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>-Objekte können Anpassungen für alle Nachrichten in einem bestimmen Vertrag einfügen und so weiter.</span><span class="sxs-lookup"><span data-stu-id="36c59-113">For example, <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> objects can insert customizations for all messages in an entire service and <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> objects can insert customizations for all messages across a specific contract, and so on.</span></span> <span data-ttu-id="36c59-114">Eine Beschreibung der verschiedenen verfügbaren Eigenschaften und Anpassungen finden Sie unter [Erweitern von Service Host und der Dienstmodell Ebene](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span><span class="sxs-lookup"><span data-stu-id="36c59-114">For a description of the various properties and customizations available, see [Extending ServiceHost and the Service Model Layer](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span></span>  
  
 <span data-ttu-id="36c59-115">Nachdem eine Anpassung festgelegt wurde (und die Anpassungs Schnittstelle bei Bedarf implementiert wurde) und der <xref:System.ServiceModel.Description.IOperationBehavior> geeignete Anpassungsbereich ist, muss die Anpassung in die Windows Communication Foundation (WCF)-Laufzeit eingefügt werden. durch Implementieren <xref:System.ServiceModel.Description.IOperationBehavior> von und Hinzufügen des Vorgangs Verhaltens zur Laufzeit.</span><span class="sxs-lookup"><span data-stu-id="36c59-115">Once a customization has been decided upon (and the customization interface implemented if necessary) and the <xref:System.ServiceModel.Description.IOperationBehavior> is the appropriate scope of customization, the customization must be inserted into the Windows Communication Foundation (WCF) runtime by implementing <xref:System.ServiceModel.Description.IOperationBehavior> and adding the operation behavior to the runtime.</span></span>  
  
 <span data-ttu-id="36c59-116">Es gibt zwei Möglichkeiten, <xref:System.ServiceModel.Description.IOperationBehavior> der Laufzeit hinzuzufügen:</span><span class="sxs-lookup"><span data-stu-id="36c59-116">There are two ways to add the <xref:System.ServiceModel.Description.IOperationBehavior> to the runtime:</span></span>  
  
-   <span data-ttu-id="36c59-117">Fügen Sie das benutzerdefinierte Vorgangsverhalten den <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType>-Eigenschaften vor dem Öffnen des Diensthosts (in einer Dienstanwendung) bzw. der Kanalfactory (in einer Clientanwendung) hinzu.</span><span class="sxs-lookup"><span data-stu-id="36c59-117">Programmatically add the custom operation behavior to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</span></span>  
  
-   <span data-ttu-id="36c59-118">Fügen Sie das Verhalten mit einem benutzerdefinierten Attribut hinzu.</span><span class="sxs-lookup"><span data-stu-id="36c59-118">Add the behavior using a custom attribute.</span></span>  
  
 <span data-ttu-id="36c59-119">Um eine Dienstanpassungsaufgabe auszuführen, muss das entsprechende <xref:System.ServiceModel.Description.IOperationBehavior>-Objekt der <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType>-Eigenschaft vor der Erstellung der Dienstlaufzeit hinzugefügt werden, was erfolgt, wenn die <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>-Methode für <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-119">To perform the service customization task for which it is intended, the <xref:System.ServiceModel.Description.IOperationBehavior> object must be added to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property prior to the construction of the service runtime, which occurs when <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36c59-120">Um eine Clientanpassungsaufgabe auszuführen, muss das <xref:System.ServiceModel.Description.IOperationBehavior>-Objekt der <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType>-Eigenschaft hinzugefügt werden, bevor die <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType>-Methode bzw. die <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>-Methode für <xref:System.ServiceModel.ChannelFactory%601> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-120">To perform a client customization task, the <xref:System.ServiceModel.Description.IOperationBehavior> object must be added to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property before calling the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> method or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on <xref:System.ServiceModel.ChannelFactory%601>.</span></span>  
  
 <span data-ttu-id="36c59-121">Obwohl das Vorgangsverhalten so konzipiert ist, dass im Rahmen eines einzelnes Vorgangs einfach auf die Laufzeit zugegriffen werden kann, haben Sie durch Zugriff auf das übergeordnete Laufzeitobjekt auch die Möglichkeit, in einem größeren Rahmen auf die Laufzeit zugreifen.</span><span class="sxs-lookup"><span data-stu-id="36c59-121">Although the operation behavior is designed for easy access to the runtime at the scope of an individual operation, you can access the runtime at a larger scope by accessing the parent runtime object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c59-122">Im folgenden Codebeispiel wird eine Implementierung von <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> veranschaulicht, mit der in die Konsole geschrieben werden kann, wenn der Inspektor bei einem Vorgang aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-122">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="36c59-123">Diese Anpassung kann nur an den <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> oder <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> angefügt werden und wird daher in der Regel durch ein Vorgangsverhalten eingefügt.</span><span class="sxs-lookup"><span data-stu-id="36c59-123">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="36c59-124">Das folgende Codebeispiel zeigt, wie der Parameterinspektor durch das Vorgangsverhalten an die Laufzeit angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-124">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iOperationBehavior.AddBindingParameters (operationDescription, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="36c59-125">Der Vorgang, der überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-125">The operation being examined.</span></span> <span data-ttu-id="36c59-126">Nur zu Prüfungszwecken zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="36c59-126">Use for examination only.</span></span> <span data-ttu-id="36c59-127">Wenn die Vorgangsbeschreibung geändert wird, sind die Ergebnisse nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="36c59-127">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="36c59-128">Die Auflistung von Objekten, die von Bindungselementen angefordert werden, um das Verhalten zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="36c59-128">The collection of objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="36c59-129">Wird implementiert, um Daten zur Laufzeit an Bindungen zu übergeben und damit benutzerdefiniertes Verhalten zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="36c59-129">Implement to pass data at runtime to bindings to support custom behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c59-130">Implementieren Sie die <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A>-Methode, um den Bindungselementen zusätzliche Objekte bereitzustellen, die sie zur Unterstützung des Vorgangsverhaltens benötigen.</span><span class="sxs-lookup"><span data-stu-id="36c59-130">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the operation behavior.</span></span> <span data-ttu-id="36c59-131">Wenn hier Bindungsparameter hinzugefügt werden, können diese Objekte beim Erstellen des Kanallisteners oder der Kanalfactory von der Bindung gefunden und verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="36c59-131">When binding parameters are added here, the binding can locate and process these objects when the channel listener or channel factory is created.</span></span> <span data-ttu-id="36c59-132">In der Regel implementieren Sie die <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A>-Methode, um Informationen zum Vorgang an ein benutzerdefiniertes Bindungselement zu übergeben, damit ein unterstützender Kanal korrekt erstellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="36c59-132">Typically, you implement the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to pass information about the operation to a custom binding element so that it can build a supporting channel correctly.</span></span> <span data-ttu-id="36c59-133">Geben Sie keinen Wert zurück, wenn keine Änderungen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="36c59-133">Return no value if no modifications are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.ClientOperation clientOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.ClientOperation clientOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Dispatcher::ClientOperation ^ clientOperation);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit" Usage="iOperationBehavior.ApplyClientBehavior (operationDescription, clientOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="clientOperation" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="36c59-134">Der Vorgang, der überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-134">The operation being examined.</span></span> <span data-ttu-id="36c59-135">Nur zu Prüfungszwecken zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="36c59-135">Use for examination only.</span></span> <span data-ttu-id="36c59-136">Wenn die Vorgangsbeschreibung geändert wird, sind die Ergebnisse nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="36c59-136">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="clientOperation"><span data-ttu-id="36c59-137">Das Laufzeitobjekt, das Anpassungseigenschaften für den von <paramref name="operationDescription" /> beschriebenen Vorgang verfügbar macht.</span><span class="sxs-lookup"><span data-stu-id="36c59-137">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</span></span></param>
        <summary><span data-ttu-id="36c59-138">Implementiert eine Änderung oder Erweiterung des Clients für einen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="36c59-138">Implements a modification or extension of the client across an operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c59-139">Implementieren Sie die <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A>-Methode, um in allen Nachrichten, die mit einem bestimmten Vorgang verwendet werden, eine benutzerdefinierte Erweiterung anzuzeigen, zu ändern oder hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="36c59-139">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method to view, modify, or add a custom extension to the client runtime across all messages used with a specific operation.</span></span> <span data-ttu-id="36c59-140">Ausführliche Informationen über Anpassungsmöglichkeiten bei Clientlaufzeitobjekten finden Sie unter <xref:System.ServiceModel.Dispatcher.ClientRuntime> und <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span><span class="sxs-lookup"><span data-stu-id="36c59-140">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="36c59-141">Die <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A>-Methode sollte <xref:System.NotImplementedException> auslösen, wenn das Verhalten nur zur Verwendung in einer Dienstanwendung vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="36c59-141">It is recommended that the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method throw a <xref:System.NotImplementedException> if the behavior is only intended for use in a service application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c59-142">Im folgenden Codebeispiel wird eine Implementierung von <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> veranschaulicht, mit der in die Konsole geschrieben werden kann, wenn der Inspektor bei einem Vorgang aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-142">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="36c59-143">Diese Anpassung kann nur an den <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> oder <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> angefügt werden und wird daher in der Regel durch ein Vorgangsverhalten eingefügt.</span><span class="sxs-lookup"><span data-stu-id="36c59-143">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="36c59-144">Das folgende Codebeispiel zeigt, wie der Parameterinspektor durch das Vorgangsverhalten an die Laufzeit angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-144">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatchOperation);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit" Usage="iOperationBehavior.ApplyDispatchBehavior (operationDescription, dispatchOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatchOperation" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="36c59-145">Der Vorgang, der überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-145">The operation being examined.</span></span> <span data-ttu-id="36c59-146">Nur zu Prüfungszwecken zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="36c59-146">Use for examination only.</span></span> <span data-ttu-id="36c59-147">Wenn die Vorgangsbeschreibung geändert wird, sind die Ergebnisse nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="36c59-147">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="dispatchOperation"><span data-ttu-id="36c59-148">Das Laufzeitobjekt, das Anpassungseigenschaften für den von <paramref name="operationDescription" /> beschriebenen Vorgang verfügbar macht.</span><span class="sxs-lookup"><span data-stu-id="36c59-148">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</span></span></param>
        <summary><span data-ttu-id="36c59-149">Implementiert eine Änderung oder Erweiterung des Diensts für einen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="36c59-149">Implements a modification or extension of the service across an operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c59-150">Implementieren Sie die <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A>-Methode, um die Dienstlaufzeit für alle Nachrichten oder einen bestimmten Vorgang anzuzeigen, zu ändern oder zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="36c59-150">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method to view, modify, or extend the service runtime across all messages or for a specific operation.</span></span> <span data-ttu-id="36c59-151">Ausführliche Informationen über Anpassungsmöglichkeiten in Dienstanwendungen finden Sie unter <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> und <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="36c59-151">For details about what customizations you can do in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="36c59-152">Die <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A>-Methode sollte eine <xref:System.NotImplementedException>-Ausnahme auslösen, wenn das Verhalten nur zur Verwendung in einer Clientanwendung vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="36c59-152">It is recommended that the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c59-153">Im folgenden Codebeispiel wird eine Implementierung von <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> veranschaulicht, mit der in die Konsole geschrieben werden kann, wenn der Inspektor bei einem Vorgang aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-153">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="36c59-154">Diese Anpassung kann nur an den <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> oder <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> angefügt werden und wird daher in der Regel durch ein Vorgangsverhalten eingefügt.</span><span class="sxs-lookup"><span data-stu-id="36c59-154">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="36c59-155">Das folgende Codebeispiel zeigt, wie der Parameterinspektor durch das Vorgangsverhalten an die Laufzeit angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-155">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.OperationDescription operationDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.OperationDescription operationDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::OperationDescription ^ operationDescription);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.OperationDescription -&gt; unit" Usage="iOperationBehavior.Validate operationDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="36c59-156">Der Vorgang, der überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-156">The operation being examined.</span></span> <span data-ttu-id="36c59-157">Nur zu Prüfungszwecken zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="36c59-157">Use for examination only.</span></span> <span data-ttu-id="36c59-158">Wenn die Vorgangsbeschreibung geändert wird, sind die Ergebnisse nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="36c59-158">If the operation description is modified, the results are undefined.</span></span></param>
        <summary><span data-ttu-id="36c59-159">Implementieren Sie dies, um zu prüfen, ob der Vorgang bestimmte Kriterien erfüllt.</span><span class="sxs-lookup"><span data-stu-id="36c59-159">Implement to confirm that the operation meets some intended criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c59-160">Implementieren Sie die <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A>-Methode, um die Struktur zu untersuchen, mit der Kriterien überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="36c59-160">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method to examine the structure to confirm any set of criteria.</span></span> <span data-ttu-id="36c59-161">Es ist nicht erforderlich, Anpassungen in <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> oder <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> durchzuführen, um diese Methode zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="36c59-161">It is not necessary to perform any customizations in <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> or <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> to make use of this method.</span></span> <span data-ttu-id="36c59-162">Wenn die Validierung des Vorgangs erfolgreich ist, werden Werte zurückgegeben, andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="36c59-162">If the operation passes validation, return; otherwise, throw an exception.</span></span>  
  
 <span data-ttu-id="36c59-163">Zum Beispiel kann die <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A>-Methode verwendet werden, um sicherzustellen, dass ein Vorgang autorisiert wird.</span><span class="sxs-lookup"><span data-stu-id="36c59-163">For example, the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method can be use to ensure that an operation is authorized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
