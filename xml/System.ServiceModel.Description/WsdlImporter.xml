<Type Name="WsdlImporter" FullName="System.ServiceModel.Description.WsdlImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8d1c3e22bba962a7c669aa1557b557975cfc53a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70458346" /></Metadata><TypeSignature Language="C#" Value="public class WsdlImporter : System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WsdlImporter extends System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WsdlImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class WsdlImporter&#xA;Inherits MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WsdlImporter : System::ServiceModel::Description::MetadataImporter" />
  <TypeSignature Language="F#" Value="type WsdlImporter = class&#xA;    inherit MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importiert WSDL&amp;#160;1.1-Metadaten (Web Services Description Language) mit WS-Richtlinienanhängen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der <xref:System.ServiceModel.Description.WsdlImporter>-Klasse können Sie Metadaten importieren und die Informationen in verschiedene Klassen konvertieren, die Vertrags- und Endpunktinformationen darstellen.  
  
 Die Basisklasse für <xref:System.ServiceModel.Description.WsdlImporter>, die <xref:System.ServiceModel.Description.MetadataImporter>-Klasse, definiert Methoden, die Vertrags- und Endpunktinformationen sowie Eigenschaften, die Importfehler offen legen und für den Import- und Konvertierungsvorgang relevante Typinformationen akzeptieren, selektiv importieren. Der <xref:System.ServiceModel.Description.WsdlImporter>-Typ verwendet die benutzerdefinierten Richtlinienimportprogramme (<xref:System.ServiceModel.Description.IPolicyImportExtension>-Implementierungen) des übergeordneten Typs zur Verarbeitung benutzerdefinierter Richtlinienanweisungen und seine eigenen benutzerdefinierten WSDL-Importprogramme (<xref:System.ServiceModel.Description.IWsdlImportExtension>-Implementierungen) zur Verarbeitung benutzerdefinierter WSDL-Elemente. Weitere Informationen finden Sie unter [Erweitern des Metadatensystems](~/docs/framework/wcf/extending/extending-the-metadata-system.md).  
  
 Beim Importieren der Richtlinie aus WSDL-Dokumenten probiert der <xref:System.ServiceModel.Description.WsdlImporter>-Typ bis zu 32 Kombinationen von Richtlinienalternativen aus, die verschiedenen WSDL-Richtliniensubjekten angehängt sind.  Wenn keine Kombination sauber importiert werden kann, wird die erste Kombination zur Erstellung einer teilweise benutzerdefinierten Bindung verwendet.  
  
 Zusätzlich zu diesen Methoden und Eigenschaften implementiert <xref:System.ServiceModel.Description.WsdlImporter> auch Methoden, die den Import von Bindungsinformationen und -eigenschaften unterstützen, die den Zugriff auf Richtliniendokumente, WSDL-Dokumente, WSDL-Erweiterungen und XML-Schemadokumente ermöglichen. Informationen zur Erweiterung von <xref:System.ServiceModel.Description.WsdlImporter> zur Unterstützung benutzerdefinierter WSDL-Elemente finden Sie unter <xref:System.ServiceModel.Description.IWsdlImportExtension>.  
  
 In der Regel wird die <xref:System.ServiceModel.Description.WsdlImporter>-Klasse in einem dreistufigen Prozess verwendet.  
  
1.  Erstellen Sie ein <xref:System.ServiceModel.Description.WsdlImporter>-Objekt, und übergeben Sie ein <xref:System.ServiceModel.Description.MetadataSet>-Objekt an den Konstruktor.  
  
2.  Rufen Sie die entsprechende `Import`-Methode auf, um die Ergebnisse abzurufen.  
  
3.  Überprüfen Sie die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft, um festzustellen, ob Importfehler vorliegen.  
  
> [!NOTE]
>  Wenn beim Importieren von WSDL-Anschlusstypen der QName des Anschlusstyps mit einem Eintrag im <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A>-Wörterbuch übereinstimmt, wird der Anschlusstyp nicht importiert und stattdessen der bekannte Vertrag verwendet.  
  
 Von den <xref:System.ServiceModel.Description.WsdlImporter>-Eigenschaften werden erst dann Werte zurückgegeben, wenn eine der Importmethoden aufgerufen wird. Benutzer <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> definierte Objekte können entweder Programm gesteuert in <xref:System.ServiceModel.Description.WsdlImporter> das geladen oder mithilfe des [ &lt;&gt; wsdlimporters](~/docs/framework/configure-apps/file-schema/wcf/wsdlimporters.md) -Elements der Client Konfiguration geladen werden.  
  
 Als Dienstendpunkt importierte Metadaten können nicht zum Erstellen einer Laufzeit oder zum Exportieren von Metadaten verwendet werden, da die importierten Endpunkte keine Informationen zum verwalteten Typ enthalten. Um mithilfe der Metadaten eine Client- oder Dienstlaufzeit oder Metadaten erstellen zu können, müssen Sie zunächst anhand der Metadaten einen Code erzeugen und kompilieren und mithilfe dieser Typinformationen ein neues <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType>-Objekt mit <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A> erstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie mithilfe des <xref:System.ServiceModel.Description.WsdlImporter> ein benutzerdefiniertes <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType> hinzugefügt, alle Verträge importiert sowie diese Verträge kompiliert und in einer Datei gespeichert werden.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.WsdlImporter" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter metadata" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
      </Parameters>
      <Docs>
        <param name="metadata">Eine Auflistung von Metadatendokumenten, aus denen Vertrags-, Endpunkt- und Bindungsinformationen extrahiert werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.WsdlImporter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie den <xref:System.ServiceModel.Description.WsdlImporter.%23ctor%2A>-Konstruktor, um ein <xref:System.ServiceModel.Description.WsdlImporter>-Objekt anhand einer Auflistung von Metadatendokumenten zu erstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die häufigste Verwendung der <xref:System.ServiceModel.Description.WsdlImporter>-Klasse mit der <xref:System.ServiceModel.Description.MetadataResolver>-Klasse veranschaulicht.  
  
 [!code-csharp[C_CustomWSDLExtensions#10](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">Die heruntergeladenen Metadaten.</param>
        <param name="policyImportExtensions">Die zum Importieren von benutzerdefinierten Richtlinienanweisungen verwendeten benutzerdefinierten Richtlinienimportprogramme.</param>
        <param name="wsdlImportExtensions">Die zum Importieren von benutzerdefinierten WSDL-Elementen verwendeten benutzerdefinierten WSDL-Importprogramme.</param>
        <summary>Erstellt ein <see cref="T:System.ServiceModel.Description.WsdlImporter" />-Objekt anhand der angegebenen Metadaten, benutzerdefinierten Richtlinienimportprogramme und benutzerdefinierten WSDL-Importprogramme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuern Sie mithilfe dieses Konstruktors die zu importierenden Metadaten sowie die zu verwendenden Richtlinien- und WSDL-Importprogramme.  
  
> [!NOTE]
>  Wenn benutzerdefinierte Richtlinien- oder WSDL-Importprogramme an diesen Konstruktor übergeben werden, werden die in den Konfigurationsdateien der Anwendung angegebenen benutzerdefinierten Importprogramme nicht geladen. Wenn Sie ein benutzerdefiniertes Importprogramm hinzufügen möchten, müssen Sie vor Verwendung dieses Konstruktors die Auflistungen von Importprogrammen rekonstruieren. Weitere Informationen finden Sie im Beispielabschnitt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie vor der Verwendung des `WSDLDocumentationImporter`-Objekts ein neues benutzerdefiniertes WSDL-Importprogramm (<xref:System.ServiceModel.Description.WsdlImporter>) zum standardmäßigen Satz von Importprogrammen hinzugefügt wird.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das <paramref name="metadata" />-Argument lautet <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, System.ServiceModel.Description.MetadataImporterQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, class System.ServiceModel.Description.MetadataImporterQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension), quotas As MetadataImporterQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions, System::ServiceModel::Description::MetadataImporterQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; * System.ServiceModel.Description.MetadataImporterQuotas -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions, quotas)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
        <Parameter Name="quotas" Type="System.ServiceModel.Description.MetadataImporterQuotas" />
      </Parameters>
      <Docs>
        <param name="metadata">Die heruntergeladenen Metadaten.</param>
        <param name="policyImportExtensions">Die zum Importieren von benutzerdefinierten Richtlinienanweisungen verwendeten benutzerdefinierten Richtlinienimportprogramme.</param>
        <param name="wsdlImportExtensions">Die zum Importieren von benutzerdefinierten WSDL-Elementen verwendeten benutzerdefinierten WSDL-Importprogramme.</param>
        <param name="quotas">Die Menge an Metadaten, die auf einmal abgerufen werden soll</param>
        <summary>Erstellt ein <see cref="T:System.ServiceModel.Description.WsdlImporter" />-Objekt anhand der angegebenen Metadaten, benutzerdefinierten Richtlinienimportprogramme und benutzerdefinierten WSDL-Importprogramme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuern Sie mithilfe dieses Konstruktors die zu importierenden Metadaten sowie die zu verwendenden Richtlinien- und WSDL-Importprogramme.  
  
> [!NOTE]
>  Wenn benutzerdefinierte Richtlinien- oder WSDL-Importprogramme an diesen Konstruktor übergeben werden, werden die in den Konfigurationsdateien der Anwendung angegebenen benutzerdefinierten Importprogramme nicht geladen. Wenn Sie ein benutzerdefiniertes Importprogramm hinzufügen möchten, müssen Sie vor Verwendung dieses Konstruktors die Auflistungen von Importprogrammen rekonstruieren. Weitere Informationen finden Sie im Beispielabschnitt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie vor der Verwendung des `WSDLDocumentationImporter`-Objekts ein neues benutzerdefiniertes WSDL-Importprogramm (<xref:System.ServiceModel.Description.WsdlImporter>) zum standardmäßigen Satz von Importprogrammen hinzugefügt wird.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das <paramref name="metadata" />-Argument lautet <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllBindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt; ImportAllBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Channels.Binding&gt; ImportAllBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportAllBindings () As Collection(Of Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Channels::Binding ^&gt; ^ ImportAllBindings();" />
      <MemberSignature Language="F#" Value="member this.ImportAllBindings : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;" Usage="wsdlImporter.ImportAllBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Satz von <see cref="T:System.ServiceModel.Channels.Binding" />-Objekten zurück, die aus den Metadatendokumenten importiert wurden.</summary>
        <returns>Ein Satz von <see cref="T:System.ServiceModel.Channels.Binding" />-Objekten, die aus den Metadatendokumenten importiert wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.ServiceModel.Description.WsdlImporter.ImportAllBindings%2A>-Methode, um alle Bindungsinformationen aus den Metadatendokumenten zu importieren und diese als <xref:System.ServiceModel.Channels.Binding>-Objekte zurückzugeben. Überprüfen Sie die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft auf Importfehler, bevor Sie die zurückgegebenen Objekte verwenden.  
  
 Informationen zum Import einer bestimmten WSDL-Bindung finden Sie unter der <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.ServiceModel.Description.WsdlImporter" /> hat einen Fehler festgestellt.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="override this.ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="wsdlImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Satz von <see cref="T:System.ServiceModel.Description.ContractDescription" />-Objekten zurück, die die Anschlusstypinformationen in den Metadatendokumenten darstellen.</summary>
        <returns>Ein Satz von <see cref="T:System.ServiceModel.Description.ContractDescription" />-Objekten, die die Anschlusstypinformationen in den Metadatendokumenten darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.ServiceModel.Description.WsdlImporter.ImportAllContracts%2A>-Methode, um alle WSDL-Anschlusstypinformationen aus den Metadatendokumenten zu importieren und diese als <xref:System.ServiceModel.Description.ContractDescription>-Objekte zurückzugeben. Es wird empfohlen, die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft auf Importfehler zu überprüfen, bevor Sie die zurückgegebenen Objekte verwenden.  
  
 Informationen zum Import nur eines einzigen Anschlusstyps finden Sie unter der <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie mithilfe des <xref:System.ServiceModel.Description.WsdlImporter> ein benutzerdefiniertes <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType> hinzugefügt, alle Verträge importiert sowie diese Verträge kompiliert und in einer Datei gespeichert werden.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.ServiceModel.Description.WsdlImporter" /> hat einen Fehler festgestellt.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="override this.ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> zurück, die die Endpunkte in WSDL-Dokumenten darstellt.</summary>
        <returns>Eine <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, die die Endpunkte in WSDL-Dokumenten darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A>-Methode, um alle Endpunktinformationen aus den Metadatendokumenten zu importieren und diese als Auflistung von <xref:System.ServiceModel.Description.ServiceEndpoint>-Objekten zurückzugeben. Überprüfen Sie die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft auf Importfehler, bevor Sie die zurückgegebenen Objekte verwenden.  
  
 Informationen zum Import nur eines bestimmten WSDL-Anschlusses finden Sie unter der <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A>-Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.ServiceModel.Description.WsdlImporter" /> hat einen Fehler festgestellt.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding ImportBinding (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Binding ImportBinding(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportBinding (wsdlBinding As Binding) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Binding ^ ImportBinding(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportBinding : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Channels.Binding" Usage="wsdlImporter.ImportBinding wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Ein <see cref="T:System.Web.Services.Description.Binding" />-Objekt, das die Bindungsinformationen in einer Metadatendatei darstellt.</param>
        <summary>Gibt ein <see cref="T:System.ServiceModel.Channels.Binding" />-Objekt zurück, das die Bindungsinformationen aus einem Satz von Metadatendokumenten darstellt.</summary>
        <returns>Ein <see cref="T:System.ServiceModel.Channels.Binding" />-Objekt, das die Bindungsinformationen aus einem Satz von Metadatendokumenten darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A>-Methode, um Bindungsinformationen in den Metadaten mithilfe eines <xref:System.Web.Services.Description.Binding?displayProperty=nameWithType>-Objekts zu ermitteln und diese Bindungsinformationen als <xref:System.ServiceModel.Channels.Binding?displayProperty=nameWithType>-Objekt zurückzugeben. Überprüfen Sie die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft auf Importfehler, bevor Sie das zurückgegebene Objekt verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.ServiceModel.Description.WsdlImporter" /> hat einen Fehler festgestellt.</exception>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="wsdlBinding" />-Parameter ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription ImportContract (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ContractDescription ImportContract(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportContract (wsdlPortType As PortType) As ContractDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ContractDescription ^ ImportContract(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportContract : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ContractDescription" Usage="wsdlImporter.ImportContract wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">Ein <see cref="T:System.Web.Services.Description.PortType" />-Objekt, das den gewünschten Anschlusstyp darstellt.</param>
        <summary>Gibt ein <see cref="T:System.ServiceModel.Description.ContractDescription" />-Objekt zurück, das die durch die angegebenen Anschlusstypinformationen ermittelten Metadaten darstellt.</summary>
        <returns>Ein <see cref="T:System.ServiceModel.Description.ContractDescription" />-Objekt, das die durch die angegebenen Anschlusstypinformationen ermittelten Metadaten darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A>-Methode, um Anschlusstypinformationen in den Metadaten mithilfe eines <xref:System.Web.Services.Description.PortType?displayProperty=nameWithType>-Objekts zu ermitteln und diese Informationen als <xref:System.ServiceModel.Description.ContractDescription>-Objekt zurückzugeben. Überprüfen Sie die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft auf Importfehler, bevor Sie das zurückgegebene Objekt verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.ServiceModel.Description.WsdlImporter" /> hat einen Fehler festgestellt.</exception>
        <exception cref="T:System.ArgumentNullException">Der Anschlusstyp ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint ImportEndpoint (System.Web.Services.Description.Port wsdlPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint ImportEndpoint(class System.Web.Services.Description.Port wsdlPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoint (wsdlPort As Port) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ ImportEndpoint(System::Web::Services::Description::Port ^ wsdlPort);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoint : System.Web.Services.Description.Port -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="wsdlImporter.ImportEndpoint wsdlPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPort" Type="System.Web.Services.Description.Port" />
      </Parameters>
      <Docs>
        <param name="wsdlPort">Ein <see cref="T:System.Web.Services.Description.Port" />-Objekt, das die gewünschten WSDL-Anschlussinformationen darstellt.</param>
        <summary>Gibt einen <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> aus einem Satz von Metadatendokumenten zurück, der Informationen aus dem angegebenen <see cref="T:System.Web.Services.Description.Port" />-Objekt verwendet.</summary>
        <returns>Ein <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Objekt, das die spezifischen WSDL-Anschlussinformationen im Metadatendokument darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A>-Methode, um Anschlusstypinformationen in den Metadaten mithilfe eines <xref:System.Web.Services.Description.Port?displayProperty=nameWithType>-Objekts zu ermitteln und diese Informationen als <xref:System.ServiceModel.Description.ServiceEndpoint>-Objekt zurückzugeben. Überprüfen Sie die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft auf Importfehler, bevor Sie das zurückgegebene Objekt verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.ServiceModel.Description.WsdlImporter" /> hat einen Fehler festgestellt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlPort" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportEndpoints">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Auflistung von <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Objekten zurück, die mit allen WSDL-Anschlüssen übereinstimmt, die eine bestimmte Bindung verwenden, einem bestimmten Anschlusstyp zugeordnet sind oder sich innerhalb eines bestimmten WSDL-Diensts befinden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlBinding As Binding) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Ein in einem WSDL-Anschluss verwendetes <see cref="T:System.Web.Services.Description.Binding" />-Objekt.</param>
        <summary>Gibt eine <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> zurück, die alle WSDL-Anschlusstypen mit der angegebenen <see cref="T:System.Web.Services.Description.Binding" /> darstellt.</summary>
        <returns>Eine <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, die alle WSDL-Anschlusstypen mit der angegebenen <see cref="T:System.Web.Services.Description.Binding" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überprüfen Sie die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft auf Importfehler, bevor Sie das zurückgegebene Objekt verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.ServiceModel.Description.WsdlImporter" /> hat einen Fehler festgestellt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlBinding" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlPortType As PortType) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">Das <see cref="T:System.Web.Services.Description.PortType" />-Objekt, das zur Suche nach zugeordneten WSDL-Anschlussinformationen verwendet wird.</param>
        <summary>Gibt eine <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> zurück, die alle WSDL-Anschlusstypen darstellt, die dem angegebenen <see cref="T:System.Web.Services.Description.PortType" /> zugeordnet sind.</summary>
        <returns>Eine <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, die alle WSDL-Anschlusstypen darstellt, die dem angegebenen <see cref="T:System.Web.Services.Description.PortType" /> zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überprüfen Sie die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft auf Importfehler, bevor Sie das zurückgegebene Objekt verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.ServiceModel.Description.WsdlImporter" /> hat einen Fehler festgestellt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlPortType" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Service wsdlService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Service wsdlService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlService As Service) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Service ^ wsdlService);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Service -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlService" Type="System.Web.Services.Description.Service" />
      </Parameters>
      <Docs>
        <param name="wsdlService">Das <see cref="T:System.Web.Services.Description.Service" />-Objekt, in dem nach WSDL-Anschlussinformationen gesucht wird.</param>
        <summary>Gibt eine <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> zurück, die alle WSDL-Anschlusstypen im angegebenen <see cref="T:System.Web.Services.Description.Service" /> darstellt.</summary>
        <returns>Eine <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" />, die alle WSDL-Anschlusstypen im angegebenen <see cref="T:System.Web.Services.Description.Service" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Überprüfen Sie die <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A>-Eigenschaft auf Importfehler, bevor Sie das zurückgegebene Objekt verwenden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.ServiceModel.Description.WsdlImporter" /> hat einen Fehler festgestellt.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlService" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WsdlDocuments">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlDocuments As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ WsdlDocuments { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlDocuments : System.Web.Services.Description.ServiceDescriptionCollection" Usage="System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Satz von <see cref="T:System.Web.Services.Description.ServiceDescription" />-Objekten ab, die die Vertragsinformationen in den Metadatendokumenten beschreiben.</summary>
        <value>Eine Auflistung von <see cref="T:System.Web.Services.Description.ServiceDescription" />-Objekten, die die Vertragsinformationen in den Metadatendokumenten beschreiben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ServiceModel.Description.WsdlImporter.WsdlDocuments%2A>-Eigenschaft wird erst aufgefüllt, wenn eine Importmethode aufgerufen wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WsdlImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlImportExtensions As KeyedByTypeCollection(Of IWsdlImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ WsdlImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" Usage="System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" />-Objekten ab, mit denen benutzerdefinierte WSDL-Informationen importiert werden.</summary>
        <value>Eine Auflistung von <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" />-Objekten, mit denen benutzerdefinierte WSDL-Informationen importiert werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A>-Eigenschaft, um benutzerdefinierte WSDL-Importprogramme hinzuzufügen oder zu entfernen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet XmlSchemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet XmlSchemas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSchemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ XmlSchemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemas : System.Xml.Schema.XmlSchemaSet" Usage="System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Satz von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten ab, die die Typen in den Metadaten beschreiben.</summary>
        <value>Ein Satz von <see cref="T:System.Xml.Schema.XmlSchema" />-Objekten, die die Typen in den Metadaten beschreiben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird erst aufgefüllt, wenn eine der Importmethoden aufgerufen wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
