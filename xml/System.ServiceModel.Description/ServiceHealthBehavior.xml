<Type Name="ServiceHealthBehavior" FullName="System.ServiceModel.Description.ServiceHealthBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3841c3dc2d4904aa1529e4f0fee2976b24352b46" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53225163" /></Metadata><TypeSignature Language="C#" Value="public class ServiceHealthBehavior : System.ServiceModel.Description.ServiceHealthBehaviorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceHealthBehavior extends System.ServiceModel.Description.ServiceHealthBehaviorBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceHealthBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceHealthBehavior&#xA;Inherits ServiceHealthBehaviorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHealthBehavior : System::ServiceModel::Description::ServiceHealthBehaviorBase" />
  <TypeSignature Language="F#" Value="type ServiceHealthBehavior = class&#xA;    inherit ServiceHealthBehaviorBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.ServiceHealthBehaviorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein WCF-Dienstverhalten (Windows Communication Foundation) bereit, das einen Integritätsendpunkt bereitstellt.</summary>
    <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

Integritätsdienst-Endpunkte werden verwendet, um integritätsprüfungen auszuführen, die die Integrität einer Komponente zu bewerten. Integritätsendpunkte verwendet werden können:

- Benachrichtigen Sie orchestrierungstools, einen Prozess zu beenden, der eine wichtige integritätsprüfung fehlgeschlagen ist. 

- Dienen als frühe Problem Indikator für die Überwachungstools durch das Nachverfolgen und Warnfunktionen bieten, zu der die Verfügbarkeit und Leistung eines Diensts.

`ServiceHealthBehavior` ist ein WCF-Dienstverhalten, das erweitert IServiceBehavior und leitet sich von <xref:System.ServiceModel.Description.ServiceHealthBehaviorBase>.  Hinzufügen einer `ServiceHealthBehavior` -Instanz, auf die <xref:System.ServiceModel.Description.ServiceDescription.Behaviors?displayProperty=nameWithType> Auflistung ermöglicht Folgendes:

-   **Veröffentlichung der Integrität des Diensts:** Dienst spezifischen details wie den Dienststatus, die Anzahl der Drosselung, und die Kapazität kann angezeigt werden, mithilfe einer HTTP/GET-Anforderung mit der `?health` Abfragezeichenfolge. Wissen und ganz einfach Zugriff auf die angezeigten Informationen verfügen, ist von größter Wichtigkeit, bei der Problembehandlung eines fehlerhaften WCF-Diensts.

-   **Die Rückgabe von HTTP-Antwortcodes:** In der Abfragezeichenfolge können den HTTP-Statuscode für eine HTTP/GET-Health-Test-Anforderung angeben.

Ein Endpunkt ist nur im Kontext der Komponente, deren Zustand überwacht. Sie verfügt über keine andere Bedeutung oder Zweck. Daher ist die Integrität einer Verbindung mit dem Status der Komponente. Clients *sollten* wird davon ausgegangen, dass die von den integritätsendpunkt zurückgegebene HTTP-Antwortcode für die ganze Komponente gilt. Dies ist kompatibel mit dem Verhalten von aktuellen infrastruktureller Tools, die integritätsprüfungen beobachtet werden, z. B. Load balancer, Dienst-Ermittlung und andere nutzen erwartet wird.

### <a name="enable-a-health-endpoint"></a>Aktivieren Sie einen Endpunkt

Es gibt zwei Möglichkeiten zum Angeben der Health-Endpunkt verfügbar machen, und Veröffentlichen von WCF Service Health-Informationen ein:

- Mithilfe einer Konfigurationsdatei. Beispiel:

   ```xml
   <behaviors>
     <serviceBehaviors>
       <behavior name="DefaultBehavior">
         <serviceHealth httpGetEnabled="true"/>
       </behavior>
     </serviceBehaviors>
   </behaviors>
   ```

- Programmgesteuert. Das folgende Codefragment verwendet C# der Health-Endpunkt verfügbar machen:

    ```csharp
    ServiceHost host = new ServiceHost(typeof(Service1),
        new Uri("http://jconde-dev1:81/Service1"));
    ServiceHealthBehavior healthBehavior =
                host.Description.Behaviors.Find<ServiceHealthBehavior>();
    if (healthBehavior == null)
    {
        healthBehavior = new ServiceHealthBehavior();
    }
    //healthBehavior.HttpGetEnabled = false;
    //healthBehavior.HttpsGetEnabled = false;
    host.Description.Behaviors.Add(healthBehavior);
    ```

       ]]></format>    
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHealthBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHealthBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpProperty">
      <MemberSignature Language="C#" Value="protected static void AddHttpProperty (System.ServiceModel.Channels.Message message, System.Net.HttpStatusCode status, bool isXml);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void AddHttpProperty(class System.ServiceModel.Channels.Message message, valuetype System.Net.HttpStatusCode status, bool isXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.AddHttpProperty(System.ServiceModel.Channels.Message,System.Net.HttpStatusCode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void AddHttpProperty(System::ServiceModel::Channels::Message ^ message, System::Net::HttpStatusCode status, bool isXml);" />
      <MemberSignature Language="F#" Value="static member AddHttpProperty : System.ServiceModel.Channels.Message * System.Net.HttpStatusCode * bool -&gt; unit" Usage="System.ServiceModel.Description.ServiceHealthBehavior.AddHttpProperty (message, status, isXml)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="status" Type="System.Net.HttpStatusCode" />
        <Parameter Name="isXml" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="message">Die Antwortnachricht.</param>
        <param name="status">Der HTTP-Statuscode.</param>
        <param name="isXml">Definiert den in die Nachricht zu schreibenden <see langWord="ContentType" />-Headertyp. Wenn <see langword="true" />, lautet der <see langWord="ContentType" /> <see langword="text/xml" />; andernfalls lautet der <see langWord="ContentType" /> <see langword="text/sml" />.</param>
        <summary>Legt den Inhaltstyp und den HTTP-Statuscode der Antwortnachricht fest.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureHttpStatusCode">
      <MemberSignature Language="C#" Value="protected static bool EnsureHttpStatusCode (int code);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool EnsureHttpStatusCode(int32 code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.EnsureHttpStatusCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function EnsureHttpStatusCode (code As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool EnsureHttpStatusCode(int code);" />
      <MemberSignature Language="F#" Value="static member EnsureHttpStatusCode : int -&gt; bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.EnsureHttpStatusCode code" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">Der HTTP-Statuscode.</param>
        <summary>Stellen Sie sicher, dass der HTTP-Statuscode im Bereich zwischen 200 und 599 einschließlich liegt.</summary>
        <returns><see langword="true" />, wenn der HTTP-Statuscode im Bereich zwischen 200 und 599 einschließlich liegt; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHttpResponseCode">
      <MemberSignature Language="C#" Value="protected virtual System.Net.HttpStatusCode GetHttpResponseCode (System.ServiceModel.ServiceHostBase serviceHost, string[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Net.HttpStatusCode GetHttpResponseCode(class System.ServiceModel.ServiceHostBase serviceHost, string[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.GetHttpResponseCode(System.ServiceModel.ServiceHostBase,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHttpResponseCode (serviceHost As ServiceHostBase, queries As String()) As HttpStatusCode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::HttpStatusCode GetHttpResponseCode(System::ServiceModel::ServiceHostBase ^ serviceHost, cli::array &lt;System::String ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpResponseCode : System.ServiceModel.ServiceHostBase * string[] -&gt; System.Net.HttpStatusCode&#xA;override this.GetHttpResponseCode : System.ServiceModel.ServiceHostBase * string[] -&gt; System.Net.HttpStatusCode" Usage="serviceHealthBehavior.GetHttpResponseCode (serviceHost, queries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpStatusCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="queries" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="serviceHost">Eine Instanz des Diensthosts, die den WCF-Dienst enthält, bei dem <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> aktiviert ist.</param>
        <param name="queries">Ein Array, das die Feld/Wert-Paare der Abfragezeichenfolge enthält.</param>
        <summary>Analysiert die Abfragezeichenfolgen-Felder und gibt den definierten HTTP-Antwortcode zurück.</summary>
        <returns>Der HTTP-Antwortcode.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceHealthSections">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Description.ServiceHealthSectionCollection GetServiceHealthSections (System.ServiceModel.ServiceHostBase serviceHost);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Description.ServiceHealthSectionCollection GetServiceHealthSections(class System.ServiceModel.ServiceHostBase serviceHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.GetServiceHealthSections(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetServiceHealthSections (serviceHost As ServiceHostBase) As ServiceHealthSectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Description::ServiceHealthSectionCollection ^ GetServiceHealthSections(System::ServiceModel::ServiceHostBase ^ serviceHost);" />
      <MemberSignature Language="F#" Value="abstract member GetServiceHealthSections : System.ServiceModel.ServiceHostBase -&gt; System.ServiceModel.Description.ServiceHealthSectionCollection&#xA;override this.GetServiceHealthSections : System.ServiceModel.ServiceHostBase -&gt; System.ServiceModel.Description.ServiceHealthSectionCollection" Usage="serviceHealthBehavior.GetServiceHealthSections serviceHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceHealthSectionCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceHost">Eine Instanz des Diensthosts, die den WCF-Dienst enthält, bei dem <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> aktiviert ist.</param>
        <summary>Ruft eine Collection der <see cref="T:System.ServiceModel.Description.ServiceHealthSection" />-Objekte ab, die in <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> enthalten sind.</summary>
        <returns>Eine Collection der <see cref="T:System.ServiceModel.Description.ServiceHealthSection" />-Objekte in <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlDocument">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlDocument GetXmlDocument (System.ServiceModel.ServiceHostBase serviceHost);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlDocument GetXmlDocument(class System.ServiceModel.ServiceHostBase serviceHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.GetXmlDocument(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetXmlDocument (serviceHost As ServiceHostBase) As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlDocument ^ GetXmlDocument(System::ServiceModel::ServiceHostBase ^ serviceHost);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlDocument : System.ServiceModel.ServiceHostBase -&gt; System.Xml.XmlDocument&#xA;override this.GetXmlDocument : System.ServiceModel.ServiceHostBase -&gt; System.Xml.XmlDocument" Usage="serviceHealthBehavior.GetXmlDocument serviceHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceHost">To be added.</param>
        <summary>Serialisiert das <see cref="T:System.ServiceModel.Description.ServiceHealthModel" />-Objekt, das mit dem angegebenen <paramref name="serviceHost" /> verknüpft ist, und gibt es im XML-Format zurück.</summary>
        <returns>Ein XML-Dokument, das dem serialisierten <see cref="T:System.ServiceModel.Description.ServiceHealthModel" />-Objekt entspricht.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HandleHealthRequest">
      <MemberSignature Language="C#" Value="public override void HandleHealthRequest (System.ServiceModel.ServiceHostBase serviceHost, System.ServiceModel.Channels.Message httpGetRequest, string[] queries, out System.ServiceModel.Channels.Message replyMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void HandleHealthRequest(class System.ServiceModel.ServiceHostBase serviceHost, class System.ServiceModel.Channels.Message httpGetRequest, string[] queries, [out] class System.ServiceModel.Channels.Message&amp; replyMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.HandleHealthRequest(System.ServiceModel.ServiceHostBase,System.ServiceModel.Channels.Message,System.String[],System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub HandleHealthRequest (serviceHost As ServiceHostBase, httpGetRequest As Message, queries As String(), ByRef replyMessage As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void HandleHealthRequest(System::ServiceModel::ServiceHostBase ^ serviceHost, System::ServiceModel::Channels::Message ^ httpGetRequest, cli::array &lt;System::String ^&gt; ^ queries, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % replyMessage);" />
      <MemberSignature Language="F#" Value="override this.HandleHealthRequest : System.ServiceModel.ServiceHostBase * System.ServiceModel.Channels.Message * string[] *  -&gt; unit" Usage="serviceHealthBehavior.HandleHealthRequest (serviceHost, httpGetRequest, queries, replyMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="httpGetRequest" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="queries" Type="System.String[]" />
        <Parameter Name="replyMessage" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serviceHost">Eine Instanz des Diensthosts, die den WCF-Dienst enthält, bei dem <see cref="T:System.ServiceModel.Description.ServiceHealthBehavior" /> aktiviert ist.</param>
        <param name="httpGetRequest">Die an den Integritätsendpunkt gerichtete HTTP-Anforderung.</param>
        <param name="queries">Ein Array, das die Feld/Wert-Paare der Abfragezeichenfolge enthält.</param>
        <param name="replyMessage">Die Antwortnachricht des Integritätsverhaltens bei einer Rückgabe durch die Methode. Diese Nachricht enthält den Inhaltstyp <see langword="text/html" /> oder <see langword="text/xml" />, je nachdem, ob die Anforderung für XML oder HTML bestimmt war.</param>
        <summary>Gibt die Antwortnachricht an eine angegebene Anforderung zurück.</summary>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

Diese Methode wird aufgerufen, indem die <xref:System.ServiceModel.Description.ServiceHealthBehaviorBase> -Instanz und wird ermittelt, für die Erstellung der Response-Nachricht an den Health-Endpunkt.

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceHost" /> ist <see langword="null" />.

- oder - 

<paramref name="httpGetRequest" /> ist gleich <see langword="null" />.

- oder - 

<paramref name="queries" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasXmlSupport">
      <MemberSignature Language="C#" Value="protected virtual bool HasXmlSupport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasXmlSupport" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehavior.HasXmlSupport" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HasXmlSupport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasXmlSupport { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasXmlSupport : bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.HasXmlSupport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob XML-Antwortnachrichten unterstützt werden.</summary>
        <value>Es sei denn, es in einer abgeleiteten Klasse überschrieben wird, diese Methode immer zurück <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseBooleanQueryParameter">
      <MemberSignature Language="C#" Value="protected static bool TryParseBooleanQueryParameter (string parameterName, string parameter, bool defaultValue, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool TryParseBooleanQueryParameter(string parameterName, string parameter, bool defaultValue, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.TryParseBooleanQueryParameter(System.String,System.String,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function TryParseBooleanQueryParameter (parameterName As String, parameter As String, defaultValue As Boolean, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool TryParseBooleanQueryParameter(System::String ^ parameterName, System::String ^ parameter, bool defaultValue, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParseBooleanQueryParameter : string * string * bool *  -&gt; bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.TryParseBooleanQueryParameter (parameterName, parameter, defaultValue, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Boolean" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="parameterName">Der Name des Parameters, dessen Wert die Methode zu analysieren versucht.</param>
        <param name="parameter">Das Feld/Wert-Paar der Abfragezeichenfolge.</param>
        <param name="defaultValue">Der Wert, der dem <paramName name="result" />-Argument zugewiesen werden soll, wenn beim Analysevorgang ein Fehler auftritt.</param>
        <param name="result">Der Wert des analysierten booleschen Arguments bei einer Rückgabe durch die Methode.</param>
        <summary>Versucht, einen booleschen Abfragezeichenfolgenparameter zu analysieren, und gibt einen Wert zurück, der angibt, ob der Analysevorgang erfolgreich war.</summary>
        <returns><see langword="true" />, wenn der Analysevorgang erfolgreich ausgeführt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

Gibt die Methode zurück `true` , wenn der Wert des Felds erfolgreich, indem analysiert wurde die <xref:System.Boolean.TryParse%2A?displayProperty=nameWithType> Methode.

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameterName" /> ist <see langword="null" />.
        
- oder - 

<paramref name="parameter" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseHttpStatusCodeQueryParameter">
      <MemberSignature Language="C#" Value="protected static bool TryParseHttpStatusCodeQueryParameter (string parameterName, string parameter, System.Net.HttpStatusCode defaultErrorCode, out System.Net.HttpStatusCode result);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool TryParseHttpStatusCodeQueryParameter(string parameterName, string parameter, valuetype System.Net.HttpStatusCode defaultErrorCode, [out] valuetype System.Net.HttpStatusCode&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehavior.TryParseHttpStatusCodeQueryParameter(System.String,System.String,System.Net.HttpStatusCode,System.Net.HttpStatusCode@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function TryParseHttpStatusCodeQueryParameter (parameterName As String, parameter As String, defaultErrorCode As HttpStatusCode, ByRef result As HttpStatusCode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool TryParseHttpStatusCodeQueryParameter(System::String ^ parameterName, System::String ^ parameter, System::Net::HttpStatusCode defaultErrorCode, [Runtime::InteropServices::Out] System::Net::HttpStatusCode % result);" />
      <MemberSignature Language="F#" Value="static member TryParseHttpStatusCodeQueryParameter : string * string * System.Net.HttpStatusCode *  -&gt; bool" Usage="System.ServiceModel.Description.ServiceHealthBehavior.TryParseHttpStatusCodeQueryParameter (parameterName, parameter, defaultErrorCode, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="defaultErrorCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="result" Type="System.Net.HttpStatusCode" RefType="out" />
      </Parameters>
      <Docs>
        <param name="parameterName">Der Name des Parameters, dessen Wert die Methode zu analysieren versucht.</param>
        <param name="parameter">Das Feld/Wert-Paar der Abfragezeichenfolge.</param>
        <param name="defaultValue">Der Wert, der dem <paramName name="result" />-Argument zugewiesen werden soll, wenn der angegebene HTTP-Statuscode in der Abfragezeichenfolge ungültig ist.</param>
        <param name="result">Der Wert des analysierten HTTP-Statuscodearguments bei einer Rückgabe durch die Methode.</param>
        <summary>Versucht, den HTTP-Statuscode einer Abfragezeichenfolgenvariablen zu analysieren, und gibt einen Wert zurück, der angibt, ob der Analysevorgang erfolgreich war.</summary>
        <returns><see langword="true" />, wenn der Analysevorgang erfolgreich ausgeführt wurde; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameterName" /> ist <see langword="null" />.
        
- oder - 

<paramref name="parameter" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>