<Type Name="IServiceBehavior" FullName="System.ServiceModel.Description.IServiceBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f26cbbfb79ab6e7cd4db524dfccbb6a72e11474" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37617242" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServiceBehavior" />
  <TypeSignature Language="F#" Value="type IServiceBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e0cc6-101">Stellt einen Mechanismus bereit, um benutzerdefinierte Erweiterungen für einen gesamten Dienst zu ändern oder einzufügen, einschließlich <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0cc6-101">Provides a mechanism to modify or insert custom extensions across an entire service, including the <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cc6-102">Implementiert <xref:System.ServiceModel.Description.IServiceBehavior>, um Aspekte der dienstweiten Ausführung auf Anwendungsebene zu ändern, zu überprüfen oder zu erweitern:</span><span class="sxs-lookup"><span data-stu-id="e0cc6-102">Implement <xref:System.ServiceModel.Description.IServiceBehavior> to modify, examine, or extend some aspect of service-wide execution at the application level:</span></span>  
  
-   <span data-ttu-id="e0cc6-103">Verwenden Sie die <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A>-Methode zum Ändern von Eigenschaftenwerten zur Laufzeit oder zum Einfügen von benutzerdefinierten Erweiterungsobjekten, wie Fehlerhandler, Nachrichten- oder Parameterinterceptoren, Sicherheitserweiterungen und anderen benutzerdefinierten Erweiterungsobjekten.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-103">Use the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span></span>  
  
-   <span data-ttu-id="e0cc6-104">Verwenden der <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> Methode, um die beschreibungsstruktur zu untersuchen, bevor Windows Communication Foundation (WCF) erstellt, den ausführenden Dienst aus, um sicherzustellen, dass sie ordnungsgemäß ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-104">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to examine the description before Windows Communication Foundation (WCF) constructs the executing service to confirm that it can execute properly.</span></span>  
  
-   <span data-ttu-id="e0cc6-105">Verwenden Sie die <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A>-Methode, um benutzerdefinierte Informationen zum Dienst an ein Bindungselement zu übergeben, damit der Dienst korrekt unterstützt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-105">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to pass to a binding element the custom information for the service so that it can support the service correctly.</span></span>  
  
 <span data-ttu-id="e0cc6-106"><xref:System.ServiceModel.Description.IServiceBehavior>-Objekte können jede dieser Methoden nutzen, jedoch ist häufig nur eine Methode von Bedeutung; in einem solchen Fall geben die nicht verwendeten Methoden keinen Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-106"><xref:System.ServiceModel.Description.IServiceBehavior> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cc6-107">Alle <xref:System.ServiceModel.Description.IServiceBehavior>-Methoden übergeben <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType>-Objekte und <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType>-Objekte als Parameter.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-107">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="e0cc6-108">Der <xref:System.ServiceModel.Description.ServiceDescription>-Parameter dient nur zur Prüfung; wenn Sie diese Objekte ändern, ist das Ausführungsverhalten nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-108">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination only; if you modify these objects the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="e0cc6-109">Um eine Anpassungsaufgabe auszuführen, muss das entsprechende <xref:System.ServiceModel.Description.IServiceBehavior>-Objekt der <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A>-Eigenschaft vor der Erstellung der Dienstlaufzeit hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-109">To perform the customization task for which it is intended, the <xref:System.ServiceModel.Description.IServiceBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the construction of the service runtime.</span></span> <span data-ttu-id="e0cc6-110">Hierfür gibt es drei Möglichkeiten:</span><span class="sxs-lookup"><span data-stu-id="e0cc6-110">There are three ways to do this:</span></span>  
  
-   <span data-ttu-id="e0cc6-111">Das benutzerdefinierte Dienstverhalten wird der <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A>-Eigenschaft programmgesteuert hinzugefügt, und zwar bevor die <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType>-Methode für das <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>-Objekt aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-111">Programmatically add the custom service behavior to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the point where the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> object.</span></span>  
  
-   <span data-ttu-id="e0cc6-112">Ein benutzerdefiniertes Attribut wird erstellt, das <xref:System.ServiceModel.Description.IServiceBehavior> implementiert und dazu verwendet wird, zu ändernde Dienstklassen zu markieren.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-112">Create a custom attribute that implements <xref:System.ServiceModel.Description.IServiceBehavior> and use it to mark service classes that are to be modified.</span></span> <span data-ttu-id="e0cc6-113">Wenn eine <xref:System.ServiceModel.ServiceHost> -Objekt erstellt wird und WCF verwendet Reflektion, um die Attribute für den Diensttyp zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-113">When a <xref:System.ServiceModel.ServiceHost> object is constructed, WCF uses reflection to discover the attributes on the service type.</span></span> <span data-ttu-id="e0cc6-114">Wenn ein Attribut <xref:System.ServiceModel.Description.IServiceBehavior> implementiert, wird es der Verhaltensauflistung für <xref:System.ServiceModel.Description.ServiceDescription> hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-114">If any attributes implement <xref:System.ServiceModel.Description.IServiceBehavior>, they are added to the behaviors collection on <xref:System.ServiceModel.Description.ServiceDescription>.</span></span>  
  
-   <span data-ttu-id="e0cc6-115">Erweitern Sie die <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>-Klasse, um die Spezifikation des Verhaltens in einer Anwendung oder Computerkonfigurationsdatei zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-115">Extend the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> class to support the specification of the behavior in an application or machine configuration file.</span></span> <span data-ttu-id="e0cc6-116">Im Abschnitt mit Beispielen finden Sie weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-116">See the Example section for more information.</span></span>  
  
 <span data-ttu-id="e0cc6-117">Beispiele für Dienstverhalten in WCF die <xref:System.ServiceModel.ServiceBehaviorAttribute> -Attribut, das <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, wird die <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> und <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> Verhalten.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-117">Examples of service behaviors in WCF include the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute, the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, the <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> and the <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0cc6-118">Im folgenden Codebeispiel wird veranschaulicht, wie ein in einer Anwendungskonfigurationsdatei angegebenes Dienstverhalten verwendet wird, um einen benutzerdefinierten Fehlerhandler in eine Dienstanwendung einzufügen.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-118">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="e0cc6-119">In diesem Beispiel fängt der Fehlerhandler alle Ausnahmen ab und wandelt sie in einen benutzerdefinierten `GreetingFault`-SOAP-Fehler um, der dann an den Client zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-119">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="e0cc6-120">Mit der folgenden <xref:System.ServiceModel.Description.IServiceBehavior>-Implementierung werden keine Bindungsparameterobjekte hinzugefügt, wird das benutzerdefinierte <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType>-Objekte jeder <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType>-Eigenschaft hinzugefügt und überprüft, dass jeder Vorgang des Diensts, auf den das Dienstverhalten angewendet wird, über ein <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> des Typs `GreetingFault` verfügt.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-120">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="e0cc6-121">In diesem Beispiel implementiert die Verhaltensklasse auch <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, wodurch das Dienstverhalten mithilfe einer Anwendungskonfigurationsdatei eingefügt werden kann, wie folgendes Codebeispiel zeigt.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-121">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iServiceBehavior.AddBindingParameters (serviceDescription, serviceHostBase, endpoints, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="e0cc6-122">Die Beschreibung des Diensts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-122">The service description of the service.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="e0cc6-123">Der Host des Diensts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-123">The host of the service.</span>
          </span>
        </param>
        <param name="endpoints">
          <span data-ttu-id="e0cc6-124">Die Dienstendpunkte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-124">The service endpoints.</span>
          </span>
        </param>
        <param name="bindingParameters">
          <span data-ttu-id="e0cc6-125">Benutzerdefinierte Objekte, auf die Bindungselemente Zugriff haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-125">Custom objects to which binding elements have access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cc6-126">Bietet die Möglichkeit, benutzerdefinierte Daten an Bindungselemente zu übergeben, um die Vertragsimplementierung zu unterstützen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-126">Provides the ability to pass custom data to binding elements to support the contract implementation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cc6-127">Verwenden Sie die <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A>-Methode, um benutzerdefinierte Datenobjekte der `parameters`-Auflistung hinzuzufügen, mit der Bindungselemente zusätzliche Informationen zur Unterstützung des Vertrags abrufen können.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-127">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to add custom data objects to the `parameters` collection that binding elements can use to acquire extra information to enable them to support the contract.</span></span>  
  
 <span data-ttu-id="e0cc6-128">Diese Methode wird einmal für jede abgehörte URI aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-128">This method is called once for each listen URI.</span></span> <span data-ttu-id="e0cc6-129">Wenn der Dienst beispielsweise vier Endpunkte hat und zwei über die gleiche abgehörte URI verfügen, wird diese Methode drei Mal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-129">For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</span></span> <span data-ttu-id="e0cc6-130">Der Grund dafür ist, dass die `bindingParameters` jeden Kanalstapel als Ziel haben und ein Kanalstapel für jede abgehörte URI besteht.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-130">The reason is that the `bindingParameters` target each channel stack and there is one channel stack for each listen URI.</span></span> <span data-ttu-id="e0cc6-131">Da alle Aufrufe diese Endpunkte an dieser abgehörten URI empfangen, rufen zwei Aufrufe jeweils einen <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> ab, und ein Aufruf ruft eine Auflistung von zwei <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>-Objekten ab.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-131">Because each call receives those endpoints at that listen URI, two calls each get a single <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>, and one call gets a collection of two <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cc6-132">Alle <xref:System.ServiceModel.Description.IServiceBehavior>-Methoden übergeben <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType>-Objekte und <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType>-Objekte als Parameter.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-132">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="e0cc6-133">Der <xref:System.ServiceModel.Description.ServiceDescription>-Parameter dient nur zur Prüfung und zum Einfügen von Anpassungen; wenn Sie diese Objekte anderweitig ändern, ist das Ausführungsverhalten nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-133">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="iServiceBehavior.ApplyDispatchBehavior (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="e0cc6-134">Die Dienstbeschreibung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-134">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="e0cc6-135">Der Host, der gerade erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-135">The host that is currently being built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cc6-136">Stellt die Funktion zum Ausführen von Eigenschaftswerten zur Laufzeit oder zum Einfügen von benutzerdefinierten Erweiterungsobjekten, wie Fehlerhandler, Nachrichten- oder Parameterinterceptoren, Sicherheitserweiterungen und anderen benutzerdefinierten Erweiterungsobjekten, bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-136">Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cc6-137">Implementiert die <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A>-Methode, um das zu erstellende <xref:System.ServiceModel.ServiceHostBase>-Objekt zu prüfen oder zu ändern, damit benutzerdefinierte Ausführungsszenarien unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-137">Implement the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to inspect or modify the <xref:System.ServiceModel.ServiceHostBase> object that is being constructed in order to support some custom execution scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cc6-138">Alle <xref:System.ServiceModel.Description.IServiceBehavior>-Methoden übergeben <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType>-Objekte und <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType>-Objekte als Parameter.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-138">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="e0cc6-139">Der <xref:System.ServiceModel.Description.ServiceDescription>-Parameter dient nur zur Prüfung und zum Einfügen von Anpassungen; wenn Sie diese Objekte anderweitig ändern, ist das Ausführungsverhalten nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-139">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0cc6-140">Im folgenden Codebeispiel wird veranschaulicht, wie ein in einer Anwendungskonfigurationsdatei angegebenes Dienstverhalten verwendet wird, um einen benutzerdefinierten Fehlerhandler in eine Dienstanwendung einzufügen.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-140">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="e0cc6-141">In diesem Beispiel fängt der Fehlerhandler alle Ausnahmen ab und wandelt sie in einen benutzerdefinierten `GreetingFault`-SOAP-Fehler um, der dann an den Client zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-141">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="e0cc6-142">Mit der folgenden <xref:System.ServiceModel.Description.IServiceBehavior>-Implementierung werden keine Bindungsparameterobjekte hinzugefügt, wird das benutzerdefinierte <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType>-Objekte jeder <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType>-Eigenschaft hinzugefügt und überprüft, dass jeder Vorgang des Diensts, auf den das Dienstverhalten angewendet wird, über ein <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> des Typs `GreetingFault` verfügt.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-142">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="e0cc6-143">In diesem Beispiel implementiert die Verhaltensklasse auch <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, wodurch das Dienstverhalten mithilfe einer Anwendungskonfigurationsdatei eingefügt werden kann, wie folgendes Codebeispiel zeigt.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-143">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="iServiceBehavior.Validate (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="e0cc6-144">Die Dienstbeschreibung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-144">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="e0cc6-145">Der Diensthost, der gerade erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-145">The service host that is currently being constructed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cc6-146">Stellt die Funktion zur Verfügung, mit der der Diensthost und die Dienstbeschreibung geprüft werden können, um sicherzustellen, dass der Dienst erfolgreich ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cc6-146">Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cc6-147">Verwenden Sie die <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A>-Methode, um zu prüfen, ob der aktuelle Dienst ordnungsgemäß anhand des Szenarios ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-147">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to confirm whether the current service can execute properly according to your scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cc6-148">Alle <xref:System.ServiceModel.Description.IServiceBehavior>-Methoden übergeben <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType>-Objekte und <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType>-Objekte als Parameter.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-148">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="e0cc6-149">Der <xref:System.ServiceModel.Description.ServiceDescription>-Parameter dient nur zur Prüfung und zum Einfügen von Anpassungen; wenn Sie diese Objekte anderweitig ändern, ist das Ausführungsverhalten nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-149">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0cc6-150">Im folgenden Codebeispiel wird veranschaulicht, wie ein in einer Anwendungskonfigurationsdatei angegebenes Dienstverhalten verwendet wird, um einen benutzerdefinierten Fehlerhandler in eine Dienstanwendung einzufügen.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-150">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="e0cc6-151">In diesem Beispiel fängt der Fehlerhandler alle Ausnahmen ab und wandelt sie in einen benutzerdefinierten `GreetingFault`-SOAP-Fehler um, der dann an den Client zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-151">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="e0cc6-152">Mit der folgenden <xref:System.ServiceModel.Description.IServiceBehavior>-Implementierung werden keine Bindungsparameterobjekte hinzugefügt, wird das benutzerdefinierte <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType>-Objekte jeder <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType>-Eigenschaft hinzugefügt und überprüft, dass jeder Vorgang des Diensts, auf den das Dienstverhalten angewendet wird, über ein <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> des Typs `GreetingFault` verfügt.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-152">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="e0cc6-153">In diesem Beispiel implementiert die Verhaltensklasse auch <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, wodurch das Dienstverhalten mithilfe einer Anwendungskonfigurationsdatei eingefügt werden kann, wie folgendes Codebeispiel zeigt.</span><span class="sxs-lookup"><span data-stu-id="e0cc6-153">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>