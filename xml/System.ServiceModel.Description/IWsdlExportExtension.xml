<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bbc35369008c2910214deb8cef97563fd3fafa8" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert Endpunkt- oder Vertragsverhalten, mit dem benutzerdefinierte Metadaten exportiert werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie zum Ändern und Erweitern der von <xref:System.ServiceModel.Description.WsdlExporter>-Objekten exportierten WSDL (Web Services Description Language) die <xref:System.ServiceModel.Description.IWsdlExportExtension>-Schnittstelle in einem Endpunkt-, Vertrags- oder Vorgangsverhalten (ein Objekt, das <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior> oder <xref:System.ServiceModel.Description.IOperationBehavior>), und fügen Sie das Verhalten zur Eigenschaft <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> oder <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A> hinzu. Zusätzlich können Sie <xref:System.ServiceModel.Description.IWsdlExportExtension> für ein <xref:System.ServiceModel.Channels.BindingElement> implementieren.  
  
> [!NOTE]
>  <xref:System.ServiceModel.Description.IWsdlExportExtension>-Implementierungen werden nie aufgerufen, wenn sie als <xref:System.ServiceModel.Description.IServiceBehavior> imlementiert werden.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> Benutzerdefinierte Richtlinienassertionen werden nicht exportiert werden, obwohl Windows Communication Foundation (WCF) benutzerdefinierte bindungsrichtlinienassertionen an das entsprechende Element in WSDL exportiert. Zum Export benutzerdefinierter Richtlinienaessertionen implementieren Sie die <xref:System.ServiceModel.Description.IPolicyExportExtension>-Schnittstelle.  
  
 Der Metadatenveröffentlichungsprozess beginnt mit dem Aufruf von <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType>, wodurch wiederum <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType> für jeden Endpunkt aufgerufen wird.  
  
 Der Endpunkt wird zuerst durch den Export des dazugehörigen Vertrags exportiert. Beim Export eines Vertrags ruft der <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> die <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType>-Mehtode für alle <xref:System.ServiceModel.Description.IWsdlExportExtension>-Implementierungen im Vertrag und Vorgangsverhalten für diesen Vertrag auf. Vorgänge, für die Plazuhalteraktionen verwendet werden, werden nicht in Metadaten exportiert, sodass <xref:System.ServiceModel.Description.IWsdlExportExtension>-Implementierungen für Vorgangsverhalten für diese Vorgänge nicht exportiert werden.  
  
 Nach dem Export des Vertrags werden der Anschluss und die Bindung exportiert, und exportierte Richtlinienausdrücke werden angehängt.  
  
 Die <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>-Methode und die <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>-Methode gewähren Zugriff auf den <xref:System.ServiceModel.Description.WsdlExporter>, sodass <xref:System.ServiceModel.Description.IWsdlExportExtension>-Implementierungen wiederherstellbare Fehler und Warnungen über die <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A>-Eigenschaft berichten können. Die an beide Methoden übergebenen Kontextobjekte stellen bequeme Zuordnungen aus exportierten WSDL-Elementen zu Eigenschaften von <xref:System.ServiceModel.Description.ContractDescription>-Objekten und <xref:System.ServiceModel.Description.ServiceEndpoint>-Objekten bereit.  
  
 Löst eine <xref:System.ServiceModel.Description.IWsdlExportExtension>-Implementierung beim Export eine Ausnahme aus, weisen die generierten Metadaten einen inkonsistenten Zustand auf, und das <xref:System.ServiceModel.Description.WsdlExporter>-Objekt sollte verworfen werden.  
  
> [!NOTE]
>  Die benutzerdefinierte Exporterweiterung muss ausgeführt werden, nachdem das integrierte Serialisierungsprogramm die Dienstbeschreibung aufgefüllt hat.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.ServiceModel.Description.IWsdlExportExtension> veranschaulicht, mit der benutzerdefinierte Dokumentaitonsattribute als WSDL-Anmerkungen zur WSDL-Datei hinzugefügt werden.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">Der <see cref="T:System.ServiceModel.Description.WsdlExporter" />, der die Vertragsinformationen exportiert.</param>
        <param name="context">Stellt Zuordnungen aus exportierten WSDL-Elementen zur Vertragsbeschreibung bereit.</param>
        <summary>Schreibt benutzerdefinierte WSDL (Web Services Description Language)-Elemente in für einen Vertrag generierte WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>-Methode wird aufgerufen, wenn das Metadatenexportsystem den Vertrag exportiert. Nur Vertrags- und Vorgangsverhalten, in das <xref:System.ServiceModel.Description.IWsdlExportExtension> implementiert ist, rufen den <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>-Aufruf ab. Alle Verhalten, die <xref:System.ServiceModel.Description.IWsdlExportExtension> implementieren, rufen den <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>-Aufruf ab.  
  
 Verwenden Sie den `context`-Parameter zur Bearbeitung der zu exportierenden WSDL. Ein Beispiel hierfür finden Sie im Beispielabschnitt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.ServiceModel.Description.IWsdlExportExtension> veranschaulicht, mit der benutzerdefinierte Dokumentaitonsattribute als WSDL-Anmerkungen zur WSDL-Datei hinzugefügt werden.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">Der <see cref="T:System.ServiceModel.Description.WsdlExporter" />, der die Endpunktinformationen exportiert.</param>
        <param name="context">Stellt Zuordnungen aus exportierten WSDL-Elementen für die Endpunktbeschreibung bereit.</param>
        <summary>Schreibt benutzerdefinierte WSDL (Web Services Description Language)-Elemente in die generierte WSDL für einen Endpunkt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie die <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>-Methode, um die für einen Endpunkt exportierte WSDL zu ändern. Diese Methode wird erst nach dem Export des Vertrags durch <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> aufgerufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.ServiceModel.Description.IWsdlExportExtension> veranschaulicht, mit der benutzerdefinierte Dokumentaitonsattribute als WSDL-Anmerkungen zur WSDL-Datei hinzugefügt werden.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>