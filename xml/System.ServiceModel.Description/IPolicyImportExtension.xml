<Type Name="IPolicyImportExtension" FullName="System.ServiceModel.Description.IPolicyImportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21c1955720f84c83ad644148e7bc9cddad175775" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83960879" /></Metadata><TypeSignature Language="C#" Value="public interface IPolicyImportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPolicyImportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IPolicyImportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPolicyImportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPolicyImportExtension" />
  <TypeSignature Language="F#" Value="type IPolicyImportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Methode für Objekte, die benutzerdefinierte Richtlinienassertionen zu Bindungen importieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie die <xref:System.ServiceModel.Description.IPolicyImportExtension>-Schnittstelle, um in WSDL-Informationen, die von einem bestimmten Endpunkt ausgegeben werden, nach benutzerdefinierten Richtlinienassertionen zu Endpunktfunktionen oder -anforderungen zu suchen. In der Regel sucht ein Richtlinienprogramm nach einer bestimmten Assertion und fügt entweder ein Bindungselement ein, konfiguriert ein Bindungselement oder ändert den Vertrag so, dass die Anforderungen der Assertion unterstützt werden.  
  
 Im Gegensatz zu seinem Gegenstück <xref:System.ServiceModel.Description.IPolicyExportExtension> erfordert <xref:System.ServiceModel.Description.IPolicyImportExtension> keine Implementierung durch ein <xref:System.ServiceModel.Channels.BindingElement>-Objekt; Sie können es mithilfe des Clientkonfigurationsabschnitts im Beispielabschnitt oder aber programmgesteuert laden, indem Sie es dem <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType>-Konstruktor hinzufügen.  
  
 Windows Communication Foundation (WCF) übergibt zwei Objekte an die <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>-Methode, eine <xref:System.ServiceModel.Description.MetadataImporter> und eine <xref:System.ServiceModel.Description.PolicyConversionContext>. In der Regel enthält das <xref:System.ServiceModel.Description.PolicyConversionContext>-Objekt bereits die Richtlinienassertionen für jeden Bindungsbereich.  
  
 Eine <xref:System.ServiceModel.Description.IPolicyImportExtension>-Implementierung führt die folgenden Schritte aus:  
  
1.  Sucht die benutzerdefinierte Richtlinienassertion, für die sie verantwortlich ist, durch Aufruf der Methode <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> oder <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> (je nach Bereich).  
  
2.  Entfernt die Richtlinienassertion aus der Assertionsauflistung. Die <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType>-Methode sucht die Assertion, gibt sie zurück und entfernt sie (in einem Schritt).  
  
3.  Ändern Sie den Bindungsstapel oder den Vertrag, indem Sie entweder ein erforderliches benutzerdefiniertes <xref:System.ServiceModel.Channels.BindingElement> der <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>-Eigenschaft hinzufügen oder indem Sie die <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType>-Eigenschaft ändern.  
  
 Schritt 2 ist wichtig. Nachdem alle richtlinienimportierer aufgerufen wurden, prüft WCF, ob die verbleibenden Richtlinien Assertionen vorhanden sind. Wenn eine solche Datei vorhanden ist, geht WCF davon aus, dass der Richtlinien Import nicht erfolgreich war und importiert die zugeordnete Bindung nicht.  
  
> [!IMPORTANT]
>  Ein böswilliger Metadatenanbieter kann versuchen, falsch formatiertes XML als Teil der Metadaten zu versenden, um ein Richtlinienimportprogramm auszunutzen. Es wird dringend empfohlen, dass die benutzerdefinierten Richtlinienimportprogramme so konzipiert werden, dass sie stabil gegenüber allen XML-Formen sind, die an sie übergeben werden.  
  
 Benutzerdefinierte <xref:System.ServiceModel.Description.MetadataImporter>-Implementierungen müssen ihr eigenes <xref:System.ServiceModel.Description.PolicyConversionContext>-Objekt implementieren, um die an das benutzerdefinierte Metadatenformat angehängten Richtlinienassertionen zu extrahieren.  
  
 Wenn Sie benutzerdefinierte WSDL-Elemente exportieren und importieren möchten, bei denen es sich nicht um Richtlinienassertionen handelt, finden Sie weitere Informationen unter <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType> und <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Mit dem [Service Model Metadata Utility-Tool (Svcutil. exe)](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) können Sie benutzerdefinierte Richtlinien Import Programme und Export Programme verwenden, indem Sie die gleichen Konfigurationselemente in einer Konfigurationsdatei und die `/svcutilConfig:<configFile>`-Option verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType>-Methode zum Suchen, Zurückgeben und Entfernen der Assertion in einem Schritt gezeigt.  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 Im folgenden Codebeispiel wird die Clientanwendungs-Konfigurationsdatei gezeigt, mit der das benutzerdefinierte Richtlinienimportprogramm geladen wird, wenn <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> aufgerufen wird.  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 Im folgenden Codebeispiel wird die Verwendung von <xref:System.ServiceModel.Description.MetadataResolver> gezeigt, mit dem Metadaten in Beschreibungsobjekte heruntergeladen und aufgelöst werden.  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ImportPolicy">
      <MemberSignature Language="C#" Value="public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportPolicy(class System.ServiceModel.Description.MetadataImporter importer, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportPolicy (importer As MetadataImporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportPolicy(System::ServiceModel::Description::MetadataImporter ^ importer, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ImportPolicy : System.ServiceModel.Description.MetadataImporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="iPolicyImportExtension.ImportPolicy (importer, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.MetadataImporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importer">Das verwendete <see cref="T:System.ServiceModel.Description.MetadataImporter" />-Objekt.</param>
        <param name="context">Der <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />, der sowohl die Richtlinienassertionen enthält, die importiert werden können, sowie die Auflistungen von Bindungselementen, denen implementierende Bindungselemente hinzugefügt werden können.</param>
        <summary>Definiert eine Methode, mit der benutzerdefinierte Richtlinienassertionen importiert und implementierende Bindungselemente hinzugefügt werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementiert die `ImportPolicy`-Methode, mit der Richtlinienassertionen abgerufen und einige Änderungen am importierten Vertrag oder der importierten Bindung zur Unterstützung der Assertion durchgeführt werden. In der Regel reagiert ein Richtlinienimportprogramm auf das Finden einer benutzerdefinierten Richtlinienassertion durch Konfigurieren oder Einfügen eines Bindungselements in die zu importierende Bindung.  
  
 Windows Communication Foundation (WCF) übergibt zwei Objekte an die <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>-Methode, eine <xref:System.ServiceModel.Description.MetadataImporter> und eine <xref:System.ServiceModel.Description.PolicyConversionContext>. In der Regel enthält das <xref:System.ServiceModel.Description.PolicyConversionContext>-Objekt bereits die Richtlinienassertionen für jeden Bindungsbereich.  
  
 Eine <xref:System.ServiceModel.Description.IPolicyImportExtension>-Implementierung führt die folgenden Schritte aus:  
  
1.  Sucht die benutzerdefinierte Richtlinienassertion, für die sie verantwortlich ist, durch Aufruf der Methode <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> oder <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> (je nach Bereich).  
  
2.  Entfernt die Richtlinienassertion aus der Assertionsauflistung. Die <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType>-Methode sucht die Assertion, gibt sie zurück und entfernt sie (in einem Schritt).  
  
3.  Ändert den Bindungsstapel oder den Vertrag, indem entweder ein erforderliches benutzerdefiniertes <xref:System.ServiceModel.Channels.BindingElement> der <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>-Eigenschaft hinzugefügt oder die <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType>-Eigenschaft geändert wird.  
  
 Schritt 2 ist wichtig. Nachdem alle richtlinienimportierer aufgerufen wurden, prüft WCF, ob die verbleibenden Richtlinien Assertionen vorhanden sind. Wenn eine solche Datei vorhanden ist, geht WCF davon aus, dass der Richtlinien Import nicht erfolgreich war und importiert die zugeordnete Bindung nicht.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType>-Methode zum Suchen, Zurückgeben und Entfernen der Assertion in einem Schritt gezeigt.  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 Im folgenden Codebeispiel wird die Clientanwendungs-Konfigurationsdatei gezeigt, mit der das benutzerdefinierte Richtlinienimportprogramm geladen wird, wenn <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> aufgerufen wird.  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 Im folgenden Codebeispiel wird die Verwendung von <xref:System.ServiceModel.Description.MetadataResolver> gezeigt, mit dem Metadaten in Beschreibungsobjekte heruntergeladen und aufgelöst werden.  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
