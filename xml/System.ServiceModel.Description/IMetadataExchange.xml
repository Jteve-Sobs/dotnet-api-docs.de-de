<Type Name="IMetadataExchange" FullName="System.ServiceModel.Description.IMetadataExchange">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d36610fc62c4c12778dbf9f6434ae477162a9978" /><Meta Name="ms.sourcegitcommit" Value="33529b5cc32683b91d3422992fb4dc422f85782b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/17/2020" /><Meta Name="ms.locfileid" Value="88266332" /></Metadata><TypeSignature Language="C#" Value="public interface IMetadataExchange" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMetadataExchange" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IMetadataExchange" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMetadataExchange" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMetadataExchange" />
  <TypeSignature Language="F#" Value="type IMetadataExchange = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ServiceModel.ServiceContract(ConfigurationName="IMetadataExchange", Name="IMetadataExchange", Namespace="http://schemas.microsoft.com/2006/04/mex")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ServiceModel.ServiceContract(ConfigurationName="IMetadataExchange", Name="IMetadataExchange", Namespace="http://schemas.microsoft.com/2006/04/mex")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Macht Methoden verfügbar, mit denen Metadaten zu einem Dienst zurückgegeben werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie Windows Communication Foundation (WCF)-Dienste programmieren, ist es hilfreich, Metadaten zum Dienst zu veröffentlichen. Bei diesen Metadaten kann es sich um ein WSDL-Dokument (Web Services Description Language) handeln, das alle von dem Dienst verwendeten Methoden und Datentypen beschreibt. Durch das Zurückgeben von Metadaten über einen WCF-Dienst können Consumer eines Dienstanbieter problemlos Clients für den Dienst erstellen. Weitere Informationen zu WCF-Metadatenendpunkten finden Sie unter [Metadaten](/dotnet/framework/wcf/feature-details/metadata).  
  
 Mithilfe von WCF implementierte Dienste veröffentlichen Metadaten, indem Sie einen oder mehrere Metadatenendpunkte verfügbar machen. Metadatenendpunkte in WCF verfügen über eine Adresse, eine Bindung und einen Vertrag wie alle anderen Endpunkte.  Die- <xref:System.ServiceModel.Description.MetadataReference> Schnittstelle gibt den Dienstvertrag an, der von allen Metadatenendpunkten in WCF implementiert wird.  
  
 Es ist nicht erforderlich, den <xref:System.ServiceModel.Description.MetadataReference>-Vertrag in Ihrer Dienstimplementierung zu implementieren.  Fügen Sie statt dessen <xref:System.ServiceModel.Description.ServiceMetadataBehavior> zu der Dienstbeschreibung hinzu.  
  
 Sie können bei Verwendung der Konfiguration auch das `contract`-Attribut des Endpunktelements auf `IMetadataExchange` festlegen. Ein Beispiel finden Sie unter Gewusst [wie: Veröffentlichen von Metadaten für einen Dienst mithilfe einer Konfigurationsdatei](/dotnet/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-a-configuration-file).  
  
 Ausführliche Informationen zum Veröffentlichen von Metadaten in WCF finden Sie unter [Veröffentlichen von Metadaten](/dotnet/framework/wcf/feature-details/publishing-metadata).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/wcf/feature-details/metadata">Metadaten</related>
    <related type="Article" href="/dotnet/framework/wcf/feature-details/publishing-metadata">Veröffentlichen von Metadaten</related>
  </Docs>
  <Members>
    <Member MemberName="BeginGet">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGet (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginGet(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IMetadataExchange.BeginGet(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGet (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGet(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGet : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iMetadataExchange.BeginGet (request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ServiceModel.OperationContract(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get", AsyncPattern=true, ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ServiceModel.OperationContract(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get", AsyncPattern=true, ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.ServiceModel.Channels.Message" />, die verarbeitet werden sollte, um die zurückzugebenden Metadaten zu bestimmen.</param>
        <param name="callback"><see cref="T:System.AsyncCallback" />, der auf die Methode verweist, die die Metadaten verarbeitet.</param>
        <param name="state">Alle Daten, anhand derer der Aufrufer bestimmen kann, welcher asynchrone Aufruf zurückgegeben wird.</param>
        <summary>Startet einen asynchronen Abruf von Metadaten.</summary>
        <returns><see cref="T:System.IAsyncResult" />, das an die <see cref="M:System.ServiceModel.Description.IMetadataExchange.EndGet(System.IAsyncResult)" />-Methode übergeben werden kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGet">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndGet (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndGet(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IMetadataExchange.EndGet(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGet (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndGet(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGet : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="iMetadataExchange.EndGet result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />, das Daten enthält, die zur Weiterverarbeitung der Metadaten verwendet werden.</param>
        <summary>Schließt den Abruf von Metadaten ab.</summary>
        <returns><see cref="T:System.ServiceModel.Channels.Message" /> mit den verarbeiteten Metadaten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Get (System.ServiceModel.Channels.Message request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Get(class System.ServiceModel.Channels.Message request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IMetadataExchange.Get(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (request As Message) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Get(System::ServiceModel::Channels::Message ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Get : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="iMetadataExchange.Get request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ServiceModel.OperationContract(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ServiceModel.OperationContract(Action="http://schemas.xmlsoap.org/ws/2004/09/transfer/Get", ReplyAction="http://schemas.xmlsoap.org/ws/2004/09/transfer/GetResponse")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="request"><see cref="T:System.ServiceModel.Channels.Message" /> mit der Anforderung für Metadaten.</param>
        <summary>Gibt die Dienstmetadaten zurück.</summary>
        <returns><see cref="T:System.ServiceModel.Channels.Message" /> mit den Metadaten.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
